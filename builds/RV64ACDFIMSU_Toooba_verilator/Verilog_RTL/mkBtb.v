//
// Generated by Bluespec Compiler (build 0fccbb13)
//
// On Tue Aug 31 13:14:40 EDT 2021
//
//
// Ports:
// Name                         I/O  size props
// RDY_put_pc                     O     1 const
// pred                           O   260
// RDY_pred                       O     1 const
// RDY_update                     O     1 const
// RDY_flush                      O     1 const
// flush_done                     O     1 const
// RDY_flush_done                 O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// put_pc_pc                      I    64
// update_pc                      I    64
// update_brTarget                I    64
// update_taken                   I     1
// EN_put_pc                      I     1
// EN_update                      I     1
// EN_flush                       I     1 unused
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkBtb(CLK,
	     RST_N,

	     put_pc_pc,
	     EN_put_pc,
	     RDY_put_pc,

	     pred,
	     RDY_pred,

	     update_pc,
	     update_brTarget,
	     update_taken,
	     EN_update,
	     RDY_update,

	     EN_flush,
	     RDY_flush,

	     flush_done,
	     RDY_flush_done);
  input  CLK;
  input  RST_N;

  // action method put_pc
  input  [63 : 0] put_pc_pc;
  input  EN_put_pc;
  output RDY_put_pc;

  // value method pred
  output [259 : 0] pred;
  output RDY_pred;

  // action method update
  input  [63 : 0] update_pc;
  input  [63 : 0] update_brTarget;
  input  update_taken;
  input  EN_update;
  output RDY_update;

  // action method flush
  input  EN_flush;
  output RDY_flush;

  // value method flush_done
  output flush_done;
  output RDY_flush_done;

  // signals for module outputs
  wire [259 : 0] pred;
  wire RDY_flush,
       RDY_flush_done,
       RDY_pred,
       RDY_put_pc,
       RDY_update,
       flush_done;

  // inlined wires
  wire [128 : 0] btb_updateEn$wget;
  wire btb_records_0_updateFresh_1$whas,
       btb_records_1_updateFresh_1$whas,
       btb_records_2_updateFresh_1$whas,
       btb_records_3_updateFresh_1$whas;

  // register btb_firstBank_reg
  reg [1 : 0] btb_firstBank_reg;
  wire [1 : 0] btb_firstBank_reg$D_IN;
  wire btb_firstBank_reg$EN;

  // register btb_records_0_clearCount
  reg [6 : 0] btb_records_0_clearCount;
  wire [6 : 0] btb_records_0_clearCount$D_IN;
  wire btb_records_0_clearCount$EN;

  // register btb_records_0_clearReg
  reg btb_records_0_clearReg;
  wire btb_records_0_clearReg$D_IN, btb_records_0_clearReg$EN;

  // register btb_records_0_lookupReg
  reg [22 : 0] btb_records_0_lookupReg;
  wire [22 : 0] btb_records_0_lookupReg$D_IN;
  wire btb_records_0_lookupReg$EN;

  // register btb_records_0_updateFresh
  reg btb_records_0_updateFresh;
  wire btb_records_0_updateFresh$D_IN, btb_records_0_updateFresh$EN;

  // register btb_records_0_updateReg
  reg [87 : 0] btb_records_0_updateReg;
  wire [87 : 0] btb_records_0_updateReg$D_IN;
  wire btb_records_0_updateReg$EN;

  // register btb_records_0_wayNext
  reg btb_records_0_wayNext;
  wire btb_records_0_wayNext$D_IN, btb_records_0_wayNext$EN;

  // register btb_records_1_clearCount
  reg [6 : 0] btb_records_1_clearCount;
  wire [6 : 0] btb_records_1_clearCount$D_IN;
  wire btb_records_1_clearCount$EN;

  // register btb_records_1_clearReg
  reg btb_records_1_clearReg;
  wire btb_records_1_clearReg$D_IN, btb_records_1_clearReg$EN;

  // register btb_records_1_lookupReg
  reg [22 : 0] btb_records_1_lookupReg;
  wire [22 : 0] btb_records_1_lookupReg$D_IN;
  wire btb_records_1_lookupReg$EN;

  // register btb_records_1_updateFresh
  reg btb_records_1_updateFresh;
  wire btb_records_1_updateFresh$D_IN, btb_records_1_updateFresh$EN;

  // register btb_records_1_updateReg
  reg [87 : 0] btb_records_1_updateReg;
  wire [87 : 0] btb_records_1_updateReg$D_IN;
  wire btb_records_1_updateReg$EN;

  // register btb_records_1_wayNext
  reg btb_records_1_wayNext;
  wire btb_records_1_wayNext$D_IN, btb_records_1_wayNext$EN;

  // register btb_records_2_clearCount
  reg [6 : 0] btb_records_2_clearCount;
  wire [6 : 0] btb_records_2_clearCount$D_IN;
  wire btb_records_2_clearCount$EN;

  // register btb_records_2_clearReg
  reg btb_records_2_clearReg;
  wire btb_records_2_clearReg$D_IN, btb_records_2_clearReg$EN;

  // register btb_records_2_lookupReg
  reg [22 : 0] btb_records_2_lookupReg;
  wire [22 : 0] btb_records_2_lookupReg$D_IN;
  wire btb_records_2_lookupReg$EN;

  // register btb_records_2_updateFresh
  reg btb_records_2_updateFresh;
  wire btb_records_2_updateFresh$D_IN, btb_records_2_updateFresh$EN;

  // register btb_records_2_updateReg
  reg [87 : 0] btb_records_2_updateReg;
  wire [87 : 0] btb_records_2_updateReg$D_IN;
  wire btb_records_2_updateReg$EN;

  // register btb_records_2_wayNext
  reg btb_records_2_wayNext;
  wire btb_records_2_wayNext$D_IN, btb_records_2_wayNext$EN;

  // register btb_records_3_clearCount
  reg [6 : 0] btb_records_3_clearCount;
  wire [6 : 0] btb_records_3_clearCount$D_IN;
  wire btb_records_3_clearCount$EN;

  // register btb_records_3_clearReg
  reg btb_records_3_clearReg;
  wire btb_records_3_clearReg$D_IN, btb_records_3_clearReg$EN;

  // register btb_records_3_lookupReg
  reg [22 : 0] btb_records_3_lookupReg;
  wire [22 : 0] btb_records_3_lookupReg$D_IN;
  wire btb_records_3_lookupReg$EN;

  // register btb_records_3_updateFresh
  reg btb_records_3_updateFresh;
  wire btb_records_3_updateFresh$D_IN, btb_records_3_updateFresh$EN;

  // register btb_records_3_updateReg
  reg [87 : 0] btb_records_3_updateReg;
  wire [87 : 0] btb_records_3_updateReg$D_IN;
  wire btb_records_3_updateReg$EN;

  // register btb_records_3_wayNext
  reg btb_records_3_wayNext;
  wire btb_records_3_wayNext$D_IN, btb_records_3_wayNext$EN;

  // ports of submodule btb_records_0_mem_0_bram
  wire [80 : 0] btb_records_0_mem_0_bram$DIA,
		btb_records_0_mem_0_bram$DIB,
		btb_records_0_mem_0_bram$DOB;
  wire [6 : 0] btb_records_0_mem_0_bram$ADDRA, btb_records_0_mem_0_bram$ADDRB;
  wire btb_records_0_mem_0_bram$ENA,
       btb_records_0_mem_0_bram$ENB,
       btb_records_0_mem_0_bram$WEA,
       btb_records_0_mem_0_bram$WEB;

  // ports of submodule btb_records_0_mem_1_bram
  wire [80 : 0] btb_records_0_mem_1_bram$DIA,
		btb_records_0_mem_1_bram$DIB,
		btb_records_0_mem_1_bram$DOB;
  wire [6 : 0] btb_records_0_mem_1_bram$ADDRA, btb_records_0_mem_1_bram$ADDRB;
  wire btb_records_0_mem_1_bram$ENA,
       btb_records_0_mem_1_bram$ENB,
       btb_records_0_mem_1_bram$WEA,
       btb_records_0_mem_1_bram$WEB;

  // ports of submodule btb_records_0_updateKeys_0_bram
  wire [15 : 0] btb_records_0_updateKeys_0_bram$DIA,
		btb_records_0_updateKeys_0_bram$DIB,
		btb_records_0_updateKeys_0_bram$DOB;
  wire [6 : 0] btb_records_0_updateKeys_0_bram$ADDRA,
	       btb_records_0_updateKeys_0_bram$ADDRB;
  wire btb_records_0_updateKeys_0_bram$ENA,
       btb_records_0_updateKeys_0_bram$ENB,
       btb_records_0_updateKeys_0_bram$WEA,
       btb_records_0_updateKeys_0_bram$WEB;

  // ports of submodule btb_records_0_updateKeys_1_bram
  wire [15 : 0] btb_records_0_updateKeys_1_bram$DIA,
		btb_records_0_updateKeys_1_bram$DIB,
		btb_records_0_updateKeys_1_bram$DOB;
  wire [6 : 0] btb_records_0_updateKeys_1_bram$ADDRA,
	       btb_records_0_updateKeys_1_bram$ADDRB;
  wire btb_records_0_updateKeys_1_bram$ENA,
       btb_records_0_updateKeys_1_bram$ENB,
       btb_records_0_updateKeys_1_bram$WEA,
       btb_records_0_updateKeys_1_bram$WEB;

  // ports of submodule btb_records_1_mem_0_bram
  wire [80 : 0] btb_records_1_mem_0_bram$DIA,
		btb_records_1_mem_0_bram$DIB,
		btb_records_1_mem_0_bram$DOB;
  wire [6 : 0] btb_records_1_mem_0_bram$ADDRA, btb_records_1_mem_0_bram$ADDRB;
  wire btb_records_1_mem_0_bram$ENA,
       btb_records_1_mem_0_bram$ENB,
       btb_records_1_mem_0_bram$WEA,
       btb_records_1_mem_0_bram$WEB;

  // ports of submodule btb_records_1_mem_1_bram
  wire [80 : 0] btb_records_1_mem_1_bram$DIA,
		btb_records_1_mem_1_bram$DIB,
		btb_records_1_mem_1_bram$DOB;
  wire [6 : 0] btb_records_1_mem_1_bram$ADDRA, btb_records_1_mem_1_bram$ADDRB;
  wire btb_records_1_mem_1_bram$ENA,
       btb_records_1_mem_1_bram$ENB,
       btb_records_1_mem_1_bram$WEA,
       btb_records_1_mem_1_bram$WEB;

  // ports of submodule btb_records_1_updateKeys_0_bram
  wire [15 : 0] btb_records_1_updateKeys_0_bram$DIA,
		btb_records_1_updateKeys_0_bram$DIB,
		btb_records_1_updateKeys_0_bram$DOB;
  wire [6 : 0] btb_records_1_updateKeys_0_bram$ADDRA,
	       btb_records_1_updateKeys_0_bram$ADDRB;
  wire btb_records_1_updateKeys_0_bram$ENA,
       btb_records_1_updateKeys_0_bram$ENB,
       btb_records_1_updateKeys_0_bram$WEA,
       btb_records_1_updateKeys_0_bram$WEB;

  // ports of submodule btb_records_1_updateKeys_1_bram
  wire [15 : 0] btb_records_1_updateKeys_1_bram$DIA,
		btb_records_1_updateKeys_1_bram$DIB,
		btb_records_1_updateKeys_1_bram$DOB;
  wire [6 : 0] btb_records_1_updateKeys_1_bram$ADDRA,
	       btb_records_1_updateKeys_1_bram$ADDRB;
  wire btb_records_1_updateKeys_1_bram$ENA,
       btb_records_1_updateKeys_1_bram$ENB,
       btb_records_1_updateKeys_1_bram$WEA,
       btb_records_1_updateKeys_1_bram$WEB;

  // ports of submodule btb_records_2_mem_0_bram
  wire [80 : 0] btb_records_2_mem_0_bram$DIA,
		btb_records_2_mem_0_bram$DIB,
		btb_records_2_mem_0_bram$DOB;
  wire [6 : 0] btb_records_2_mem_0_bram$ADDRA, btb_records_2_mem_0_bram$ADDRB;
  wire btb_records_2_mem_0_bram$ENA,
       btb_records_2_mem_0_bram$ENB,
       btb_records_2_mem_0_bram$WEA,
       btb_records_2_mem_0_bram$WEB;

  // ports of submodule btb_records_2_mem_1_bram
  wire [80 : 0] btb_records_2_mem_1_bram$DIA,
		btb_records_2_mem_1_bram$DIB,
		btb_records_2_mem_1_bram$DOB;
  wire [6 : 0] btb_records_2_mem_1_bram$ADDRA, btb_records_2_mem_1_bram$ADDRB;
  wire btb_records_2_mem_1_bram$ENA,
       btb_records_2_mem_1_bram$ENB,
       btb_records_2_mem_1_bram$WEA,
       btb_records_2_mem_1_bram$WEB;

  // ports of submodule btb_records_2_updateKeys_0_bram
  wire [15 : 0] btb_records_2_updateKeys_0_bram$DIA,
		btb_records_2_updateKeys_0_bram$DIB,
		btb_records_2_updateKeys_0_bram$DOB;
  wire [6 : 0] btb_records_2_updateKeys_0_bram$ADDRA,
	       btb_records_2_updateKeys_0_bram$ADDRB;
  wire btb_records_2_updateKeys_0_bram$ENA,
       btb_records_2_updateKeys_0_bram$ENB,
       btb_records_2_updateKeys_0_bram$WEA,
       btb_records_2_updateKeys_0_bram$WEB;

  // ports of submodule btb_records_2_updateKeys_1_bram
  wire [15 : 0] btb_records_2_updateKeys_1_bram$DIA,
		btb_records_2_updateKeys_1_bram$DIB,
		btb_records_2_updateKeys_1_bram$DOB;
  wire [6 : 0] btb_records_2_updateKeys_1_bram$ADDRA,
	       btb_records_2_updateKeys_1_bram$ADDRB;
  wire btb_records_2_updateKeys_1_bram$ENA,
       btb_records_2_updateKeys_1_bram$ENB,
       btb_records_2_updateKeys_1_bram$WEA,
       btb_records_2_updateKeys_1_bram$WEB;

  // ports of submodule btb_records_3_mem_0_bram
  wire [80 : 0] btb_records_3_mem_0_bram$DIA,
		btb_records_3_mem_0_bram$DIB,
		btb_records_3_mem_0_bram$DOB;
  wire [6 : 0] btb_records_3_mem_0_bram$ADDRA, btb_records_3_mem_0_bram$ADDRB;
  wire btb_records_3_mem_0_bram$ENA,
       btb_records_3_mem_0_bram$ENB,
       btb_records_3_mem_0_bram$WEA,
       btb_records_3_mem_0_bram$WEB;

  // ports of submodule btb_records_3_mem_1_bram
  wire [80 : 0] btb_records_3_mem_1_bram$DIA,
		btb_records_3_mem_1_bram$DIB,
		btb_records_3_mem_1_bram$DOB;
  wire [6 : 0] btb_records_3_mem_1_bram$ADDRA, btb_records_3_mem_1_bram$ADDRB;
  wire btb_records_3_mem_1_bram$ENA,
       btb_records_3_mem_1_bram$ENB,
       btb_records_3_mem_1_bram$WEA,
       btb_records_3_mem_1_bram$WEB;

  // ports of submodule btb_records_3_updateKeys_0_bram
  wire [15 : 0] btb_records_3_updateKeys_0_bram$DIA,
		btb_records_3_updateKeys_0_bram$DIB,
		btb_records_3_updateKeys_0_bram$DOB;
  wire [6 : 0] btb_records_3_updateKeys_0_bram$ADDRA,
	       btb_records_3_updateKeys_0_bram$ADDRB;
  wire btb_records_3_updateKeys_0_bram$ENA,
       btb_records_3_updateKeys_0_bram$ENB,
       btb_records_3_updateKeys_0_bram$WEA,
       btb_records_3_updateKeys_0_bram$WEB;

  // ports of submodule btb_records_3_updateKeys_1_bram
  wire [15 : 0] btb_records_3_updateKeys_1_bram$DIA,
		btb_records_3_updateKeys_1_bram$DIB,
		btb_records_3_updateKeys_1_bram$DOB;
  wire [6 : 0] btb_records_3_updateKeys_1_bram$ADDRA,
	       btb_records_3_updateKeys_1_bram$ADDRB;
  wire btb_records_3_updateKeys_1_bram$ENA,
       btb_records_3_updateKeys_1_bram$ENB,
       btb_records_3_updateKeys_1_bram$WEA,
       btb_records_3_updateKeys_1_bram$WEB;

  // rule scheduling signals
  wire CAN_FIRE_RL_btb_canonUpdate,
       CAN_FIRE_RL_btb_records_0_updateCanon,
       CAN_FIRE_RL_btb_records_0_updateFresh__dreg_update,
       CAN_FIRE_RL_btb_records_1_updateCanon,
       CAN_FIRE_RL_btb_records_1_updateFresh__dreg_update,
       CAN_FIRE_RL_btb_records_2_updateCanon,
       CAN_FIRE_RL_btb_records_2_updateFresh__dreg_update,
       CAN_FIRE_RL_btb_records_3_updateCanon,
       CAN_FIRE_RL_btb_records_3_updateFresh__dreg_update,
       CAN_FIRE_flush,
       CAN_FIRE_put_pc,
       CAN_FIRE_update,
       WILL_FIRE_RL_btb_canonUpdate,
       WILL_FIRE_RL_btb_records_0_updateCanon,
       WILL_FIRE_RL_btb_records_0_updateFresh__dreg_update,
       WILL_FIRE_RL_btb_records_1_updateCanon,
       WILL_FIRE_RL_btb_records_1_updateFresh__dreg_update,
       WILL_FIRE_RL_btb_records_2_updateCanon,
       WILL_FIRE_RL_btb_records_2_updateFresh__dreg_update,
       WILL_FIRE_RL_btb_records_3_updateCanon,
       WILL_FIRE_RL_btb_records_3_updateFresh__dreg_update,
       WILL_FIRE_flush,
       WILL_FIRE_put_pc,
       WILL_FIRE_update;

  // remaining internal signals
  wire [259 : 0] IF_NEG_btb_firstBank_reg_13_14_BIT_0_16_THEN_b_ETC___d325,
		 IF_NEG_btb_firstBank_reg_13_14_BIT_0_16_THEN_b_ETC___d330;
  wire [63 : 0] IF_btb_records_0_updateReg_BITS_71_TO_65_7_EQ__ETC___d241,
		IF_btb_records_1_updateReg_7_BITS_71_TO_65_9_E_ETC___d320,
		IF_btb_records_2_updateReg_9_BITS_71_TO_65_1_E_ETC___d294,
		IF_btb_records_3_updateReg_01_BITS_71_TO_65_13_ETC___d267;
  wire [62 : 0] put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165,
		put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181,
		put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197;
  wire [22 : 0] _dfoo42, _dfoo52, _dfoo62, _dfoo72;
  wire [15 : 0] x__h10032,
		x__h10248,
		x__h11568,
		x__h11784,
		x__h14246,
		x__h14462,
		x__h16924,
		x__h17140,
		x__h6604,
		x__h6822,
		y__h10249,
		y__h10332,
		y__h11785,
		y__h11868,
		y__h14463,
		y__h14546,
		y__h17141,
		y__h17224,
		y__h6823,
		y__h6914;
  wire [6 : 0] _dfoo105,
	       _dfoo109,
	       _dfoo75,
	       _dfoo79,
	       _dfoo85,
	       _dfoo89,
	       _dfoo95,
	       _dfoo99;
  wire [1 : 0] NEG_btb_firstBank_reg_13___d214;
  wire IF_btb_records_0_updateReg_BITS_71_TO_65_7_EQ__ETC___d235,
       IF_btb_records_1_updateReg_7_BITS_71_TO_65_9_E_ETC___d314,
       IF_btb_records_2_updateReg_9_BITS_71_TO_65_1_E_ETC___d288,
       IF_btb_records_3_updateReg_01_BITS_71_TO_65_13_ETC___d261,
       _dfoo113,
       _dfoo131,
       _dfoo133,
       _dfoo143,
       btb_records_0_lookupReg_17_BITS_22_TO_7_20_EQ__ETC___d225,
       btb_records_0_updateKeys_1_bram_b_read_EQ_btb__ETC___d13,
       btb_records_0_updateReg_BITS_71_TO_65_7_EQ_btb_ETC___d230,
       btb_records_1_lookupReg_96_BITS_22_TO_7_99_EQ__ETC___d304,
       btb_records_1_updateKeys_1_bram_b_read__6_EQ_b_ETC___d45,
       btb_records_1_updateReg_7_BITS_71_TO_65_9_EQ_b_ETC___d309,
       btb_records_2_lookupReg_70_BITS_22_TO_7_73_EQ__ETC___d278,
       btb_records_2_updateKeys_1_bram_b_read__8_EQ_b_ETC___d77,
       btb_records_2_updateReg_9_BITS_71_TO_65_1_EQ_b_ETC___d283,
       btb_records_3_lookupReg_43_BITS_22_TO_7_46_EQ__ETC___d251,
       btb_records_3_updateKeys_1_bram_b_read__00_EQ__ETC___d109,
       btb_records_3_updateReg_01_BITS_71_TO_65_13_EQ_ETC___d256;

  // action method put_pc
  assign RDY_put_pc = 1'd1 ;
  assign CAN_FIRE_put_pc = 1'd1 ;
  assign WILL_FIRE_put_pc = EN_put_pc ;

  // value method pred
  assign pred =
	     NEG_btb_firstBank_reg_13___d214[1] ?
	       IF_NEG_btb_firstBank_reg_13_14_BIT_0_16_THEN_b_ETC___d325 :
	       IF_NEG_btb_firstBank_reg_13_14_BIT_0_16_THEN_b_ETC___d330 ;
  assign RDY_pred = 1'd1 ;

  // action method update
  assign RDY_update = 1'd1 ;
  assign CAN_FIRE_update = 1'd1 ;
  assign WILL_FIRE_update = EN_update ;

  // action method flush
  assign RDY_flush = 1'd1 ;
  assign CAN_FIRE_flush = 1'd1 ;
  assign WILL_FIRE_flush = EN_flush ;

  // value method flush_done
  assign flush_done = 1'd1 ;
  assign RDY_flush_done = 1'd1 ;

  // submodule btb_records_0_mem_0_bram
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd81),
	  .MEMSIZE(8'd128)) btb_records_0_mem_0_bram(.CLKA(CLK),
						     .CLKB(CLK),
						     .ADDRA(btb_records_0_mem_0_bram$ADDRA),
						     .ADDRB(btb_records_0_mem_0_bram$ADDRB),
						     .DIA(btb_records_0_mem_0_bram$DIA),
						     .DIB(btb_records_0_mem_0_bram$DIB),
						     .WEA(btb_records_0_mem_0_bram$WEA),
						     .WEB(btb_records_0_mem_0_bram$WEB),
						     .ENA(btb_records_0_mem_0_bram$ENA),
						     .ENB(btb_records_0_mem_0_bram$ENB),
						     .DOA(),
						     .DOB(btb_records_0_mem_0_bram$DOB));

  // submodule btb_records_0_mem_1_bram
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd81),
	  .MEMSIZE(8'd128)) btb_records_0_mem_1_bram(.CLKA(CLK),
						     .CLKB(CLK),
						     .ADDRA(btb_records_0_mem_1_bram$ADDRA),
						     .ADDRB(btb_records_0_mem_1_bram$ADDRB),
						     .DIA(btb_records_0_mem_1_bram$DIA),
						     .DIB(btb_records_0_mem_1_bram$DIB),
						     .WEA(btb_records_0_mem_1_bram$WEA),
						     .WEB(btb_records_0_mem_1_bram$WEB),
						     .ENA(btb_records_0_mem_1_bram$ENA),
						     .ENB(btb_records_0_mem_1_bram$ENB),
						     .DOA(),
						     .DOB(btb_records_0_mem_1_bram$DOB));

  // submodule btb_records_0_updateKeys_0_bram
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd16),
	  .MEMSIZE(8'd128)) btb_records_0_updateKeys_0_bram(.CLKA(CLK),
							    .CLKB(CLK),
							    .ADDRA(btb_records_0_updateKeys_0_bram$ADDRA),
							    .ADDRB(btb_records_0_updateKeys_0_bram$ADDRB),
							    .DIA(btb_records_0_updateKeys_0_bram$DIA),
							    .DIB(btb_records_0_updateKeys_0_bram$DIB),
							    .WEA(btb_records_0_updateKeys_0_bram$WEA),
							    .WEB(btb_records_0_updateKeys_0_bram$WEB),
							    .ENA(btb_records_0_updateKeys_0_bram$ENA),
							    .ENB(btb_records_0_updateKeys_0_bram$ENB),
							    .DOA(),
							    .DOB(btb_records_0_updateKeys_0_bram$DOB));

  // submodule btb_records_0_updateKeys_1_bram
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd16),
	  .MEMSIZE(8'd128)) btb_records_0_updateKeys_1_bram(.CLKA(CLK),
							    .CLKB(CLK),
							    .ADDRA(btb_records_0_updateKeys_1_bram$ADDRA),
							    .ADDRB(btb_records_0_updateKeys_1_bram$ADDRB),
							    .DIA(btb_records_0_updateKeys_1_bram$DIA),
							    .DIB(btb_records_0_updateKeys_1_bram$DIB),
							    .WEA(btb_records_0_updateKeys_1_bram$WEA),
							    .WEB(btb_records_0_updateKeys_1_bram$WEB),
							    .ENA(btb_records_0_updateKeys_1_bram$ENA),
							    .ENB(btb_records_0_updateKeys_1_bram$ENB),
							    .DOA(),
							    .DOB(btb_records_0_updateKeys_1_bram$DOB));

  // submodule btb_records_1_mem_0_bram
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd81),
	  .MEMSIZE(8'd128)) btb_records_1_mem_0_bram(.CLKA(CLK),
						     .CLKB(CLK),
						     .ADDRA(btb_records_1_mem_0_bram$ADDRA),
						     .ADDRB(btb_records_1_mem_0_bram$ADDRB),
						     .DIA(btb_records_1_mem_0_bram$DIA),
						     .DIB(btb_records_1_mem_0_bram$DIB),
						     .WEA(btb_records_1_mem_0_bram$WEA),
						     .WEB(btb_records_1_mem_0_bram$WEB),
						     .ENA(btb_records_1_mem_0_bram$ENA),
						     .ENB(btb_records_1_mem_0_bram$ENB),
						     .DOA(),
						     .DOB(btb_records_1_mem_0_bram$DOB));

  // submodule btb_records_1_mem_1_bram
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd81),
	  .MEMSIZE(8'd128)) btb_records_1_mem_1_bram(.CLKA(CLK),
						     .CLKB(CLK),
						     .ADDRA(btb_records_1_mem_1_bram$ADDRA),
						     .ADDRB(btb_records_1_mem_1_bram$ADDRB),
						     .DIA(btb_records_1_mem_1_bram$DIA),
						     .DIB(btb_records_1_mem_1_bram$DIB),
						     .WEA(btb_records_1_mem_1_bram$WEA),
						     .WEB(btb_records_1_mem_1_bram$WEB),
						     .ENA(btb_records_1_mem_1_bram$ENA),
						     .ENB(btb_records_1_mem_1_bram$ENB),
						     .DOA(),
						     .DOB(btb_records_1_mem_1_bram$DOB));

  // submodule btb_records_1_updateKeys_0_bram
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd16),
	  .MEMSIZE(8'd128)) btb_records_1_updateKeys_0_bram(.CLKA(CLK),
							    .CLKB(CLK),
							    .ADDRA(btb_records_1_updateKeys_0_bram$ADDRA),
							    .ADDRB(btb_records_1_updateKeys_0_bram$ADDRB),
							    .DIA(btb_records_1_updateKeys_0_bram$DIA),
							    .DIB(btb_records_1_updateKeys_0_bram$DIB),
							    .WEA(btb_records_1_updateKeys_0_bram$WEA),
							    .WEB(btb_records_1_updateKeys_0_bram$WEB),
							    .ENA(btb_records_1_updateKeys_0_bram$ENA),
							    .ENB(btb_records_1_updateKeys_0_bram$ENB),
							    .DOA(),
							    .DOB(btb_records_1_updateKeys_0_bram$DOB));

  // submodule btb_records_1_updateKeys_1_bram
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd16),
	  .MEMSIZE(8'd128)) btb_records_1_updateKeys_1_bram(.CLKA(CLK),
							    .CLKB(CLK),
							    .ADDRA(btb_records_1_updateKeys_1_bram$ADDRA),
							    .ADDRB(btb_records_1_updateKeys_1_bram$ADDRB),
							    .DIA(btb_records_1_updateKeys_1_bram$DIA),
							    .DIB(btb_records_1_updateKeys_1_bram$DIB),
							    .WEA(btb_records_1_updateKeys_1_bram$WEA),
							    .WEB(btb_records_1_updateKeys_1_bram$WEB),
							    .ENA(btb_records_1_updateKeys_1_bram$ENA),
							    .ENB(btb_records_1_updateKeys_1_bram$ENB),
							    .DOA(),
							    .DOB(btb_records_1_updateKeys_1_bram$DOB));

  // submodule btb_records_2_mem_0_bram
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd81),
	  .MEMSIZE(8'd128)) btb_records_2_mem_0_bram(.CLKA(CLK),
						     .CLKB(CLK),
						     .ADDRA(btb_records_2_mem_0_bram$ADDRA),
						     .ADDRB(btb_records_2_mem_0_bram$ADDRB),
						     .DIA(btb_records_2_mem_0_bram$DIA),
						     .DIB(btb_records_2_mem_0_bram$DIB),
						     .WEA(btb_records_2_mem_0_bram$WEA),
						     .WEB(btb_records_2_mem_0_bram$WEB),
						     .ENA(btb_records_2_mem_0_bram$ENA),
						     .ENB(btb_records_2_mem_0_bram$ENB),
						     .DOA(),
						     .DOB(btb_records_2_mem_0_bram$DOB));

  // submodule btb_records_2_mem_1_bram
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd81),
	  .MEMSIZE(8'd128)) btb_records_2_mem_1_bram(.CLKA(CLK),
						     .CLKB(CLK),
						     .ADDRA(btb_records_2_mem_1_bram$ADDRA),
						     .ADDRB(btb_records_2_mem_1_bram$ADDRB),
						     .DIA(btb_records_2_mem_1_bram$DIA),
						     .DIB(btb_records_2_mem_1_bram$DIB),
						     .WEA(btb_records_2_mem_1_bram$WEA),
						     .WEB(btb_records_2_mem_1_bram$WEB),
						     .ENA(btb_records_2_mem_1_bram$ENA),
						     .ENB(btb_records_2_mem_1_bram$ENB),
						     .DOA(),
						     .DOB(btb_records_2_mem_1_bram$DOB));

  // submodule btb_records_2_updateKeys_0_bram
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd16),
	  .MEMSIZE(8'd128)) btb_records_2_updateKeys_0_bram(.CLKA(CLK),
							    .CLKB(CLK),
							    .ADDRA(btb_records_2_updateKeys_0_bram$ADDRA),
							    .ADDRB(btb_records_2_updateKeys_0_bram$ADDRB),
							    .DIA(btb_records_2_updateKeys_0_bram$DIA),
							    .DIB(btb_records_2_updateKeys_0_bram$DIB),
							    .WEA(btb_records_2_updateKeys_0_bram$WEA),
							    .WEB(btb_records_2_updateKeys_0_bram$WEB),
							    .ENA(btb_records_2_updateKeys_0_bram$ENA),
							    .ENB(btb_records_2_updateKeys_0_bram$ENB),
							    .DOA(),
							    .DOB(btb_records_2_updateKeys_0_bram$DOB));

  // submodule btb_records_2_updateKeys_1_bram
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd16),
	  .MEMSIZE(8'd128)) btb_records_2_updateKeys_1_bram(.CLKA(CLK),
							    .CLKB(CLK),
							    .ADDRA(btb_records_2_updateKeys_1_bram$ADDRA),
							    .ADDRB(btb_records_2_updateKeys_1_bram$ADDRB),
							    .DIA(btb_records_2_updateKeys_1_bram$DIA),
							    .DIB(btb_records_2_updateKeys_1_bram$DIB),
							    .WEA(btb_records_2_updateKeys_1_bram$WEA),
							    .WEB(btb_records_2_updateKeys_1_bram$WEB),
							    .ENA(btb_records_2_updateKeys_1_bram$ENA),
							    .ENB(btb_records_2_updateKeys_1_bram$ENB),
							    .DOA(),
							    .DOB(btb_records_2_updateKeys_1_bram$DOB));

  // submodule btb_records_3_mem_0_bram
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd81),
	  .MEMSIZE(8'd128)) btb_records_3_mem_0_bram(.CLKA(CLK),
						     .CLKB(CLK),
						     .ADDRA(btb_records_3_mem_0_bram$ADDRA),
						     .ADDRB(btb_records_3_mem_0_bram$ADDRB),
						     .DIA(btb_records_3_mem_0_bram$DIA),
						     .DIB(btb_records_3_mem_0_bram$DIB),
						     .WEA(btb_records_3_mem_0_bram$WEA),
						     .WEB(btb_records_3_mem_0_bram$WEB),
						     .ENA(btb_records_3_mem_0_bram$ENA),
						     .ENB(btb_records_3_mem_0_bram$ENB),
						     .DOA(),
						     .DOB(btb_records_3_mem_0_bram$DOB));

  // submodule btb_records_3_mem_1_bram
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd81),
	  .MEMSIZE(8'd128)) btb_records_3_mem_1_bram(.CLKA(CLK),
						     .CLKB(CLK),
						     .ADDRA(btb_records_3_mem_1_bram$ADDRA),
						     .ADDRB(btb_records_3_mem_1_bram$ADDRB),
						     .DIA(btb_records_3_mem_1_bram$DIA),
						     .DIB(btb_records_3_mem_1_bram$DIB),
						     .WEA(btb_records_3_mem_1_bram$WEA),
						     .WEB(btb_records_3_mem_1_bram$WEB),
						     .ENA(btb_records_3_mem_1_bram$ENA),
						     .ENB(btb_records_3_mem_1_bram$ENB),
						     .DOA(),
						     .DOB(btb_records_3_mem_1_bram$DOB));

  // submodule btb_records_3_updateKeys_0_bram
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd16),
	  .MEMSIZE(8'd128)) btb_records_3_updateKeys_0_bram(.CLKA(CLK),
							    .CLKB(CLK),
							    .ADDRA(btb_records_3_updateKeys_0_bram$ADDRA),
							    .ADDRB(btb_records_3_updateKeys_0_bram$ADDRB),
							    .DIA(btb_records_3_updateKeys_0_bram$DIA),
							    .DIB(btb_records_3_updateKeys_0_bram$DIB),
							    .WEA(btb_records_3_updateKeys_0_bram$WEA),
							    .WEB(btb_records_3_updateKeys_0_bram$WEB),
							    .ENA(btb_records_3_updateKeys_0_bram$ENA),
							    .ENB(btb_records_3_updateKeys_0_bram$ENB),
							    .DOA(),
							    .DOB(btb_records_3_updateKeys_0_bram$DOB));

  // submodule btb_records_3_updateKeys_1_bram
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd16),
	  .MEMSIZE(8'd128)) btb_records_3_updateKeys_1_bram(.CLKA(CLK),
							    .CLKB(CLK),
							    .ADDRA(btb_records_3_updateKeys_1_bram$ADDRA),
							    .ADDRB(btb_records_3_updateKeys_1_bram$ADDRB),
							    .DIA(btb_records_3_updateKeys_1_bram$DIA),
							    .DIB(btb_records_3_updateKeys_1_bram$DIB),
							    .WEA(btb_records_3_updateKeys_1_bram$WEA),
							    .WEB(btb_records_3_updateKeys_1_bram$WEB),
							    .ENA(btb_records_3_updateKeys_1_bram$ENA),
							    .ENB(btb_records_3_updateKeys_1_bram$ENB),
							    .DOA(),
							    .DOB(btb_records_3_updateKeys_1_bram$DOB));

  // rule RL_btb_records_0_updateCanon
  assign CAN_FIRE_RL_btb_records_0_updateCanon = 1'd1 ;
  assign WILL_FIRE_RL_btb_records_0_updateCanon = 1'd1 ;

  // rule RL_btb_records_1_updateCanon
  assign CAN_FIRE_RL_btb_records_1_updateCanon = 1'd1 ;
  assign WILL_FIRE_RL_btb_records_1_updateCanon = 1'd1 ;

  // rule RL_btb_records_2_updateCanon
  assign CAN_FIRE_RL_btb_records_2_updateCanon = 1'd1 ;
  assign WILL_FIRE_RL_btb_records_2_updateCanon = 1'd1 ;

  // rule RL_btb_records_3_updateCanon
  assign CAN_FIRE_RL_btb_records_3_updateCanon = 1'd1 ;
  assign WILL_FIRE_RL_btb_records_3_updateCanon = 1'd1 ;

  // rule RL_btb_canonUpdate
  assign CAN_FIRE_RL_btb_canonUpdate = EN_update ;
  assign WILL_FIRE_RL_btb_canonUpdate = EN_update ;

  // rule RL_btb_records_0_updateFresh__dreg_update
  assign CAN_FIRE_RL_btb_records_0_updateFresh__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_btb_records_0_updateFresh__dreg_update = 1'd1 ;

  // rule RL_btb_records_1_updateFresh__dreg_update
  assign CAN_FIRE_RL_btb_records_1_updateFresh__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_btb_records_1_updateFresh__dreg_update = 1'd1 ;

  // rule RL_btb_records_2_updateFresh__dreg_update
  assign CAN_FIRE_RL_btb_records_2_updateFresh__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_btb_records_2_updateFresh__dreg_update = 1'd1 ;

  // rule RL_btb_records_3_updateFresh__dreg_update
  assign CAN_FIRE_RL_btb_records_3_updateFresh__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_btb_records_3_updateFresh__dreg_update = 1'd1 ;

  // inlined wires
  assign btb_records_0_updateFresh_1$whas =
	     EN_update && btb_updateEn$wget[67:66] == 2'd0 ;
  assign btb_records_1_updateFresh_1$whas =
	     EN_update && btb_updateEn$wget[67:66] == 2'd1 ;
  assign btb_records_2_updateFresh_1$whas =
	     EN_update && btb_updateEn$wget[67:66] == 2'd2 ;
  assign btb_records_3_updateFresh_1$whas =
	     EN_update && btb_updateEn$wget[67:66] == 2'd3 ;
  assign btb_updateEn$wget = { update_pc, update_brTarget, update_taken } ;

  // register btb_firstBank_reg
  assign btb_firstBank_reg$D_IN = put_pc_pc[2:1] ;
  assign btb_firstBank_reg$EN = EN_put_pc ;

  // register btb_records_0_clearCount
  assign btb_records_0_clearCount$D_IN = btb_records_0_clearCount + 7'd1 ;
  assign btb_records_0_clearCount$EN =
	     !btb_records_0_updateFresh && btb_records_0_clearReg ;

  // register btb_records_0_clearReg
  assign btb_records_0_clearReg$D_IN = 1'd0 ;
  assign btb_records_0_clearReg$EN =
	     !btb_records_0_updateFresh && btb_records_0_clearReg &&
	     btb_records_0_clearCount == 7'd127 ;

  // register btb_records_0_lookupReg
  assign btb_records_0_lookupReg$D_IN =
	     (put_pc_pc[2:1] == 2'd0) ?
	       { x__h10032, put_pc_pc[9:3] } :
	       ((put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[1:0] == 2'd0) ?
		  { x__h11568,
		    put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[8:2] } :
		  _dfoo72) ;
  assign btb_records_0_lookupReg$EN = EN_put_pc && _dfoo143 ;

  // register btb_records_0_updateFresh
  assign btb_records_0_updateFresh$D_IN = btb_records_0_updateFresh_1$whas ;
  assign btb_records_0_updateFresh$EN = 1'd1 ;

  // register btb_records_0_updateReg
  assign btb_records_0_updateReg$D_IN =
	     { x__h6604,
	       btb_updateEn$wget[74:68],
	       btb_updateEn$wget[0],
	       btb_updateEn$wget[64:1] } ;
  assign btb_records_0_updateReg$EN = btb_records_0_updateFresh_1$whas ;

  // register btb_records_0_wayNext
  assign btb_records_0_wayNext$D_IN = btb_records_0_wayNext + 1'd1 ;
  assign btb_records_0_wayNext$EN = btb_records_0_updateFresh ;

  // register btb_records_1_clearCount
  assign btb_records_1_clearCount$D_IN = btb_records_1_clearCount + 7'd1 ;
  assign btb_records_1_clearCount$EN =
	     !btb_records_1_updateFresh && btb_records_1_clearReg ;

  // register btb_records_1_clearReg
  assign btb_records_1_clearReg$D_IN = 1'd0 ;
  assign btb_records_1_clearReg$EN =
	     !btb_records_1_updateFresh && btb_records_1_clearReg &&
	     btb_records_1_clearCount == 7'd127 ;

  // register btb_records_1_lookupReg
  assign btb_records_1_lookupReg$D_IN =
	     (put_pc_pc[2:1] == 2'd1) ?
	       { x__h10032, put_pc_pc[9:3] } :
	       ((put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[1:0] == 2'd1) ?
		  { x__h11568,
		    put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[8:2] } :
		  _dfoo62) ;
  assign btb_records_1_lookupReg$EN = EN_put_pc && _dfoo133 ;

  // register btb_records_1_updateFresh
  assign btb_records_1_updateFresh$D_IN = btb_records_1_updateFresh_1$whas ;
  assign btb_records_1_updateFresh$EN = 1'd1 ;

  // register btb_records_1_updateReg
  assign btb_records_1_updateReg$D_IN = btb_records_0_updateReg$D_IN ;
  assign btb_records_1_updateReg$EN = btb_records_1_updateFresh_1$whas ;

  // register btb_records_1_wayNext
  assign btb_records_1_wayNext$D_IN = btb_records_1_wayNext + 1'd1 ;
  assign btb_records_1_wayNext$EN = btb_records_1_updateFresh ;

  // register btb_records_2_clearCount
  assign btb_records_2_clearCount$D_IN = btb_records_2_clearCount + 7'd1 ;
  assign btb_records_2_clearCount$EN =
	     !btb_records_2_updateFresh && btb_records_2_clearReg ;

  // register btb_records_2_clearReg
  assign btb_records_2_clearReg$D_IN = 1'd0 ;
  assign btb_records_2_clearReg$EN =
	     !btb_records_2_updateFresh && btb_records_2_clearReg &&
	     btb_records_2_clearCount == 7'd127 ;

  // register btb_records_2_lookupReg
  assign btb_records_2_lookupReg$D_IN =
	     (put_pc_pc[2:1] == 2'd2) ?
	       { x__h10032, put_pc_pc[9:3] } :
	       ((put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[1:0] == 2'd2) ?
		  { x__h11568,
		    put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[8:2] } :
		  _dfoo52) ;
  assign btb_records_2_lookupReg$EN = EN_put_pc && _dfoo131 ;

  // register btb_records_2_updateFresh
  assign btb_records_2_updateFresh$D_IN = btb_records_2_updateFresh_1$whas ;
  assign btb_records_2_updateFresh$EN = 1'd1 ;

  // register btb_records_2_updateReg
  assign btb_records_2_updateReg$D_IN = btb_records_0_updateReg$D_IN ;
  assign btb_records_2_updateReg$EN = btb_records_2_updateFresh_1$whas ;

  // register btb_records_2_wayNext
  assign btb_records_2_wayNext$D_IN = btb_records_2_wayNext + 1'd1 ;
  assign btb_records_2_wayNext$EN = btb_records_2_updateFresh ;

  // register btb_records_3_clearCount
  assign btb_records_3_clearCount$D_IN = btb_records_3_clearCount + 7'd1 ;
  assign btb_records_3_clearCount$EN =
	     !btb_records_3_updateFresh && btb_records_3_clearReg ;

  // register btb_records_3_clearReg
  assign btb_records_3_clearReg$D_IN = 1'd0 ;
  assign btb_records_3_clearReg$EN =
	     !btb_records_3_updateFresh && btb_records_3_clearReg &&
	     btb_records_3_clearCount == 7'd127 ;

  // register btb_records_3_lookupReg
  assign btb_records_3_lookupReg$D_IN =
	     (put_pc_pc[2:1] == 2'd3) ?
	       { x__h10032, put_pc_pc[9:3] } :
	       ((put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[1:0] == 2'd3) ?
		  { x__h11568,
		    put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[8:2] } :
		  _dfoo42) ;
  assign btb_records_3_lookupReg$EN = EN_put_pc && _dfoo113 ;

  // register btb_records_3_updateFresh
  assign btb_records_3_updateFresh$D_IN = btb_records_3_updateFresh_1$whas ;
  assign btb_records_3_updateFresh$EN = 1'd1 ;

  // register btb_records_3_updateReg
  assign btb_records_3_updateReg$D_IN = btb_records_0_updateReg$D_IN ;
  assign btb_records_3_updateReg$EN = btb_records_3_updateFresh_1$whas ;

  // register btb_records_3_wayNext
  assign btb_records_3_wayNext$D_IN = btb_records_3_wayNext + 1'd1 ;
  assign btb_records_3_wayNext$EN = btb_records_3_updateFresh ;

  // submodule btb_records_0_mem_0_bram
  assign btb_records_0_mem_0_bram$ADDRA =
	     (btb_records_0_updateKeys_1_bram_b_read_EQ_btb__ETC___d13 ==
	      1'd0 &&
	      btb_records_0_updateFresh) ?
	       btb_records_0_updateReg[71:65] :
	       btb_records_0_clearCount ;
  assign btb_records_0_mem_0_bram$ADDRB =
	     (put_pc_pc[2:1] == 2'd0) ? put_pc_pc[9:3] : _dfoo109 ;
  assign btb_records_0_mem_0_bram$DIA =
	     (btb_records_0_updateKeys_1_bram_b_read_EQ_btb__ETC___d13 ==
	      1'd0 &&
	      btb_records_0_updateFresh) ?
	       { btb_records_0_updateReg[87:72],
		 btb_records_0_updateReg[64:0] } :
	       81'd0 ;
  assign btb_records_0_mem_0_bram$DIB = 81'h0AAAAAAAAAAAAAAAAAAAA ;
  assign btb_records_0_mem_0_bram$WEA = 1'd1 ;
  assign btb_records_0_mem_0_bram$WEB = 1'd0 ;
  assign btb_records_0_mem_0_bram$ENA =
	     btb_records_0_updateKeys_1_bram_b_read_EQ_btb__ETC___d13 ==
	     1'd0 &&
	     btb_records_0_updateFresh ||
	     !btb_records_0_updateFresh && btb_records_0_clearReg ;
  assign btb_records_0_mem_0_bram$ENB = EN_put_pc && _dfoo143 ;

  // submodule btb_records_0_mem_1_bram
  assign btb_records_0_mem_1_bram$ADDRA =
	     (btb_records_0_updateKeys_1_bram_b_read_EQ_btb__ETC___d13 ==
	      1'd1 &&
	      btb_records_0_updateFresh) ?
	       btb_records_0_updateReg[71:65] :
	       btb_records_0_clearCount ;
  assign btb_records_0_mem_1_bram$ADDRB =
	     (put_pc_pc[2:1] == 2'd0) ? put_pc_pc[9:3] : _dfoo105 ;
  assign btb_records_0_mem_1_bram$DIA =
	     (btb_records_0_updateKeys_1_bram_b_read_EQ_btb__ETC___d13 ==
	      1'd1 &&
	      btb_records_0_updateFresh) ?
	       { btb_records_0_updateReg[87:72],
		 btb_records_0_updateReg[64:0] } :
	       81'd0 ;
  assign btb_records_0_mem_1_bram$DIB = 81'h0AAAAAAAAAAAAAAAAAAAA ;
  assign btb_records_0_mem_1_bram$WEA = 1'd1 ;
  assign btb_records_0_mem_1_bram$WEB = 1'd0 ;
  assign btb_records_0_mem_1_bram$ENA =
	     btb_records_0_updateKeys_1_bram_b_read_EQ_btb__ETC___d13 ==
	     1'd1 &&
	     btb_records_0_updateFresh ||
	     !btb_records_0_updateFresh && btb_records_0_clearReg ;
  assign btb_records_0_mem_1_bram$ENB = EN_put_pc && _dfoo143 ;

  // submodule btb_records_0_updateKeys_0_bram
  assign btb_records_0_updateKeys_0_bram$ADDRA =
	     btb_records_0_updateReg[71:65] ;
  assign btb_records_0_updateKeys_0_bram$ADDRB = btb_updateEn$wget[74:68] ;
  assign btb_records_0_updateKeys_0_bram$DIA =
	     btb_records_0_updateReg[87:72] ;
  assign btb_records_0_updateKeys_0_bram$DIB =
	     16'b1010101010101010 /* unspecified value */  ;
  assign btb_records_0_updateKeys_0_bram$WEA = 1'd1 ;
  assign btb_records_0_updateKeys_0_bram$WEB = 1'd0 ;
  assign btb_records_0_updateKeys_0_bram$ENA =
	     btb_records_0_updateKeys_1_bram_b_read_EQ_btb__ETC___d13 ==
	     1'd0 &&
	     btb_records_0_updateFresh ;
  assign btb_records_0_updateKeys_0_bram$ENB =
	     btb_records_0_updateFresh_1$whas ;

  // submodule btb_records_0_updateKeys_1_bram
  assign btb_records_0_updateKeys_1_bram$ADDRA =
	     btb_records_0_updateReg[71:65] ;
  assign btb_records_0_updateKeys_1_bram$ADDRB = btb_updateEn$wget[74:68] ;
  assign btb_records_0_updateKeys_1_bram$DIA =
	     btb_records_0_updateReg[87:72] ;
  assign btb_records_0_updateKeys_1_bram$DIB =
	     16'b1010101010101010 /* unspecified value */  ;
  assign btb_records_0_updateKeys_1_bram$WEA = 1'd1 ;
  assign btb_records_0_updateKeys_1_bram$WEB = 1'd0 ;
  assign btb_records_0_updateKeys_1_bram$ENA =
	     btb_records_0_updateKeys_1_bram_b_read_EQ_btb__ETC___d13 ==
	     1'd1 &&
	     btb_records_0_updateFresh ;
  assign btb_records_0_updateKeys_1_bram$ENB =
	     btb_records_0_updateFresh_1$whas ;

  // submodule btb_records_1_mem_0_bram
  assign btb_records_1_mem_0_bram$ADDRA =
	     (btb_records_1_updateKeys_1_bram_b_read__6_EQ_b_ETC___d45 ==
	      1'd0 &&
	      btb_records_1_updateFresh) ?
	       btb_records_1_updateReg[71:65] :
	       btb_records_1_clearCount ;
  assign btb_records_1_mem_0_bram$ADDRB =
	     (put_pc_pc[2:1] == 2'd1) ? put_pc_pc[9:3] : _dfoo99 ;
  assign btb_records_1_mem_0_bram$DIA =
	     (btb_records_1_updateKeys_1_bram_b_read__6_EQ_b_ETC___d45 ==
	      1'd0 &&
	      btb_records_1_updateFresh) ?
	       { btb_records_1_updateReg[87:72],
		 btb_records_1_updateReg[64:0] } :
	       81'd0 ;
  assign btb_records_1_mem_0_bram$DIB = 81'h0AAAAAAAAAAAAAAAAAAAA ;
  assign btb_records_1_mem_0_bram$WEA = 1'd1 ;
  assign btb_records_1_mem_0_bram$WEB = 1'd0 ;
  assign btb_records_1_mem_0_bram$ENA =
	     btb_records_1_updateKeys_1_bram_b_read__6_EQ_b_ETC___d45 ==
	     1'd0 &&
	     btb_records_1_updateFresh ||
	     !btb_records_1_updateFresh && btb_records_1_clearReg ;
  assign btb_records_1_mem_0_bram$ENB = EN_put_pc && _dfoo133 ;

  // submodule btb_records_1_mem_1_bram
  assign btb_records_1_mem_1_bram$ADDRA =
	     (btb_records_1_updateKeys_1_bram_b_read__6_EQ_b_ETC___d45 ==
	      1'd1 &&
	      btb_records_1_updateFresh) ?
	       btb_records_1_updateReg[71:65] :
	       btb_records_1_clearCount ;
  assign btb_records_1_mem_1_bram$ADDRB =
	     (put_pc_pc[2:1] == 2'd1) ? put_pc_pc[9:3] : _dfoo95 ;
  assign btb_records_1_mem_1_bram$DIA =
	     (btb_records_1_updateKeys_1_bram_b_read__6_EQ_b_ETC___d45 ==
	      1'd1 &&
	      btb_records_1_updateFresh) ?
	       { btb_records_1_updateReg[87:72],
		 btb_records_1_updateReg[64:0] } :
	       81'd0 ;
  assign btb_records_1_mem_1_bram$DIB = 81'h0AAAAAAAAAAAAAAAAAAAA ;
  assign btb_records_1_mem_1_bram$WEA = 1'd1 ;
  assign btb_records_1_mem_1_bram$WEB = 1'd0 ;
  assign btb_records_1_mem_1_bram$ENA =
	     btb_records_1_updateKeys_1_bram_b_read__6_EQ_b_ETC___d45 ==
	     1'd1 &&
	     btb_records_1_updateFresh ||
	     !btb_records_1_updateFresh && btb_records_1_clearReg ;
  assign btb_records_1_mem_1_bram$ENB = EN_put_pc && _dfoo133 ;

  // submodule btb_records_1_updateKeys_0_bram
  assign btb_records_1_updateKeys_0_bram$ADDRA =
	     btb_records_1_updateReg[71:65] ;
  assign btb_records_1_updateKeys_0_bram$ADDRB = btb_updateEn$wget[74:68] ;
  assign btb_records_1_updateKeys_0_bram$DIA =
	     btb_records_1_updateReg[87:72] ;
  assign btb_records_1_updateKeys_0_bram$DIB =
	     16'b1010101010101010 /* unspecified value */  ;
  assign btb_records_1_updateKeys_0_bram$WEA = 1'd1 ;
  assign btb_records_1_updateKeys_0_bram$WEB = 1'd0 ;
  assign btb_records_1_updateKeys_0_bram$ENA =
	     btb_records_1_updateKeys_1_bram_b_read__6_EQ_b_ETC___d45 ==
	     1'd0 &&
	     btb_records_1_updateFresh ;
  assign btb_records_1_updateKeys_0_bram$ENB =
	     btb_records_1_updateFresh_1$whas ;

  // submodule btb_records_1_updateKeys_1_bram
  assign btb_records_1_updateKeys_1_bram$ADDRA =
	     btb_records_1_updateReg[71:65] ;
  assign btb_records_1_updateKeys_1_bram$ADDRB = btb_updateEn$wget[74:68] ;
  assign btb_records_1_updateKeys_1_bram$DIA =
	     btb_records_1_updateReg[87:72] ;
  assign btb_records_1_updateKeys_1_bram$DIB =
	     16'b1010101010101010 /* unspecified value */  ;
  assign btb_records_1_updateKeys_1_bram$WEA = 1'd1 ;
  assign btb_records_1_updateKeys_1_bram$WEB = 1'd0 ;
  assign btb_records_1_updateKeys_1_bram$ENA =
	     btb_records_1_updateKeys_1_bram_b_read__6_EQ_b_ETC___d45 ==
	     1'd1 &&
	     btb_records_1_updateFresh ;
  assign btb_records_1_updateKeys_1_bram$ENB =
	     btb_records_1_updateFresh_1$whas ;

  // submodule btb_records_2_mem_0_bram
  assign btb_records_2_mem_0_bram$ADDRA =
	     (btb_records_2_updateKeys_1_bram_b_read__8_EQ_b_ETC___d77 ==
	      1'd0 &&
	      btb_records_2_updateFresh) ?
	       btb_records_2_updateReg[71:65] :
	       btb_records_2_clearCount ;
  assign btb_records_2_mem_0_bram$ADDRB =
	     (put_pc_pc[2:1] == 2'd2) ? put_pc_pc[9:3] : _dfoo89 ;
  assign btb_records_2_mem_0_bram$DIA =
	     (btb_records_2_updateKeys_1_bram_b_read__8_EQ_b_ETC___d77 ==
	      1'd0 &&
	      btb_records_2_updateFresh) ?
	       { btb_records_2_updateReg[87:72],
		 btb_records_2_updateReg[64:0] } :
	       81'd0 ;
  assign btb_records_2_mem_0_bram$DIB = 81'h0AAAAAAAAAAAAAAAAAAAA ;
  assign btb_records_2_mem_0_bram$WEA = 1'd1 ;
  assign btb_records_2_mem_0_bram$WEB = 1'd0 ;
  assign btb_records_2_mem_0_bram$ENA =
	     btb_records_2_updateKeys_1_bram_b_read__8_EQ_b_ETC___d77 ==
	     1'd0 &&
	     btb_records_2_updateFresh ||
	     !btb_records_2_updateFresh && btb_records_2_clearReg ;
  assign btb_records_2_mem_0_bram$ENB = EN_put_pc && _dfoo131 ;

  // submodule btb_records_2_mem_1_bram
  assign btb_records_2_mem_1_bram$ADDRA =
	     (btb_records_2_updateKeys_1_bram_b_read__8_EQ_b_ETC___d77 ==
	      1'd1 &&
	      btb_records_2_updateFresh) ?
	       btb_records_2_updateReg[71:65] :
	       btb_records_2_clearCount ;
  assign btb_records_2_mem_1_bram$ADDRB =
	     (put_pc_pc[2:1] == 2'd2) ? put_pc_pc[9:3] : _dfoo85 ;
  assign btb_records_2_mem_1_bram$DIA =
	     (btb_records_2_updateKeys_1_bram_b_read__8_EQ_b_ETC___d77 ==
	      1'd1 &&
	      btb_records_2_updateFresh) ?
	       { btb_records_2_updateReg[87:72],
		 btb_records_2_updateReg[64:0] } :
	       81'd0 ;
  assign btb_records_2_mem_1_bram$DIB = 81'h0AAAAAAAAAAAAAAAAAAAA ;
  assign btb_records_2_mem_1_bram$WEA = 1'd1 ;
  assign btb_records_2_mem_1_bram$WEB = 1'd0 ;
  assign btb_records_2_mem_1_bram$ENA =
	     btb_records_2_updateKeys_1_bram_b_read__8_EQ_b_ETC___d77 ==
	     1'd1 &&
	     btb_records_2_updateFresh ||
	     !btb_records_2_updateFresh && btb_records_2_clearReg ;
  assign btb_records_2_mem_1_bram$ENB = EN_put_pc && _dfoo131 ;

  // submodule btb_records_2_updateKeys_0_bram
  assign btb_records_2_updateKeys_0_bram$ADDRA =
	     btb_records_2_updateReg[71:65] ;
  assign btb_records_2_updateKeys_0_bram$ADDRB = btb_updateEn$wget[74:68] ;
  assign btb_records_2_updateKeys_0_bram$DIA =
	     btb_records_2_updateReg[87:72] ;
  assign btb_records_2_updateKeys_0_bram$DIB =
	     16'b1010101010101010 /* unspecified value */  ;
  assign btb_records_2_updateKeys_0_bram$WEA = 1'd1 ;
  assign btb_records_2_updateKeys_0_bram$WEB = 1'd0 ;
  assign btb_records_2_updateKeys_0_bram$ENA =
	     btb_records_2_updateKeys_1_bram_b_read__8_EQ_b_ETC___d77 ==
	     1'd0 &&
	     btb_records_2_updateFresh ;
  assign btb_records_2_updateKeys_0_bram$ENB =
	     btb_records_2_updateFresh_1$whas ;

  // submodule btb_records_2_updateKeys_1_bram
  assign btb_records_2_updateKeys_1_bram$ADDRA =
	     btb_records_2_updateReg[71:65] ;
  assign btb_records_2_updateKeys_1_bram$ADDRB = btb_updateEn$wget[74:68] ;
  assign btb_records_2_updateKeys_1_bram$DIA =
	     btb_records_2_updateReg[87:72] ;
  assign btb_records_2_updateKeys_1_bram$DIB =
	     16'b1010101010101010 /* unspecified value */  ;
  assign btb_records_2_updateKeys_1_bram$WEA = 1'd1 ;
  assign btb_records_2_updateKeys_1_bram$WEB = 1'd0 ;
  assign btb_records_2_updateKeys_1_bram$ENA =
	     btb_records_2_updateKeys_1_bram_b_read__8_EQ_b_ETC___d77 ==
	     1'd1 &&
	     btb_records_2_updateFresh ;
  assign btb_records_2_updateKeys_1_bram$ENB =
	     btb_records_2_updateFresh_1$whas ;

  // submodule btb_records_3_mem_0_bram
  assign btb_records_3_mem_0_bram$ADDRA =
	     (btb_records_3_updateKeys_1_bram_b_read__00_EQ__ETC___d109 ==
	      1'd0 &&
	      btb_records_3_updateFresh) ?
	       btb_records_3_updateReg[71:65] :
	       btb_records_3_clearCount ;
  assign btb_records_3_mem_0_bram$ADDRB =
	     (put_pc_pc[2:1] == 2'd3) ? put_pc_pc[9:3] : _dfoo79 ;
  assign btb_records_3_mem_0_bram$DIA =
	     (btb_records_3_updateKeys_1_bram_b_read__00_EQ__ETC___d109 ==
	      1'd0 &&
	      btb_records_3_updateFresh) ?
	       { btb_records_3_updateReg[87:72],
		 btb_records_3_updateReg[64:0] } :
	       81'd0 ;
  assign btb_records_3_mem_0_bram$DIB = 81'h0AAAAAAAAAAAAAAAAAAAA ;
  assign btb_records_3_mem_0_bram$WEA = 1'd1 ;
  assign btb_records_3_mem_0_bram$WEB = 1'd0 ;
  assign btb_records_3_mem_0_bram$ENA =
	     btb_records_3_updateKeys_1_bram_b_read__00_EQ__ETC___d109 ==
	     1'd0 &&
	     btb_records_3_updateFresh ||
	     !btb_records_3_updateFresh && btb_records_3_clearReg ;
  assign btb_records_3_mem_0_bram$ENB = EN_put_pc && _dfoo113 ;

  // submodule btb_records_3_mem_1_bram
  assign btb_records_3_mem_1_bram$ADDRA =
	     (btb_records_3_updateKeys_1_bram_b_read__00_EQ__ETC___d109 ==
	      1'd1 &&
	      btb_records_3_updateFresh) ?
	       btb_records_3_updateReg[71:65] :
	       btb_records_3_clearCount ;
  assign btb_records_3_mem_1_bram$ADDRB =
	     (put_pc_pc[2:1] == 2'd3) ? put_pc_pc[9:3] : _dfoo75 ;
  assign btb_records_3_mem_1_bram$DIA =
	     (btb_records_3_updateKeys_1_bram_b_read__00_EQ__ETC___d109 ==
	      1'd1 &&
	      btb_records_3_updateFresh) ?
	       { btb_records_3_updateReg[87:72],
		 btb_records_3_updateReg[64:0] } :
	       81'd0 ;
  assign btb_records_3_mem_1_bram$DIB = 81'h0AAAAAAAAAAAAAAAAAAAA ;
  assign btb_records_3_mem_1_bram$WEA = 1'd1 ;
  assign btb_records_3_mem_1_bram$WEB = 1'd0 ;
  assign btb_records_3_mem_1_bram$ENA =
	     btb_records_3_updateKeys_1_bram_b_read__00_EQ__ETC___d109 ==
	     1'd1 &&
	     btb_records_3_updateFresh ||
	     !btb_records_3_updateFresh && btb_records_3_clearReg ;
  assign btb_records_3_mem_1_bram$ENB = EN_put_pc && _dfoo113 ;

  // submodule btb_records_3_updateKeys_0_bram
  assign btb_records_3_updateKeys_0_bram$ADDRA =
	     btb_records_3_updateReg[71:65] ;
  assign btb_records_3_updateKeys_0_bram$ADDRB = btb_updateEn$wget[74:68] ;
  assign btb_records_3_updateKeys_0_bram$DIA =
	     btb_records_3_updateReg[87:72] ;
  assign btb_records_3_updateKeys_0_bram$DIB =
	     16'b1010101010101010 /* unspecified value */  ;
  assign btb_records_3_updateKeys_0_bram$WEA = 1'd1 ;
  assign btb_records_3_updateKeys_0_bram$WEB = 1'd0 ;
  assign btb_records_3_updateKeys_0_bram$ENA =
	     btb_records_3_updateKeys_1_bram_b_read__00_EQ__ETC___d109 ==
	     1'd0 &&
	     btb_records_3_updateFresh ;
  assign btb_records_3_updateKeys_0_bram$ENB =
	     btb_records_3_updateFresh_1$whas ;

  // submodule btb_records_3_updateKeys_1_bram
  assign btb_records_3_updateKeys_1_bram$ADDRA =
	     btb_records_3_updateReg[71:65] ;
  assign btb_records_3_updateKeys_1_bram$ADDRB = btb_updateEn$wget[74:68] ;
  assign btb_records_3_updateKeys_1_bram$DIA =
	     btb_records_3_updateReg[87:72] ;
  assign btb_records_3_updateKeys_1_bram$DIB =
	     16'b1010101010101010 /* unspecified value */  ;
  assign btb_records_3_updateKeys_1_bram$WEA = 1'd1 ;
  assign btb_records_3_updateKeys_1_bram$WEB = 1'd0 ;
  assign btb_records_3_updateKeys_1_bram$ENA =
	     btb_records_3_updateKeys_1_bram_b_read__00_EQ__ETC___d109 ==
	     1'd1 &&
	     btb_records_3_updateFresh ;
  assign btb_records_3_updateKeys_1_bram$ENB =
	     btb_records_3_updateFresh_1$whas ;

  // remaining internal signals
  assign IF_NEG_btb_firstBank_reg_13_14_BIT_0_16_THEN_b_ETC___d325 =
	     NEG_btb_firstBank_reg_13___d214[0] ?
	       { btb_records_0_updateReg_BITS_71_TO_65_7_EQ_btb_ETC___d230 &&
		 IF_btb_records_0_updateReg_BITS_71_TO_65_7_EQ__ETC___d235,
		 IF_btb_records_0_updateReg_BITS_71_TO_65_7_EQ__ETC___d241,
		 btb_records_3_updateReg_01_BITS_71_TO_65_13_EQ_ETC___d256 &&
		 IF_btb_records_3_updateReg_01_BITS_71_TO_65_13_ETC___d261,
		 IF_btb_records_3_updateReg_01_BITS_71_TO_65_13_ETC___d267,
		 btb_records_2_updateReg_9_BITS_71_TO_65_1_EQ_b_ETC___d283 &&
		 IF_btb_records_2_updateReg_9_BITS_71_TO_65_1_E_ETC___d288,
		 IF_btb_records_2_updateReg_9_BITS_71_TO_65_1_E_ETC___d294,
		 btb_records_1_updateReg_7_BITS_71_TO_65_9_EQ_b_ETC___d309 &&
		 IF_btb_records_1_updateReg_7_BITS_71_TO_65_9_E_ETC___d314,
		 IF_btb_records_1_updateReg_7_BITS_71_TO_65_9_E_ETC___d320 } :
	       { btb_records_1_updateReg_7_BITS_71_TO_65_9_EQ_b_ETC___d309 &&
		 IF_btb_records_1_updateReg_7_BITS_71_TO_65_9_E_ETC___d314,
		 IF_btb_records_1_updateReg_7_BITS_71_TO_65_9_E_ETC___d320,
		 btb_records_0_updateReg_BITS_71_TO_65_7_EQ_btb_ETC___d230 &&
		 IF_btb_records_0_updateReg_BITS_71_TO_65_7_EQ__ETC___d235,
		 IF_btb_records_0_updateReg_BITS_71_TO_65_7_EQ__ETC___d241,
		 btb_records_3_updateReg_01_BITS_71_TO_65_13_EQ_ETC___d256 &&
		 IF_btb_records_3_updateReg_01_BITS_71_TO_65_13_ETC___d261,
		 IF_btb_records_3_updateReg_01_BITS_71_TO_65_13_ETC___d267,
		 btb_records_2_updateReg_9_BITS_71_TO_65_1_EQ_b_ETC___d283 &&
		 IF_btb_records_2_updateReg_9_BITS_71_TO_65_1_E_ETC___d288,
		 IF_btb_records_2_updateReg_9_BITS_71_TO_65_1_E_ETC___d294 } ;
  assign IF_NEG_btb_firstBank_reg_13_14_BIT_0_16_THEN_b_ETC___d330 =
	     NEG_btb_firstBank_reg_13___d214[0] ?
	       { btb_records_2_updateReg_9_BITS_71_TO_65_1_EQ_b_ETC___d283 &&
		 IF_btb_records_2_updateReg_9_BITS_71_TO_65_1_E_ETC___d288,
		 IF_btb_records_2_updateReg_9_BITS_71_TO_65_1_E_ETC___d294,
		 btb_records_1_updateReg_7_BITS_71_TO_65_9_EQ_b_ETC___d309 &&
		 IF_btb_records_1_updateReg_7_BITS_71_TO_65_9_E_ETC___d314,
		 IF_btb_records_1_updateReg_7_BITS_71_TO_65_9_E_ETC___d320,
		 btb_records_0_updateReg_BITS_71_TO_65_7_EQ_btb_ETC___d230 &&
		 IF_btb_records_0_updateReg_BITS_71_TO_65_7_EQ__ETC___d235,
		 IF_btb_records_0_updateReg_BITS_71_TO_65_7_EQ__ETC___d241,
		 btb_records_3_updateReg_01_BITS_71_TO_65_13_EQ_ETC___d256 &&
		 IF_btb_records_3_updateReg_01_BITS_71_TO_65_13_ETC___d261,
		 IF_btb_records_3_updateReg_01_BITS_71_TO_65_13_ETC___d267 } :
	       { btb_records_3_updateReg_01_BITS_71_TO_65_13_EQ_ETC___d256 &&
		 IF_btb_records_3_updateReg_01_BITS_71_TO_65_13_ETC___d261,
		 IF_btb_records_3_updateReg_01_BITS_71_TO_65_13_ETC___d267,
		 btb_records_2_updateReg_9_BITS_71_TO_65_1_EQ_b_ETC___d283 &&
		 IF_btb_records_2_updateReg_9_BITS_71_TO_65_1_E_ETC___d288,
		 IF_btb_records_2_updateReg_9_BITS_71_TO_65_1_E_ETC___d294,
		 btb_records_1_updateReg_7_BITS_71_TO_65_9_EQ_b_ETC___d309 &&
		 IF_btb_records_1_updateReg_7_BITS_71_TO_65_9_E_ETC___d314,
		 IF_btb_records_1_updateReg_7_BITS_71_TO_65_9_E_ETC___d320,
		 btb_records_0_updateReg_BITS_71_TO_65_7_EQ_btb_ETC___d230 &&
		 IF_btb_records_0_updateReg_BITS_71_TO_65_7_EQ__ETC___d235,
		 IF_btb_records_0_updateReg_BITS_71_TO_65_7_EQ__ETC___d241 } ;
  assign IF_btb_records_0_updateReg_BITS_71_TO_65_7_EQ__ETC___d235 =
	     (btb_records_0_updateReg[71:65] ==
	      btb_records_0_lookupReg[6:0] &&
	      btb_records_0_updateReg[87:72] ==
	      btb_records_0_lookupReg[22:7]) ?
	       btb_records_0_updateReg[64] :
	       (btb_records_0_lookupReg_17_BITS_22_TO_7_20_EQ__ETC___d225 ?
		  btb_records_0_mem_1_bram$DOB[64] :
		  btb_records_0_mem_0_bram$DOB[64]) ;
  assign IF_btb_records_0_updateReg_BITS_71_TO_65_7_EQ__ETC___d241 =
	     (btb_records_0_updateReg[71:65] ==
	      btb_records_0_lookupReg[6:0] &&
	      btb_records_0_updateReg[87:72] ==
	      btb_records_0_lookupReg[22:7]) ?
	       btb_records_0_updateReg[63:0] :
	       (btb_records_0_lookupReg_17_BITS_22_TO_7_20_EQ__ETC___d225 ?
		  btb_records_0_mem_1_bram$DOB[63:0] :
		  btb_records_0_mem_0_bram$DOB[63:0]) ;
  assign IF_btb_records_1_updateReg_7_BITS_71_TO_65_9_E_ETC___d314 =
	     (btb_records_1_updateReg[71:65] ==
	      btb_records_1_lookupReg[6:0] &&
	      btb_records_1_updateReg[87:72] ==
	      btb_records_1_lookupReg[22:7]) ?
	       btb_records_1_updateReg[64] :
	       (btb_records_1_lookupReg_96_BITS_22_TO_7_99_EQ__ETC___d304 ?
		  btb_records_1_mem_1_bram$DOB[64] :
		  btb_records_1_mem_0_bram$DOB[64]) ;
  assign IF_btb_records_1_updateReg_7_BITS_71_TO_65_9_E_ETC___d320 =
	     (btb_records_1_updateReg[71:65] ==
	      btb_records_1_lookupReg[6:0] &&
	      btb_records_1_updateReg[87:72] ==
	      btb_records_1_lookupReg[22:7]) ?
	       btb_records_1_updateReg[63:0] :
	       (btb_records_1_lookupReg_96_BITS_22_TO_7_99_EQ__ETC___d304 ?
		  btb_records_1_mem_1_bram$DOB[63:0] :
		  btb_records_1_mem_0_bram$DOB[63:0]) ;
  assign IF_btb_records_2_updateReg_9_BITS_71_TO_65_1_E_ETC___d288 =
	     (btb_records_2_updateReg[71:65] ==
	      btb_records_2_lookupReg[6:0] &&
	      btb_records_2_updateReg[87:72] ==
	      btb_records_2_lookupReg[22:7]) ?
	       btb_records_2_updateReg[64] :
	       (btb_records_2_lookupReg_70_BITS_22_TO_7_73_EQ__ETC___d278 ?
		  btb_records_2_mem_1_bram$DOB[64] :
		  btb_records_2_mem_0_bram$DOB[64]) ;
  assign IF_btb_records_2_updateReg_9_BITS_71_TO_65_1_E_ETC___d294 =
	     (btb_records_2_updateReg[71:65] ==
	      btb_records_2_lookupReg[6:0] &&
	      btb_records_2_updateReg[87:72] ==
	      btb_records_2_lookupReg[22:7]) ?
	       btb_records_2_updateReg[63:0] :
	       (btb_records_2_lookupReg_70_BITS_22_TO_7_73_EQ__ETC___d278 ?
		  btb_records_2_mem_1_bram$DOB[63:0] :
		  btb_records_2_mem_0_bram$DOB[63:0]) ;
  assign IF_btb_records_3_updateReg_01_BITS_71_TO_65_13_ETC___d261 =
	     (btb_records_3_updateReg[71:65] ==
	      btb_records_3_lookupReg[6:0] &&
	      btb_records_3_updateReg[87:72] ==
	      btb_records_3_lookupReg[22:7]) ?
	       btb_records_3_updateReg[64] :
	       (btb_records_3_lookupReg_43_BITS_22_TO_7_46_EQ__ETC___d251 ?
		  btb_records_3_mem_1_bram$DOB[64] :
		  btb_records_3_mem_0_bram$DOB[64]) ;
  assign IF_btb_records_3_updateReg_01_BITS_71_TO_65_13_ETC___d267 =
	     (btb_records_3_updateReg[71:65] ==
	      btb_records_3_lookupReg[6:0] &&
	      btb_records_3_updateReg[87:72] ==
	      btb_records_3_lookupReg[22:7]) ?
	       btb_records_3_updateReg[63:0] :
	       (btb_records_3_lookupReg_43_BITS_22_TO_7_46_EQ__ETC___d251 ?
		  btb_records_3_mem_1_bram$DOB[63:0] :
		  btb_records_3_mem_0_bram$DOB[63:0]) ;
  assign NEG_btb_firstBank_reg_13___d214 = -btb_firstBank_reg ;
  assign _dfoo105 =
	     (put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[1:0] == 2'd0) ?
	       put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[8:2] :
	       ((put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[1:0] == 2'd0) ?
		  put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[8:2] :
		  put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[8:2]) ;
  assign _dfoo109 =
	     (put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[1:0] == 2'd0) ?
	       put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[8:2] :
	       ((put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[1:0] == 2'd0) ?
		  put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[8:2] :
		  put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[8:2]) ;
  assign _dfoo113 =
	     put_pc_pc[2:1] == 2'd3 ||
	     put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[1:0] == 2'd3 ||
	     put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[1:0] == 2'd3 ||
	     put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[1:0] == 2'd3 ;
  assign _dfoo131 =
	     put_pc_pc[2:1] == 2'd2 ||
	     put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[1:0] == 2'd2 ||
	     put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[1:0] == 2'd2 ||
	     put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[1:0] == 2'd2 ;
  assign _dfoo133 =
	     put_pc_pc[2:1] == 2'd1 ||
	     put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[1:0] == 2'd1 ||
	     put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[1:0] == 2'd1 ||
	     put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[1:0] == 2'd1 ;
  assign _dfoo143 =
	     put_pc_pc[2:1] == 2'd0 ||
	     put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[1:0] == 2'd0 ||
	     put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[1:0] == 2'd0 ||
	     put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[1:0] == 2'd0 ;
  assign _dfoo42 =
	     (put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[1:0] == 2'd3) ?
	       { x__h14246, put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[8:2] } :
	       { x__h16924, put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[8:2] } ;
  assign _dfoo52 =
	     (put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[1:0] == 2'd2) ?
	       { x__h14246, put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[8:2] } :
	       { x__h16924, put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[8:2] } ;
  assign _dfoo62 =
	     (put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[1:0] == 2'd1) ?
	       { x__h14246, put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[8:2] } :
	       { x__h16924, put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[8:2] } ;
  assign _dfoo72 =
	     (put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[1:0] == 2'd0) ?
	       { x__h14246, put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[8:2] } :
	       { x__h16924, put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[8:2] } ;
  assign _dfoo75 =
	     (put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[1:0] == 2'd3) ?
	       put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[8:2] :
	       ((put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[1:0] == 2'd3) ?
		  put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[8:2] :
		  put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[8:2]) ;
  assign _dfoo79 =
	     (put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[1:0] == 2'd3) ?
	       put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[8:2] :
	       ((put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[1:0] == 2'd3) ?
		  put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[8:2] :
		  put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[8:2]) ;
  assign _dfoo85 =
	     (put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[1:0] == 2'd2) ?
	       put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[8:2] :
	       ((put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[1:0] == 2'd2) ?
		  put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[8:2] :
		  put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[8:2]) ;
  assign _dfoo89 =
	     (put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[1:0] == 2'd2) ?
	       put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[8:2] :
	       ((put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[1:0] == 2'd2) ?
		  put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[8:2] :
		  put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[8:2]) ;
  assign _dfoo95 =
	     (put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[1:0] == 2'd1) ?
	       put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[8:2] :
	       ((put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[1:0] == 2'd1) ?
		  put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[8:2] :
		  put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[8:2]) ;
  assign _dfoo99 =
	     (put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[1:0] == 2'd1) ?
	       put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[8:2] :
	       ((put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[1:0] == 2'd1) ?
		  put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[8:2] :
		  put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[8:2]) ;
  assign btb_records_0_lookupReg_17_BITS_22_TO_7_20_EQ__ETC___d225 =
	     btb_records_0_lookupReg[22:7] ==
	     btb_records_0_mem_1_bram$DOB[80:65] ;
  assign btb_records_0_updateKeys_1_bram_b_read_EQ_btb__ETC___d13 =
	     btb_records_0_updateKeys_1_bram$DOB ==
	     btb_records_0_updateReg[87:72] ||
	     btb_records_0_updateKeys_0_bram$DOB !=
	     btb_records_0_updateReg[87:72] &&
	     btb_records_0_wayNext ;
  assign btb_records_0_updateReg_BITS_71_TO_65_7_EQ_btb_ETC___d230 =
	     btb_records_0_updateReg[71:65] == btb_records_0_lookupReg[6:0] &&
	     btb_records_0_updateReg[87:72] ==
	     btb_records_0_lookupReg[22:7] ||
	     btb_records_0_lookupReg_17_BITS_22_TO_7_20_EQ__ETC___d225 ||
	     btb_records_0_lookupReg[22:7] ==
	     btb_records_0_mem_0_bram$DOB[80:65] ;
  assign btb_records_1_lookupReg_96_BITS_22_TO_7_99_EQ__ETC___d304 =
	     btb_records_1_lookupReg[22:7] ==
	     btb_records_1_mem_1_bram$DOB[80:65] ;
  assign btb_records_1_updateKeys_1_bram_b_read__6_EQ_b_ETC___d45 =
	     btb_records_1_updateKeys_1_bram$DOB ==
	     btb_records_1_updateReg[87:72] ||
	     btb_records_1_updateKeys_0_bram$DOB !=
	     btb_records_1_updateReg[87:72] &&
	     btb_records_1_wayNext ;
  assign btb_records_1_updateReg_7_BITS_71_TO_65_9_EQ_b_ETC___d309 =
	     btb_records_1_updateReg[71:65] == btb_records_1_lookupReg[6:0] &&
	     btb_records_1_updateReg[87:72] ==
	     btb_records_1_lookupReg[22:7] ||
	     btb_records_1_lookupReg_96_BITS_22_TO_7_99_EQ__ETC___d304 ||
	     btb_records_1_lookupReg[22:7] ==
	     btb_records_1_mem_0_bram$DOB[80:65] ;
  assign btb_records_2_lookupReg_70_BITS_22_TO_7_73_EQ__ETC___d278 =
	     btb_records_2_lookupReg[22:7] ==
	     btb_records_2_mem_1_bram$DOB[80:65] ;
  assign btb_records_2_updateKeys_1_bram_b_read__8_EQ_b_ETC___d77 =
	     btb_records_2_updateKeys_1_bram$DOB ==
	     btb_records_2_updateReg[87:72] ||
	     btb_records_2_updateKeys_0_bram$DOB !=
	     btb_records_2_updateReg[87:72] &&
	     btb_records_2_wayNext ;
  assign btb_records_2_updateReg_9_BITS_71_TO_65_1_EQ_b_ETC___d283 =
	     btb_records_2_updateReg[71:65] == btb_records_2_lookupReg[6:0] &&
	     btb_records_2_updateReg[87:72] ==
	     btb_records_2_lookupReg[22:7] ||
	     btb_records_2_lookupReg_70_BITS_22_TO_7_73_EQ__ETC___d278 ||
	     btb_records_2_lookupReg[22:7] ==
	     btb_records_2_mem_0_bram$DOB[80:65] ;
  assign btb_records_3_lookupReg_43_BITS_22_TO_7_46_EQ__ETC___d251 =
	     btb_records_3_lookupReg[22:7] ==
	     btb_records_3_mem_1_bram$DOB[80:65] ;
  assign btb_records_3_updateKeys_1_bram_b_read__00_EQ__ETC___d109 =
	     btb_records_3_updateKeys_1_bram$DOB ==
	     btb_records_3_updateReg[87:72] ||
	     btb_records_3_updateKeys_0_bram$DOB !=
	     btb_records_3_updateReg[87:72] &&
	     btb_records_3_wayNext ;
  assign btb_records_3_updateReg_01_BITS_71_TO_65_13_EQ_ETC___d256 =
	     btb_records_3_updateReg[71:65] == btb_records_3_lookupReg[6:0] &&
	     btb_records_3_updateReg[87:72] ==
	     btb_records_3_lookupReg[22:7] ||
	     btb_records_3_lookupReg_43_BITS_22_TO_7_46_EQ__ETC___d251 ||
	     btb_records_3_lookupReg[22:7] ==
	     btb_records_3_mem_0_bram$DOB[80:65] ;
  assign put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165 = put_pc_pc[63:1] + 63'd1 ;
  assign put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181 = put_pc_pc[63:1] + 63'd2 ;
  assign put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197 = put_pc_pc[63:1] + 63'd3 ;
  assign x__h10032 = x__h10248 ^ y__h10249 ;
  assign x__h10248 = put_pc_pc[25:10] ^ put_pc_pc[41:26] ;
  assign x__h11568 = x__h11784 ^ y__h11785 ;
  assign x__h11784 =
	     put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[24:9] ^
	     put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[40:25] ;
  assign x__h14246 = x__h14462 ^ y__h14463 ;
  assign x__h14462 =
	     put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[24:9] ^
	     put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[40:25] ;
  assign x__h16924 = x__h17140 ^ y__h17141 ;
  assign x__h17140 =
	     put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[24:9] ^
	     put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[40:25] ;
  assign x__h6604 = x__h6822 ^ y__h6823 ;
  assign x__h6822 = btb_updateEn$wget[90:75] ^ btb_updateEn$wget[106:91] ;
  assign y__h10249 = put_pc_pc[57:42] ^ y__h10332 ;
  assign y__h10332 = { 10'd0, put_pc_pc[63:58] } ;
  assign y__h11785 =
	     put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[56:41] ^ y__h11868 ;
  assign y__h11868 =
	     { 10'd0, put_pc_pc_BITS_63_TO_1_64_PLUS_1___d165[62:57] } ;
  assign y__h14463 =
	     put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[56:41] ^ y__h14546 ;
  assign y__h14546 =
	     { 10'd0, put_pc_pc_BITS_63_TO_1_64_PLUS_2___d181[62:57] } ;
  assign y__h17141 =
	     put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[56:41] ^ y__h17224 ;
  assign y__h17224 =
	     { 10'd0, put_pc_pc_BITS_63_TO_1_64_PLUS_3___d197[62:57] } ;
  assign y__h6823 = btb_updateEn$wget[122:107] ^ y__h6914 ;
  assign y__h6914 = { 10'd0, btb_updateEn$wget[128:123] } ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        btb_records_0_clearCount <= `BSV_ASSIGNMENT_DELAY 7'd0;
	btb_records_0_clearReg <= `BSV_ASSIGNMENT_DELAY 1'd1;
	btb_records_0_updateFresh <= `BSV_ASSIGNMENT_DELAY 1'd0;
	btb_records_0_wayNext <= `BSV_ASSIGNMENT_DELAY 1'd0;
	btb_records_1_clearCount <= `BSV_ASSIGNMENT_DELAY 7'd0;
	btb_records_1_clearReg <= `BSV_ASSIGNMENT_DELAY 1'd1;
	btb_records_1_updateFresh <= `BSV_ASSIGNMENT_DELAY 1'd0;
	btb_records_1_wayNext <= `BSV_ASSIGNMENT_DELAY 1'd0;
	btb_records_2_clearCount <= `BSV_ASSIGNMENT_DELAY 7'd0;
	btb_records_2_clearReg <= `BSV_ASSIGNMENT_DELAY 1'd1;
	btb_records_2_updateFresh <= `BSV_ASSIGNMENT_DELAY 1'd0;
	btb_records_2_wayNext <= `BSV_ASSIGNMENT_DELAY 1'd0;
	btb_records_3_clearCount <= `BSV_ASSIGNMENT_DELAY 7'd0;
	btb_records_3_clearReg <= `BSV_ASSIGNMENT_DELAY 1'd1;
	btb_records_3_updateFresh <= `BSV_ASSIGNMENT_DELAY 1'd0;
	btb_records_3_wayNext <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (btb_records_0_clearCount$EN)
	  btb_records_0_clearCount <= `BSV_ASSIGNMENT_DELAY
	      btb_records_0_clearCount$D_IN;
	if (btb_records_0_clearReg$EN)
	  btb_records_0_clearReg <= `BSV_ASSIGNMENT_DELAY
	      btb_records_0_clearReg$D_IN;
	if (btb_records_0_updateFresh$EN)
	  btb_records_0_updateFresh <= `BSV_ASSIGNMENT_DELAY
	      btb_records_0_updateFresh$D_IN;
	if (btb_records_0_wayNext$EN)
	  btb_records_0_wayNext <= `BSV_ASSIGNMENT_DELAY
	      btb_records_0_wayNext$D_IN;
	if (btb_records_1_clearCount$EN)
	  btb_records_1_clearCount <= `BSV_ASSIGNMENT_DELAY
	      btb_records_1_clearCount$D_IN;
	if (btb_records_1_clearReg$EN)
	  btb_records_1_clearReg <= `BSV_ASSIGNMENT_DELAY
	      btb_records_1_clearReg$D_IN;
	if (btb_records_1_updateFresh$EN)
	  btb_records_1_updateFresh <= `BSV_ASSIGNMENT_DELAY
	      btb_records_1_updateFresh$D_IN;
	if (btb_records_1_wayNext$EN)
	  btb_records_1_wayNext <= `BSV_ASSIGNMENT_DELAY
	      btb_records_1_wayNext$D_IN;
	if (btb_records_2_clearCount$EN)
	  btb_records_2_clearCount <= `BSV_ASSIGNMENT_DELAY
	      btb_records_2_clearCount$D_IN;
	if (btb_records_2_clearReg$EN)
	  btb_records_2_clearReg <= `BSV_ASSIGNMENT_DELAY
	      btb_records_2_clearReg$D_IN;
	if (btb_records_2_updateFresh$EN)
	  btb_records_2_updateFresh <= `BSV_ASSIGNMENT_DELAY
	      btb_records_2_updateFresh$D_IN;
	if (btb_records_2_wayNext$EN)
	  btb_records_2_wayNext <= `BSV_ASSIGNMENT_DELAY
	      btb_records_2_wayNext$D_IN;
	if (btb_records_3_clearCount$EN)
	  btb_records_3_clearCount <= `BSV_ASSIGNMENT_DELAY
	      btb_records_3_clearCount$D_IN;
	if (btb_records_3_clearReg$EN)
	  btb_records_3_clearReg <= `BSV_ASSIGNMENT_DELAY
	      btb_records_3_clearReg$D_IN;
	if (btb_records_3_updateFresh$EN)
	  btb_records_3_updateFresh <= `BSV_ASSIGNMENT_DELAY
	      btb_records_3_updateFresh$D_IN;
	if (btb_records_3_wayNext$EN)
	  btb_records_3_wayNext <= `BSV_ASSIGNMENT_DELAY
	      btb_records_3_wayNext$D_IN;
      end
    if (btb_firstBank_reg$EN)
      btb_firstBank_reg <= `BSV_ASSIGNMENT_DELAY btb_firstBank_reg$D_IN;
    if (btb_records_0_lookupReg$EN)
      btb_records_0_lookupReg <= `BSV_ASSIGNMENT_DELAY
	  btb_records_0_lookupReg$D_IN;
    if (btb_records_0_updateReg$EN)
      btb_records_0_updateReg <= `BSV_ASSIGNMENT_DELAY
	  btb_records_0_updateReg$D_IN;
    if (btb_records_1_lookupReg$EN)
      btb_records_1_lookupReg <= `BSV_ASSIGNMENT_DELAY
	  btb_records_1_lookupReg$D_IN;
    if (btb_records_1_updateReg$EN)
      btb_records_1_updateReg <= `BSV_ASSIGNMENT_DELAY
	  btb_records_1_updateReg$D_IN;
    if (btb_records_2_lookupReg$EN)
      btb_records_2_lookupReg <= `BSV_ASSIGNMENT_DELAY
	  btb_records_2_lookupReg$D_IN;
    if (btb_records_2_updateReg$EN)
      btb_records_2_updateReg <= `BSV_ASSIGNMENT_DELAY
	  btb_records_2_updateReg$D_IN;
    if (btb_records_3_lookupReg$EN)
      btb_records_3_lookupReg <= `BSV_ASSIGNMENT_DELAY
	  btb_records_3_lookupReg$D_IN;
    if (btb_records_3_updateReg$EN)
      btb_records_3_updateReg <= `BSV_ASSIGNMENT_DELAY
	  btb_records_3_updateReg$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    btb_firstBank_reg = 2'h2;
    btb_records_0_clearCount = 7'h2A;
    btb_records_0_clearReg = 1'h0;
    btb_records_0_lookupReg = 23'h2AAAAA;
    btb_records_0_updateFresh = 1'h0;
    btb_records_0_updateReg = 88'hAAAAAAAAAAAAAAAAAAAAAA;
    btb_records_0_wayNext = 1'h0;
    btb_records_1_clearCount = 7'h2A;
    btb_records_1_clearReg = 1'h0;
    btb_records_1_lookupReg = 23'h2AAAAA;
    btb_records_1_updateFresh = 1'h0;
    btb_records_1_updateReg = 88'hAAAAAAAAAAAAAAAAAAAAAA;
    btb_records_1_wayNext = 1'h0;
    btb_records_2_clearCount = 7'h2A;
    btb_records_2_clearReg = 1'h0;
    btb_records_2_lookupReg = 23'h2AAAAA;
    btb_records_2_updateFresh = 1'h0;
    btb_records_2_updateReg = 88'hAAAAAAAAAAAAAAAAAAAAAA;
    btb_records_2_wayNext = 1'h0;
    btb_records_3_clearCount = 7'h2A;
    btb_records_3_clearReg = 1'h0;
    btb_records_3_lookupReg = 23'h2AAAAA;
    btb_records_3_updateFresh = 1'h0;
    btb_records_3_updateReg = 88'hAAAAAAAAAAAAAAAAAAAAAA;
    btb_records_3_wayNext = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkBtb

