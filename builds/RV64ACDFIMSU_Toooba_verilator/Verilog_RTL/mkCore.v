//
// Generated by Bluespec Compiler (build 0fccbb13)
//
// On Tue Aug 31 13:17:56 EDT 2021
//
//
// Ports:
// Name                         I/O  size props
// RDY_coreReq_start              O     1 const
// RDY_coreReq_perfReq            O     1 reg
// coreIndInv_perfResp            O    73
// RDY_coreIndInv_perfResp        O     1 reg
// RDY_coreIndInv_terminate       O     1 reg
// dCacheToParent_rsToP_notEmpty  O     1
// RDY_dCacheToParent_rsToP_notEmpty  O     1 const
// RDY_dCacheToParent_rsToP_deq   O     1
// dCacheToParent_rsToP_first     O   579
// RDY_dCacheToParent_rsToP_first  O     1
// dCacheToParent_rqToP_notEmpty  O     1
// RDY_dCacheToParent_rqToP_notEmpty  O     1 const
// RDY_dCacheToParent_rqToP_deq   O     1
// dCacheToParent_rqToP_first     O    72
// RDY_dCacheToParent_rqToP_first  O     1
// dCacheToParent_fromP_notFull   O     1
// RDY_dCacheToParent_fromP_notFull  O     1 const
// RDY_dCacheToParent_fromP_enq   O     1
// iCacheToParent_rsToP_notEmpty  O     1
// RDY_iCacheToParent_rsToP_notEmpty  O     1 const
// RDY_iCacheToParent_rsToP_deq   O     1
// iCacheToParent_rsToP_first     O   579
// RDY_iCacheToParent_rsToP_first  O     1
// iCacheToParent_rqToP_notEmpty  O     1
// RDY_iCacheToParent_rqToP_notEmpty  O     1 const
// RDY_iCacheToParent_rqToP_deq   O     1
// iCacheToParent_rqToP_first     O    72
// RDY_iCacheToParent_rqToP_first  O     1
// iCacheToParent_fromP_notFull   O     1
// RDY_iCacheToParent_fromP_notFull  O     1 const
// RDY_iCacheToParent_fromP_enq   O     1
// tlbToMem_memReq_notEmpty       O     1
// RDY_tlbToMem_memReq_notEmpty   O     1 const
// RDY_tlbToMem_memReq_deq        O     1
// tlbToMem_memReq_first          O    65
// RDY_tlbToMem_memReq_first      O     1
// tlbToMem_respLd_notFull        O     1
// RDY_tlbToMem_respLd_notFull    O     1 const
// RDY_tlbToMem_respLd_enq        O     1
// mmioToPlatform_cRq_notEmpty    O     1
// RDY_mmioToPlatform_cRq_notEmpty  O     1 const
// RDY_mmioToPlatform_cRq_deq     O     1
// mmioToPlatform_cRq_first       O   142 reg
// RDY_mmioToPlatform_cRq_first   O     1
// mmioToPlatform_pRs_notFull     O     1
// RDY_mmioToPlatform_pRs_notFull  O     1 const
// RDY_mmioToPlatform_pRs_enq     O     1
// mmioToPlatform_pRq_notFull     O     1
// RDY_mmioToPlatform_pRq_notFull  O     1 const
// RDY_mmioToPlatform_pRq_enq     O     1
// mmioToPlatform_cRs_notEmpty    O     1
// RDY_mmioToPlatform_cRs_notEmpty  O     1 const
// RDY_mmioToPlatform_cRs_deq     O     1
// mmioToPlatform_cRs_first       O     1 reg
// RDY_mmioToPlatform_cRs_first   O     1
// RDY_mmioToPlatform_setTime     O     1 const
// sendDoStats                    O     1 reg
// RDY_sendDoStats                O     1 reg
// RDY_recvDoStats                O     1 const
// deadlock_dCacheCRqStuck_get    O    73 const
// RDY_deadlock_dCacheCRqStuck_get  O     1 const
// deadlock_dCachePRqStuck_get    O    68 const
// RDY_deadlock_dCachePRqStuck_get  O     1 const
// deadlock_iCacheCRqStuck_get    O    68 const
// RDY_deadlock_iCacheCRqStuck_get  O     1 const
// deadlock_iCachePRqStuck_get    O    68 const
// RDY_deadlock_iCachePRqStuck_get  O     1 const
// deadlock_renameInstStuck_get   O    78 const
// RDY_deadlock_renameInstStuck_get  O     1 const
// deadlock_renameCorrectPathStuck_get  O    78 const
// RDY_deadlock_renameCorrectPathStuck_get  O     1 const
// deadlock_commitInstStuck_get   O   163 const
// RDY_deadlock_commitInstStuck_get  O     1 const
// deadlock_commitUserInstStuck_get  O   163 const
// RDY_deadlock_commitUserInstStuck_get  O     1 const
// RDY_deadlock_checkStarted_get  O     1 const
// renameDebug_renameErr_get      O    89 const
// RDY_renameDebug_renameErr_get  O     1 const
// RDY_setMEIP                    O     1 const
// RDY_setSEIP                    O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// coreReq_start_running          I     1 unused
// coreReq_start_startpc          I    64
// coreReq_start_toHostAddr       I    64 reg
// coreReq_start_fromHostAddr     I    64 reg
// coreReq_perfReq_loc            I     4 reg
// coreReq_perfReq_t              I     5 reg
// dCacheToParent_fromP_enq_x     I   583
// iCacheToParent_fromP_enq_x     I   583
// tlbToMem_respLd_enq_x          I    65
// mmioToPlatform_pRs_enq_x       I    69
// mmioToPlatform_pRq_enq_x       I    39
// mmioToPlatform_setTime_t       I    64 reg
// recvDoStats_x                  I     1 reg
// setMEIP_v                      I     1 reg
// setSEIP_v                      I     1
// EN_coreReq_start               I     1
// EN_coreReq_perfReq             I     1
// EN_coreIndInv_terminate        I     1
// EN_dCacheToParent_rsToP_deq    I     1
// EN_dCacheToParent_rqToP_deq    I     1
// EN_dCacheToParent_fromP_enq    I     1
// EN_iCacheToParent_rsToP_deq    I     1
// EN_iCacheToParent_rqToP_deq    I     1
// EN_iCacheToParent_fromP_enq    I     1
// EN_tlbToMem_memReq_deq         I     1
// EN_tlbToMem_respLd_enq         I     1
// EN_mmioToPlatform_cRq_deq      I     1
// EN_mmioToPlatform_pRs_enq      I     1
// EN_mmioToPlatform_pRq_enq      I     1
// EN_mmioToPlatform_cRs_deq      I     1
// EN_mmioToPlatform_setTime      I     1
// EN_recvDoStats                 I     1
// EN_deadlock_checkStarted_get   I     1 unused
// EN_setMEIP                     I     1
// EN_setSEIP                     I     1
// EN_coreIndInv_perfResp         I     1
// EN_sendDoStats                 I     1
// EN_deadlock_dCacheCRqStuck_get  I     1 unused
// EN_deadlock_dCachePRqStuck_get  I     1 unused
// EN_deadlock_iCacheCRqStuck_get  I     1 unused
// EN_deadlock_iCachePRqStuck_get  I     1 unused
// EN_deadlock_renameInstStuck_get  I     1 unused
// EN_deadlock_renameCorrectPathStuck_get  I     1 unused
// EN_deadlock_commitInstStuck_get  I     1 unused
// EN_deadlock_commitUserInstStuck_get  I     1 unused
// EN_renameDebug_renameErr_get   I     1 unused
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCore(CLK,
	      RST_N,

	      coreReq_start_running,
	      coreReq_start_startpc,
	      coreReq_start_toHostAddr,
	      coreReq_start_fromHostAddr,
	      EN_coreReq_start,
	      RDY_coreReq_start,

	      coreReq_perfReq_loc,
	      coreReq_perfReq_t,
	      EN_coreReq_perfReq,
	      RDY_coreReq_perfReq,

	      EN_coreIndInv_perfResp,
	      coreIndInv_perfResp,
	      RDY_coreIndInv_perfResp,

	      EN_coreIndInv_terminate,
	      RDY_coreIndInv_terminate,

	      dCacheToParent_rsToP_notEmpty,
	      RDY_dCacheToParent_rsToP_notEmpty,

	      EN_dCacheToParent_rsToP_deq,
	      RDY_dCacheToParent_rsToP_deq,

	      dCacheToParent_rsToP_first,
	      RDY_dCacheToParent_rsToP_first,

	      dCacheToParent_rqToP_notEmpty,
	      RDY_dCacheToParent_rqToP_notEmpty,

	      EN_dCacheToParent_rqToP_deq,
	      RDY_dCacheToParent_rqToP_deq,

	      dCacheToParent_rqToP_first,
	      RDY_dCacheToParent_rqToP_first,

	      dCacheToParent_fromP_notFull,
	      RDY_dCacheToParent_fromP_notFull,

	      dCacheToParent_fromP_enq_x,
	      EN_dCacheToParent_fromP_enq,
	      RDY_dCacheToParent_fromP_enq,

	      iCacheToParent_rsToP_notEmpty,
	      RDY_iCacheToParent_rsToP_notEmpty,

	      EN_iCacheToParent_rsToP_deq,
	      RDY_iCacheToParent_rsToP_deq,

	      iCacheToParent_rsToP_first,
	      RDY_iCacheToParent_rsToP_first,

	      iCacheToParent_rqToP_notEmpty,
	      RDY_iCacheToParent_rqToP_notEmpty,

	      EN_iCacheToParent_rqToP_deq,
	      RDY_iCacheToParent_rqToP_deq,

	      iCacheToParent_rqToP_first,
	      RDY_iCacheToParent_rqToP_first,

	      iCacheToParent_fromP_notFull,
	      RDY_iCacheToParent_fromP_notFull,

	      iCacheToParent_fromP_enq_x,
	      EN_iCacheToParent_fromP_enq,
	      RDY_iCacheToParent_fromP_enq,

	      tlbToMem_memReq_notEmpty,
	      RDY_tlbToMem_memReq_notEmpty,

	      EN_tlbToMem_memReq_deq,
	      RDY_tlbToMem_memReq_deq,

	      tlbToMem_memReq_first,
	      RDY_tlbToMem_memReq_first,

	      tlbToMem_respLd_notFull,
	      RDY_tlbToMem_respLd_notFull,

	      tlbToMem_respLd_enq_x,
	      EN_tlbToMem_respLd_enq,
	      RDY_tlbToMem_respLd_enq,

	      mmioToPlatform_cRq_notEmpty,
	      RDY_mmioToPlatform_cRq_notEmpty,

	      EN_mmioToPlatform_cRq_deq,
	      RDY_mmioToPlatform_cRq_deq,

	      mmioToPlatform_cRq_first,
	      RDY_mmioToPlatform_cRq_first,

	      mmioToPlatform_pRs_notFull,
	      RDY_mmioToPlatform_pRs_notFull,

	      mmioToPlatform_pRs_enq_x,
	      EN_mmioToPlatform_pRs_enq,
	      RDY_mmioToPlatform_pRs_enq,

	      mmioToPlatform_pRq_notFull,
	      RDY_mmioToPlatform_pRq_notFull,

	      mmioToPlatform_pRq_enq_x,
	      EN_mmioToPlatform_pRq_enq,
	      RDY_mmioToPlatform_pRq_enq,

	      mmioToPlatform_cRs_notEmpty,
	      RDY_mmioToPlatform_cRs_notEmpty,

	      EN_mmioToPlatform_cRs_deq,
	      RDY_mmioToPlatform_cRs_deq,

	      mmioToPlatform_cRs_first,
	      RDY_mmioToPlatform_cRs_first,

	      mmioToPlatform_setTime_t,
	      EN_mmioToPlatform_setTime,
	      RDY_mmioToPlatform_setTime,

	      EN_sendDoStats,
	      sendDoStats,
	      RDY_sendDoStats,

	      recvDoStats_x,
	      EN_recvDoStats,
	      RDY_recvDoStats,

	      EN_deadlock_dCacheCRqStuck_get,
	      deadlock_dCacheCRqStuck_get,
	      RDY_deadlock_dCacheCRqStuck_get,

	      EN_deadlock_dCachePRqStuck_get,
	      deadlock_dCachePRqStuck_get,
	      RDY_deadlock_dCachePRqStuck_get,

	      EN_deadlock_iCacheCRqStuck_get,
	      deadlock_iCacheCRqStuck_get,
	      RDY_deadlock_iCacheCRqStuck_get,

	      EN_deadlock_iCachePRqStuck_get,
	      deadlock_iCachePRqStuck_get,
	      RDY_deadlock_iCachePRqStuck_get,

	      EN_deadlock_renameInstStuck_get,
	      deadlock_renameInstStuck_get,
	      RDY_deadlock_renameInstStuck_get,

	      EN_deadlock_renameCorrectPathStuck_get,
	      deadlock_renameCorrectPathStuck_get,
	      RDY_deadlock_renameCorrectPathStuck_get,

	      EN_deadlock_commitInstStuck_get,
	      deadlock_commitInstStuck_get,
	      RDY_deadlock_commitInstStuck_get,

	      EN_deadlock_commitUserInstStuck_get,
	      deadlock_commitUserInstStuck_get,
	      RDY_deadlock_commitUserInstStuck_get,

	      EN_deadlock_checkStarted_get,
	      RDY_deadlock_checkStarted_get,

	      EN_renameDebug_renameErr_get,
	      renameDebug_renameErr_get,
	      RDY_renameDebug_renameErr_get,

	      setMEIP_v,
	      EN_setMEIP,
	      RDY_setMEIP,

	      setSEIP_v,
	      EN_setSEIP,
	      RDY_setSEIP);
  input  CLK;
  input  RST_N;

  // action method coreReq_start
  input  coreReq_start_running;
  input  [63 : 0] coreReq_start_startpc;
  input  [63 : 0] coreReq_start_toHostAddr;
  input  [63 : 0] coreReq_start_fromHostAddr;
  input  EN_coreReq_start;
  output RDY_coreReq_start;

  // action method coreReq_perfReq
  input  [3 : 0] coreReq_perfReq_loc;
  input  [4 : 0] coreReq_perfReq_t;
  input  EN_coreReq_perfReq;
  output RDY_coreReq_perfReq;

  // actionvalue method coreIndInv_perfResp
  input  EN_coreIndInv_perfResp;
  output [72 : 0] coreIndInv_perfResp;
  output RDY_coreIndInv_perfResp;

  // action method coreIndInv_terminate
  input  EN_coreIndInv_terminate;
  output RDY_coreIndInv_terminate;

  // value method dCacheToParent_rsToP_notEmpty
  output dCacheToParent_rsToP_notEmpty;
  output RDY_dCacheToParent_rsToP_notEmpty;

  // action method dCacheToParent_rsToP_deq
  input  EN_dCacheToParent_rsToP_deq;
  output RDY_dCacheToParent_rsToP_deq;

  // value method dCacheToParent_rsToP_first
  output [578 : 0] dCacheToParent_rsToP_first;
  output RDY_dCacheToParent_rsToP_first;

  // value method dCacheToParent_rqToP_notEmpty
  output dCacheToParent_rqToP_notEmpty;
  output RDY_dCacheToParent_rqToP_notEmpty;

  // action method dCacheToParent_rqToP_deq
  input  EN_dCacheToParent_rqToP_deq;
  output RDY_dCacheToParent_rqToP_deq;

  // value method dCacheToParent_rqToP_first
  output [71 : 0] dCacheToParent_rqToP_first;
  output RDY_dCacheToParent_rqToP_first;

  // value method dCacheToParent_fromP_notFull
  output dCacheToParent_fromP_notFull;
  output RDY_dCacheToParent_fromP_notFull;

  // action method dCacheToParent_fromP_enq
  input  [582 : 0] dCacheToParent_fromP_enq_x;
  input  EN_dCacheToParent_fromP_enq;
  output RDY_dCacheToParent_fromP_enq;

  // value method iCacheToParent_rsToP_notEmpty
  output iCacheToParent_rsToP_notEmpty;
  output RDY_iCacheToParent_rsToP_notEmpty;

  // action method iCacheToParent_rsToP_deq
  input  EN_iCacheToParent_rsToP_deq;
  output RDY_iCacheToParent_rsToP_deq;

  // value method iCacheToParent_rsToP_first
  output [578 : 0] iCacheToParent_rsToP_first;
  output RDY_iCacheToParent_rsToP_first;

  // value method iCacheToParent_rqToP_notEmpty
  output iCacheToParent_rqToP_notEmpty;
  output RDY_iCacheToParent_rqToP_notEmpty;

  // action method iCacheToParent_rqToP_deq
  input  EN_iCacheToParent_rqToP_deq;
  output RDY_iCacheToParent_rqToP_deq;

  // value method iCacheToParent_rqToP_first
  output [71 : 0] iCacheToParent_rqToP_first;
  output RDY_iCacheToParent_rqToP_first;

  // value method iCacheToParent_fromP_notFull
  output iCacheToParent_fromP_notFull;
  output RDY_iCacheToParent_fromP_notFull;

  // action method iCacheToParent_fromP_enq
  input  [582 : 0] iCacheToParent_fromP_enq_x;
  input  EN_iCacheToParent_fromP_enq;
  output RDY_iCacheToParent_fromP_enq;

  // value method tlbToMem_memReq_notEmpty
  output tlbToMem_memReq_notEmpty;
  output RDY_tlbToMem_memReq_notEmpty;

  // action method tlbToMem_memReq_deq
  input  EN_tlbToMem_memReq_deq;
  output RDY_tlbToMem_memReq_deq;

  // value method tlbToMem_memReq_first
  output [64 : 0] tlbToMem_memReq_first;
  output RDY_tlbToMem_memReq_first;

  // value method tlbToMem_respLd_notFull
  output tlbToMem_respLd_notFull;
  output RDY_tlbToMem_respLd_notFull;

  // action method tlbToMem_respLd_enq
  input  [64 : 0] tlbToMem_respLd_enq_x;
  input  EN_tlbToMem_respLd_enq;
  output RDY_tlbToMem_respLd_enq;

  // value method mmioToPlatform_cRq_notEmpty
  output mmioToPlatform_cRq_notEmpty;
  output RDY_mmioToPlatform_cRq_notEmpty;

  // action method mmioToPlatform_cRq_deq
  input  EN_mmioToPlatform_cRq_deq;
  output RDY_mmioToPlatform_cRq_deq;

  // value method mmioToPlatform_cRq_first
  output [141 : 0] mmioToPlatform_cRq_first;
  output RDY_mmioToPlatform_cRq_first;

  // value method mmioToPlatform_pRs_notFull
  output mmioToPlatform_pRs_notFull;
  output RDY_mmioToPlatform_pRs_notFull;

  // action method mmioToPlatform_pRs_enq
  input  [68 : 0] mmioToPlatform_pRs_enq_x;
  input  EN_mmioToPlatform_pRs_enq;
  output RDY_mmioToPlatform_pRs_enq;

  // value method mmioToPlatform_pRq_notFull
  output mmioToPlatform_pRq_notFull;
  output RDY_mmioToPlatform_pRq_notFull;

  // action method mmioToPlatform_pRq_enq
  input  [38 : 0] mmioToPlatform_pRq_enq_x;
  input  EN_mmioToPlatform_pRq_enq;
  output RDY_mmioToPlatform_pRq_enq;

  // value method mmioToPlatform_cRs_notEmpty
  output mmioToPlatform_cRs_notEmpty;
  output RDY_mmioToPlatform_cRs_notEmpty;

  // action method mmioToPlatform_cRs_deq
  input  EN_mmioToPlatform_cRs_deq;
  output RDY_mmioToPlatform_cRs_deq;

  // value method mmioToPlatform_cRs_first
  output mmioToPlatform_cRs_first;
  output RDY_mmioToPlatform_cRs_first;

  // action method mmioToPlatform_setTime
  input  [63 : 0] mmioToPlatform_setTime_t;
  input  EN_mmioToPlatform_setTime;
  output RDY_mmioToPlatform_setTime;

  // actionvalue method sendDoStats
  input  EN_sendDoStats;
  output sendDoStats;
  output RDY_sendDoStats;

  // action method recvDoStats
  input  recvDoStats_x;
  input  EN_recvDoStats;
  output RDY_recvDoStats;

  // actionvalue method deadlock_dCacheCRqStuck_get
  input  EN_deadlock_dCacheCRqStuck_get;
  output [72 : 0] deadlock_dCacheCRqStuck_get;
  output RDY_deadlock_dCacheCRqStuck_get;

  // actionvalue method deadlock_dCachePRqStuck_get
  input  EN_deadlock_dCachePRqStuck_get;
  output [67 : 0] deadlock_dCachePRqStuck_get;
  output RDY_deadlock_dCachePRqStuck_get;

  // actionvalue method deadlock_iCacheCRqStuck_get
  input  EN_deadlock_iCacheCRqStuck_get;
  output [67 : 0] deadlock_iCacheCRqStuck_get;
  output RDY_deadlock_iCacheCRqStuck_get;

  // actionvalue method deadlock_iCachePRqStuck_get
  input  EN_deadlock_iCachePRqStuck_get;
  output [67 : 0] deadlock_iCachePRqStuck_get;
  output RDY_deadlock_iCachePRqStuck_get;

  // actionvalue method deadlock_renameInstStuck_get
  input  EN_deadlock_renameInstStuck_get;
  output [77 : 0] deadlock_renameInstStuck_get;
  output RDY_deadlock_renameInstStuck_get;

  // actionvalue method deadlock_renameCorrectPathStuck_get
  input  EN_deadlock_renameCorrectPathStuck_get;
  output [77 : 0] deadlock_renameCorrectPathStuck_get;
  output RDY_deadlock_renameCorrectPathStuck_get;

  // actionvalue method deadlock_commitInstStuck_get
  input  EN_deadlock_commitInstStuck_get;
  output [162 : 0] deadlock_commitInstStuck_get;
  output RDY_deadlock_commitInstStuck_get;

  // actionvalue method deadlock_commitUserInstStuck_get
  input  EN_deadlock_commitUserInstStuck_get;
  output [162 : 0] deadlock_commitUserInstStuck_get;
  output RDY_deadlock_commitUserInstStuck_get;

  // action method deadlock_checkStarted_get
  input  EN_deadlock_checkStarted_get;
  output RDY_deadlock_checkStarted_get;

  // actionvalue method renameDebug_renameErr_get
  input  EN_renameDebug_renameErr_get;
  output [88 : 0] renameDebug_renameErr_get;
  output RDY_renameDebug_renameErr_get;

  // action method setMEIP
  input  setMEIP_v;
  input  EN_setMEIP;
  output RDY_setMEIP;

  // action method setSEIP
  input  setSEIP_v;
  input  EN_setSEIP;
  output RDY_setSEIP;

  // signals for module outputs
  wire [578 : 0] dCacheToParent_rsToP_first, iCacheToParent_rsToP_first;
  wire [162 : 0] deadlock_commitInstStuck_get,
		 deadlock_commitUserInstStuck_get;
  wire [141 : 0] mmioToPlatform_cRq_first;
  wire [88 : 0] renameDebug_renameErr_get;
  wire [77 : 0] deadlock_renameCorrectPathStuck_get,
		deadlock_renameInstStuck_get;
  wire [72 : 0] coreIndInv_perfResp, deadlock_dCacheCRqStuck_get;
  wire [71 : 0] dCacheToParent_rqToP_first, iCacheToParent_rqToP_first;
  wire [67 : 0] deadlock_dCachePRqStuck_get,
		deadlock_iCacheCRqStuck_get,
		deadlock_iCachePRqStuck_get;
  wire [64 : 0] tlbToMem_memReq_first;
  wire RDY_coreIndInv_perfResp,
       RDY_coreIndInv_terminate,
       RDY_coreReq_perfReq,
       RDY_coreReq_start,
       RDY_dCacheToParent_fromP_enq,
       RDY_dCacheToParent_fromP_notFull,
       RDY_dCacheToParent_rqToP_deq,
       RDY_dCacheToParent_rqToP_first,
       RDY_dCacheToParent_rqToP_notEmpty,
       RDY_dCacheToParent_rsToP_deq,
       RDY_dCacheToParent_rsToP_first,
       RDY_dCacheToParent_rsToP_notEmpty,
       RDY_deadlock_checkStarted_get,
       RDY_deadlock_commitInstStuck_get,
       RDY_deadlock_commitUserInstStuck_get,
       RDY_deadlock_dCacheCRqStuck_get,
       RDY_deadlock_dCachePRqStuck_get,
       RDY_deadlock_iCacheCRqStuck_get,
       RDY_deadlock_iCachePRqStuck_get,
       RDY_deadlock_renameCorrectPathStuck_get,
       RDY_deadlock_renameInstStuck_get,
       RDY_iCacheToParent_fromP_enq,
       RDY_iCacheToParent_fromP_notFull,
       RDY_iCacheToParent_rqToP_deq,
       RDY_iCacheToParent_rqToP_first,
       RDY_iCacheToParent_rqToP_notEmpty,
       RDY_iCacheToParent_rsToP_deq,
       RDY_iCacheToParent_rsToP_first,
       RDY_iCacheToParent_rsToP_notEmpty,
       RDY_mmioToPlatform_cRq_deq,
       RDY_mmioToPlatform_cRq_first,
       RDY_mmioToPlatform_cRq_notEmpty,
       RDY_mmioToPlatform_cRs_deq,
       RDY_mmioToPlatform_cRs_first,
       RDY_mmioToPlatform_cRs_notEmpty,
       RDY_mmioToPlatform_pRq_enq,
       RDY_mmioToPlatform_pRq_notFull,
       RDY_mmioToPlatform_pRs_enq,
       RDY_mmioToPlatform_pRs_notFull,
       RDY_mmioToPlatform_setTime,
       RDY_recvDoStats,
       RDY_renameDebug_renameErr_get,
       RDY_sendDoStats,
       RDY_setMEIP,
       RDY_setSEIP,
       RDY_tlbToMem_memReq_deq,
       RDY_tlbToMem_memReq_first,
       RDY_tlbToMem_memReq_notEmpty,
       RDY_tlbToMem_respLd_enq,
       RDY_tlbToMem_respLd_notFull,
       dCacheToParent_fromP_notFull,
       dCacheToParent_rqToP_notEmpty,
       dCacheToParent_rsToP_notEmpty,
       iCacheToParent_fromP_notFull,
       iCacheToParent_rqToP_notEmpty,
       iCacheToParent_rsToP_notEmpty,
       mmioToPlatform_cRq_notEmpty,
       mmioToPlatform_cRs_first,
       mmioToPlatform_cRs_notEmpty,
       mmioToPlatform_pRq_notFull,
       mmioToPlatform_pRs_notFull,
       sendDoStats,
       tlbToMem_memReq_notEmpty,
       tlbToMem_respLd_notFull;

  // inlined wires
  reg [152 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget;
  reg [64 : 0] coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget;
  reg [58 : 0] coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget;
  reg [1 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$wget;
  wire [583 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget;
  wire [579 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget;
  wire [152 : 0] coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget;
  wire [142 : 0] mmio_cRqQ_enqReq_lat_0$wget, mmio_dataReqQ_enqReq_lat_0$wget;
  wire [76 : 0] coreFix_memExe_issueLd$wget;
  wire [72 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget;
  wire [70 : 0] coreFix_aluExe_0_bypassWire_0$wget,
		coreFix_aluExe_0_bypassWire_1$wget,
		coreFix_aluExe_0_bypassWire_2$wget,
		coreFix_aluExe_0_bypassWire_3$wget;
  wire [69 : 0] coreFix_memExe_forwardQ_enqReq_lat_0$wget,
		coreFix_memExe_memRespLdQ_enqReq_lat_0$wget,
		mmio_pRsQ_enqReq_lat_0$wget;
  wire [68 : 0] coreFix_memExe_reqLdQ_data_0_lat_0$wget;
  wire [65 : 0] coreFix_memExe_reqStQ_data_0_lat_0$wget,
		mmio_dataRespQ_enqReq_lat_0$wget;
  wire [63 : 0] csrf_mcycle_ehr_data_lat_0$wget;
  wire [39 : 0] mmio_pRqQ_enqReq_lat_0$wget;
  wire [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$wget;
  wire [1 : 0] mmio_cRsQ_enqReq_lat_0$wget;
  wire coreFix_aluExe_0_bypassWire_0$whas,
       coreFix_aluExe_0_bypassWire_1$whas,
       coreFix_aluExe_0_bypassWire_2$whas,
       coreFix_aluExe_0_bypassWire_3$whas,
       coreFix_aluExe_1_bypassWire_2$whas,
       coreFix_aluExe_1_bypassWire_3$whas,
       coreFix_fpuMulDivExe_0_bypassWire_2$whas,
       coreFix_fpuMulDivExe_0_bypassWire_3$whas,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_newReq$whas,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_newReq$whas,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_newReq$whas,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas,
       coreFix_globalSpecUpdate_correctSpecTag_0$whas,
       coreFix_globalSpecUpdate_correctSpecTag_1$whas,
       coreFix_memExe_bypassWire_2$whas,
       coreFix_memExe_bypassWire_3$whas,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_lat_0$whas,
       coreFix_memExe_dMem_cache_m_banks_0_latTimer_doneEn$whas,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$whas,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas,
       coreFix_memExe_forwardQ_enqReq_lat_0$whas,
       coreFix_memExe_issueLd$whas,
       coreFix_memExe_ldMemLatTimer_doneEn$whas,
       coreFix_memExe_ldMemLatTimer_startEn$whas,
       coreFix_memExe_memRespLdQ_enqReq_lat_0$whas,
       coreFix_memExe_reqLdQ_data_0_lat_0$whas,
       coreFix_memExe_reqLdQ_empty_lat_0$whas,
       coreFix_memExe_reqLdQ_full_lat_0$whas,
       coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas,
       coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas,
       coreFix_memExe_respLrScAmoQ_deqReq_lat_0$whas,
       coreFix_memExe_respLrScAmoQ_enqReq_lat_0$whas,
       coreFix_memExe_stMemLatTimer_doneEn$whas,
       csrInstOrInterruptInflight_lat_1$whas,
       csrf_mcycle_ehr_data_lat_0$whas,
       csrf_minstret_ehr_data_dummy_1_0$whas,
       csrf_minstret_ehr_data_lat_0$whas,
       csrf_minstret_ehr_data_lat_1$whas,
       mmio_cRqQ_enqReq_lat_0$whas,
       mmio_dataPendQ_enqReq_lat_0$whas,
       mmio_dataReqQ_enqReq_lat_0$whas,
       mmio_dataRespQ_deqReq_lat_0$whas,
       mmio_pRsQ_deqReq_lat_0$whas;

  // register commitStage_commitTrap
  reg [165 : 0] commitStage_commitTrap;
  wire [165 : 0] commitStage_commitTrap$D_IN;
  wire commitStage_commitTrap$EN;

  // register commitStage_rg_serial_num
  reg [63 : 0] commitStage_rg_serial_num;
  wire [63 : 0] commitStage_rg_serial_num$D_IN;
  wire commitStage_rg_serial_num$EN;

  // register coreFix_doStatsReg
  reg coreFix_doStatsReg;
  wire coreFix_doStatsReg$D_IN, coreFix_doStatsReg$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt
  reg [3 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt;
  wire [3 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init
  reg coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$D_IN,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready
  reg coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready$D_IN,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit
  reg [1 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit;
  wire [1 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0
  reg [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0;
  wire [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1
  reg [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1;
  wire [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0
  reg [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0;
  wire [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1
  reg [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1;
  wire [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0
  reg [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0;
  wire [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1
  reg [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1;
  wire [128 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0
  reg [2 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0;
  wire [2 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$EN;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1
  reg [2 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1;
  wire [2 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$D_IN;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty
  reg coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl
  reg [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl;
  wire [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full
  reg coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0
  reg [582 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0;
  wire [582 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1
  reg [582 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1;
  wire [582 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl
  reg [583 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl;
  wire [583 : 0] coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full
  reg coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full;
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_latTimer_started
  reg [7 : 0] coreFix_memExe_dMem_cache_m_banks_0_latTimer_started;
  wire [7 : 0] coreFix_memExe_dMem_cache_m_banks_0_latTimer_started$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_latTimer_started$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer
  reg [79 : 0] coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer;
  wire [79 : 0] coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl
  reg [58 : 0] coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl;
  wire [58 : 0] coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_processAmo
  reg [160 : 0] coreFix_memExe_dMem_cache_m_banks_0_processAmo;
  reg [160 : 0] coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_processAmo$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl
  reg [152 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl;
  wire [152 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0
  reg [71 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0;
  wire [71 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1
  reg [71 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1;
  wire [71 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl
  reg [72 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl;
  wire [72 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full
  reg coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0
  reg [578 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0;
  wire [578 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1
  reg [578 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1;
  wire [578 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl
  reg [579 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl;
  wire [579 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$D_IN;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$EN;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full
  reg coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$EN;

  // register coreFix_memExe_dMem_perfReqQ_clearReq_rl
  reg coreFix_memExe_dMem_perfReqQ_clearReq_rl;
  wire coreFix_memExe_dMem_perfReqQ_clearReq_rl$D_IN,
       coreFix_memExe_dMem_perfReqQ_clearReq_rl$EN;

  // register coreFix_memExe_dMem_perfReqQ_data_0
  reg [3 : 0] coreFix_memExe_dMem_perfReqQ_data_0;
  wire [3 : 0] coreFix_memExe_dMem_perfReqQ_data_0$D_IN;
  wire coreFix_memExe_dMem_perfReqQ_data_0$EN;

  // register coreFix_memExe_dMem_perfReqQ_deqReq_rl
  reg coreFix_memExe_dMem_perfReqQ_deqReq_rl;
  wire coreFix_memExe_dMem_perfReqQ_deqReq_rl$D_IN,
       coreFix_memExe_dMem_perfReqQ_deqReq_rl$EN;

  // register coreFix_memExe_dMem_perfReqQ_empty
  reg coreFix_memExe_dMem_perfReqQ_empty;
  wire coreFix_memExe_dMem_perfReqQ_empty$D_IN,
       coreFix_memExe_dMem_perfReqQ_empty$EN;

  // register coreFix_memExe_dMem_perfReqQ_enqReq_rl
  reg [4 : 0] coreFix_memExe_dMem_perfReqQ_enqReq_rl;
  wire [4 : 0] coreFix_memExe_dMem_perfReqQ_enqReq_rl$D_IN;
  wire coreFix_memExe_dMem_perfReqQ_enqReq_rl$EN;

  // register coreFix_memExe_dMem_perfReqQ_full
  reg coreFix_memExe_dMem_perfReqQ_full;
  wire coreFix_memExe_dMem_perfReqQ_full$D_IN,
       coreFix_memExe_dMem_perfReqQ_full$EN;

  // register coreFix_memExe_forwardQ_clearReq_rl
  reg coreFix_memExe_forwardQ_clearReq_rl;
  wire coreFix_memExe_forwardQ_clearReq_rl$D_IN,
       coreFix_memExe_forwardQ_clearReq_rl$EN;

  // register coreFix_memExe_forwardQ_data_0
  reg [68 : 0] coreFix_memExe_forwardQ_data_0;
  wire [68 : 0] coreFix_memExe_forwardQ_data_0$D_IN;
  wire coreFix_memExe_forwardQ_data_0$EN;

  // register coreFix_memExe_forwardQ_data_1
  reg [68 : 0] coreFix_memExe_forwardQ_data_1;
  wire [68 : 0] coreFix_memExe_forwardQ_data_1$D_IN;
  wire coreFix_memExe_forwardQ_data_1$EN;

  // register coreFix_memExe_forwardQ_deqP
  reg coreFix_memExe_forwardQ_deqP;
  wire coreFix_memExe_forwardQ_deqP$D_IN, coreFix_memExe_forwardQ_deqP$EN;

  // register coreFix_memExe_forwardQ_deqReq_rl
  reg coreFix_memExe_forwardQ_deqReq_rl;
  wire coreFix_memExe_forwardQ_deqReq_rl$D_IN,
       coreFix_memExe_forwardQ_deqReq_rl$EN;

  // register coreFix_memExe_forwardQ_empty
  reg coreFix_memExe_forwardQ_empty;
  wire coreFix_memExe_forwardQ_empty$D_IN, coreFix_memExe_forwardQ_empty$EN;

  // register coreFix_memExe_forwardQ_enqP
  reg coreFix_memExe_forwardQ_enqP;
  wire coreFix_memExe_forwardQ_enqP$D_IN, coreFix_memExe_forwardQ_enqP$EN;

  // register coreFix_memExe_forwardQ_enqReq_rl
  reg [69 : 0] coreFix_memExe_forwardQ_enqReq_rl;
  wire [69 : 0] coreFix_memExe_forwardQ_enqReq_rl$D_IN;
  wire coreFix_memExe_forwardQ_enqReq_rl$EN;

  // register coreFix_memExe_forwardQ_full
  reg coreFix_memExe_forwardQ_full;
  wire coreFix_memExe_forwardQ_full$D_IN, coreFix_memExe_forwardQ_full$EN;

  // register coreFix_memExe_ldMemLatTimer_started
  reg [23 : 0] coreFix_memExe_ldMemLatTimer_started;
  wire [23 : 0] coreFix_memExe_ldMemLatTimer_started$D_IN;
  wire coreFix_memExe_ldMemLatTimer_started$EN;

  // register coreFix_memExe_ldMemLatTimer_timer
  reg [239 : 0] coreFix_memExe_ldMemLatTimer_timer;
  wire [239 : 0] coreFix_memExe_ldMemLatTimer_timer$D_IN;
  wire coreFix_memExe_ldMemLatTimer_timer$EN;

  // register coreFix_memExe_memRespLdQ_clearReq_rl
  reg coreFix_memExe_memRespLdQ_clearReq_rl;
  wire coreFix_memExe_memRespLdQ_clearReq_rl$D_IN,
       coreFix_memExe_memRespLdQ_clearReq_rl$EN;

  // register coreFix_memExe_memRespLdQ_data_0
  reg [68 : 0] coreFix_memExe_memRespLdQ_data_0;
  wire [68 : 0] coreFix_memExe_memRespLdQ_data_0$D_IN;
  wire coreFix_memExe_memRespLdQ_data_0$EN;

  // register coreFix_memExe_memRespLdQ_data_1
  reg [68 : 0] coreFix_memExe_memRespLdQ_data_1;
  wire [68 : 0] coreFix_memExe_memRespLdQ_data_1$D_IN;
  wire coreFix_memExe_memRespLdQ_data_1$EN;

  // register coreFix_memExe_memRespLdQ_deqP
  reg coreFix_memExe_memRespLdQ_deqP;
  wire coreFix_memExe_memRespLdQ_deqP$D_IN, coreFix_memExe_memRespLdQ_deqP$EN;

  // register coreFix_memExe_memRespLdQ_deqReq_rl
  reg coreFix_memExe_memRespLdQ_deqReq_rl;
  wire coreFix_memExe_memRespLdQ_deqReq_rl$D_IN,
       coreFix_memExe_memRespLdQ_deqReq_rl$EN;

  // register coreFix_memExe_memRespLdQ_empty
  reg coreFix_memExe_memRespLdQ_empty;
  wire coreFix_memExe_memRespLdQ_empty$D_IN,
       coreFix_memExe_memRespLdQ_empty$EN;

  // register coreFix_memExe_memRespLdQ_enqP
  reg coreFix_memExe_memRespLdQ_enqP;
  wire coreFix_memExe_memRespLdQ_enqP$D_IN, coreFix_memExe_memRespLdQ_enqP$EN;

  // register coreFix_memExe_memRespLdQ_enqReq_rl
  reg [69 : 0] coreFix_memExe_memRespLdQ_enqReq_rl;
  wire [69 : 0] coreFix_memExe_memRespLdQ_enqReq_rl$D_IN;
  wire coreFix_memExe_memRespLdQ_enqReq_rl$EN;

  // register coreFix_memExe_memRespLdQ_full
  reg coreFix_memExe_memRespLdQ_full;
  wire coreFix_memExe_memRespLdQ_full$D_IN, coreFix_memExe_memRespLdQ_full$EN;

  // register coreFix_memExe_reqLdQ_data_0_rl
  reg [68 : 0] coreFix_memExe_reqLdQ_data_0_rl;
  wire [68 : 0] coreFix_memExe_reqLdQ_data_0_rl$D_IN;
  wire coreFix_memExe_reqLdQ_data_0_rl$EN;

  // register coreFix_memExe_reqLdQ_empty_rl
  reg coreFix_memExe_reqLdQ_empty_rl;
  wire coreFix_memExe_reqLdQ_empty_rl$D_IN, coreFix_memExe_reqLdQ_empty_rl$EN;

  // register coreFix_memExe_reqLdQ_full_rl
  reg coreFix_memExe_reqLdQ_full_rl;
  wire coreFix_memExe_reqLdQ_full_rl$D_IN, coreFix_memExe_reqLdQ_full_rl$EN;

  // register coreFix_memExe_reqLrScAmoQ_data_0_rl
  reg [152 : 0] coreFix_memExe_reqLrScAmoQ_data_0_rl;
  wire [152 : 0] coreFix_memExe_reqLrScAmoQ_data_0_rl$D_IN;
  wire coreFix_memExe_reqLrScAmoQ_data_0_rl$EN;

  // register coreFix_memExe_reqLrScAmoQ_empty_rl
  reg coreFix_memExe_reqLrScAmoQ_empty_rl;
  wire coreFix_memExe_reqLrScAmoQ_empty_rl$D_IN,
       coreFix_memExe_reqLrScAmoQ_empty_rl$EN;

  // register coreFix_memExe_reqLrScAmoQ_full_rl
  reg coreFix_memExe_reqLrScAmoQ_full_rl;
  wire coreFix_memExe_reqLrScAmoQ_full_rl$D_IN,
       coreFix_memExe_reqLrScAmoQ_full_rl$EN;

  // register coreFix_memExe_reqStQ_data_0_rl
  reg [65 : 0] coreFix_memExe_reqStQ_data_0_rl;
  wire [65 : 0] coreFix_memExe_reqStQ_data_0_rl$D_IN;
  wire coreFix_memExe_reqStQ_data_0_rl$EN;

  // register coreFix_memExe_reqStQ_empty_rl
  reg coreFix_memExe_reqStQ_empty_rl;
  wire coreFix_memExe_reqStQ_empty_rl$D_IN, coreFix_memExe_reqStQ_empty_rl$EN;

  // register coreFix_memExe_reqStQ_full_rl
  reg coreFix_memExe_reqStQ_full_rl;
  wire coreFix_memExe_reqStQ_full_rl$D_IN, coreFix_memExe_reqStQ_full_rl$EN;

  // register coreFix_memExe_respLrScAmoQ_clearReq_rl
  reg coreFix_memExe_respLrScAmoQ_clearReq_rl;
  wire coreFix_memExe_respLrScAmoQ_clearReq_rl$D_IN,
       coreFix_memExe_respLrScAmoQ_clearReq_rl$EN;

  // register coreFix_memExe_respLrScAmoQ_data_0
  reg [63 : 0] coreFix_memExe_respLrScAmoQ_data_0;
  wire [63 : 0] coreFix_memExe_respLrScAmoQ_data_0$D_IN;
  wire coreFix_memExe_respLrScAmoQ_data_0$EN;

  // register coreFix_memExe_respLrScAmoQ_deqReq_rl
  reg coreFix_memExe_respLrScAmoQ_deqReq_rl;
  wire coreFix_memExe_respLrScAmoQ_deqReq_rl$D_IN,
       coreFix_memExe_respLrScAmoQ_deqReq_rl$EN;

  // register coreFix_memExe_respLrScAmoQ_empty
  reg coreFix_memExe_respLrScAmoQ_empty;
  wire coreFix_memExe_respLrScAmoQ_empty$D_IN,
       coreFix_memExe_respLrScAmoQ_empty$EN;

  // register coreFix_memExe_respLrScAmoQ_enqReq_rl
  reg [64 : 0] coreFix_memExe_respLrScAmoQ_enqReq_rl;
  wire [64 : 0] coreFix_memExe_respLrScAmoQ_enqReq_rl$D_IN;
  wire coreFix_memExe_respLrScAmoQ_enqReq_rl$EN;

  // register coreFix_memExe_respLrScAmoQ_full
  reg coreFix_memExe_respLrScAmoQ_full;
  wire coreFix_memExe_respLrScAmoQ_full$D_IN,
       coreFix_memExe_respLrScAmoQ_full$EN;

  // register coreFix_memExe_stMemLatTimer_started
  reg [3 : 0] coreFix_memExe_stMemLatTimer_started;
  wire [3 : 0] coreFix_memExe_stMemLatTimer_started$D_IN;
  wire coreFix_memExe_stMemLatTimer_started$EN;

  // register coreFix_memExe_stMemLatTimer_timer
  reg [39 : 0] coreFix_memExe_stMemLatTimer_timer;
  wire [39 : 0] coreFix_memExe_stMemLatTimer_timer$D_IN;
  wire coreFix_memExe_stMemLatTimer_timer$EN;

  // register coreFix_memExe_waitLrScAmoMMIOResp
  reg [2 : 0] coreFix_memExe_waitLrScAmoMMIOResp;
  reg [2 : 0] coreFix_memExe_waitLrScAmoMMIOResp$D_IN;
  wire coreFix_memExe_waitLrScAmoMMIOResp$EN;

  // register csrInstOrInterruptInflight_rl
  reg csrInstOrInterruptInflight_rl;
  wire csrInstOrInterruptInflight_rl$D_IN, csrInstOrInterruptInflight_rl$EN;

  // register csrf_external_int_en_vec_0
  reg csrf_external_int_en_vec_0;
  wire csrf_external_int_en_vec_0$D_IN, csrf_external_int_en_vec_0$EN;

  // register csrf_external_int_en_vec_1
  reg csrf_external_int_en_vec_1;
  wire csrf_external_int_en_vec_1$D_IN, csrf_external_int_en_vec_1$EN;

  // register csrf_external_int_en_vec_3
  reg csrf_external_int_en_vec_3;
  wire csrf_external_int_en_vec_3$D_IN, csrf_external_int_en_vec_3$EN;

  // register csrf_external_int_pend_vec_0
  reg csrf_external_int_pend_vec_0;
  wire csrf_external_int_pend_vec_0$D_IN, csrf_external_int_pend_vec_0$EN;

  // register csrf_external_int_pend_vec_1
  reg csrf_external_int_pend_vec_1;
  wire csrf_external_int_pend_vec_1$D_IN, csrf_external_int_pend_vec_1$EN;

  // register csrf_external_int_pend_vec_3
  reg csrf_external_int_pend_vec_3;
  wire csrf_external_int_pend_vec_3$D_IN, csrf_external_int_pend_vec_3$EN;

  // register csrf_fflags_reg
  reg [4 : 0] csrf_fflags_reg;
  wire [4 : 0] csrf_fflags_reg$D_IN;
  wire csrf_fflags_reg$EN;

  // register csrf_frm_reg
  reg [2 : 0] csrf_frm_reg;
  wire [2 : 0] csrf_frm_reg$D_IN;
  wire csrf_frm_reg$EN;

  // register csrf_fs_reg
  reg [1 : 0] csrf_fs_reg;
  wire [1 : 0] csrf_fs_reg$D_IN;
  wire csrf_fs_reg$EN;

  // register csrf_ie_vec_0
  reg csrf_ie_vec_0;
  wire csrf_ie_vec_0$D_IN, csrf_ie_vec_0$EN;

  // register csrf_ie_vec_1
  reg csrf_ie_vec_1;
  wire csrf_ie_vec_1$D_IN, csrf_ie_vec_1$EN;

  // register csrf_ie_vec_3
  reg csrf_ie_vec_3;
  wire csrf_ie_vec_3$D_IN, csrf_ie_vec_3$EN;

  // register csrf_mcause_code_reg
  reg [3 : 0] csrf_mcause_code_reg;
  wire [3 : 0] csrf_mcause_code_reg$D_IN;
  wire csrf_mcause_code_reg$EN;

  // register csrf_mcause_interrupt_reg
  reg csrf_mcause_interrupt_reg;
  wire csrf_mcause_interrupt_reg$D_IN, csrf_mcause_interrupt_reg$EN;

  // register csrf_mcounteren_cy_reg
  reg csrf_mcounteren_cy_reg;
  wire csrf_mcounteren_cy_reg$D_IN, csrf_mcounteren_cy_reg$EN;

  // register csrf_mcounteren_ir_reg
  reg csrf_mcounteren_ir_reg;
  wire csrf_mcounteren_ir_reg$D_IN, csrf_mcounteren_ir_reg$EN;

  // register csrf_mcounteren_tm_reg
  reg csrf_mcounteren_tm_reg;
  wire csrf_mcounteren_tm_reg$D_IN, csrf_mcounteren_tm_reg$EN;

  // register csrf_mcycle_ehr_data_rl
  reg [63 : 0] csrf_mcycle_ehr_data_rl;
  wire [63 : 0] csrf_mcycle_ehr_data_rl$D_IN;
  wire csrf_mcycle_ehr_data_rl$EN;

  // register csrf_medeleg_13_11_reg
  reg [2 : 0] csrf_medeleg_13_11_reg;
  wire [2 : 0] csrf_medeleg_13_11_reg$D_IN;
  wire csrf_medeleg_13_11_reg$EN;

  // register csrf_medeleg_15_reg
  reg csrf_medeleg_15_reg;
  wire csrf_medeleg_15_reg$D_IN, csrf_medeleg_15_reg$EN;

  // register csrf_medeleg_9_0_reg
  reg [9 : 0] csrf_medeleg_9_0_reg;
  wire [9 : 0] csrf_medeleg_9_0_reg$D_IN;
  wire csrf_medeleg_9_0_reg$EN;

  // register csrf_mepc_csr
  reg [63 : 0] csrf_mepc_csr;
  wire [63 : 0] csrf_mepc_csr$D_IN;
  wire csrf_mepc_csr$EN;

  // register csrf_mideleg_11_reg
  reg csrf_mideleg_11_reg;
  wire csrf_mideleg_11_reg$D_IN, csrf_mideleg_11_reg$EN;

  // register csrf_mideleg_1_0_reg
  reg [1 : 0] csrf_mideleg_1_0_reg;
  wire [1 : 0] csrf_mideleg_1_0_reg$D_IN;
  wire csrf_mideleg_1_0_reg$EN;

  // register csrf_mideleg_5_3_reg
  reg [2 : 0] csrf_mideleg_5_3_reg;
  wire [2 : 0] csrf_mideleg_5_3_reg$D_IN;
  wire csrf_mideleg_5_3_reg$EN;

  // register csrf_mideleg_9_7_reg
  reg [2 : 0] csrf_mideleg_9_7_reg;
  wire [2 : 0] csrf_mideleg_9_7_reg$D_IN;
  wire csrf_mideleg_9_7_reg$EN;

  // register csrf_minstret_ehr_data_rl
  reg [63 : 0] csrf_minstret_ehr_data_rl;
  wire [63 : 0] csrf_minstret_ehr_data_rl$D_IN;
  wire csrf_minstret_ehr_data_rl$EN;

  // register csrf_mpp_reg
  reg [1 : 0] csrf_mpp_reg;
  wire [1 : 0] csrf_mpp_reg$D_IN;
  wire csrf_mpp_reg$EN;

  // register csrf_mprv_reg
  reg csrf_mprv_reg;
  wire csrf_mprv_reg$D_IN, csrf_mprv_reg$EN;

  // register csrf_mscratch_csr
  reg [63 : 0] csrf_mscratch_csr;
  wire [63 : 0] csrf_mscratch_csr$D_IN;
  wire csrf_mscratch_csr$EN;

  // register csrf_mtval_csr
  reg [63 : 0] csrf_mtval_csr;
  wire [63 : 0] csrf_mtval_csr$D_IN;
  wire csrf_mtval_csr$EN;

  // register csrf_mtvec_base_hi_reg
  reg [61 : 0] csrf_mtvec_base_hi_reg;
  wire [61 : 0] csrf_mtvec_base_hi_reg$D_IN;
  wire csrf_mtvec_base_hi_reg$EN;

  // register csrf_mtvec_mode_low_reg
  reg csrf_mtvec_mode_low_reg;
  wire csrf_mtvec_mode_low_reg$D_IN, csrf_mtvec_mode_low_reg$EN;

  // register csrf_mxr_reg
  reg csrf_mxr_reg;
  wire csrf_mxr_reg$D_IN, csrf_mxr_reg$EN;

  // register csrf_ppn_reg
  reg [43 : 0] csrf_ppn_reg;
  wire [43 : 0] csrf_ppn_reg$D_IN;
  wire csrf_ppn_reg$EN;

  // register csrf_prev_ie_vec_0
  reg csrf_prev_ie_vec_0;
  wire csrf_prev_ie_vec_0$D_IN, csrf_prev_ie_vec_0$EN;

  // register csrf_prev_ie_vec_1
  reg csrf_prev_ie_vec_1;
  wire csrf_prev_ie_vec_1$D_IN, csrf_prev_ie_vec_1$EN;

  // register csrf_prev_ie_vec_3
  reg csrf_prev_ie_vec_3;
  wire csrf_prev_ie_vec_3$D_IN, csrf_prev_ie_vec_3$EN;

  // register csrf_prv_reg
  reg [1 : 0] csrf_prv_reg;
  wire [1 : 0] csrf_prv_reg$D_IN;
  wire csrf_prv_reg$EN;

  // register csrf_rg_tdata1_data
  reg [58 : 0] csrf_rg_tdata1_data;
  wire [58 : 0] csrf_rg_tdata1_data$D_IN;
  wire csrf_rg_tdata1_data$EN;

  // register csrf_rg_tdata1_dmode
  reg csrf_rg_tdata1_dmode;
  wire csrf_rg_tdata1_dmode$D_IN, csrf_rg_tdata1_dmode$EN;

  // register csrf_rg_tdata2
  reg [63 : 0] csrf_rg_tdata2;
  wire [63 : 0] csrf_rg_tdata2$D_IN;
  wire csrf_rg_tdata2$EN;

  // register csrf_rg_tdata3
  reg [63 : 0] csrf_rg_tdata3;
  wire [63 : 0] csrf_rg_tdata3$D_IN;
  wire csrf_rg_tdata3$EN;

  // register csrf_rg_tselect
  reg [63 : 0] csrf_rg_tselect;
  wire [63 : 0] csrf_rg_tselect$D_IN;
  wire csrf_rg_tselect$EN;

  // register csrf_scause_code_reg
  reg [3 : 0] csrf_scause_code_reg;
  wire [3 : 0] csrf_scause_code_reg$D_IN;
  wire csrf_scause_code_reg$EN;

  // register csrf_scause_interrupt_reg
  reg csrf_scause_interrupt_reg;
  wire csrf_scause_interrupt_reg$D_IN, csrf_scause_interrupt_reg$EN;

  // register csrf_scounteren_cy_reg
  reg csrf_scounteren_cy_reg;
  wire csrf_scounteren_cy_reg$D_IN, csrf_scounteren_cy_reg$EN;

  // register csrf_scounteren_ir_reg
  reg csrf_scounteren_ir_reg;
  wire csrf_scounteren_ir_reg$D_IN, csrf_scounteren_ir_reg$EN;

  // register csrf_scounteren_tm_reg
  reg csrf_scounteren_tm_reg;
  wire csrf_scounteren_tm_reg$D_IN, csrf_scounteren_tm_reg$EN;

  // register csrf_sepc_csr
  reg [63 : 0] csrf_sepc_csr;
  wire [63 : 0] csrf_sepc_csr$D_IN;
  wire csrf_sepc_csr$EN;

  // register csrf_software_int_en_vec_0
  reg csrf_software_int_en_vec_0;
  wire csrf_software_int_en_vec_0$D_IN, csrf_software_int_en_vec_0$EN;

  // register csrf_software_int_en_vec_1
  reg csrf_software_int_en_vec_1;
  wire csrf_software_int_en_vec_1$D_IN, csrf_software_int_en_vec_1$EN;

  // register csrf_software_int_en_vec_3
  reg csrf_software_int_en_vec_3;
  wire csrf_software_int_en_vec_3$D_IN, csrf_software_int_en_vec_3$EN;

  // register csrf_software_int_pend_vec_0
  reg csrf_software_int_pend_vec_0;
  wire csrf_software_int_pend_vec_0$D_IN, csrf_software_int_pend_vec_0$EN;

  // register csrf_software_int_pend_vec_1
  reg csrf_software_int_pend_vec_1;
  wire csrf_software_int_pend_vec_1$D_IN, csrf_software_int_pend_vec_1$EN;

  // register csrf_software_int_pend_vec_3
  reg csrf_software_int_pend_vec_3;
  wire csrf_software_int_pend_vec_3$D_IN, csrf_software_int_pend_vec_3$EN;

  // register csrf_spp_reg
  reg csrf_spp_reg;
  wire csrf_spp_reg$D_IN, csrf_spp_reg$EN;

  // register csrf_sscratch_csr
  reg [63 : 0] csrf_sscratch_csr;
  wire [63 : 0] csrf_sscratch_csr$D_IN;
  wire csrf_sscratch_csr$EN;

  // register csrf_stats_module_doStats
  reg csrf_stats_module_doStats;
  wire csrf_stats_module_doStats$D_IN, csrf_stats_module_doStats$EN;

  // register csrf_stval_csr
  reg [63 : 0] csrf_stval_csr;
  wire [63 : 0] csrf_stval_csr$D_IN;
  wire csrf_stval_csr$EN;

  // register csrf_stvec_base_hi_reg
  reg [61 : 0] csrf_stvec_base_hi_reg;
  wire [61 : 0] csrf_stvec_base_hi_reg$D_IN;
  wire csrf_stvec_base_hi_reg$EN;

  // register csrf_stvec_mode_low_reg
  reg csrf_stvec_mode_low_reg;
  wire csrf_stvec_mode_low_reg$D_IN, csrf_stvec_mode_low_reg$EN;

  // register csrf_sum_reg
  reg csrf_sum_reg;
  wire csrf_sum_reg$D_IN, csrf_sum_reg$EN;

  // register csrf_time_reg
  reg [63 : 0] csrf_time_reg;
  wire [63 : 0] csrf_time_reg$D_IN;
  wire csrf_time_reg$EN;

  // register csrf_timer_int_en_vec_0
  reg csrf_timer_int_en_vec_0;
  wire csrf_timer_int_en_vec_0$D_IN, csrf_timer_int_en_vec_0$EN;

  // register csrf_timer_int_en_vec_1
  reg csrf_timer_int_en_vec_1;
  wire csrf_timer_int_en_vec_1$D_IN, csrf_timer_int_en_vec_1$EN;

  // register csrf_timer_int_en_vec_3
  reg csrf_timer_int_en_vec_3;
  wire csrf_timer_int_en_vec_3$D_IN, csrf_timer_int_en_vec_3$EN;

  // register csrf_timer_int_pend_vec_0
  reg csrf_timer_int_pend_vec_0;
  wire csrf_timer_int_pend_vec_0$D_IN, csrf_timer_int_pend_vec_0$EN;

  // register csrf_timer_int_pend_vec_1
  reg csrf_timer_int_pend_vec_1;
  wire csrf_timer_int_pend_vec_1$D_IN, csrf_timer_int_pend_vec_1$EN;

  // register csrf_timer_int_pend_vec_3
  reg csrf_timer_int_pend_vec_3;
  wire csrf_timer_int_pend_vec_3$D_IN, csrf_timer_int_pend_vec_3$EN;

  // register csrf_tsr_reg
  reg csrf_tsr_reg;
  wire csrf_tsr_reg$D_IN, csrf_tsr_reg$EN;

  // register csrf_tvm_reg
  reg csrf_tvm_reg;
  wire csrf_tvm_reg$D_IN, csrf_tvm_reg$EN;

  // register csrf_tw_reg
  reg csrf_tw_reg;
  wire csrf_tw_reg$D_IN, csrf_tw_reg$EN;

  // register csrf_vm_mode_sv39_reg
  reg csrf_vm_mode_sv39_reg;
  wire csrf_vm_mode_sv39_reg$D_IN, csrf_vm_mode_sv39_reg$EN;

  // register flush_reservation
  reg flush_reservation;
  wire flush_reservation$D_IN, flush_reservation$EN;

  // register flush_tlbs
  reg flush_tlbs;
  wire flush_tlbs$D_IN, flush_tlbs$EN;

  // register mmio_cRqQ_clearReq_rl
  reg mmio_cRqQ_clearReq_rl;
  wire mmio_cRqQ_clearReq_rl$D_IN, mmio_cRqQ_clearReq_rl$EN;

  // register mmio_cRqQ_data_0
  reg [141 : 0] mmio_cRqQ_data_0;
  wire [141 : 0] mmio_cRqQ_data_0$D_IN;
  wire mmio_cRqQ_data_0$EN;

  // register mmio_cRqQ_deqReq_rl
  reg mmio_cRqQ_deqReq_rl;
  wire mmio_cRqQ_deqReq_rl$D_IN, mmio_cRqQ_deqReq_rl$EN;

  // register mmio_cRqQ_empty
  reg mmio_cRqQ_empty;
  wire mmio_cRqQ_empty$D_IN, mmio_cRqQ_empty$EN;

  // register mmio_cRqQ_enqReq_rl
  reg [142 : 0] mmio_cRqQ_enqReq_rl;
  wire [142 : 0] mmio_cRqQ_enqReq_rl$D_IN;
  wire mmio_cRqQ_enqReq_rl$EN;

  // register mmio_cRqQ_full
  reg mmio_cRqQ_full;
  wire mmio_cRqQ_full$D_IN, mmio_cRqQ_full$EN;

  // register mmio_cRsQ_clearReq_rl
  reg mmio_cRsQ_clearReq_rl;
  wire mmio_cRsQ_clearReq_rl$D_IN, mmio_cRsQ_clearReq_rl$EN;

  // register mmio_cRsQ_data_0
  reg mmio_cRsQ_data_0;
  wire mmio_cRsQ_data_0$D_IN, mmio_cRsQ_data_0$EN;

  // register mmio_cRsQ_deqReq_rl
  reg mmio_cRsQ_deqReq_rl;
  wire mmio_cRsQ_deqReq_rl$D_IN, mmio_cRsQ_deqReq_rl$EN;

  // register mmio_cRsQ_empty
  reg mmio_cRsQ_empty;
  wire mmio_cRsQ_empty$D_IN, mmio_cRsQ_empty$EN;

  // register mmio_cRsQ_enqReq_rl
  reg [1 : 0] mmio_cRsQ_enqReq_rl;
  wire [1 : 0] mmio_cRsQ_enqReq_rl$D_IN;
  wire mmio_cRsQ_enqReq_rl$EN;

  // register mmio_cRsQ_full
  reg mmio_cRsQ_full;
  wire mmio_cRsQ_full$D_IN, mmio_cRsQ_full$EN;

  // register mmio_dataPendQ_clearReq_rl
  reg mmio_dataPendQ_clearReq_rl;
  wire mmio_dataPendQ_clearReq_rl$D_IN, mmio_dataPendQ_clearReq_rl$EN;

  // register mmio_dataPendQ_deqReq_rl
  reg mmio_dataPendQ_deqReq_rl;
  wire mmio_dataPendQ_deqReq_rl$D_IN, mmio_dataPendQ_deqReq_rl$EN;

  // register mmio_dataPendQ_empty
  reg mmio_dataPendQ_empty;
  wire mmio_dataPendQ_empty$D_IN, mmio_dataPendQ_empty$EN;

  // register mmio_dataPendQ_enqReq_rl
  reg mmio_dataPendQ_enqReq_rl;
  wire mmio_dataPendQ_enqReq_rl$D_IN, mmio_dataPendQ_enqReq_rl$EN;

  // register mmio_dataPendQ_full
  reg mmio_dataPendQ_full;
  wire mmio_dataPendQ_full$D_IN, mmio_dataPendQ_full$EN;

  // register mmio_dataReqQ_clearReq_rl
  reg mmio_dataReqQ_clearReq_rl;
  wire mmio_dataReqQ_clearReq_rl$D_IN, mmio_dataReqQ_clearReq_rl$EN;

  // register mmio_dataReqQ_data_0
  reg [141 : 0] mmio_dataReqQ_data_0;
  wire [141 : 0] mmio_dataReqQ_data_0$D_IN;
  wire mmio_dataReqQ_data_0$EN;

  // register mmio_dataReqQ_deqReq_rl
  reg mmio_dataReqQ_deqReq_rl;
  wire mmio_dataReqQ_deqReq_rl$D_IN, mmio_dataReqQ_deqReq_rl$EN;

  // register mmio_dataReqQ_empty
  reg mmio_dataReqQ_empty;
  wire mmio_dataReqQ_empty$D_IN, mmio_dataReqQ_empty$EN;

  // register mmio_dataReqQ_enqReq_rl
  reg [142 : 0] mmio_dataReqQ_enqReq_rl;
  wire [142 : 0] mmio_dataReqQ_enqReq_rl$D_IN;
  wire mmio_dataReqQ_enqReq_rl$EN;

  // register mmio_dataReqQ_full
  reg mmio_dataReqQ_full;
  wire mmio_dataReqQ_full$D_IN, mmio_dataReqQ_full$EN;

  // register mmio_dataRespQ_clearReq_rl
  reg mmio_dataRespQ_clearReq_rl;
  wire mmio_dataRespQ_clearReq_rl$D_IN, mmio_dataRespQ_clearReq_rl$EN;

  // register mmio_dataRespQ_data_0
  reg [64 : 0] mmio_dataRespQ_data_0;
  wire [64 : 0] mmio_dataRespQ_data_0$D_IN;
  wire mmio_dataRespQ_data_0$EN;

  // register mmio_dataRespQ_deqReq_rl
  reg mmio_dataRespQ_deqReq_rl;
  wire mmio_dataRespQ_deqReq_rl$D_IN, mmio_dataRespQ_deqReq_rl$EN;

  // register mmio_dataRespQ_empty
  reg mmio_dataRespQ_empty;
  wire mmio_dataRespQ_empty$D_IN, mmio_dataRespQ_empty$EN;

  // register mmio_dataRespQ_enqReq_rl
  reg [65 : 0] mmio_dataRespQ_enqReq_rl;
  wire [65 : 0] mmio_dataRespQ_enqReq_rl$D_IN;
  wire mmio_dataRespQ_enqReq_rl$EN;

  // register mmio_dataRespQ_full
  reg mmio_dataRespQ_full;
  wire mmio_dataRespQ_full$D_IN, mmio_dataRespQ_full$EN;

  // register mmio_fromHostAddr
  reg [60 : 0] mmio_fromHostAddr;
  wire [60 : 0] mmio_fromHostAddr$D_IN;
  wire mmio_fromHostAddr$EN;

  // register mmio_pRqQ_clearReq_rl
  reg mmio_pRqQ_clearReq_rl;
  wire mmio_pRqQ_clearReq_rl$D_IN, mmio_pRqQ_clearReq_rl$EN;

  // register mmio_pRqQ_data_0
  reg [38 : 0] mmio_pRqQ_data_0;
  wire [38 : 0] mmio_pRqQ_data_0$D_IN;
  wire mmio_pRqQ_data_0$EN;

  // register mmio_pRqQ_deqReq_rl
  reg mmio_pRqQ_deqReq_rl;
  wire mmio_pRqQ_deqReq_rl$D_IN, mmio_pRqQ_deqReq_rl$EN;

  // register mmio_pRqQ_empty
  reg mmio_pRqQ_empty;
  wire mmio_pRqQ_empty$D_IN, mmio_pRqQ_empty$EN;

  // register mmio_pRqQ_enqReq_rl
  reg [39 : 0] mmio_pRqQ_enqReq_rl;
  wire [39 : 0] mmio_pRqQ_enqReq_rl$D_IN;
  wire mmio_pRqQ_enqReq_rl$EN;

  // register mmio_pRqQ_full
  reg mmio_pRqQ_full;
  wire mmio_pRqQ_full$D_IN, mmio_pRqQ_full$EN;

  // register mmio_pRsQ_clearReq_rl
  reg mmio_pRsQ_clearReq_rl;
  wire mmio_pRsQ_clearReq_rl$D_IN, mmio_pRsQ_clearReq_rl$EN;

  // register mmio_pRsQ_data_0
  reg [68 : 0] mmio_pRsQ_data_0;
  wire [68 : 0] mmio_pRsQ_data_0$D_IN;
  wire mmio_pRsQ_data_0$EN;

  // register mmio_pRsQ_deqReq_rl
  reg mmio_pRsQ_deqReq_rl;
  wire mmio_pRsQ_deqReq_rl$D_IN, mmio_pRsQ_deqReq_rl$EN;

  // register mmio_pRsQ_empty
  reg mmio_pRsQ_empty;
  wire mmio_pRsQ_empty$D_IN, mmio_pRsQ_empty$EN;

  // register mmio_pRsQ_enqReq_rl
  reg [69 : 0] mmio_pRsQ_enqReq_rl;
  wire [69 : 0] mmio_pRsQ_enqReq_rl$D_IN;
  wire mmio_pRsQ_enqReq_rl$EN;

  // register mmio_pRsQ_full
  reg mmio_pRsQ_full;
  wire mmio_pRsQ_full$D_IN, mmio_pRsQ_full$EN;

  // register mmio_toHostAddr
  reg [60 : 0] mmio_toHostAddr;
  wire [60 : 0] mmio_toHostAddr$D_IN;
  wire mmio_toHostAddr$EN;

  // register outOfReset
  reg outOfReset;
  wire outOfReset$D_IN, outOfReset$EN;

  // register started
  reg started;
  wire started$D_IN, started$EN;

  // register update_vm_info
  reg update_vm_info;
  wire update_vm_info$D_IN, update_vm_info$EN;

  // ports of submodule coreFix_aluExe_0_dispToRegQ
  reg [3 : 0] coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [157 : 0] coreFix_aluExe_0_dispToRegQ$enq_x,
		 coreFix_aluExe_0_dispToRegQ$first;
  wire [11 : 0] coreFix_aluExe_0_dispToRegQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_0_dispToRegQ$EN_deq,
       coreFix_aluExe_0_dispToRegQ$EN_enq,
       coreFix_aluExe_0_dispToRegQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_0_dispToRegQ$RDY_deq,
       coreFix_aluExe_0_dispToRegQ$RDY_enq,
       coreFix_aluExe_0_dispToRegQ$RDY_first,
       coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_0_exeToFinQ
  reg [3 : 0] coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [326 : 0] coreFix_aluExe_0_exeToFinQ$enq_x,
		 coreFix_aluExe_0_exeToFinQ$first;
  wire [11 : 0] coreFix_aluExe_0_exeToFinQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_0_exeToFinQ$EN_deq,
       coreFix_aluExe_0_exeToFinQ$EN_enq,
       coreFix_aluExe_0_exeToFinQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_0_exeToFinQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_0_exeToFinQ$RDY_deq,
       coreFix_aluExe_0_exeToFinQ$RDY_enq,
       coreFix_aluExe_0_exeToFinQ$RDY_first,
       coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_0_regToExeQ
  reg [3 : 0] coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [421 : 0] coreFix_aluExe_0_regToExeQ$enq_x,
		 coreFix_aluExe_0_regToExeQ$first;
  wire [11 : 0] coreFix_aluExe_0_regToExeQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_0_regToExeQ$EN_deq,
       coreFix_aluExe_0_regToExeQ$EN_enq,
       coreFix_aluExe_0_regToExeQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_0_regToExeQ$RDY_deq,
       coreFix_aluExe_0_regToExeQ$RDY_enq,
       coreFix_aluExe_0_regToExeQ$RDY_first,
       coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_0_rsAlu
  reg [7 : 0] coreFix_aluExe_0_rsAlu$setRegReady_2_put,
	      coreFix_aluExe_0_rsAlu$setRegReady_4_put;
  reg [3 : 0] coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag;
  wire [161 : 0] coreFix_aluExe_0_rsAlu$dispatchData,
		 coreFix_aluExe_0_rsAlu$enq_x;
  wire [11 : 0] coreFix_aluExe_0_rsAlu$specUpdate_correctSpeculation_mask;
  wire [7 : 0] coreFix_aluExe_0_rsAlu$setRegReady_0_put,
	       coreFix_aluExe_0_rsAlu$setRegReady_1_put,
	       coreFix_aluExe_0_rsAlu$setRegReady_3_put;
  wire [5 : 0] coreFix_aluExe_0_rsAlu$setRobEnqTime_t;
  wire [4 : 0] coreFix_aluExe_0_rsAlu$approximateCount;
  wire coreFix_aluExe_0_rsAlu$EN_doDispatch,
       coreFix_aluExe_0_rsAlu$EN_enq,
       coreFix_aluExe_0_rsAlu$EN_setRegReady_0_put,
       coreFix_aluExe_0_rsAlu$EN_setRegReady_1_put,
       coreFix_aluExe_0_rsAlu$EN_setRegReady_2_put,
       coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put,
       coreFix_aluExe_0_rsAlu$EN_setRegReady_4_put,
       coreFix_aluExe_0_rsAlu$EN_setRobEnqTime,
       coreFix_aluExe_0_rsAlu$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_0_rsAlu$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_0_rsAlu$RDY_dispatchData,
       coreFix_aluExe_0_rsAlu$RDY_doDispatch,
       coreFix_aluExe_0_rsAlu$RDY_enq,
       coreFix_aluExe_0_rsAlu$canEnq,
       coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_1_dispToRegQ
  reg [3 : 0] coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [157 : 0] coreFix_aluExe_1_dispToRegQ$enq_x,
		 coreFix_aluExe_1_dispToRegQ$first;
  wire [11 : 0] coreFix_aluExe_1_dispToRegQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_1_dispToRegQ$EN_deq,
       coreFix_aluExe_1_dispToRegQ$EN_enq,
       coreFix_aluExe_1_dispToRegQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_1_dispToRegQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_1_dispToRegQ$RDY_deq,
       coreFix_aluExe_1_dispToRegQ$RDY_enq,
       coreFix_aluExe_1_dispToRegQ$RDY_first,
       coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_1_exeToFinQ
  reg [3 : 0] coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [326 : 0] coreFix_aluExe_1_exeToFinQ$enq_x,
		 coreFix_aluExe_1_exeToFinQ$first;
  wire [11 : 0] coreFix_aluExe_1_exeToFinQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_1_exeToFinQ$EN_deq,
       coreFix_aluExe_1_exeToFinQ$EN_enq,
       coreFix_aluExe_1_exeToFinQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_1_exeToFinQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_1_exeToFinQ$RDY_deq,
       coreFix_aluExe_1_exeToFinQ$RDY_enq,
       coreFix_aluExe_1_exeToFinQ$RDY_first,
       coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_1_regToExeQ
  reg [3 : 0] coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [421 : 0] coreFix_aluExe_1_regToExeQ$enq_x,
		 coreFix_aluExe_1_regToExeQ$first;
  wire [11 : 0] coreFix_aluExe_1_regToExeQ$specUpdate_correctSpeculation_mask;
  wire coreFix_aluExe_1_regToExeQ$EN_deq,
       coreFix_aluExe_1_regToExeQ$EN_enq,
       coreFix_aluExe_1_regToExeQ$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_1_regToExeQ$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_1_regToExeQ$RDY_deq,
       coreFix_aluExe_1_regToExeQ$RDY_enq,
       coreFix_aluExe_1_regToExeQ$RDY_first,
       coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_aluExe_1_rsAlu
  reg [7 : 0] coreFix_aluExe_1_rsAlu$setRegReady_2_put,
	      coreFix_aluExe_1_rsAlu$setRegReady_4_put;
  reg [3 : 0] coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag;
  wire [161 : 0] coreFix_aluExe_1_rsAlu$dispatchData,
		 coreFix_aluExe_1_rsAlu$enq_x;
  wire [11 : 0] coreFix_aluExe_1_rsAlu$specUpdate_correctSpeculation_mask;
  wire [7 : 0] coreFix_aluExe_1_rsAlu$setRegReady_0_put,
	       coreFix_aluExe_1_rsAlu$setRegReady_1_put,
	       coreFix_aluExe_1_rsAlu$setRegReady_3_put;
  wire [5 : 0] coreFix_aluExe_1_rsAlu$setRobEnqTime_t;
  wire [4 : 0] coreFix_aluExe_1_rsAlu$approximateCount;
  wire coreFix_aluExe_1_rsAlu$EN_doDispatch,
       coreFix_aluExe_1_rsAlu$EN_enq,
       coreFix_aluExe_1_rsAlu$EN_setRegReady_0_put,
       coreFix_aluExe_1_rsAlu$EN_setRegReady_1_put,
       coreFix_aluExe_1_rsAlu$EN_setRegReady_2_put,
       coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put,
       coreFix_aluExe_1_rsAlu$EN_setRegReady_4_put,
       coreFix_aluExe_1_rsAlu$EN_setRobEnqTime,
       coreFix_aluExe_1_rsAlu$EN_specUpdate_correctSpeculation,
       coreFix_aluExe_1_rsAlu$EN_specUpdate_incorrectSpeculation,
       coreFix_aluExe_1_rsAlu$RDY_dispatchData,
       coreFix_aluExe_1_rsAlu$RDY_doDispatch,
       coreFix_aluExe_1_rsAlu$RDY_enq,
       coreFix_aluExe_1_rsAlu$canEnq,
       coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_dispToRegQ
  reg [3 : 0] coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [77 : 0] coreFix_fpuMulDivExe_0_dispToRegQ$enq_x,
		coreFix_fpuMulDivExe_0_dispToRegQ$first;
  wire [11 : 0] coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_dispToRegQ$EN_deq,
       coreFix_fpuMulDivExe_0_dispToRegQ$EN_enq,
       coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_deq,
       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_enq,
       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first,
       coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_divQ
  reg [3 : 0] coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [42 : 0] coreFix_fpuMulDivExe_0_fpuExec_divQ$enq_x,
		coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data;
  wire [11 : 0] coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_deq,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_enq,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_deq,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_enq,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_data,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_double_div
  wire [130 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_div$request_put;
  wire [68 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get;
  wire coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_response_get,
       coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_response_get;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_double_fma
  wire [195 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_fma$request_put;
  wire [68 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get;
  wire coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_response_get,
       coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_response_get;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_double_sqrt
  wire [68 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get;
  wire [66 : 0] coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$request_put;
  wire coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_response_get,
       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_request_put,
       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_response_get;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_fmaQ
  reg [3 : 0] coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [42 : 0] coreFix_fpuMulDivExe_0_fpuExec_fmaQ$enq_x,
		coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data;
  wire [11 : 0] coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_deq,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_enq,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_deq,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_enq,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_data,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_simpleQ
  reg [3 : 0] coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [101 : 0] coreFix_fpuMulDivExe_0_fpuExec_simpleQ$enq_x,
		 coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first;
  wire [11 : 0] coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_deq,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_enq,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_deq,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_enq,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_first,
       coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_fpuExec_sqrtQ
  reg [3 : 0] coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [42 : 0] coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$enq_x,
		coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data;
  wire [11 : 0] coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_deq,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_enq,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_deq,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_enq,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_data,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_poisoned,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_divQ
  reg [3 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [35 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divQ$enq_x,
		coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data;
  wire [11 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_deq,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_enq,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_deq,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_enq,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_data,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_poisoned,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_poisoned,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ
  wire [139 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_IN,
		 coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_OUT;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$CLR,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$DEQ,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$EMPTY_N,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$ENQ,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$FULL_N;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ
  wire [63 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$D_IN,
		coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$D_OUT;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$CLR,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$DEQ,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$EMPTY_N,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$ENQ,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$FULL_N;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ
  wire [203 : 0] coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_IN,
		 coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT;
  wire coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$CLR,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$DEQ,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$EMPTY_N,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$ENQ,
       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$FULL_N;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_mulQ
  reg [3 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [35 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulQ$enq_x,
		coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data;
  wire [11 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_deq,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_enq,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_deq,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_enq,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_data,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_poisoned,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_poisoned,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ
  reg [127 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_IN;
  wire [127 : 0] coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_OUT;
  wire coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$CLR,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$DEQ,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$EMPTY_N,
       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$ENQ;

  // ports of submodule coreFix_fpuMulDivExe_0_regToExeQ
  reg [3 : 0] coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [245 : 0] coreFix_fpuMulDivExe_0_regToExeQ$enq_x,
		 coreFix_fpuMulDivExe_0_regToExeQ$first;
  wire [11 : 0] coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_correctSpeculation_mask;
  wire coreFix_fpuMulDivExe_0_regToExeQ$EN_deq,
       coreFix_fpuMulDivExe_0_regToExeQ$EN_enq,
       coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_regToExeQ$RDY_deq,
       coreFix_fpuMulDivExe_0_regToExeQ$RDY_enq,
       coreFix_fpuMulDivExe_0_regToExeQ$RDY_first,
       coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_fpuMulDivExe_0_rsFpuMulDiv
  reg [7 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put,
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put;
  reg [3 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag;
  wire [86 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData,
		coreFix_fpuMulDivExe_0_rsFpuMulDiv$enq_x;
  wire [11 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_correctSpeculation_mask;
  wire [7 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_0_put,
	       coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_1_put,
	       coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_3_put;
  wire [5 : 0] coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRobEnqTime_t;
  wire coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_doDispatch,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_enq,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_0_put,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_1_put,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_2_put,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_4_put,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRobEnqTime,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_correctSpeculation,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_incorrectSpeculation,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_dispatchData,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_doDispatch,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_enq,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqMshr
  reg [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n;
  wire [512 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_d,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData;
  wire [152 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit_r,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq,
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq;
  wire [63 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain_addr;
  wire [57 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot,
		coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_slot,
		coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot,
		coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot,
		coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_slot;
  wire [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_succ;
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_state,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState_n,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_n;
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_cRqTransfer_getEmptyEntryInit,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_releaseEntry,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setData,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setStateSlot,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setSucc,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_sendRsToP_cRq_setWaitSt_setSlot_clearData,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_stuck_get,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_cRqTransfer_getEmptyEntryInit,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$EN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$EN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$EN,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$EN,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_pRqMshr
  wire [512 : 0] coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_d,
		 coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData;
  wire [65 : 0] coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit_r,
		coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq,
		coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq;
  wire [1 : 0] coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getState_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_releaseEntry_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq_n,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_releaseEntry_n;
  wire coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_getEmptyEntryInit,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_releaseEntry,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_setDone_setData,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_sendRsToP_pRq_releaseEntry,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_stuck_get,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_getEmptyEntryInit,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_pipelineResp_releaseEntry,
       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_sendRsToP_pRq_releaseEntry;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_pipeline
  reg [583 : 0] coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r;
  reg [569 : 0] coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam;
  reg [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq;
  reg coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep;
  wire [578 : 0] coreFix_memExe_dMem_cache_m_banks_0_pipeline$first;
  wire coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_deqWrite,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_send,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_IN,
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$CLR,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$DEQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$EMPTY_N,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$ENQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$FULL_N;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_IN,
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_OUT;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$CLR,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$DEQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$EMPTY_N,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$ENQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$FULL_N;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP
  wire [2 : 0] coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_IN,
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_OUT;
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$CLR,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$DEQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$EMPTY_N,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$ENQ,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$FULL_N;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ
  wire [3 : 0] coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_IN,
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT;
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$CLR,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$DEQ,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$EMPTY_N,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$ENQ,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$FULL_N;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2
  wire coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$EN,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0
  wire coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1
  wire coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$EN,
       coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0
  wire coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1
  wire coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2
  wire coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$EN,
       coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0
  wire coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0$D_IN,
       coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1
  wire coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1$D_IN,
       coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2
  wire coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$D_IN,
       coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$EN,
       coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_dTlb
  reg [3 : 0] coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag;
  wire [174 : 0] coreFix_memExe_dTlb$procResp;
  wire [105 : 0] coreFix_memExe_dTlb$procReq_req;
  wire [82 : 0] coreFix_memExe_dTlb$toParent_ldTransRsFromP_enq_x;
  wire [48 : 0] coreFix_memExe_dTlb$updateVMInfo_vm;
  wire [28 : 0] coreFix_memExe_dTlb$toParent_rqToP_first;
  wire [11 : 0] coreFix_memExe_dTlb$specUpdate_correctSpeculation_mask;
  wire [2 : 0] coreFix_memExe_dTlb$perf_req_r;
  wire coreFix_memExe_dTlb$EN_deqProcResp,
       coreFix_memExe_dTlb$EN_flush,
       coreFix_memExe_dTlb$EN_perf_req,
       coreFix_memExe_dTlb$EN_perf_resp,
       coreFix_memExe_dTlb$EN_perf_setStatus,
       coreFix_memExe_dTlb$EN_procReq,
       coreFix_memExe_dTlb$EN_specUpdate_correctSpeculation,
       coreFix_memExe_dTlb$EN_specUpdate_incorrectSpeculation,
       coreFix_memExe_dTlb$EN_toParent_flush_request_get,
       coreFix_memExe_dTlb$EN_toParent_flush_response_put,
       coreFix_memExe_dTlb$EN_toParent_ldTransRsFromP_enq,
       coreFix_memExe_dTlb$EN_toParent_rqToP_deq,
       coreFix_memExe_dTlb$EN_updateVMInfo,
       coreFix_memExe_dTlb$RDY_deqProcResp,
       coreFix_memExe_dTlb$RDY_flush,
       coreFix_memExe_dTlb$RDY_procReq,
       coreFix_memExe_dTlb$RDY_procResp,
       coreFix_memExe_dTlb$RDY_toParent_flush_request_get,
       coreFix_memExe_dTlb$RDY_toParent_flush_response_put,
       coreFix_memExe_dTlb$RDY_toParent_ldTransRsFromP_enq,
       coreFix_memExe_dTlb$RDY_toParent_rqToP_deq,
       coreFix_memExe_dTlb$RDY_toParent_rqToP_first,
       coreFix_memExe_dTlb$flush_done,
       coreFix_memExe_dTlb$noPendingReq,
       coreFix_memExe_dTlb$perf_setStatus_doStats,
       coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_memExe_dispToRegQ
  reg [3 : 0] coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [97 : 0] coreFix_memExe_dispToRegQ$enq_x,
		coreFix_memExe_dispToRegQ$first;
  wire [11 : 0] coreFix_memExe_dispToRegQ$specUpdate_correctSpeculation_mask;
  wire coreFix_memExe_dispToRegQ$EN_deq,
       coreFix_memExe_dispToRegQ$EN_enq,
       coreFix_memExe_dispToRegQ$EN_specUpdate_correctSpeculation,
       coreFix_memExe_dispToRegQ$EN_specUpdate_incorrectSpeculation,
       coreFix_memExe_dispToRegQ$RDY_deq,
       coreFix_memExe_dispToRegQ$RDY_enq,
       coreFix_memExe_dispToRegQ$RDY_first,
       coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_memExe_forwardQ_clearReq_dummy2_0
  wire coreFix_memExe_forwardQ_clearReq_dummy2_0$D_IN,
       coreFix_memExe_forwardQ_clearReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_forwardQ_clearReq_dummy2_1
  wire coreFix_memExe_forwardQ_clearReq_dummy2_1$D_IN,
       coreFix_memExe_forwardQ_clearReq_dummy2_1$EN,
       coreFix_memExe_forwardQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_forwardQ_deqReq_dummy2_0
  wire coreFix_memExe_forwardQ_deqReq_dummy2_0$D_IN,
       coreFix_memExe_forwardQ_deqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_forwardQ_deqReq_dummy2_1
  wire coreFix_memExe_forwardQ_deqReq_dummy2_1$D_IN,
       coreFix_memExe_forwardQ_deqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_forwardQ_deqReq_dummy2_2
  wire coreFix_memExe_forwardQ_deqReq_dummy2_2$D_IN,
       coreFix_memExe_forwardQ_deqReq_dummy2_2$EN,
       coreFix_memExe_forwardQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_forwardQ_enqReq_dummy2_0
  wire coreFix_memExe_forwardQ_enqReq_dummy2_0$D_IN,
       coreFix_memExe_forwardQ_enqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_forwardQ_enqReq_dummy2_1
  wire coreFix_memExe_forwardQ_enqReq_dummy2_1$D_IN,
       coreFix_memExe_forwardQ_enqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_forwardQ_enqReq_dummy2_2
  wire coreFix_memExe_forwardQ_enqReq_dummy2_2$D_IN,
       coreFix_memExe_forwardQ_enqReq_dummy2_2$EN,
       coreFix_memExe_forwardQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_lsq
  reg [3 : 0] coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag;
  wire [170 : 0] coreFix_memExe_lsq$firstSt;
  wire [113 : 0] coreFix_memExe_lsq$firstLd;
  wire [76 : 0] coreFix_memExe_lsq$getIssueLd;
  wire [74 : 0] coreFix_memExe_lsq$issueLd;
  wire [73 : 0] coreFix_memExe_lsq$respLd;
  wire [67 : 0] coreFix_memExe_lsq$issueLd_sbRes;
  wire [63 : 0] coreFix_memExe_lsq$issueLd_paddr,
		coreFix_memExe_lsq$respLd_alignedData,
		coreFix_memExe_lsq$updateAddr_paddr,
		coreFix_memExe_lsq$updateData_d;
  wire [17 : 0] coreFix_memExe_lsq$enqLd_mem_inst,
		coreFix_memExe_lsq$enqSt_mem_inst;
  wire [11 : 0] coreFix_memExe_lsq$enqLd_inst_tag,
		coreFix_memExe_lsq$enqLd_spec_bits,
		coreFix_memExe_lsq$enqSt_inst_tag,
		coreFix_memExe_lsq$enqSt_spec_bits,
		coreFix_memExe_lsq$specUpdate_correctSpeculation_mask;
  wire [9 : 0] coreFix_memExe_lsq$getHit;
  wire [8 : 0] coreFix_memExe_lsq$enqLd_dst, coreFix_memExe_lsq$enqSt_dst;
  wire [7 : 0] coreFix_memExe_lsq$getOrigBE,
	       coreFix_memExe_lsq$issueLd_shiftedBE,
	       coreFix_memExe_lsq$updateAddr_shiftedBE;
  wire [6 : 0] coreFix_memExe_lsq$enqLdTag, coreFix_memExe_lsq$enqStTag;
  wire [5 : 0] coreFix_memExe_lsq$getHit_t,
	       coreFix_memExe_lsq$getOrigBE_t,
	       coreFix_memExe_lsq$setAtCommit_0_put,
	       coreFix_memExe_lsq$setAtCommit_1_put,
	       coreFix_memExe_lsq$updateAddr_lsqTag;
  wire [4 : 0] coreFix_memExe_lsq$issueLd_lsqTag,
	       coreFix_memExe_lsq$respLd_t,
	       coreFix_memExe_lsq$updateAddr_fault;
  wire [3 : 0] coreFix_memExe_lsq$updateData_t;
  wire [1 : 0] coreFix_memExe_lsq$wakeupLdStalledBySB_sbIdx;
  wire coreFix_memExe_lsq$EN_deqLd,
       coreFix_memExe_lsq$EN_deqSt,
       coreFix_memExe_lsq$EN_enqLd,
       coreFix_memExe_lsq$EN_enqSt,
       coreFix_memExe_lsq$EN_getHit,
       coreFix_memExe_lsq$EN_getIssueLd,
       coreFix_memExe_lsq$EN_issueLd,
       coreFix_memExe_lsq$EN_respLd,
       coreFix_memExe_lsq$EN_setAtCommit_0_put,
       coreFix_memExe_lsq$EN_setAtCommit_1_put,
       coreFix_memExe_lsq$EN_specUpdate_correctSpeculation,
       coreFix_memExe_lsq$EN_specUpdate_incorrectSpeculation,
       coreFix_memExe_lsq$EN_updateAddr,
       coreFix_memExe_lsq$EN_updateData,
       coreFix_memExe_lsq$EN_wakeupLdStalledBySB,
       coreFix_memExe_lsq$RDY_deqLd,
       coreFix_memExe_lsq$RDY_deqSt,
       coreFix_memExe_lsq$RDY_enqLd,
       coreFix_memExe_lsq$RDY_enqSt,
       coreFix_memExe_lsq$RDY_firstLd,
       coreFix_memExe_lsq$RDY_firstSt,
       coreFix_memExe_lsq$RDY_getIssueLd,
       coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_all,
       coreFix_memExe_lsq$stqEmpty,
       coreFix_memExe_lsq$updateAddr,
       coreFix_memExe_lsq$updateAddr_isMMIO;

  // ports of submodule coreFix_memExe_memRespLdQ_clearReq_dummy2_0
  wire coreFix_memExe_memRespLdQ_clearReq_dummy2_0$D_IN,
       coreFix_memExe_memRespLdQ_clearReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_memRespLdQ_clearReq_dummy2_1
  wire coreFix_memExe_memRespLdQ_clearReq_dummy2_1$D_IN,
       coreFix_memExe_memRespLdQ_clearReq_dummy2_1$EN,
       coreFix_memExe_memRespLdQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_0
  wire coreFix_memExe_memRespLdQ_deqReq_dummy2_0$D_IN,
       coreFix_memExe_memRespLdQ_deqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_1
  wire coreFix_memExe_memRespLdQ_deqReq_dummy2_1$D_IN,
       coreFix_memExe_memRespLdQ_deqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_2
  wire coreFix_memExe_memRespLdQ_deqReq_dummy2_2$D_IN,
       coreFix_memExe_memRespLdQ_deqReq_dummy2_2$EN,
       coreFix_memExe_memRespLdQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_0
  wire coreFix_memExe_memRespLdQ_enqReq_dummy2_0$D_IN,
       coreFix_memExe_memRespLdQ_enqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_1
  wire coreFix_memExe_memRespLdQ_enqReq_dummy2_1$D_IN,
       coreFix_memExe_memRespLdQ_enqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_2
  wire coreFix_memExe_memRespLdQ_enqReq_dummy2_2$D_IN,
       coreFix_memExe_memRespLdQ_enqReq_dummy2_2$EN,
       coreFix_memExe_memRespLdQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_regToExeQ
  reg [3 : 0] coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag;
  wire [192 : 0] coreFix_memExe_regToExeQ$enq_x,
		 coreFix_memExe_regToExeQ$first;
  wire [11 : 0] coreFix_memExe_regToExeQ$specUpdate_correctSpeculation_mask;
  wire coreFix_memExe_regToExeQ$EN_deq,
       coreFix_memExe_regToExeQ$EN_enq,
       coreFix_memExe_regToExeQ$EN_specUpdate_correctSpeculation,
       coreFix_memExe_regToExeQ$EN_specUpdate_incorrectSpeculation,
       coreFix_memExe_regToExeQ$RDY_deq,
       coreFix_memExe_regToExeQ$RDY_enq,
       coreFix_memExe_regToExeQ$RDY_first,
       coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_memExe_reqLdQ_data_0_dummy2_0
  wire coreFix_memExe_reqLdQ_data_0_dummy2_0$D_IN,
       coreFix_memExe_reqLdQ_data_0_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqLdQ_data_0_dummy2_1
  wire coreFix_memExe_reqLdQ_data_0_dummy2_1$D_IN,
       coreFix_memExe_reqLdQ_data_0_dummy2_1$EN,
       coreFix_memExe_reqLdQ_data_0_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqLdQ_deqP_dummy2_0
  wire coreFix_memExe_reqLdQ_deqP_dummy2_0$D_IN,
       coreFix_memExe_reqLdQ_deqP_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqLdQ_deqP_dummy2_1
  wire coreFix_memExe_reqLdQ_deqP_dummy2_1$D_IN,
       coreFix_memExe_reqLdQ_deqP_dummy2_1$EN;

  // ports of submodule coreFix_memExe_reqLdQ_empty_dummy2_0
  wire coreFix_memExe_reqLdQ_empty_dummy2_0$D_IN,
       coreFix_memExe_reqLdQ_empty_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqLdQ_empty_dummy2_1
  wire coreFix_memExe_reqLdQ_empty_dummy2_1$D_IN,
       coreFix_memExe_reqLdQ_empty_dummy2_1$EN,
       coreFix_memExe_reqLdQ_empty_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqLdQ_empty_dummy2_2
  wire coreFix_memExe_reqLdQ_empty_dummy2_2$D_IN,
       coreFix_memExe_reqLdQ_empty_dummy2_2$EN,
       coreFix_memExe_reqLdQ_empty_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_reqLdQ_enqP_dummy2_0
  wire coreFix_memExe_reqLdQ_enqP_dummy2_0$D_IN,
       coreFix_memExe_reqLdQ_enqP_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqLdQ_enqP_dummy2_1
  wire coreFix_memExe_reqLdQ_enqP_dummy2_1$D_IN,
       coreFix_memExe_reqLdQ_enqP_dummy2_1$EN;

  // ports of submodule coreFix_memExe_reqLdQ_full_dummy2_0
  wire coreFix_memExe_reqLdQ_full_dummy2_0$D_IN,
       coreFix_memExe_reqLdQ_full_dummy2_0$EN,
       coreFix_memExe_reqLdQ_full_dummy2_0$Q_OUT;

  // ports of submodule coreFix_memExe_reqLdQ_full_dummy2_1
  wire coreFix_memExe_reqLdQ_full_dummy2_1$D_IN,
       coreFix_memExe_reqLdQ_full_dummy2_1$EN,
       coreFix_memExe_reqLdQ_full_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqLdQ_full_dummy2_2
  wire coreFix_memExe_reqLdQ_full_dummy2_2$D_IN,
       coreFix_memExe_reqLdQ_full_dummy2_2$EN,
       coreFix_memExe_reqLdQ_full_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0
  wire coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0$D_IN,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1
  wire coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$D_IN,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$EN,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0
  wire coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0$D_IN,
       coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1
  wire coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1$D_IN,
       coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1$EN;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_0
  wire coreFix_memExe_reqLrScAmoQ_empty_dummy2_0$D_IN,
       coreFix_memExe_reqLrScAmoQ_empty_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_1
  wire coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$D_IN,
       coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$EN,
       coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_2
  wire coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$D_IN,
       coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$EN,
       coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0
  wire coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0$D_IN,
       coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1
  wire coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1$D_IN,
       coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1$EN;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_0
  wire coreFix_memExe_reqLrScAmoQ_full_dummy2_0$D_IN,
       coreFix_memExe_reqLrScAmoQ_full_dummy2_0$EN,
       coreFix_memExe_reqLrScAmoQ_full_dummy2_0$Q_OUT;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_1
  wire coreFix_memExe_reqLrScAmoQ_full_dummy2_1$D_IN,
       coreFix_memExe_reqLrScAmoQ_full_dummy2_1$EN,
       coreFix_memExe_reqLrScAmoQ_full_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_2
  wire coreFix_memExe_reqLrScAmoQ_full_dummy2_2$D_IN,
       coreFix_memExe_reqLrScAmoQ_full_dummy2_2$EN,
       coreFix_memExe_reqLrScAmoQ_full_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_reqStQ_data_0_dummy2_0
  wire coreFix_memExe_reqStQ_data_0_dummy2_0$D_IN,
       coreFix_memExe_reqStQ_data_0_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqStQ_data_0_dummy2_1
  wire coreFix_memExe_reqStQ_data_0_dummy2_1$D_IN,
       coreFix_memExe_reqStQ_data_0_dummy2_1$EN,
       coreFix_memExe_reqStQ_data_0_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqStQ_deqP_dummy2_0
  wire coreFix_memExe_reqStQ_deqP_dummy2_0$D_IN,
       coreFix_memExe_reqStQ_deqP_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqStQ_deqP_dummy2_1
  wire coreFix_memExe_reqStQ_deqP_dummy2_1$D_IN,
       coreFix_memExe_reqStQ_deqP_dummy2_1$EN;

  // ports of submodule coreFix_memExe_reqStQ_empty_dummy2_0
  wire coreFix_memExe_reqStQ_empty_dummy2_0$D_IN,
       coreFix_memExe_reqStQ_empty_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqStQ_empty_dummy2_1
  wire coreFix_memExe_reqStQ_empty_dummy2_1$D_IN,
       coreFix_memExe_reqStQ_empty_dummy2_1$EN,
       coreFix_memExe_reqStQ_empty_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqStQ_empty_dummy2_2
  wire coreFix_memExe_reqStQ_empty_dummy2_2$D_IN,
       coreFix_memExe_reqStQ_empty_dummy2_2$EN,
       coreFix_memExe_reqStQ_empty_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_reqStQ_enqP_dummy2_0
  wire coreFix_memExe_reqStQ_enqP_dummy2_0$D_IN,
       coreFix_memExe_reqStQ_enqP_dummy2_0$EN;

  // ports of submodule coreFix_memExe_reqStQ_enqP_dummy2_1
  wire coreFix_memExe_reqStQ_enqP_dummy2_1$D_IN,
       coreFix_memExe_reqStQ_enqP_dummy2_1$EN;

  // ports of submodule coreFix_memExe_reqStQ_full_dummy2_0
  wire coreFix_memExe_reqStQ_full_dummy2_0$D_IN,
       coreFix_memExe_reqStQ_full_dummy2_0$EN,
       coreFix_memExe_reqStQ_full_dummy2_0$Q_OUT;

  // ports of submodule coreFix_memExe_reqStQ_full_dummy2_1
  wire coreFix_memExe_reqStQ_full_dummy2_1$D_IN,
       coreFix_memExe_reqStQ_full_dummy2_1$EN,
       coreFix_memExe_reqStQ_full_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_reqStQ_full_dummy2_2
  wire coreFix_memExe_reqStQ_full_dummy2_2$D_IN,
       coreFix_memExe_reqStQ_full_dummy2_2$EN,
       coreFix_memExe_reqStQ_full_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0
  wire coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0$D_IN,
       coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1
  wire coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$D_IN,
       coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$EN,
       coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0
  wire coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0$D_IN,
       coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1
  wire coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1$D_IN,
       coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2
  wire coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$D_IN,
       coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$EN,
       coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0
  wire coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$D_IN,
       coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$EN;

  // ports of submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1
  wire coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1$D_IN,
       coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1$EN;

  // ports of submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2
  wire coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$D_IN,
       coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$EN,
       coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule coreFix_memExe_rsMem
  reg [7 : 0] coreFix_memExe_rsMem$setRegReady_2_put,
	      coreFix_memExe_rsMem$setRegReady_4_put;
  reg [3 : 0] coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag;
  wire [106 : 0] coreFix_memExe_rsMem$dispatchData,
		 coreFix_memExe_rsMem$enq_x;
  wire [11 : 0] coreFix_memExe_rsMem$specUpdate_correctSpeculation_mask;
  wire [7 : 0] coreFix_memExe_rsMem$setRegReady_0_put,
	       coreFix_memExe_rsMem$setRegReady_1_put,
	       coreFix_memExe_rsMem$setRegReady_3_put;
  wire [5 : 0] coreFix_memExe_rsMem$setRobEnqTime_t;
  wire coreFix_memExe_rsMem$EN_doDispatch,
       coreFix_memExe_rsMem$EN_enq,
       coreFix_memExe_rsMem$EN_setRegReady_0_put,
       coreFix_memExe_rsMem$EN_setRegReady_1_put,
       coreFix_memExe_rsMem$EN_setRegReady_2_put,
       coreFix_memExe_rsMem$EN_setRegReady_3_put,
       coreFix_memExe_rsMem$EN_setRegReady_4_put,
       coreFix_memExe_rsMem$EN_setRobEnqTime,
       coreFix_memExe_rsMem$EN_specUpdate_correctSpeculation,
       coreFix_memExe_rsMem$EN_specUpdate_incorrectSpeculation,
       coreFix_memExe_rsMem$RDY_dispatchData,
       coreFix_memExe_rsMem$RDY_doDispatch,
       coreFix_memExe_rsMem$RDY_enq,
       coreFix_memExe_rsMem$canEnq,
       coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule coreFix_memExe_stb
  wire [635 : 0] coreFix_memExe_stb$issue;
  wire [633 : 0] coreFix_memExe_stb$deq;
  wire [67 : 0] coreFix_memExe_stb$search;
  wire [63 : 0] coreFix_memExe_stb$enq_data,
		coreFix_memExe_stb$enq_paddr,
		coreFix_memExe_stb$getEnqIndex_paddr,
		coreFix_memExe_stb$noMatchLdQ_paddr,
		coreFix_memExe_stb$noMatchStQ_paddr,
		coreFix_memExe_stb$search_paddr;
  wire [7 : 0] coreFix_memExe_stb$enq_be,
	       coreFix_memExe_stb$noMatchLdQ_be,
	       coreFix_memExe_stb$noMatchStQ_be,
	       coreFix_memExe_stb$search_be;
  wire [2 : 0] coreFix_memExe_stb$getEnqIndex;
  wire [1 : 0] coreFix_memExe_stb$deq_idx, coreFix_memExe_stb$enq_idx;
  wire coreFix_memExe_stb$EN_deq,
       coreFix_memExe_stb$EN_enq,
       coreFix_memExe_stb$EN_issue,
       coreFix_memExe_stb$RDY_deq,
       coreFix_memExe_stb$RDY_enq,
       coreFix_memExe_stb$RDY_issue,
       coreFix_memExe_stb$isEmpty,
       coreFix_memExe_stb$noMatchLdQ,
       coreFix_memExe_stb$noMatchStQ;

  // ports of submodule coreFix_trainBPQ_0
  wire [159 : 0] coreFix_trainBPQ_0$D_IN, coreFix_trainBPQ_0$D_OUT;
  wire coreFix_trainBPQ_0$CLR,
       coreFix_trainBPQ_0$DEQ,
       coreFix_trainBPQ_0$EMPTY_N,
       coreFix_trainBPQ_0$ENQ,
       coreFix_trainBPQ_0$FULL_N;

  // ports of submodule coreFix_trainBPQ_1
  wire [159 : 0] coreFix_trainBPQ_1$D_IN, coreFix_trainBPQ_1$D_OUT;
  wire coreFix_trainBPQ_1$CLR,
       coreFix_trainBPQ_1$DEQ,
       coreFix_trainBPQ_1$EMPTY_N,
       coreFix_trainBPQ_1$ENQ,
       coreFix_trainBPQ_1$FULL_N;

  // ports of submodule csrInstOrInterruptInflight_dummy2_0
  wire csrInstOrInterruptInflight_dummy2_0$D_IN,
       csrInstOrInterruptInflight_dummy2_0$EN,
       csrInstOrInterruptInflight_dummy2_0$Q_OUT;

  // ports of submodule csrInstOrInterruptInflight_dummy2_1
  wire csrInstOrInterruptInflight_dummy2_1$D_IN,
       csrInstOrInterruptInflight_dummy2_1$EN,
       csrInstOrInterruptInflight_dummy2_1$Q_OUT;

  // ports of submodule csrf_mcycle_ehr_data_dummy2_0
  wire csrf_mcycle_ehr_data_dummy2_0$D_IN,
       csrf_mcycle_ehr_data_dummy2_0$EN,
       csrf_mcycle_ehr_data_dummy2_0$Q_OUT;

  // ports of submodule csrf_mcycle_ehr_data_dummy2_1
  wire csrf_mcycle_ehr_data_dummy2_1$D_IN,
       csrf_mcycle_ehr_data_dummy2_1$EN,
       csrf_mcycle_ehr_data_dummy2_1$Q_OUT;

  // ports of submodule csrf_minstret_ehr_data_dummy2_0
  wire csrf_minstret_ehr_data_dummy2_0$D_IN,
       csrf_minstret_ehr_data_dummy2_0$EN,
       csrf_minstret_ehr_data_dummy2_0$Q_OUT;

  // ports of submodule csrf_minstret_ehr_data_dummy2_1
  wire csrf_minstret_ehr_data_dummy2_1$D_IN,
       csrf_minstret_ehr_data_dummy2_1$EN,
       csrf_minstret_ehr_data_dummy2_1$Q_OUT;

  // ports of submodule csrf_stats_module_writeQ
  wire csrf_stats_module_writeQ$CLR,
       csrf_stats_module_writeQ$DEQ,
       csrf_stats_module_writeQ$D_IN,
       csrf_stats_module_writeQ$D_OUT,
       csrf_stats_module_writeQ$EMPTY_N,
       csrf_stats_module_writeQ$ENQ,
       csrf_stats_module_writeQ$FULL_N;

  // ports of submodule csrf_terminate_module_terminateQ
  wire csrf_terminate_module_terminateQ$CLR,
       csrf_terminate_module_terminateQ$DEQ,
       csrf_terminate_module_terminateQ$EMPTY_N,
       csrf_terminate_module_terminateQ$ENQ,
       csrf_terminate_module_terminateQ$FULL_N;

  // ports of submodule epochManager
  wire [3 : 0] epochManager$checkEpoch_0_check_e,
	       epochManager$checkEpoch_1_check_e,
	       epochManager$updatePrevEpoch_0_update_e,
	       epochManager$updatePrevEpoch_1_update_e;
  wire epochManager$EN_incrementEpoch,
       epochManager$EN_updatePrevEpoch_0_update,
       epochManager$EN_updatePrevEpoch_1_update,
       epochManager$RDY_incrementEpoch,
       epochManager$checkEpoch_0_check,
       epochManager$checkEpoch_1_check;

  // ports of submodule fetchStage
  reg [63 : 0] fetchStage$redirect_pc;
  wire [582 : 0] fetchStage$iMemIfc_to_parent_fromP_enq_x;
  wire [578 : 0] fetchStage$iMemIfc_to_parent_rsToP_first;
  wire [387 : 0] fetchStage$pipelines_0_first, fetchStage$pipelines_1_first;
  wire [80 : 0] fetchStage$iTlbIfc_toParent_rsFromP_enq_x;
  wire [71 : 0] fetchStage$iMemIfc_to_parent_rqToP_first;
  wire [67 : 0] fetchStage$iMemIfc_cRqStuck_get,
		fetchStage$iMemIfc_pRqStuck_get,
		fetchStage$mmioIfc_instResp_enq_x;
  wire [63 : 0] fetchStage$iMemIfc_to_proc_request_put,
		fetchStage$iTlbIfc_to_proc_request_put,
		fetchStage$mmioIfc_instReq_first_fst,
		fetchStage$mmioIfc_setHtifAddrs_fromHost,
		fetchStage$mmioIfc_setHtifAddrs_toHost,
		fetchStage$start_pc,
		fetchStage$train_predictors_next_pc,
		fetchStage$train_predictors_pc;
  wire [48 : 0] fetchStage$iTlbIfc_updateVMInfo_vm;
  wire [26 : 0] fetchStage$iTlbIfc_toParent_rqToP_first;
  wire [23 : 0] fetchStage$train_predictors_dpTrain;
  wire [4 : 0] fetchStage$train_predictors_iType;
  wire [2 : 0] fetchStage$iTlbIfc_perf_req_r;
  wire [1 : 0] fetchStage$iMemIfc_perf_req_r,
	       fetchStage$mmioIfc_instReq_first_snd,
	       fetchStage$perf_req_r;
  wire fetchStage$EN_done_flushing,
       fetchStage$EN_flush_predictors,
       fetchStage$EN_iMemIfc_cRqStuck_get,
       fetchStage$EN_iMemIfc_flush,
       fetchStage$EN_iMemIfc_pRqStuck_get,
       fetchStage$EN_iMemIfc_perf_req,
       fetchStage$EN_iMemIfc_perf_resp,
       fetchStage$EN_iMemIfc_perf_setStatus,
       fetchStage$EN_iMemIfc_to_parent_fromP_enq,
       fetchStage$EN_iMemIfc_to_parent_rqToP_deq,
       fetchStage$EN_iMemIfc_to_parent_rsToP_deq,
       fetchStage$EN_iMemIfc_to_proc_request_put,
       fetchStage$EN_iMemIfc_to_proc_response_get,
       fetchStage$EN_iTlbIfc_flush,
       fetchStage$EN_iTlbIfc_perf_req,
       fetchStage$EN_iTlbIfc_perf_resp,
       fetchStage$EN_iTlbIfc_perf_setStatus,
       fetchStage$EN_iTlbIfc_toParent_flush_request_get,
       fetchStage$EN_iTlbIfc_toParent_flush_response_put,
       fetchStage$EN_iTlbIfc_toParent_rqToP_deq,
       fetchStage$EN_iTlbIfc_toParent_rsFromP_enq,
       fetchStage$EN_iTlbIfc_to_proc_request_put,
       fetchStage$EN_iTlbIfc_to_proc_response_get,
       fetchStage$EN_iTlbIfc_updateVMInfo,
       fetchStage$EN_mmioIfc_instReq_deq,
       fetchStage$EN_mmioIfc_instResp_enq,
       fetchStage$EN_mmioIfc_setHtifAddrs,
       fetchStage$EN_perf_req,
       fetchStage$EN_perf_resp,
       fetchStage$EN_perf_setStatus,
       fetchStage$EN_pipelines_0_deq,
       fetchStage$EN_pipelines_1_deq,
       fetchStage$EN_redirect,
       fetchStage$EN_setWaitRedirect,
       fetchStage$EN_start,
       fetchStage$EN_stop,
       fetchStage$EN_train_predictors,
       fetchStage$RDY_done_flushing,
       fetchStage$RDY_iMemIfc_cRqStuck_get,
       fetchStage$RDY_iMemIfc_pRqStuck_get,
       fetchStage$RDY_iMemIfc_to_parent_fromP_enq,
       fetchStage$RDY_iMemIfc_to_parent_rqToP_deq,
       fetchStage$RDY_iMemIfc_to_parent_rqToP_first,
       fetchStage$RDY_iMemIfc_to_parent_rsToP_deq,
       fetchStage$RDY_iMemIfc_to_parent_rsToP_first,
       fetchStage$RDY_iTlbIfc_flush,
       fetchStage$RDY_iTlbIfc_toParent_flush_request_get,
       fetchStage$RDY_iTlbIfc_toParent_flush_response_put,
       fetchStage$RDY_iTlbIfc_toParent_rqToP_deq,
       fetchStage$RDY_iTlbIfc_toParent_rqToP_first,
       fetchStage$RDY_iTlbIfc_toParent_rsFromP_enq,
       fetchStage$RDY_mmioIfc_instReq_deq,
       fetchStage$RDY_mmioIfc_instReq_first_fst,
       fetchStage$RDY_mmioIfc_instReq_first_snd,
       fetchStage$RDY_mmioIfc_instResp_enq,
       fetchStage$RDY_pipelines_0_deq,
       fetchStage$RDY_pipelines_0_first,
       fetchStage$RDY_pipelines_1_deq,
       fetchStage$RDY_pipelines_1_first,
       fetchStage$iMemIfc_perf_setStatus_doStats,
       fetchStage$iMemIfc_to_parent_fromP_notFull,
       fetchStage$iMemIfc_to_parent_rqToP_notEmpty,
       fetchStage$iMemIfc_to_parent_rsToP_notEmpty,
       fetchStage$iTlbIfc_flush_done,
       fetchStage$iTlbIfc_noPendingReq,
       fetchStage$iTlbIfc_perf_setStatus_doStats,
       fetchStage$perf_setStatus_doStats,
       fetchStage$pipelines_0_canDeq,
       fetchStage$pipelines_1_canDeq,
       fetchStage$train_predictors_isCompressed,
       fetchStage$train_predictors_mispred,
       fetchStage$train_predictors_taken;

  // ports of submodule l2Tlb
  wire [83 : 0] l2Tlb$toChildren_rsToC_first;
  wire [64 : 0] l2Tlb$toMem_memReq_first, l2Tlb$toMem_respLd_enq_x;
  wire [48 : 0] l2Tlb$updateVMInfo_vmD, l2Tlb$updateVMInfo_vmI;
  wire [29 : 0] l2Tlb$toChildren_rqFromC_put;
  wire [3 : 0] l2Tlb$perf_req_r;
  wire l2Tlb$EN_perf_req,
       l2Tlb$EN_perf_resp,
       l2Tlb$EN_perf_setStatus,
       l2Tlb$EN_toChildren_dTlbReqFlush_put,
       l2Tlb$EN_toChildren_flushDone_get,
       l2Tlb$EN_toChildren_iTlbReqFlush_put,
       l2Tlb$EN_toChildren_rqFromC_put,
       l2Tlb$EN_toChildren_rsToC_deq,
       l2Tlb$EN_toMem_memReq_deq,
       l2Tlb$EN_toMem_respLd_enq,
       l2Tlb$EN_updateVMInfo,
       l2Tlb$RDY_toChildren_dTlbReqFlush_put,
       l2Tlb$RDY_toChildren_flushDone_get,
       l2Tlb$RDY_toChildren_iTlbReqFlush_put,
       l2Tlb$RDY_toChildren_rqFromC_put,
       l2Tlb$RDY_toChildren_rsToC_deq,
       l2Tlb$RDY_toChildren_rsToC_first,
       l2Tlb$RDY_toMem_memReq_deq,
       l2Tlb$RDY_toMem_memReq_first,
       l2Tlb$RDY_toMem_respLd_enq,
       l2Tlb$perf_setStatus_doStats,
       l2Tlb$toMem_memReq_notEmpty,
       l2Tlb$toMem_respLd_notFull;

  // ports of submodule mmio_cRqQ_clearReq_dummy2_0
  wire mmio_cRqQ_clearReq_dummy2_0$D_IN, mmio_cRqQ_clearReq_dummy2_0$EN;

  // ports of submodule mmio_cRqQ_clearReq_dummy2_1
  wire mmio_cRqQ_clearReq_dummy2_1$D_IN,
       mmio_cRqQ_clearReq_dummy2_1$EN,
       mmio_cRqQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule mmio_cRqQ_deqReq_dummy2_0
  wire mmio_cRqQ_deqReq_dummy2_0$D_IN, mmio_cRqQ_deqReq_dummy2_0$EN;

  // ports of submodule mmio_cRqQ_deqReq_dummy2_1
  wire mmio_cRqQ_deqReq_dummy2_1$D_IN, mmio_cRqQ_deqReq_dummy2_1$EN;

  // ports of submodule mmio_cRqQ_deqReq_dummy2_2
  wire mmio_cRqQ_deqReq_dummy2_2$D_IN,
       mmio_cRqQ_deqReq_dummy2_2$EN,
       mmio_cRqQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_cRqQ_enqReq_dummy2_0
  wire mmio_cRqQ_enqReq_dummy2_0$D_IN, mmio_cRqQ_enqReq_dummy2_0$EN;

  // ports of submodule mmio_cRqQ_enqReq_dummy2_1
  wire mmio_cRqQ_enqReq_dummy2_1$D_IN, mmio_cRqQ_enqReq_dummy2_1$EN;

  // ports of submodule mmio_cRqQ_enqReq_dummy2_2
  wire mmio_cRqQ_enqReq_dummy2_2$D_IN,
       mmio_cRqQ_enqReq_dummy2_2$EN,
       mmio_cRqQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_cRsQ_clearReq_dummy2_0
  wire mmio_cRsQ_clearReq_dummy2_0$D_IN, mmio_cRsQ_clearReq_dummy2_0$EN;

  // ports of submodule mmio_cRsQ_clearReq_dummy2_1
  wire mmio_cRsQ_clearReq_dummy2_1$D_IN,
       mmio_cRsQ_clearReq_dummy2_1$EN,
       mmio_cRsQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule mmio_cRsQ_deqReq_dummy2_0
  wire mmio_cRsQ_deqReq_dummy2_0$D_IN, mmio_cRsQ_deqReq_dummy2_0$EN;

  // ports of submodule mmio_cRsQ_deqReq_dummy2_1
  wire mmio_cRsQ_deqReq_dummy2_1$D_IN, mmio_cRsQ_deqReq_dummy2_1$EN;

  // ports of submodule mmio_cRsQ_deqReq_dummy2_2
  wire mmio_cRsQ_deqReq_dummy2_2$D_IN,
       mmio_cRsQ_deqReq_dummy2_2$EN,
       mmio_cRsQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_cRsQ_enqReq_dummy2_0
  wire mmio_cRsQ_enqReq_dummy2_0$D_IN, mmio_cRsQ_enqReq_dummy2_0$EN;

  // ports of submodule mmio_cRsQ_enqReq_dummy2_1
  wire mmio_cRsQ_enqReq_dummy2_1$D_IN, mmio_cRsQ_enqReq_dummy2_1$EN;

  // ports of submodule mmio_cRsQ_enqReq_dummy2_2
  wire mmio_cRsQ_enqReq_dummy2_2$D_IN,
       mmio_cRsQ_enqReq_dummy2_2$EN,
       mmio_cRsQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_dataPendQ_clearReq_dummy2_0
  wire mmio_dataPendQ_clearReq_dummy2_0$D_IN,
       mmio_dataPendQ_clearReq_dummy2_0$EN;

  // ports of submodule mmio_dataPendQ_clearReq_dummy2_1
  wire mmio_dataPendQ_clearReq_dummy2_1$D_IN,
       mmio_dataPendQ_clearReq_dummy2_1$EN,
       mmio_dataPendQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule mmio_dataPendQ_deqReq_dummy2_0
  wire mmio_dataPendQ_deqReq_dummy2_0$D_IN, mmio_dataPendQ_deqReq_dummy2_0$EN;

  // ports of submodule mmio_dataPendQ_deqReq_dummy2_1
  wire mmio_dataPendQ_deqReq_dummy2_1$D_IN, mmio_dataPendQ_deqReq_dummy2_1$EN;

  // ports of submodule mmio_dataPendQ_deqReq_dummy2_2
  wire mmio_dataPendQ_deqReq_dummy2_2$D_IN,
       mmio_dataPendQ_deqReq_dummy2_2$EN,
       mmio_dataPendQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_dataPendQ_enqReq_dummy2_0
  wire mmio_dataPendQ_enqReq_dummy2_0$D_IN, mmio_dataPendQ_enqReq_dummy2_0$EN;

  // ports of submodule mmio_dataPendQ_enqReq_dummy2_1
  wire mmio_dataPendQ_enqReq_dummy2_1$D_IN, mmio_dataPendQ_enqReq_dummy2_1$EN;

  // ports of submodule mmio_dataPendQ_enqReq_dummy2_2
  wire mmio_dataPendQ_enqReq_dummy2_2$D_IN,
       mmio_dataPendQ_enqReq_dummy2_2$EN,
       mmio_dataPendQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_dataReqQ_clearReq_dummy2_0
  wire mmio_dataReqQ_clearReq_dummy2_0$D_IN,
       mmio_dataReqQ_clearReq_dummy2_0$EN;

  // ports of submodule mmio_dataReqQ_clearReq_dummy2_1
  wire mmio_dataReqQ_clearReq_dummy2_1$D_IN,
       mmio_dataReqQ_clearReq_dummy2_1$EN,
       mmio_dataReqQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule mmio_dataReqQ_deqReq_dummy2_0
  wire mmio_dataReqQ_deqReq_dummy2_0$D_IN, mmio_dataReqQ_deqReq_dummy2_0$EN;

  // ports of submodule mmio_dataReqQ_deqReq_dummy2_1
  wire mmio_dataReqQ_deqReq_dummy2_1$D_IN, mmio_dataReqQ_deqReq_dummy2_1$EN;

  // ports of submodule mmio_dataReqQ_deqReq_dummy2_2
  wire mmio_dataReqQ_deqReq_dummy2_2$D_IN,
       mmio_dataReqQ_deqReq_dummy2_2$EN,
       mmio_dataReqQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_dataReqQ_enqReq_dummy2_0
  wire mmio_dataReqQ_enqReq_dummy2_0$D_IN, mmio_dataReqQ_enqReq_dummy2_0$EN;

  // ports of submodule mmio_dataReqQ_enqReq_dummy2_1
  wire mmio_dataReqQ_enqReq_dummy2_1$D_IN, mmio_dataReqQ_enqReq_dummy2_1$EN;

  // ports of submodule mmio_dataReqQ_enqReq_dummy2_2
  wire mmio_dataReqQ_enqReq_dummy2_2$D_IN,
       mmio_dataReqQ_enqReq_dummy2_2$EN,
       mmio_dataReqQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_dataRespQ_clearReq_dummy2_0
  wire mmio_dataRespQ_clearReq_dummy2_0$D_IN,
       mmio_dataRespQ_clearReq_dummy2_0$EN;

  // ports of submodule mmio_dataRespQ_clearReq_dummy2_1
  wire mmio_dataRespQ_clearReq_dummy2_1$D_IN,
       mmio_dataRespQ_clearReq_dummy2_1$EN,
       mmio_dataRespQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule mmio_dataRespQ_deqReq_dummy2_0
  wire mmio_dataRespQ_deqReq_dummy2_0$D_IN, mmio_dataRespQ_deqReq_dummy2_0$EN;

  // ports of submodule mmio_dataRespQ_deqReq_dummy2_1
  wire mmio_dataRespQ_deqReq_dummy2_1$D_IN, mmio_dataRespQ_deqReq_dummy2_1$EN;

  // ports of submodule mmio_dataRespQ_deqReq_dummy2_2
  wire mmio_dataRespQ_deqReq_dummy2_2$D_IN,
       mmio_dataRespQ_deqReq_dummy2_2$EN,
       mmio_dataRespQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_dataRespQ_enqReq_dummy2_0
  wire mmio_dataRespQ_enqReq_dummy2_0$D_IN, mmio_dataRespQ_enqReq_dummy2_0$EN;

  // ports of submodule mmio_dataRespQ_enqReq_dummy2_1
  wire mmio_dataRespQ_enqReq_dummy2_1$D_IN, mmio_dataRespQ_enqReq_dummy2_1$EN;

  // ports of submodule mmio_dataRespQ_enqReq_dummy2_2
  wire mmio_dataRespQ_enqReq_dummy2_2$D_IN,
       mmio_dataRespQ_enqReq_dummy2_2$EN,
       mmio_dataRespQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_pRqQ_clearReq_dummy2_0
  wire mmio_pRqQ_clearReq_dummy2_0$D_IN, mmio_pRqQ_clearReq_dummy2_0$EN;

  // ports of submodule mmio_pRqQ_clearReq_dummy2_1
  wire mmio_pRqQ_clearReq_dummy2_1$D_IN,
       mmio_pRqQ_clearReq_dummy2_1$EN,
       mmio_pRqQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule mmio_pRqQ_deqReq_dummy2_0
  wire mmio_pRqQ_deqReq_dummy2_0$D_IN, mmio_pRqQ_deqReq_dummy2_0$EN;

  // ports of submodule mmio_pRqQ_deqReq_dummy2_1
  wire mmio_pRqQ_deqReq_dummy2_1$D_IN, mmio_pRqQ_deqReq_dummy2_1$EN;

  // ports of submodule mmio_pRqQ_deqReq_dummy2_2
  wire mmio_pRqQ_deqReq_dummy2_2$D_IN,
       mmio_pRqQ_deqReq_dummy2_2$EN,
       mmio_pRqQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_pRqQ_enqReq_dummy2_0
  wire mmio_pRqQ_enqReq_dummy2_0$D_IN, mmio_pRqQ_enqReq_dummy2_0$EN;

  // ports of submodule mmio_pRqQ_enqReq_dummy2_1
  wire mmio_pRqQ_enqReq_dummy2_1$D_IN, mmio_pRqQ_enqReq_dummy2_1$EN;

  // ports of submodule mmio_pRqQ_enqReq_dummy2_2
  wire mmio_pRqQ_enqReq_dummy2_2$D_IN,
       mmio_pRqQ_enqReq_dummy2_2$EN,
       mmio_pRqQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_pRsQ_clearReq_dummy2_0
  wire mmio_pRsQ_clearReq_dummy2_0$D_IN, mmio_pRsQ_clearReq_dummy2_0$EN;

  // ports of submodule mmio_pRsQ_clearReq_dummy2_1
  wire mmio_pRsQ_clearReq_dummy2_1$D_IN,
       mmio_pRsQ_clearReq_dummy2_1$EN,
       mmio_pRsQ_clearReq_dummy2_1$Q_OUT;

  // ports of submodule mmio_pRsQ_deqReq_dummy2_0
  wire mmio_pRsQ_deqReq_dummy2_0$D_IN, mmio_pRsQ_deqReq_dummy2_0$EN;

  // ports of submodule mmio_pRsQ_deqReq_dummy2_1
  wire mmio_pRsQ_deqReq_dummy2_1$D_IN, mmio_pRsQ_deqReq_dummy2_1$EN;

  // ports of submodule mmio_pRsQ_deqReq_dummy2_2
  wire mmio_pRsQ_deqReq_dummy2_2$D_IN,
       mmio_pRsQ_deqReq_dummy2_2$EN,
       mmio_pRsQ_deqReq_dummy2_2$Q_OUT;

  // ports of submodule mmio_pRsQ_enqReq_dummy2_0
  wire mmio_pRsQ_enqReq_dummy2_0$D_IN, mmio_pRsQ_enqReq_dummy2_0$EN;

  // ports of submodule mmio_pRsQ_enqReq_dummy2_1
  wire mmio_pRsQ_enqReq_dummy2_1$D_IN, mmio_pRsQ_enqReq_dummy2_1$EN;

  // ports of submodule mmio_pRsQ_enqReq_dummy2_2
  wire mmio_pRsQ_enqReq_dummy2_2$D_IN,
       mmio_pRsQ_enqReq_dummy2_2$EN,
       mmio_pRsQ_enqReq_dummy2_2$Q_OUT;

  // ports of submodule perfReqQ
  wire [8 : 0] perfReqQ$D_IN, perfReqQ$D_OUT;
  wire perfReqQ$CLR,
       perfReqQ$DEQ,
       perfReqQ$EMPTY_N,
       perfReqQ$ENQ,
       perfReqQ$FULL_N;

  // ports of submodule regRenamingTable
  reg [3 : 0] regRenamingTable$specUpdate_incorrectSpeculation_kill_tag;
  wire [32 : 0] regRenamingTable$rename_0_getRename,
		regRenamingTable$rename_1_getRename;
  wire [26 : 0] regRenamingTable$rename_0_claimRename_r,
		regRenamingTable$rename_0_getRename_r,
		regRenamingTable$rename_1_claimRename_r,
		regRenamingTable$rename_1_getRename_r;
  wire [11 : 0] regRenamingTable$rename_0_claimRename_sb,
		regRenamingTable$rename_1_claimRename_sb,
		regRenamingTable$specUpdate_correctSpeculation_mask;
  wire regRenamingTable$EN_commit_0_commit,
       regRenamingTable$EN_commit_1_commit,
       regRenamingTable$EN_rename_0_claimRename,
       regRenamingTable$EN_rename_1_claimRename,
       regRenamingTable$EN_specUpdate_correctSpeculation,
       regRenamingTable$EN_specUpdate_incorrectSpeculation,
       regRenamingTable$RDY_commit_0_commit,
       regRenamingTable$RDY_commit_1_commit,
       regRenamingTable$RDY_rename_0_claimRename,
       regRenamingTable$RDY_rename_0_getRename,
       regRenamingTable$RDY_rename_1_claimRename,
       regRenamingTable$RDY_rename_1_getRename,
       regRenamingTable$rename_0_canRename,
       regRenamingTable$rename_1_canRename,
       regRenamingTable$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule rf
  reg [63 : 0] rf$write_2_wr_data, rf$write_3_wr_data;
  reg [6 : 0] rf$write_2_wr_rindx, rf$write_3_wr_rindx;
  wire [63 : 0] rf$read_0_rd1,
		rf$read_0_rd2,
		rf$read_1_rd1,
		rf$read_1_rd2,
		rf$read_2_rd1,
		rf$read_2_rd2,
		rf$read_2_rd3,
		rf$read_3_rd1,
		rf$read_3_rd2,
		rf$write_0_wr_data,
		rf$write_1_wr_data,
		rf$write_4_wr_data;
  wire [6 : 0] rf$read_0_rd1_rindx,
	       rf$read_0_rd2_rindx,
	       rf$read_0_rd3_rindx,
	       rf$read_1_rd1_rindx,
	       rf$read_1_rd2_rindx,
	       rf$read_1_rd3_rindx,
	       rf$read_2_rd1_rindx,
	       rf$read_2_rd2_rindx,
	       rf$read_2_rd3_rindx,
	       rf$read_3_rd1_rindx,
	       rf$read_3_rd2_rindx,
	       rf$read_3_rd3_rindx,
	       rf$read_4_rd1_rindx,
	       rf$read_4_rd2_rindx,
	       rf$read_4_rd3_rindx,
	       rf$write_0_wr_rindx,
	       rf$write_1_wr_rindx,
	       rf$write_4_wr_rindx;
  wire rf$EN_write_0_wr,
       rf$EN_write_1_wr,
       rf$EN_write_2_wr,
       rf$EN_write_3_wr,
       rf$EN_write_4_wr;

  // ports of submodule rob
  reg [353 : 0] rob$enqPort_0_enq_x;
  reg [63 : 0] rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data;
  reg [11 : 0] rob$setExecuted_doFinishFpuMulDiv_0_set_x,
	       rob$specUpdate_incorrectSpeculation_inst_tag;
  reg [4 : 0] rob$setExecuted_deqLSQ_cause,
	      rob$setExecuted_doFinishFpuMulDiv_0_set_fflags;
  reg [3 : 0] rob$specUpdate_incorrectSpeculation_spec_tag;
  wire [353 : 0] rob$deqPort_0_deq_data,
		 rob$deqPort_1_deq_data,
		 rob$enqPort_1_enq_x;
  wire [129 : 0] rob$setExecuted_doFinishAlu_0_set_cf,
		 rob$setExecuted_doFinishAlu_1_set_cf;
  wire [64 : 0] rob$setExecuted_doFinishAlu_0_set_csrData,
		rob$setExecuted_doFinishAlu_1_set_csrData;
  wire [63 : 0] rob$getOrigPC_0_get,
		rob$getOrigPC_1_get,
		rob$getOrigPredPC_0_get,
		rob$getOrigPredPC_1_get,
		rob$setExecuted_doFinishAlu_0_set_dst_data,
		rob$setExecuted_doFinishAlu_1_set_dst_data,
		rob$setExecuted_doFinishMem_store_data,
		rob$setExecuted_doFinishMem_vaddr;
  wire [31 : 0] rob$getOrig_Inst_0_get, rob$getOrig_Inst_1_get;
  wire [11 : 0] rob$deqPort_0_getDeqInstTag,
		rob$enqPort_0_getEnqInstTag,
		rob$enqPort_1_getEnqInstTag,
		rob$getOrigPC_0_get_x,
		rob$getOrigPC_1_get_x,
		rob$getOrigPC_2_get_x,
		rob$getOrigPredPC_0_get_x,
		rob$getOrigPredPC_1_get_x,
		rob$getOrig_Inst_0_get_x,
		rob$getOrig_Inst_1_get_x,
		rob$setExecuted_deqLSQ_x,
		rob$setExecuted_doFinishAlu_0_set_x,
		rob$setExecuted_doFinishAlu_1_set_x,
		rob$setExecuted_doFinishMem_x,
		rob$setLSQAtCommitNotified_x,
		rob$specUpdate_correctSpeculation_mask;
  wire [7 : 0] rob$setExecuted_doFinishMem_store_data_BE;
  wire [5 : 0] rob$getEnqTime;
  wire [2 : 0] rob$setExecuted_deqLSQ_ld_killed;
  wire rob$EN_deqPort_0_deq,
       rob$EN_deqPort_1_deq,
       rob$EN_enqPort_0_enq,
       rob$EN_enqPort_1_enq,
       rob$EN_setExecuted_deqLSQ,
       rob$EN_setExecuted_doFinishAlu_0_set,
       rob$EN_setExecuted_doFinishAlu_1_set,
       rob$EN_setExecuted_doFinishFpuMulDiv_0_set,
       rob$EN_setExecuted_doFinishMem,
       rob$EN_setLSQAtCommitNotified,
       rob$EN_specUpdate_correctSpeculation,
       rob$EN_specUpdate_incorrectSpeculation,
       rob$RDY_deqPort_0_deq,
       rob$RDY_deqPort_0_deq_data,
       rob$RDY_deqPort_1_deq,
       rob$RDY_deqPort_1_deq_data,
       rob$RDY_enqPort_0_enq,
       rob$RDY_enqPort_1_enq,
       rob$RDY_setExecuted_deqLSQ,
       rob$RDY_setExecuted_doFinishAlu_0_set,
       rob$RDY_setExecuted_doFinishAlu_1_set,
       rob$RDY_setExecuted_doFinishFpuMulDiv_0_set,
       rob$RDY_setExecuted_doFinishMem,
       rob$RDY_setLSQAtCommitNotified,
       rob$deqPort_0_canDeq,
       rob$deqPort_1_canDeq,
       rob$enqPort_0_canEnq,
       rob$enqPort_1_canEnq,
       rob$isEmpty,
       rob$setExecuted_doFinishMem_access_at_commit,
       rob$setExecuted_doFinishMem_non_mmio_st_done,
       rob$specUpdate_incorrectSpeculation_kill_all;

  // ports of submodule sbAggr
  reg [6 : 0] sbAggr$setReady_2_put, sbAggr$setReady_4_put;
  wire [32 : 0] sbAggr$eagerLookup_0_get_r, sbAggr$eagerLookup_1_get_r;
  wire [8 : 0] sbAggr$setBusy_0_set_dst, sbAggr$setBusy_1_set_dst;
  wire [6 : 0] sbAggr$setReady_0_put,
	       sbAggr$setReady_1_put,
	       sbAggr$setReady_3_put;
  wire [3 : 0] sbAggr$eagerLookup_0_get, sbAggr$eagerLookup_1_get;
  wire sbAggr$EN_setBusy_0_set,
       sbAggr$EN_setBusy_1_set,
       sbAggr$EN_setReady_0_put,
       sbAggr$EN_setReady_1_put,
       sbAggr$EN_setReady_2_put,
       sbAggr$EN_setReady_3_put,
       sbAggr$EN_setReady_4_put;

  // ports of submodule sbCons
  reg [6 : 0] sbCons$setReady_2_put, sbCons$setReady_3_put;
  wire [32 : 0] sbCons$eagerLookup_0_get_r,
		sbCons$eagerLookup_1_get_r,
		sbCons$lazyLookup_0_get_r,
		sbCons$lazyLookup_1_get_r,
		sbCons$lazyLookup_2_get_r,
		sbCons$lazyLookup_3_get_r,
		sbCons$lazyLookup_4_get_r;
  wire [8 : 0] sbCons$setBusy_0_set_dst, sbCons$setBusy_1_set_dst;
  wire [6 : 0] sbCons$setReady_0_put,
	       sbCons$setReady_1_put,
	       sbCons$setReady_4_put;
  wire [3 : 0] sbCons$lazyLookup_0_get,
	       sbCons$lazyLookup_1_get,
	       sbCons$lazyLookup_2_get,
	       sbCons$lazyLookup_3_get;
  wire sbCons$EN_setBusy_0_set,
       sbCons$EN_setBusy_1_set,
       sbCons$EN_setReady_0_put,
       sbCons$EN_setReady_1_put,
       sbCons$EN_setReady_2_put,
       sbCons$EN_setReady_3_put,
       sbCons$EN_setReady_4_put;

  // ports of submodule specTagManager
  reg [3 : 0] specTagManager$specUpdate_incorrectSpeculation_kill_tag;
  wire [11 : 0] specTagManager$currentSpecBits,
		specTagManager$specUpdate_correctSpeculation_mask;
  wire [3 : 0] specTagManager$nextSpecTag;
  wire specTagManager$EN_claimSpecTag,
       specTagManager$EN_specUpdate_correctSpeculation,
       specTagManager$EN_specUpdate_incorrectSpeculation,
       specTagManager$RDY_claimSpecTag,
       specTagManager$RDY_nextSpecTag,
       specTagManager$canClaim,
       specTagManager$specUpdate_incorrectSpeculation_kill_all;

  // rule scheduling signals
  wire CAN_FIRE_RL_commitStage_doCommitKilledLd,
       CAN_FIRE_RL_commitStage_doCommitNormalInst,
       CAN_FIRE_RL_commitStage_doCommitSystemInst,
       CAN_FIRE_RL_commitStage_doCommitTrap_flush,
       CAN_FIRE_RL_commitStage_doCommitTrap_handle,
       CAN_FIRE_RL_commitStage_doSetLSQAtCommit,
       CAN_FIRE_RL_commitStage_doSetLSQAtCommit_1,
       CAN_FIRE_RL_commitStage_notifyLSQCommit,
       CAN_FIRE_RL_coreFix_aluExe_0_doDispatchAlu,
       CAN_FIRE_RL_coreFix_aluExe_0_doExeAlu,
       CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F,
       CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T,
       CAN_FIRE_RL_coreFix_aluExe_0_doRegReadAlu,
       CAN_FIRE_RL_coreFix_aluExe_1_doDispatchAlu,
       CAN_FIRE_RL_coreFix_aluExe_1_doExeAlu,
       CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F,
       CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T,
       CAN_FIRE_RL_coreFix_aluExe_1_doRegReadAlu,
       CAN_FIRE_RL_coreFix_doFetchTrainBP,
       CAN_FIRE_RL_coreFix_doFetchTrainBP_1,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_rl_ready,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_canon,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_canon,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_canon,
       CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_canon,
       CAN_FIRE_RL_coreFix_globalSpecUpdate_canon_correct_spec,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_latTimer_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq,
       CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq,
       CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue,
       CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_fault,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_Fence,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem,
       CAN_FIRE_RL_coreFix_memExe_doDeqStQ_fault,
       CAN_FIRE_RL_coreFix_memExe_doDispatchMem,
       CAN_FIRE_RL_coreFix_memExe_doExeMem,
       CAN_FIRE_RL_coreFix_memExe_doFinishMem,
       CAN_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ,
       CAN_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate,
       CAN_FIRE_RL_coreFix_memExe_doIssueSB,
       CAN_FIRE_RL_coreFix_memExe_doRegReadMem,
       CAN_FIRE_RL_coreFix_memExe_doRespLdForward,
       CAN_FIRE_RL_coreFix_memExe_doRespLdMem,
       CAN_FIRE_RL_coreFix_memExe_forwardQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_forwardQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_forwardQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_forwardQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_ldMemLatTimer_canon,
       CAN_FIRE_RL_coreFix_memExe_memRespLdQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_memRespLdQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_memRespLdQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_memRespLdQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLdQ_data_0_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLdQ_empty_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLdQ_full_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_data_0_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_empty_canon,
       CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_full_canon,
       CAN_FIRE_RL_coreFix_memExe_reqStQ_data_0_canon,
       CAN_FIRE_RL_coreFix_memExe_reqStQ_empty_canon,
       CAN_FIRE_RL_coreFix_memExe_reqStQ_full_canon,
       CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_canonicalize,
       CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_clearReq_canon,
       CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_deqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_enqReq_canon,
       CAN_FIRE_RL_coreFix_memExe_sendLdToMem,
       CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem,
       CAN_FIRE_RL_coreFix_memExe_sendStToMem,
       CAN_FIRE_RL_coreFix_memExe_stMemLatTimer_canon,
       CAN_FIRE_RL_csrInstOrInterruptInflight_canon,
       CAN_FIRE_RL_csrf_incCycle,
       CAN_FIRE_RL_csrf_mcycle_ehr_data_canon,
       CAN_FIRE_RL_csrf_mcycle_ehr_setRead,
       CAN_FIRE_RL_csrf_minstret_ehr_data_canon,
       CAN_FIRE_RL_csrf_minstret_ehr_setRead,
       CAN_FIRE_RL_mkConnectionGetPut,
       CAN_FIRE_RL_mkConnectionGetPut_1,
       CAN_FIRE_RL_mmio_cRqQ_canonicalize,
       CAN_FIRE_RL_mmio_cRqQ_clearReq_canon,
       CAN_FIRE_RL_mmio_cRqQ_deqReq_canon,
       CAN_FIRE_RL_mmio_cRqQ_enqReq_canon,
       CAN_FIRE_RL_mmio_cRsQ_canonicalize,
       CAN_FIRE_RL_mmio_cRsQ_clearReq_canon,
       CAN_FIRE_RL_mmio_cRsQ_deqReq_canon,
       CAN_FIRE_RL_mmio_cRsQ_enqReq_canon,
       CAN_FIRE_RL_mmio_dataPendQ_canonicalize,
       CAN_FIRE_RL_mmio_dataPendQ_clearReq_canon,
       CAN_FIRE_RL_mmio_dataPendQ_deqReq_canon,
       CAN_FIRE_RL_mmio_dataPendQ_enqReq_canon,
       CAN_FIRE_RL_mmio_dataReqQ_canonicalize,
       CAN_FIRE_RL_mmio_dataReqQ_clearReq_canon,
       CAN_FIRE_RL_mmio_dataReqQ_deqReq_canon,
       CAN_FIRE_RL_mmio_dataReqQ_enqReq_canon,
       CAN_FIRE_RL_mmio_dataRespQ_canonicalize,
       CAN_FIRE_RL_mmio_dataRespQ_clearReq_canon,
       CAN_FIRE_RL_mmio_dataRespQ_deqReq_canon,
       CAN_FIRE_RL_mmio_dataRespQ_enqReq_canon,
       CAN_FIRE_RL_mmio_handlePRq,
       CAN_FIRE_RL_mmio_pRqQ_canonicalize,
       CAN_FIRE_RL_mmio_pRqQ_clearReq_canon,
       CAN_FIRE_RL_mmio_pRqQ_deqReq_canon,
       CAN_FIRE_RL_mmio_pRqQ_enqReq_canon,
       CAN_FIRE_RL_mmio_pRsQ_canonicalize,
       CAN_FIRE_RL_mmio_pRsQ_clearReq_canon,
       CAN_FIRE_RL_mmio_pRsQ_deqReq_canon,
       CAN_FIRE_RL_mmio_pRsQ_enqReq_canon,
       CAN_FIRE_RL_mmio_sendDataReq,
       CAN_FIRE_RL_mmio_sendDataResp,
       CAN_FIRE_RL_mmio_sendInstReq,
       CAN_FIRE_RL_mmio_sendInstResp,
       CAN_FIRE_RL_prepareCachesAndTlbs,
       CAN_FIRE_RL_readyToFetch,
       CAN_FIRE_RL_renameStage_doRenaming,
       CAN_FIRE_RL_renameStage_doRenaming_SystemInst,
       CAN_FIRE_RL_renameStage_doRenaming_Trap,
       CAN_FIRE_RL_renameStage_doRenaming_wrongPath,
       CAN_FIRE_RL_rl_outOfReset,
       CAN_FIRE_RL_sendDTlbReq,
       CAN_FIRE_RL_sendFlushDone,
       CAN_FIRE_RL_sendITlbReq,
       CAN_FIRE_RL_sendRobEnqTime,
       CAN_FIRE_RL_sendRsToDTlb,
       CAN_FIRE_RL_sendRsToITlb,
       CAN_FIRE_coreIndInv_perfResp,
       CAN_FIRE_coreIndInv_terminate,
       CAN_FIRE_coreReq_perfReq,
       CAN_FIRE_coreReq_start,
       CAN_FIRE_dCacheToParent_fromP_enq,
       CAN_FIRE_dCacheToParent_rqToP_deq,
       CAN_FIRE_dCacheToParent_rsToP_deq,
       CAN_FIRE_deadlock_checkStarted_get,
       CAN_FIRE_deadlock_commitInstStuck_get,
       CAN_FIRE_deadlock_commitUserInstStuck_get,
       CAN_FIRE_deadlock_dCacheCRqStuck_get,
       CAN_FIRE_deadlock_dCachePRqStuck_get,
       CAN_FIRE_deadlock_iCacheCRqStuck_get,
       CAN_FIRE_deadlock_iCachePRqStuck_get,
       CAN_FIRE_deadlock_renameCorrectPathStuck_get,
       CAN_FIRE_deadlock_renameInstStuck_get,
       CAN_FIRE_iCacheToParent_fromP_enq,
       CAN_FIRE_iCacheToParent_rqToP_deq,
       CAN_FIRE_iCacheToParent_rsToP_deq,
       CAN_FIRE_mmioToPlatform_cRq_deq,
       CAN_FIRE_mmioToPlatform_cRs_deq,
       CAN_FIRE_mmioToPlatform_pRq_enq,
       CAN_FIRE_mmioToPlatform_pRs_enq,
       CAN_FIRE_mmioToPlatform_setTime,
       CAN_FIRE_recvDoStats,
       CAN_FIRE_renameDebug_renameErr_get,
       CAN_FIRE_sendDoStats,
       CAN_FIRE_setMEIP,
       CAN_FIRE_setSEIP,
       CAN_FIRE_tlbToMem_memReq_deq,
       CAN_FIRE_tlbToMem_respLd_enq,
       WILL_FIRE_RL_commitStage_doCommitKilledLd,
       WILL_FIRE_RL_commitStage_doCommitNormalInst,
       WILL_FIRE_RL_commitStage_doCommitSystemInst,
       WILL_FIRE_RL_commitStage_doCommitTrap_flush,
       WILL_FIRE_RL_commitStage_doCommitTrap_handle,
       WILL_FIRE_RL_commitStage_doSetLSQAtCommit,
       WILL_FIRE_RL_commitStage_doSetLSQAtCommit_1,
       WILL_FIRE_RL_commitStage_notifyLSQCommit,
       WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu,
       WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu,
       WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F,
       WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T,
       WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu,
       WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu,
       WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu,
       WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F,
       WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T,
       WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu,
       WILL_FIRE_RL_coreFix_doFetchTrainBP,
       WILL_FIRE_RL_coreFix_doFetchTrainBP_1,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_rl_ready,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_canon,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_canon,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_canon,
       WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_canon,
       WILL_FIRE_RL_coreFix_globalSpecUpdate_canon_correct_spec,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_latTimer_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq,
       WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq,
       WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue,
       WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem,
       WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault,
       WILL_FIRE_RL_coreFix_memExe_doDispatchMem,
       WILL_FIRE_RL_coreFix_memExe_doExeMem,
       WILL_FIRE_RL_coreFix_memExe_doFinishMem,
       WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ,
       WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate,
       WILL_FIRE_RL_coreFix_memExe_doIssueSB,
       WILL_FIRE_RL_coreFix_memExe_doRegReadMem,
       WILL_FIRE_RL_coreFix_memExe_doRespLdForward,
       WILL_FIRE_RL_coreFix_memExe_doRespLdMem,
       WILL_FIRE_RL_coreFix_memExe_forwardQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_forwardQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_forwardQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_forwardQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_ldMemLatTimer_canon,
       WILL_FIRE_RL_coreFix_memExe_memRespLdQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_memRespLdQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_memRespLdQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_memRespLdQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLdQ_data_0_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLdQ_empty_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLdQ_full_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_data_0_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_empty_canon,
       WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_full_canon,
       WILL_FIRE_RL_coreFix_memExe_reqStQ_data_0_canon,
       WILL_FIRE_RL_coreFix_memExe_reqStQ_empty_canon,
       WILL_FIRE_RL_coreFix_memExe_reqStQ_full_canon,
       WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_canonicalize,
       WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_clearReq_canon,
       WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_deqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_enqReq_canon,
       WILL_FIRE_RL_coreFix_memExe_sendLdToMem,
       WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem,
       WILL_FIRE_RL_coreFix_memExe_sendStToMem,
       WILL_FIRE_RL_coreFix_memExe_stMemLatTimer_canon,
       WILL_FIRE_RL_csrInstOrInterruptInflight_canon,
       WILL_FIRE_RL_csrf_incCycle,
       WILL_FIRE_RL_csrf_mcycle_ehr_data_canon,
       WILL_FIRE_RL_csrf_mcycle_ehr_setRead,
       WILL_FIRE_RL_csrf_minstret_ehr_data_canon,
       WILL_FIRE_RL_csrf_minstret_ehr_setRead,
       WILL_FIRE_RL_mkConnectionGetPut,
       WILL_FIRE_RL_mkConnectionGetPut_1,
       WILL_FIRE_RL_mmio_cRqQ_canonicalize,
       WILL_FIRE_RL_mmio_cRqQ_clearReq_canon,
       WILL_FIRE_RL_mmio_cRqQ_deqReq_canon,
       WILL_FIRE_RL_mmio_cRqQ_enqReq_canon,
       WILL_FIRE_RL_mmio_cRsQ_canonicalize,
       WILL_FIRE_RL_mmio_cRsQ_clearReq_canon,
       WILL_FIRE_RL_mmio_cRsQ_deqReq_canon,
       WILL_FIRE_RL_mmio_cRsQ_enqReq_canon,
       WILL_FIRE_RL_mmio_dataPendQ_canonicalize,
       WILL_FIRE_RL_mmio_dataPendQ_clearReq_canon,
       WILL_FIRE_RL_mmio_dataPendQ_deqReq_canon,
       WILL_FIRE_RL_mmio_dataPendQ_enqReq_canon,
       WILL_FIRE_RL_mmio_dataReqQ_canonicalize,
       WILL_FIRE_RL_mmio_dataReqQ_clearReq_canon,
       WILL_FIRE_RL_mmio_dataReqQ_deqReq_canon,
       WILL_FIRE_RL_mmio_dataReqQ_enqReq_canon,
       WILL_FIRE_RL_mmio_dataRespQ_canonicalize,
       WILL_FIRE_RL_mmio_dataRespQ_clearReq_canon,
       WILL_FIRE_RL_mmio_dataRespQ_deqReq_canon,
       WILL_FIRE_RL_mmio_dataRespQ_enqReq_canon,
       WILL_FIRE_RL_mmio_handlePRq,
       WILL_FIRE_RL_mmio_pRqQ_canonicalize,
       WILL_FIRE_RL_mmio_pRqQ_clearReq_canon,
       WILL_FIRE_RL_mmio_pRqQ_deqReq_canon,
       WILL_FIRE_RL_mmio_pRqQ_enqReq_canon,
       WILL_FIRE_RL_mmio_pRsQ_canonicalize,
       WILL_FIRE_RL_mmio_pRsQ_clearReq_canon,
       WILL_FIRE_RL_mmio_pRsQ_deqReq_canon,
       WILL_FIRE_RL_mmio_pRsQ_enqReq_canon,
       WILL_FIRE_RL_mmio_sendDataReq,
       WILL_FIRE_RL_mmio_sendDataResp,
       WILL_FIRE_RL_mmio_sendInstReq,
       WILL_FIRE_RL_mmio_sendInstResp,
       WILL_FIRE_RL_prepareCachesAndTlbs,
       WILL_FIRE_RL_readyToFetch,
       WILL_FIRE_RL_renameStage_doRenaming,
       WILL_FIRE_RL_renameStage_doRenaming_SystemInst,
       WILL_FIRE_RL_renameStage_doRenaming_Trap,
       WILL_FIRE_RL_renameStage_doRenaming_wrongPath,
       WILL_FIRE_RL_rl_outOfReset,
       WILL_FIRE_RL_sendDTlbReq,
       WILL_FIRE_RL_sendFlushDone,
       WILL_FIRE_RL_sendITlbReq,
       WILL_FIRE_RL_sendRobEnqTime,
       WILL_FIRE_RL_sendRsToDTlb,
       WILL_FIRE_RL_sendRsToITlb,
       WILL_FIRE_coreIndInv_perfResp,
       WILL_FIRE_coreIndInv_terminate,
       WILL_FIRE_coreReq_perfReq,
       WILL_FIRE_coreReq_start,
       WILL_FIRE_dCacheToParent_fromP_enq,
       WILL_FIRE_dCacheToParent_rqToP_deq,
       WILL_FIRE_dCacheToParent_rsToP_deq,
       WILL_FIRE_deadlock_checkStarted_get,
       WILL_FIRE_deadlock_commitInstStuck_get,
       WILL_FIRE_deadlock_commitUserInstStuck_get,
       WILL_FIRE_deadlock_dCacheCRqStuck_get,
       WILL_FIRE_deadlock_dCachePRqStuck_get,
       WILL_FIRE_deadlock_iCacheCRqStuck_get,
       WILL_FIRE_deadlock_iCachePRqStuck_get,
       WILL_FIRE_deadlock_renameCorrectPathStuck_get,
       WILL_FIRE_deadlock_renameInstStuck_get,
       WILL_FIRE_iCacheToParent_fromP_enq,
       WILL_FIRE_iCacheToParent_rqToP_deq,
       WILL_FIRE_iCacheToParent_rsToP_deq,
       WILL_FIRE_mmioToPlatform_cRq_deq,
       WILL_FIRE_mmioToPlatform_cRs_deq,
       WILL_FIRE_mmioToPlatform_pRq_enq,
       WILL_FIRE_mmioToPlatform_pRs_enq,
       WILL_FIRE_mmioToPlatform_setTime,
       WILL_FIRE_recvDoStats,
       WILL_FIRE_renameDebug_renameErr_get,
       WILL_FIRE_sendDoStats,
       WILL_FIRE_setMEIP,
       WILL_FIRE_setSEIP,
       WILL_FIRE_tlbToMem_memReq_deq,
       WILL_FIRE_tlbToMem_respLd_enq;

  // inputs to muxes for submodule ports
  reg [63 : 0] MUX_coreFix_memExe_lsq$respLd_2__VAL_1,
	       MUX_coreFix_memExe_lsq$respLd_2__VAL_2,
	       MUX_fetchStage$redirect_1__VAL_5;
  reg [4 : 0] MUX_coreFix_memExe_lsq$respLd_1__VAL_1,
	      MUX_coreFix_memExe_lsq$respLd_1__VAL_2;
  reg [1 : 0] MUX_csrf_fs_reg$write_1__VAL_1;
  wire [583 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_1,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_2,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_3,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_4;
  wire [579 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_1,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_2;
  wire [569 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_1,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_2,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_3,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_4;
  wire [353 : 0] MUX_rob$enqPort_0_enq_1__VAL_1,
		 MUX_rob$enqPort_0_enq_1__VAL_2,
		 MUX_rob$enqPort_0_enq_1__VAL_3;
  wire [165 : 0] MUX_commitStage_commitTrap$write_1__VAL_2;
  wire [161 : 0] MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_1,
		 MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_2;
  wire [160 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_1,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_2;
  wire [159 : 0] MUX_coreFix_trainBPQ_0$enq_1__VAL_1,
		 MUX_coreFix_trainBPQ_0$enq_1__VAL_2,
		 MUX_coreFix_trainBPQ_1$enq_1__VAL_1,
		 MUX_coreFix_trainBPQ_1$enq_1__VAL_2;
  wire [152 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_1,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_2,
		 MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_3,
		 MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_1,
		 MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_2;
  wire [142 : 0] MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_1,
		 MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_2,
		 MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_1,
		 MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_2;
  wire [69 : 0] MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_1,
		MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_2,
		MUX_coreFix_memExe_memRespLdQ_enqReq_lat_0$wset_1__VAL_1;
  wire [64 : 0] MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_1,
		MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_2,
		MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_3;
  wire [63 : 0] MUX_commitStage_rg_serial_num$write_1__VAL_1,
		MUX_commitStage_rg_serial_num$write_1__VAL_2,
		MUX_csrf_mepc_csr$write_1__VAL_2,
		MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_1,
		MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_2,
		MUX_csrf_mtval_csr$write_1__VAL_1,
		MUX_csrf_mtval_csr$write_1__VAL_2,
		MUX_csrf_sepc_csr$write_1__VAL_2,
		MUX_fetchStage$redirect_1__VAL_4,
		MUX_rf$write_2_wr_2__VAL_2,
		MUX_rf$write_2_wr_2__VAL_3,
		MUX_rf$write_2_wr_2__VAL_4,
		MUX_rf$write_2_wr_2__VAL_5,
		MUX_rf$write_2_wr_2__VAL_6,
		MUX_rf$write_3_wr_2__VAL_4,
		MUX_rf$write_3_wr_2__VAL_5;
  wire [58 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_1,
		MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_2;
  wire [57 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_1,
		MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_2;
  wire [29 : 0] MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_1,
		MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_2;
  wire [7 : 0] MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2,
	       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
  wire [5 : 0] MUX_coreFix_memExe_lsq$getHit_1__VAL_1;
  wire [4 : 0] MUX_csrf_fflags_reg$write_1__VAL_2,
	       MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_2,
	       MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_3,
	       MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_4;
  wire [3 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__VAL_1,
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_1,
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_2;
  wire [2 : 0] MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_2__VAL_1;
  wire [1 : 0] MUX_csrf_mpp_reg$write_1__VAL_1,
	       MUX_csrf_prv_reg$write_1__VAL_1,
	       MUX_csrf_prv_reg$write_1__VAL_2;
  wire MUX_commitStage_rg_serial_num$write_1__SEL_1,
       MUX_commitStage_setLSQAtCommit_0$wset_1__SEL_1,
       MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3,
       MUX_coreFix_aluExe_0_rsAlu$enq_1__SEL_1,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_1,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_2,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3,
       MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4,
       MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_1,
       MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_2,
       MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_1,
       MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_2,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_2,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_3,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_3__VAL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_2,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_1,
       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_2,
       MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_1,
       MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_2,
       MUX_coreFix_memExe_ldMemLatTimer_doneEn$wset_1__SEL_1,
       MUX_coreFix_memExe_ldMemLatTimer_doneEn$wset_1__SEL_2,
       MUX_coreFix_memExe_ldMemLatTimer_startEn$wset_1__SEL_1,
       MUX_coreFix_memExe_ldMemLatTimer_startEn$wset_1__SEL_2,
       MUX_coreFix_memExe_lsq$wakeupLdStalledBySB_1__SEL_1,
       MUX_coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$write_1__SEL_1,
       MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_1,
       MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_2,
       MUX_coreFix_memExe_waitLrScAmoMMIOResp$write_1__SEL_1,
       MUX_coreFix_trainBPQ_0$enq_1__SEL_1,
       MUX_coreFix_trainBPQ_1$enq_1__SEL_1,
       MUX_csrInstOrInterruptInflight_dummy2_0$write_1__SEL_1,
       MUX_csrInstOrInterruptInflight_dummy2_0$write_1__SEL_2,
       MUX_csrInstOrInterruptInflight_dummy2_1$write_1__SEL_2,
       MUX_csrInstOrInterruptInflight_dummy_1_0$wset_1__VAL_1,
       MUX_csrf_external_int_pend_vec_1$write_1__SEL_1,
       MUX_csrf_fflags_reg$write_1__SEL_1,
       MUX_csrf_fs_reg$write_1__SEL_1,
       MUX_csrf_ie_vec_1$write_1__SEL_1,
       MUX_csrf_ie_vec_1$write_1__SEL_2,
       MUX_csrf_ie_vec_1$write_1__VAL_1,
       MUX_csrf_ie_vec_3$write_1__SEL_1,
       MUX_csrf_ie_vec_3$write_1__SEL_2,
       MUX_csrf_ie_vec_3$write_1__VAL_1,
       MUX_csrf_mpp_reg$write_1__SEL_1,
       MUX_csrf_prev_ie_vec_1$write_1__SEL_1,
       MUX_csrf_prev_ie_vec_1$write_1__VAL_1,
       MUX_csrf_prev_ie_vec_3$write_1__SEL_1,
       MUX_csrf_prev_ie_vec_3$write_1__VAL_1,
       MUX_csrf_prv_reg$write_1__SEL_1,
       MUX_csrf_spp_reg$write_1__SEL_1,
       MUX_csrf_spp_reg$write_1__VAL_1,
       MUX_epochManager$updatePrevEpoch_0_update_1__SEL_2,
       MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2,
       MUX_flush_reservation$write_1__SEL_1,
       MUX_flush_tlbs$write_1__SEL_1,
       MUX_rf$write_3_wr_1__SEL_1,
       MUX_rf$write_3_wr_1__SEL_2,
       MUX_rf$write_3_wr_1__SEL_3,
       MUX_rf$write_3_wr_1__SEL_4,
       MUX_rf$write_3_wr_1__SEL_5,
       MUX_rf$write_3_wr_2__PSEL_1,
       MUX_rf$write_3_wr_2__SEL_1,
       MUX_rob$setExecuted_deqLSQ_1__SEL_1,
       MUX_sbAggr$setReady_4_put_1__SEL_1,
       MUX_sbAggr$setReady_4_put_1__SEL_2,
       MUX_sbCons$setReady_3_put_1__SEL_1,
       MUX_sbCons$setReady_3_put_1__SEL_2,
       MUX_sbCons$setReady_3_put_1__SEL_3,
       MUX_update_vm_info$write_1__SEL_1;

  // remaining internal signals
  reg [511 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2333;
  reg [63 : 0] CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q248,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q249,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q12,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q13,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q14,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q15,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q16,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q228,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q229,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q233,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q243,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q223,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q224,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q225,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q226,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q227,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q230,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q231,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q237,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q238,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10248,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2767,
	       addr__h310363,
	       curData__h209190,
	       rVal1__h677430,
	       rVal1__h700726,
	       trap_val__h768632,
	       x__h214333;
  reg [51 : 0] CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9,
	       CASE_guard01555_0b0_sfdin11030_BITS_56_TO_5_0b_ETC__q195,
	       CASE_guard01555_0b0_sfdin11030_BITS_56_TO_5_0b_ETC__q196,
	       CASE_guard11879_0b0_theResult___snd21048_BITS__ETC__q197,
	       CASE_guard11879_0b0_theResult___snd21048_BITS__ETC__q198,
	       CASE_guard34512_0b0_theResult___snd43657_BITS__ETC__q209,
	       CASE_guard34512_0b0_theResult___snd43657_BITS__ETC__q210,
	       CASE_guard45057_0b0_sfdin54532_BITS_56_TO_5_0b_ETC__q211,
	       CASE_guard45057_0b0_sfdin54532_BITS_56_TO_5_0b_ETC__q212,
	       CASE_guard47929_0b0_theResult___snd57074_BITS__ETC__q203,
	       CASE_guard47929_0b0_theResult___snd57074_BITS__ETC__q204,
	       CASE_guard55381_0b0_theResult___snd64550_BITS__ETC__q213,
	       CASE_guard55381_0b0_theResult___snd64550_BITS__ETC__q214,
	       CASE_guard58474_0b0_sfdin67949_BITS_56_TO_5_0b_ETC__q207,
	       CASE_guard58474_0b0_sfdin67949_BITS_56_TO_5_0b_ETC__q208,
	       CASE_guard68798_0b0_theResult___snd77967_BITS__ETC__q205,
	       CASE_guard68798_0b0_theResult___snd77967_BITS__ETC__q206,
	       CASE_guard91010_0b0_theResult___snd00155_BITS__ETC__q193,
	       CASE_guard91010_0b0_theResult___snd00155_BITS__ETC__q194,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10134,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10160,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10179,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10903,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10929,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10948,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9424,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9451,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9470;
  reg [31 : 0] SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1287,
	       SEL_ARR_mmio_dataRespQ_data_0_068_BITS_31_TO_0_ETC___d1339;
  reg [22 : 0] CASE_guard00956_0b0_sfdin10433_BITS_56_TO_34_0_ETC__q40,
	       CASE_guard00956_0b0_sfdin10433_BITS_56_TO_34_0_ETC__q41,
	       CASE_guard04380_0b0_sfdin13857_BITS_56_TO_34_0_ETC__q110,
	       CASE_guard04380_0b0_sfdin13857_BITS_56_TO_34_0_ETC__q111,
	       CASE_guard11047_0b0_theResult___snd20303_BITS__ETC__q42,
	       CASE_guard11047_0b0_theResult___snd20303_BITS__ETC__q43,
	       CASE_guard14471_0b0_theResult___snd23727_BITS__ETC__q112,
	       CASE_guard14471_0b0_theResult___snd23727_BITS__ETC__q113,
	       CASE_guard32544_0b0_sfdin41892_BITS_56_TO_34_0_ETC__q73,
	       CASE_guard32544_0b0_sfdin41892_BITS_56_TO_34_0_ETC__q74,
	       CASE_guard42506_0b0_theResult___snd51738_BITS__ETC__q71,
	       CASE_guard42506_0b0_theResult___snd51738_BITS__ETC__q72,
	       CASE_guard52669_0b0_sfdin62146_BITS_56_TO_34_0_ETC__q75,
	       CASE_guard52669_0b0_sfdin62146_BITS_56_TO_34_0_ETC__q76,
	       CASE_guard62760_0b0_theResult___snd72016_BITS__ETC__q77,
	       CASE_guard62760_0b0_theResult___snd72016_BITS__ETC__q78,
	       CASE_guard80829_0b0_sfdin90179_BITS_56_TO_34_0_ETC__q38,
	       CASE_guard80829_0b0_sfdin90179_BITS_56_TO_34_0_ETC__q39,
	       CASE_guard84255_0b0_sfdin93603_BITS_56_TO_34_0_ETC__q108,
	       CASE_guard84255_0b0_sfdin93603_BITS_56_TO_34_0_ETC__q109,
	       CASE_guard90793_0b0_theResult___snd00025_BITS__ETC__q36,
	       CASE_guard90793_0b0_theResult___snd00025_BITS__ETC__q37,
	       CASE_guard94217_0b0_theResult___snd03449_BITS__ETC__q106,
	       CASE_guard94217_0b0_theResult___snd03449_BITS__ETC__q107,
	       _theResult___fst_sfd__h380802,
	       _theResult___fst_sfd__h390780,
	       _theResult___fst_sfd__h400595,
	       _theResult___fst_sfd__h411034,
	       _theResult___fst_sfd__h420903,
	       _theResult___fst_sfd__h432517,
	       _theResult___fst_sfd__h442493,
	       _theResult___fst_sfd__h452308,
	       _theResult___fst_sfd__h462747,
	       _theResult___fst_sfd__h472616,
	       _theResult___fst_sfd__h484228,
	       _theResult___fst_sfd__h494204,
	       _theResult___fst_sfd__h504019,
	       _theResult___fst_sfd__h514458,
	       _theResult___fst_sfd__h524327;
  reg [15 : 0] SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1298,
	       SEL_ARR_mmio_dataRespQ_data_0_068_BITS_15_TO_0_ETC___d1348;
  reg [10 : 0] CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q6,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8,
	       CASE_guard01555_0b0_theResult___fst_exp11036_0_ETC__q173,
	       CASE_guard01555_0b0_theResult___fst_exp11036_0_ETC__q174,
	       CASE_guard11879_0b0_theResult___fst_exp21102_0_ETC__q175,
	       CASE_guard11879_0b0_theResult___fst_exp21102_0_ETC__q176,
	       CASE_guard34512_0b0_theResult___fst_exp43706_0_ETC__q148,
	       CASE_guard34512_0b0_theResult___fst_exp43706_0_ETC__q149,
	       CASE_guard45057_0b0_theResult___fst_exp54538_0_ETC__q177,
	       CASE_guard45057_0b0_theResult___fst_exp54538_0_ETC__q178,
	       CASE_guard47929_0b0_theResult___fst_exp57123_0_ETC__q131,
	       CASE_guard47929_0b0_theResult___fst_exp57123_0_ETC__q132,
	       CASE_guard55381_0b0_theResult___fst_exp64604_0_ETC__q179,
	       CASE_guard55381_0b0_theResult___fst_exp64604_0_ETC__q180,
	       CASE_guard58474_0b0_theResult___fst_exp67955_0_ETC__q199,
	       CASE_guard58474_0b0_theResult___fst_exp67955_0_ETC__q200,
	       CASE_guard68798_0b0_theResult___fst_exp78021_0_ETC__q201,
	       CASE_guard68798_0b0_theResult___fst_exp78021_0_ETC__q202,
	       CASE_guard91010_0b0_theResult___fst_exp00204_0_ETC__q171,
	       CASE_guard91010_0b0_theResult___fst_exp00204_0_ETC__q172,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10039,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10077,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10108,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10808,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10846,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10877,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9324,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9367,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9398;
  reg [7 : 0] CASE_guard00956_0b0_theResult___fst_exp10439_0_ETC__q29,
	      CASE_guard00956_0b0_theResult___fst_exp10439_0_ETC__q30,
	      CASE_guard04380_0b0_theResult___fst_exp13863_0_ETC__q100,
	      CASE_guard04380_0b0_theResult___fst_exp13863_0_ETC__q99,
	      CASE_guard11047_0b0_theResult___fst_exp20357_0_ETC__q34,
	      CASE_guard11047_0b0_theResult___fst_exp20357_0_ETC__q35,
	      CASE_guard14471_0b0_theResult___fst_exp23781_0_ETC__q104,
	      CASE_guard14471_0b0_theResult___fst_exp23781_0_ETC__q105,
	      CASE_guard32544_0b0_theResult___fst_exp41898_0_ETC__q58,
	      CASE_guard32544_0b0_theResult___fst_exp41898_0_ETC__q59,
	      CASE_guard42506_0b0_theResult___fst_exp51787_0_ETC__q56,
	      CASE_guard42506_0b0_theResult___fst_exp51787_0_ETC__q57,
	      CASE_guard52669_0b0_theResult___fst_exp62152_0_ETC__q64,
	      CASE_guard52669_0b0_theResult___fst_exp62152_0_ETC__q65,
	      CASE_guard62760_0b0_theResult___fst_exp72070_0_ETC__q69,
	      CASE_guard62760_0b0_theResult___fst_exp72070_0_ETC__q70,
	      CASE_guard80829_0b0_theResult___fst_exp90185_0_ETC__q23,
	      CASE_guard80829_0b0_theResult___fst_exp90185_0_ETC__q24,
	      CASE_guard84255_0b0_theResult___fst_exp93609_0_ETC__q93,
	      CASE_guard84255_0b0_theResult___fst_exp93609_0_ETC__q94,
	      CASE_guard90793_0b0_theResult___fst_exp00074_0_ETC__q21,
	      CASE_guard90793_0b0_theResult___fst_exp00074_0_ETC__q22,
	      CASE_guard94217_0b0_theResult___fst_exp03498_0_ETC__q91,
	      CASE_guard94217_0b0_theResult___fst_exp03498_0_ETC__q92,
	      SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1312,
	      SEL_ARR_mmio_dataRespQ_data_0_068_BITS_7_TO_0__ETC___d1361,
	      _theResult___fst_exp__h380801,
	      _theResult___fst_exp__h390779,
	      _theResult___fst_exp__h400594,
	      _theResult___fst_exp__h411033,
	      _theResult___fst_exp__h420902,
	      _theResult___fst_exp__h432516,
	      _theResult___fst_exp__h442492,
	      _theResult___fst_exp__h452307,
	      _theResult___fst_exp__h462746,
	      _theResult___fst_exp__h472615,
	      _theResult___fst_exp__h484227,
	      _theResult___fst_exp__h494203,
	      _theResult___fst_exp__h504018,
	      _theResult___fst_exp__h514457,
	      _theResult___fst_exp__h524326;
  reg [4 : 0] IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13374,
	      IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13508;
  reg [3 : 0] CASE_coreFix_memExe_dTlbprocResp_BITS_105_TO__ETC__q251,
	      CASE_coreFix_memExe_dTlbprocResp_BITS_105_TO__ETC__q252,
	      CASE_fetchStagepipelines_0_first_BITS_191_TO__ETC__q221,
	      CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q222;
  reg [2 : 0] CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q242,
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11021,
	      x__h306156,
	      x__h311936;
  reg [1 : 0] CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q234,
	      CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q250,
	      CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q240,
	      CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q244,
	      CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q239;
  reg CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q134,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q136,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q138,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q151,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q153,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q155,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q157,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q159,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q161,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q182,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q184,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q186,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q188,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q190,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q192,
      CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q235,
      CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q232,
      CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q245,
      CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q246,
      CASE_coreFix_memExe_dMem_cache_m_banks_0_pipel_ETC__q253,
      CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q241,
      CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q236,
      CASE_fetchStagepipelines_0_first_BITS_191_TO__ETC__q218,
      CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q215,
      CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q216,
      CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q220,
      CASE_guard00956_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q49,
      CASE_guard00956_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q48,
      CASE_guard01555_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q187,
      CASE_guard01555_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q185,
      CASE_guard04380_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q120,
      CASE_guard04380_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q118,
      CASE_guard11047_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q51,
      CASE_guard11047_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q50,
      CASE_guard11879_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q189,
      CASE_guard11879_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q183,
      CASE_guard14471_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q121,
      CASE_guard14471_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q119,
      CASE_guard32544_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q80,
      CASE_guard32544_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q79,
      CASE_guard34512_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q160,
      CASE_guard34512_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q150,
      CASE_guard42506_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q82,
      CASE_guard42506_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q81,
      CASE_guard45057_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q156,
      CASE_guard45057_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q152,
      CASE_guard47929_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q133,
      CASE_guard52669_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q84,
      CASE_guard52669_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q83,
      CASE_guard55381_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q158,
      CASE_guard55381_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q154,
      CASE_guard58474_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q135,
      CASE_guard62760_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q86,
      CASE_guard62760_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q85,
      CASE_guard68798_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q137,
      CASE_guard80829_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q45,
      CASE_guard80829_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q44,
      CASE_guard84255_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q115,
      CASE_guard84255_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q114,
      CASE_guard90793_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q47,
      CASE_guard90793_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q46,
      CASE_guard91010_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q191,
      CASE_guard91010_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q181,
      CASE_guard94217_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q117,
      CASE_guard94217_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q116,
      CASE_i62270_0_NOT_coreFix_memExe_stMemLatTimer_ETC__q255,
      CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254,
      CASE_k31393_0_coreFix_aluExe_0_rsAluRDY_enq_1_ETC__q217,
      CASE_k49572_0_coreFix_aluExe_0_rsAluRDY_enq_1_ETC__q219,
      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11158,
      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11194,
      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11242,
      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11284,
      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11326,
      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8699,
      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8712,
      IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844,
      IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900,
      IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13366,
      IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13369,
      IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13506,
      IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13507,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6803,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6816,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6820,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6833,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6846,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6859,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6866,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6869,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6876,
      IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6883,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5411,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5424,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5428,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5441,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5454,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5467,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5474,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5477,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5484,
      IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5491,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8195,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8208,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8212,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8225,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8238,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8251,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8258,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8261,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8268,
      IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8275,
      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12848,
      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872,
      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12905,
      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13095,
      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13116,
      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13133,
      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13188,
      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13190,
      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13204,
      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13211,
      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13273,
      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13284,
      IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13144,
      IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13270,
      IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13295,
      SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__281_ETC___d12865,
      SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__243_ETC___d13238,
      SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827,
      SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_la_ETC___d2906,
      SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894,
      SEL_ARR_coreFix_memExe_stMemLatTimer_started_7_ETC___d3776,
      SEL_ARR_fetchStage_pipelines_0_canDeq__2436_AN_ETC___d13018;
  wire [581 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3223;
  wire [569 : 0] IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d2342,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2351,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2350;
  wire [517 : 0] SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2832;
  wire [512 : 0] SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2827,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14285;
  wire [511 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2041;
  wire [447 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1845,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2822,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14280;
  wire [383 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2036;
  wire [321 : 0] basicExec___d11946, basicExec___d12292;
  wire [319 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1840,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2813,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14271;
  wire [255 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2031,
		 SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d11372,
		 SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d11385,
		 _0_CONCAT_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d11378;
  wire [239 : 0] IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d4056;
  wire [219 : 0] IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d4043;
  wire [199 : 0] IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d4030;
  wire [191 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1835,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2804,
		 SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14262;
  wire [179 : 0] IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d4017;
  wire [159 : 0] IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d4004;
  wire [139 : 0] IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3991;
  wire [127 : 0] b__h669725, b__h669814, b__h669914, b__h669926, x__h670697;
  wire [119 : 0] IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3978;
  wire [99 : 0] IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3965;
  wire [79 : 0] IF_IF_coreFix_memExe_dMem_cache_m_banks_0_latT_ETC___d2964,
		IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3952;
  wire [68 : 0] execFpuSimple___d11351;
  wire [64 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2401;
  wire [63 : 0] IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9478,
		IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12245,
		IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12246,
		IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12258,
		IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12259,
		IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11899,
		IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11900,
		IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11912,
		IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11913,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8639,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8640,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8650,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8651,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8661,
		IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8662,
		IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1578,
		IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1579,
		IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1589,
		IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1590,
		IF_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_d_ETC___d11440,
		IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10189,
		IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10245,
		IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10958,
		IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9479,
		IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2398,
		IF_coreFix_memExe_lsq_firstLd__244_BIT_94_291__ETC___d1316,
		IF_coreFix_memExe_lsq_firstLd__244_BIT_94_291__ETC___d1365,
		IF_coreFix_memExe_lsq_firstLd__244_BIT_96_281__ETC___d1317,
		IF_coreFix_memExe_lsq_firstLd__244_BIT_96_281__ETC___d1366,
		IF_csrf_minstret_ehr_data_lat_0_whas_THEN_IF_c_ETC___d10,
		IF_rob_deqPort_0_canDeq__3974_THEN_IF_NOT_rob__ETC___d14083,
		_theResult___fst__h670097,
		_theResult___snd__h670098,
		a___1__h669747,
		a___1__h670102,
		a__h669503,
		amoExec___d879,
		b___1__h669748,
		b___1__h670157,
		b__h669504,
		base__h769125,
		base__h769145,
		coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divI_ETC___d11441,
		coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divI_ETC___d11442,
		data___1__h526771,
		data___1__h527615,
		data__h526332,
		data__h527176,
		fallthrough_pc__h727582,
		fallthrough_pc__h745455,
		fcsr_csr__read__h677481,
		fflags_csr__read__h677453,
		frm_csr__read__h677467,
		mcause_csr__read__h678148,
		mcounteren_csr__read__h678109,
		medeleg_csr__read__h677962,
		mideleg_csr__read__h678000,
		mie_csr__read__h678064,
		mip_csr__read__h678222,
		mstatus_csr__read__h677919,
		mtvec_csr__read__h678083,
		n___1__h216741,
		n__h210716,
		n__read__h6429,
		n__read__h678242,
		n__read__h678466,
		n__read__h778738,
		next_pc__h777816,
		q___1__h527690,
		rVal1__h535562,
		rVal2__h535563,
		r___1__h527717,
		res_data__h371458,
		res_data__h371463,
		res_data__h423176,
		res_data__h423181,
		res_data__h474887,
		res_data__h474892,
		resp_addr__h312417,
		rg_tdata1__read__h678541,
		rob_deqPort_0_deq_data__3579_BITS_353_TO_290_3_ETC___d13947,
		robdeqPort_0_deq_data_BITS_95_TO_32__q247,
		satp_csr__read__h677824,
		scause_csr__read__h677747,
		scounteren_csr__read__h677708,
		shiftData__h199245,
		sie_csr__read__h677663,
		sip_csr__read__h677806,
		sstatus_csr__read__h677614,
		stvec_csr__read__h677682,
		upd__h3683,
		upd__h4986,
		v__h196709,
		v__h198325,
		v__h530607,
		v__h531845,
		v__h532592,
		v__h676149,
		v__h680270,
		v__h699600,
		v__h701235,
		vaddr__h199240,
		x__h168734,
		x__h172590,
		x__h175713,
		x__h177561,
		x__h307577,
		x__h309431,
		x__h670081,
		x__h683308,
		x__h704263,
		x__h764974,
		x_quotient__h526929,
		x_reg_ifc__read__h677541,
		x_remainder__h526930,
		y__h686519,
		y__h707181,
		y__h782307,
		y_avValue__h198252,
		y_avValue__h199003,
		y_avValue__h531772,
		y_avValue__h532525,
		y_avValue__h533273,
		y_avValue__h677373,
		y_avValue__h680949,
		y_avValue__h700671,
		y_avValue__h701914,
		y_avValue_new_pc__h768849,
		y_avValue_new_pc__h769098,
		y_avValue_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd__h781499,
		y_avValue_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd__h782529,
		y_avValue_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd__h782649;
  wire [62 : 0] IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10187,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10956,
		r1__read__h678647,
		r1__read__h679051,
		r1__read__h679561,
		r1__read__h679566,
		r1__read__h679586,
		r1__read__h679819,
		r1__read__h679985,
		r1__read__h680078,
		r1__read__h680083,
		r1__read__h680103;
  wire [61 : 0] r1__read__h678649,
		r1__read__h679053,
		r1__read__h679568,
		r1__read__h679588,
		r1__read__h679821,
		r1__read__h679961,
		r1__read__h679987,
		r1__read__h680085,
		r1__read__h680105;
  wire [60 : 0] r1__read__h679823,
		r1__read__h679963,
		r1__read__h679989,
		r1__read__h680107;
  wire [59 : 0] IF_IF_coreFix_memExe_dMem_cache_m_banks_0_latT_ETC___d2951,
		IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3939,
		r1__read__h678651,
		r1__read__h679055,
		r1__read__h679580,
		r1__read__h679590,
		r1__read__h679825,
		r1__read__h679991,
		r1__read__h680097,
		r1__read__h680109;
  wire [58 : 0] r1__read__h678653,
		r1__read__h679057,
		r1__read__h679592,
		r1__read__h679827,
		r1__read__h679993,
		r1__read__h680111;
  wire [57 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2348,
		IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2381,
		r1__read__h678655,
		r1__read__h679059,
		r1__read__h679594,
		r1__read__h679829,
		r1__read__h679965,
		r1__read__h679995,
		r1__read__h680113,
		y__h273792;
  wire [56 : 0] IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q17,
		IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q52,
		IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q87,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q126,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q143,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q166,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q27,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q62,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q97,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q122,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q129,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q139,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q146,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q162,
		IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q169,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q102,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q19,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q32,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q54,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q67,
		IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q89,
		_0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d10442,
		_0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d8958,
		_0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d9673,
		_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d4915,
		_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d6307,
		_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d7699,
		_theResult____h380819,
		_theResult____h400946,
		_theResult____h432534,
		_theResult____h452659,
		_theResult____h484245,
		_theResult____h504370,
		_theResult____h558464,
		_theResult____h601545,
		_theResult____h645047,
		_theResult___snd__h390196,
		_theResult___snd__h390207,
		_theResult___snd__h390209,
		_theResult___snd__h390219,
		_theResult___snd__h390225,
		_theResult___snd__h390248,
		_theResult___snd__h400025,
		_theResult___snd__h400027,
		_theResult___snd__h400034,
		_theResult___snd__h400040,
		_theResult___snd__h400063,
		_theResult___snd__h410450,
		_theResult___snd__h410461,
		_theResult___snd__h410463,
		_theResult___snd__h410473,
		_theResult___snd__h410479,
		_theResult___snd__h410502,
		_theResult___snd__h420303,
		_theResult___snd__h420317,
		_theResult___snd__h420323,
		_theResult___snd__h420341,
		_theResult___snd__h441909,
		_theResult___snd__h441920,
		_theResult___snd__h441922,
		_theResult___snd__h441932,
		_theResult___snd__h441938,
		_theResult___snd__h441961,
		_theResult___snd__h451738,
		_theResult___snd__h451740,
		_theResult___snd__h451747,
		_theResult___snd__h451753,
		_theResult___snd__h451776,
		_theResult___snd__h462163,
		_theResult___snd__h462174,
		_theResult___snd__h462176,
		_theResult___snd__h462186,
		_theResult___snd__h462192,
		_theResult___snd__h462215,
		_theResult___snd__h472016,
		_theResult___snd__h472030,
		_theResult___snd__h472036,
		_theResult___snd__h472054,
		_theResult___snd__h493620,
		_theResult___snd__h493631,
		_theResult___snd__h493633,
		_theResult___snd__h493643,
		_theResult___snd__h493649,
		_theResult___snd__h493672,
		_theResult___snd__h503449,
		_theResult___snd__h503451,
		_theResult___snd__h503458,
		_theResult___snd__h503464,
		_theResult___snd__h503487,
		_theResult___snd__h513874,
		_theResult___snd__h513885,
		_theResult___snd__h513887,
		_theResult___snd__h513897,
		_theResult___snd__h513903,
		_theResult___snd__h513926,
		_theResult___snd__h523727,
		_theResult___snd__h523741,
		_theResult___snd__h523747,
		_theResult___snd__h523765,
		_theResult___snd__h557074,
		_theResult___snd__h557076,
		_theResult___snd__h557083,
		_theResult___snd__h557089,
		_theResult___snd__h557112,
		_theResult___snd__h567966,
		_theResult___snd__h567977,
		_theResult___snd__h567979,
		_theResult___snd__h567989,
		_theResult___snd__h567995,
		_theResult___snd__h568018,
		_theResult___snd__h577967,
		_theResult___snd__h577981,
		_theResult___snd__h577987,
		_theResult___snd__h578005,
		_theResult___snd__h600155,
		_theResult___snd__h600157,
		_theResult___snd__h600164,
		_theResult___snd__h600170,
		_theResult___snd__h600193,
		_theResult___snd__h611047,
		_theResult___snd__h611058,
		_theResult___snd__h611060,
		_theResult___snd__h611070,
		_theResult___snd__h611076,
		_theResult___snd__h611099,
		_theResult___snd__h621048,
		_theResult___snd__h621062,
		_theResult___snd__h621068,
		_theResult___snd__h621086,
		_theResult___snd__h643657,
		_theResult___snd__h643659,
		_theResult___snd__h643666,
		_theResult___snd__h643672,
		_theResult___snd__h643695,
		_theResult___snd__h654549,
		_theResult___snd__h654560,
		_theResult___snd__h654562,
		_theResult___snd__h654572,
		_theResult___snd__h654578,
		_theResult___snd__h654601,
		_theResult___snd__h664550,
		_theResult___snd__h664564,
		_theResult___snd__h664570,
		_theResult___snd__h664588,
		r1__read__h679831,
		r1__read__h679967,
		r1__read__h679997,
		r1__read__h680115,
		result__h401559,
		result__h453272,
		result__h504983,
		result__h559077,
		result__h602158,
		result__h645660,
		sfd__h372069,
		sfd__h423787,
		sfd__h475498,
		sfd__h536409,
		sfd__h579579,
		sfd__h623081,
		sfdin__h390179,
		sfdin__h410433,
		sfdin__h441892,
		sfdin__h462146,
		sfdin__h493603,
		sfdin__h513857,
		sfdin__h567949,
		sfdin__h611030,
		sfdin__h654532,
		x__h401656,
		x__h453369,
		x__h505080,
		x__h559172,
		x__h602253,
		x__h645755;
  wire [55 : 0] r1__read__h678657,
		r1__read__h679061,
		r1__read__h679596,
		r1__read__h679833,
		r1__read__h679999,
		r1__read__h680117;
  wire [54 : 0] r1__read__h678659,
		r1__read__h679063,
		r1__read__h679598,
		r1__read__h679835,
		r1__read__h680001,
		r1__read__h680119;
  wire [53 : 0] r1__read__h679944,
		r1__read__h679969,
		r1__read__h680003,
		r1__read__h680121,
		sfd__h557141,
		sfd__h568047,
		sfd__h578040,
		sfd__h600222,
		sfd__h611128,
		sfd__h621121,
		sfd__h643724,
		sfd__h654630,
		sfd__h664623,
		value__h381441,
		value__h433154,
		value__h484865;
  wire [52 : 0] r1__read__h679837,
		r1__read__h679946,
		r1__read__h679971,
		r1__read__h680005,
		r1__read__h680123;
  wire [51 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10154,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10156,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10923,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10925,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9445,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9447,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10128,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10130,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10173,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10175,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10897,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10899,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10942,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10944,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9418,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9420,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9464,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9466,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10186,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10955,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9477,
		_theResult___fst_sfd__h540818,
		_theResult___fst_sfd__h557879,
		_theResult___fst_sfd__h557882,
		_theResult___fst_sfd__h568785,
		_theResult___fst_sfd__h568788,
		_theResult___fst_sfd__h578802,
		_theResult___fst_sfd__h578805,
		_theResult___fst_sfd__h578814,
		_theResult___fst_sfd__h578820,
		_theResult___fst_sfd__h583899,
		_theResult___fst_sfd__h600960,
		_theResult___fst_sfd__h600963,
		_theResult___fst_sfd__h611866,
		_theResult___fst_sfd__h611869,
		_theResult___fst_sfd__h621883,
		_theResult___fst_sfd__h621886,
		_theResult___fst_sfd__h621895,
		_theResult___fst_sfd__h621901,
		_theResult___fst_sfd__h627401,
		_theResult___fst_sfd__h644462,
		_theResult___fst_sfd__h644465,
		_theResult___fst_sfd__h655368,
		_theResult___fst_sfd__h655371,
		_theResult___fst_sfd__h665385,
		_theResult___fst_sfd__h665388,
		_theResult___fst_sfd__h665397,
		_theResult___fst_sfd__h665403,
		_theResult___sfd__h557779,
		_theResult___sfd__h568685,
		_theResult___sfd__h578702,
		_theResult___sfd__h600860,
		_theResult___sfd__h611766,
		_theResult___sfd__h621783,
		_theResult___sfd__h644362,
		_theResult___sfd__h655268,
		_theResult___sfd__h665285,
		_theResult___snd_fst_sfd__h536363,
		_theResult___snd_fst_sfd__h557885,
		_theResult___snd_fst_sfd__h578808,
		_theResult___snd_fst_sfd__h579533,
		_theResult___snd_fst_sfd__h600966,
		_theResult___snd_fst_sfd__h621889,
		_theResult___snd_fst_sfd__h623035,
		_theResult___snd_fst_sfd__h644468,
		_theResult___snd_fst_sfd__h665391,
		out___1_sfd__h536111,
		out___1_sfd__h579281,
		out___1_sfd__h622783,
		out_sfd__h557782,
		out_sfd__h568688,
		out_sfd__h578705,
		out_sfd__h600863,
		out_sfd__h611769,
		out_sfd__h621786,
		out_sfd__h644365,
		out_sfd__h655271,
		out_sfd__h665288;
  wire [50 : 0] r1__read__h678661, r1__read__h679839;
  wire [49 : 0] r1__read__h679948;
  wire [48 : 0] r1__read__h678663, r1__read__h679841, r1__read__h679950;
  wire [46 : 0] r1__read__h678665, r1__read__h679843;
  wire [45 : 0] r1__read__h678667, r1__read__h679845;
  wire [44 : 0] r1__read__h678669, r1__read__h679847;
  wire [43 : 0] r1__read__h678671, r1__read__h679849;
  wire [42 : 0] r1__read__h679851;
  wire [41 : 0] r1__read__h679853;
  wire [40 : 0] r1__read__h679855;
  wire [39 : 0] IF_IF_coreFix_memExe_dMem_cache_m_banks_0_latT_ETC___d2938,
		IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3926,
		IF_IF_coreFix_memExe_stMemLatTimer_startEn_wha_ETC___d3808;
  wire [31 : 0] coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_10_ETC__q3,
		coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_17_ETC__q2,
		coreFix_memExe_regToExeQfirst_BITS_189_TO_158__q4,
		data26332_BITS_31_TO_0__q1,
		data27176_BITS_31_TO_0__q5,
		imm__h719480,
		r1__read__h678673,
		r1__read__h679857,
		x__h209947,
		x__h371473,
		x__h423191,
		x__h474902,
		x__h79607;
  wire [29 : 0] r1__read__h678675, r1__read__h679859;
  wire [27 : 0] r1__read__h679861;
  wire [24 : 0] sfd__h390277,
		sfd__h400092,
		sfd__h410531,
		sfd__h420376,
		sfd__h441990,
		sfd__h451805,
		sfd__h462244,
		sfd__h472089,
		sfd__h493701,
		sfd__h503516,
		sfd__h513955,
		sfd__h523800,
		value__h541447,
		value__h584528,
		value__h628030;
  wire [23 : 0] IF_coreFix_memExe_ldMemLatTimer_doneEn_whas__8_ETC___d4214;
  wire [22 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5314,
		IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5316,
		IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6706,
		IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6708,
		IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d8098,
		IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d8100,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5360,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5362,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6752,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6754,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d8144,
		IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d8146,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5333,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5335,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5379,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5381,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6725,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6727,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6771,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6773,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8117,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8119,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8163,
		IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8165,
		_theResult___fst_sfd__h390783,
		_theResult___fst_sfd__h400598,
		_theResult___fst_sfd__h411037,
		_theResult___fst_sfd__h420906,
		_theResult___fst_sfd__h420915,
		_theResult___fst_sfd__h420921,
		_theResult___fst_sfd__h442496,
		_theResult___fst_sfd__h452311,
		_theResult___fst_sfd__h462750,
		_theResult___fst_sfd__h472619,
		_theResult___fst_sfd__h472628,
		_theResult___fst_sfd__h472634,
		_theResult___fst_sfd__h494207,
		_theResult___fst_sfd__h504022,
		_theResult___fst_sfd__h514461,
		_theResult___fst_sfd__h524330,
		_theResult___fst_sfd__h524339,
		_theResult___fst_sfd__h524345,
		_theResult___sfd__h390702,
		_theResult___sfd__h400517,
		_theResult___sfd__h410956,
		_theResult___sfd__h420825,
		_theResult___sfd__h420927,
		_theResult___sfd__h442415,
		_theResult___sfd__h452230,
		_theResult___sfd__h462669,
		_theResult___sfd__h472538,
		_theResult___sfd__h472640,
		_theResult___sfd__h494126,
		_theResult___sfd__h503941,
		_theResult___sfd__h514380,
		_theResult___sfd__h524249,
		_theResult___sfd__h524351,
		_theResult___snd_fst_sfd__h372019,
		_theResult___snd_fst_sfd__h400601,
		_theResult___snd_fst_sfd__h420909,
		_theResult___snd_fst_sfd__h423737,
		_theResult___snd_fst_sfd__h452314,
		_theResult___snd_fst_sfd__h472622,
		_theResult___snd_fst_sfd__h475448,
		_theResult___snd_fst_sfd__h504025,
		_theResult___snd_fst_sfd__h524333,
		f1_sfd__h536048,
		f2_sfd__h579218,
		f3_sfd__h622720,
		out_f_sfd__h421204,
		out_f_sfd__h472917,
		out_f_sfd__h524628,
		out_sfd__h390705,
		out_sfd__h400520,
		out_sfd__h410959,
		out_sfd__h420828,
		out_sfd__h442418,
		out_sfd__h452233,
		out_sfd__h462672,
		out_sfd__h472541,
		out_sfd__h494129,
		out_sfd__h503944,
		out_sfd__h514383,
		out_sfd__h524252;
  wire [19 : 0] r1__read__h679796;
  wire [11 : 0] IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502,
		IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10735,
		IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9251,
		IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9966,
		IF_coreFix_globalSpecUpdate_correctSpecTag_0_w_ETC___d12374,
		IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10435,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8951,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9666,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q125,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q142,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q165,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6300,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q61,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4908,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q26,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7692,
		SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q96,
		_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4368,
		_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5760,
		_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7152,
		_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d10438,
		_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d8954,
		_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9669,
		_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10313,
		_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8813,
		_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9544,
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4911,
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6303,
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d7695,
		_theResult____h715239,
		csr_addr__h719478,
		enabled_ints___1__h715652,
		enabled_ints__h715698,
		pend_ints__h715237,
		renaming_spec_bits__h749005,
		result__h711482,
		result__h711533,
		spec_bits__h752554,
		x__h401689,
		x__h453402,
		x__h505113,
		x__h559205,
		x__h602286,
		x__h645788,
		x__h711481,
		x__h711532,
		y__h711511,
		y__h715664,
		y__h752567,
		y_avValue_fst__h745305,
		y_avValue_snd_fst__h745580,
		y_avValue_snd_fst__h745615;
  wire [10 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10071,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10073,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10840,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10842,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9361,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9363,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10033,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10035,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10102,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10104,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10802,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10804,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10871,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10873,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9318,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9320,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9392,
		IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9394,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q128,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q145,
		SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q168,
		_theResult___exp__h557778,
		_theResult___exp__h568684,
		_theResult___exp__h578701,
		_theResult___exp__h600859,
		_theResult___exp__h611765,
		_theResult___exp__h621782,
		_theResult___exp__h644361,
		_theResult___exp__h655267,
		_theResult___exp__h665284,
		_theResult___fst_exp__h540817,
		_theResult___fst_exp__h557114,
		_theResult___fst_exp__h557120,
		_theResult___fst_exp__h557123,
		_theResult___fst_exp__h557878,
		_theResult___fst_exp__h557881,
		_theResult___fst_exp__h567955,
		_theResult___fst_exp__h568020,
		_theResult___fst_exp__h568026,
		_theResult___fst_exp__h568029,
		_theResult___fst_exp__h568784,
		_theResult___fst_exp__h568787,
		_theResult___fst_exp__h577973,
		_theResult___fst_exp__h578012,
		_theResult___fst_exp__h578018,
		_theResult___fst_exp__h578021,
		_theResult___fst_exp__h578801,
		_theResult___fst_exp__h578804,
		_theResult___fst_exp__h578813,
		_theResult___fst_exp__h578816,
		_theResult___fst_exp__h583898,
		_theResult___fst_exp__h600195,
		_theResult___fst_exp__h600201,
		_theResult___fst_exp__h600204,
		_theResult___fst_exp__h600959,
		_theResult___fst_exp__h600962,
		_theResult___fst_exp__h611036,
		_theResult___fst_exp__h611101,
		_theResult___fst_exp__h611107,
		_theResult___fst_exp__h611110,
		_theResult___fst_exp__h611865,
		_theResult___fst_exp__h611868,
		_theResult___fst_exp__h621054,
		_theResult___fst_exp__h621093,
		_theResult___fst_exp__h621099,
		_theResult___fst_exp__h621102,
		_theResult___fst_exp__h621882,
		_theResult___fst_exp__h621885,
		_theResult___fst_exp__h621894,
		_theResult___fst_exp__h621897,
		_theResult___fst_exp__h627400,
		_theResult___fst_exp__h643697,
		_theResult___fst_exp__h643703,
		_theResult___fst_exp__h643706,
		_theResult___fst_exp__h644461,
		_theResult___fst_exp__h644464,
		_theResult___fst_exp__h654538,
		_theResult___fst_exp__h654603,
		_theResult___fst_exp__h654609,
		_theResult___fst_exp__h654612,
		_theResult___fst_exp__h655367,
		_theResult___fst_exp__h655370,
		_theResult___fst_exp__h664556,
		_theResult___fst_exp__h664595,
		_theResult___fst_exp__h664601,
		_theResult___fst_exp__h664604,
		_theResult___fst_exp__h665384,
		_theResult___fst_exp__h665387,
		_theResult___fst_exp__h665396,
		_theResult___fst_exp__h665399,
		_theResult___snd_fst_exp__h557884,
		_theResult___snd_fst_exp__h578807,
		_theResult___snd_fst_exp__h600965,
		_theResult___snd_fst_exp__h621888,
		_theResult___snd_fst_exp__h644467,
		_theResult___snd_fst_exp__h665390,
		coreFix_fpuMulDivExe_0_fpuExec_double_divresp_ETC__q60,
		coreFix_fpuMulDivExe_0_fpuExec_double_fmaresp_ETC__q25,
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrtres_ETC__q95,
		din_inc___2_exp__h578861,
		din_inc___2_exp__h578896,
		din_inc___2_exp__h578922,
		din_inc___2_exp__h621942,
		din_inc___2_exp__h621977,
		din_inc___2_exp__h622003,
		din_inc___2_exp__h665444,
		din_inc___2_exp__h665479,
		din_inc___2_exp__h665505,
		out_exp__h557781,
		out_exp__h568687,
		out_exp__h578704,
		out_exp__h600862,
		out_exp__h611768,
		out_exp__h621785,
		out_exp__h644364,
		out_exp__h655270,
		out_exp__h665287;
  wire [9 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2917,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2923,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2930,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2936,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2943,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2949,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2956,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2962,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3905,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3911,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3918,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3924,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3931,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3937,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3944,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3950,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3957,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3963,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3970,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3976,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3983,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3989,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3996,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4002,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4009,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4015,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4022,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4028,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4035,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4041,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4048,
	       IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4054,
	       IF_coreFix_memExe_stMemLatTimer_timer_783_BITS_ETC___d3787,
	       IF_coreFix_memExe_stMemLatTimer_timer_783_BITS_ETC___d3793,
	       IF_coreFix_memExe_stMemLatTimer_timer_783_BITS_ETC___d3800,
	       IF_coreFix_memExe_stMemLatTimer_timer_783_BITS_ETC___d3806,
	       r1__read_BITS_9_TO_0___h715674;
  wire [8 : 0] IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5229,
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6621,
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8013;
  wire [7 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4667,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4670,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6059,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6062,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7451,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7454,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5214,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5216,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6606,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6608,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7998,
	       IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d8000,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4889,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4891,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5283,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5285,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6281,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6283,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6675,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6677,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7673,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7675,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8067,
	       IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8069,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d3018,
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q66,
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q31,
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q101,
	       _theResult___exp__h390701,
	       _theResult___exp__h400516,
	       _theResult___exp__h410955,
	       _theResult___exp__h420824,
	       _theResult___exp__h420926,
	       _theResult___exp__h442414,
	       _theResult___exp__h452229,
	       _theResult___exp__h462668,
	       _theResult___exp__h472537,
	       _theResult___exp__h472639,
	       _theResult___exp__h494125,
	       _theResult___exp__h503940,
	       _theResult___exp__h514379,
	       _theResult___exp__h524248,
	       _theResult___exp__h524350,
	       _theResult___fst_exp__h390185,
	       _theResult___fst_exp__h390250,
	       _theResult___fst_exp__h390256,
	       _theResult___fst_exp__h390259,
	       _theResult___fst_exp__h390782,
	       _theResult___fst_exp__h400065,
	       _theResult___fst_exp__h400071,
	       _theResult___fst_exp__h400074,
	       _theResult___fst_exp__h400597,
	       _theResult___fst_exp__h410439,
	       _theResult___fst_exp__h410504,
	       _theResult___fst_exp__h410510,
	       _theResult___fst_exp__h410513,
	       _theResult___fst_exp__h411036,
	       _theResult___fst_exp__h420309,
	       _theResult___fst_exp__h420348,
	       _theResult___fst_exp__h420354,
	       _theResult___fst_exp__h420357,
	       _theResult___fst_exp__h420905,
	       _theResult___fst_exp__h420914,
	       _theResult___fst_exp__h420917,
	       _theResult___fst_exp__h441898,
	       _theResult___fst_exp__h441963,
	       _theResult___fst_exp__h441969,
	       _theResult___fst_exp__h441972,
	       _theResult___fst_exp__h442495,
	       _theResult___fst_exp__h451778,
	       _theResult___fst_exp__h451784,
	       _theResult___fst_exp__h451787,
	       _theResult___fst_exp__h452310,
	       _theResult___fst_exp__h462152,
	       _theResult___fst_exp__h462217,
	       _theResult___fst_exp__h462223,
	       _theResult___fst_exp__h462226,
	       _theResult___fst_exp__h462749,
	       _theResult___fst_exp__h472022,
	       _theResult___fst_exp__h472061,
	       _theResult___fst_exp__h472067,
	       _theResult___fst_exp__h472070,
	       _theResult___fst_exp__h472618,
	       _theResult___fst_exp__h472627,
	       _theResult___fst_exp__h472630,
	       _theResult___fst_exp__h493609,
	       _theResult___fst_exp__h493674,
	       _theResult___fst_exp__h493680,
	       _theResult___fst_exp__h493683,
	       _theResult___fst_exp__h494206,
	       _theResult___fst_exp__h503489,
	       _theResult___fst_exp__h503495,
	       _theResult___fst_exp__h503498,
	       _theResult___fst_exp__h504021,
	       _theResult___fst_exp__h513863,
	       _theResult___fst_exp__h513928,
	       _theResult___fst_exp__h513934,
	       _theResult___fst_exp__h513937,
	       _theResult___fst_exp__h514460,
	       _theResult___fst_exp__h523733,
	       _theResult___fst_exp__h523772,
	       _theResult___fst_exp__h523778,
	       _theResult___fst_exp__h523781,
	       _theResult___fst_exp__h524329,
	       _theResult___fst_exp__h524338,
	       _theResult___fst_exp__h524341,
	       _theResult___snd_fst_exp__h400600,
	       _theResult___snd_fst_exp__h420908,
	       _theResult___snd_fst_exp__h452313,
	       _theResult___snd_fst_exp__h472621,
	       _theResult___snd_fst_exp__h504024,
	       _theResult___snd_fst_exp__h524332,
	       csrf_external_int_en_vec_3_read__1781_AND_csrf_ETC___d12477,
	       din_inc___2_exp__h420939,
	       din_inc___2_exp__h420963,
	       din_inc___2_exp__h420993,
	       din_inc___2_exp__h421017,
	       din_inc___2_exp__h472652,
	       din_inc___2_exp__h472676,
	       din_inc___2_exp__h472706,
	       din_inc___2_exp__h472730,
	       din_inc___2_exp__h524363,
	       din_inc___2_exp__h524387,
	       din_inc___2_exp__h524417,
	       din_inc___2_exp__h524441,
	       f1_exp36047_MINUS_127__q124,
	       f1_exp__h536047,
	       f2_exp79217_MINUS_127__q164,
	       f2_exp__h579217,
	       f3_exp22719_MINUS_127__q141,
	       f3_exp__h622719,
	       out_exp__h390704,
	       out_exp__h400519,
	       out_exp__h410958,
	       out_exp__h420827,
	       out_exp__h442417,
	       out_exp__h452232,
	       out_exp__h462671,
	       out_exp__h472540,
	       out_exp__h494128,
	       out_exp__h503943,
	       out_exp__h514382,
	       out_exp__h524251,
	       out_f_exp__h421203,
	       out_f_exp__h472916,
	       out_f_exp__h524627,
	       x__h678632;
  wire [5 : 0] IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d4604,
	       IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d5996,
	       IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d7388,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d10684,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9200,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9915,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d5155,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d6547,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d7939,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10387,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8887,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9618,
	       IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13383,
	       IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13424,
	       IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13513,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6227,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4835,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7619,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1978,
	       IF_mmio_cRqQ_enqReq_lat_1_whas__42_THEN_IF_mmi_ETC___d504,
	       IF_mmio_dataReqQ_enqReq_lat_1_whas__1_THEN_IF__ETC___d203,
	       IF_mmio_pRqQ_enqReq_lat_1_whas__11_THEN_IF_mmi_ETC___d773,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rq_ETC___d14309,
	       x__h199374,
	       x__h769140;
  wire [4 : 0] DONTCARE_CONCAT_IF_IF_fetchStage_pipelines_0_f_ETC___d13380,
	       DONTCARE_CONCAT_IF_IF_fetchStage_pipelines_1_f_ETC___d13510,
	       IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13564,
	       IF_rob_deqPort_0_canDeq__3974_THEN_IF_NOT_rob__ETC___d14173,
	       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5526,
	       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6918,
	       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d8310,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11062,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11103,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11147,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5555,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6947,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d8339,
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11045,
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11086,
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11130,
	       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5538,
	       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6930,
	       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8322,
	       checkForException___d12547,
	       checkForException___d12943,
	       fflags__h782275,
	       i__h363648,
	       i__h365971,
	       r1__read__h680204,
	       res_fflags__h371459,
	       res_fflags__h423177,
	       res_fflags__h474888,
	       rs1__h719479,
	       x__h168728,
	       x__h172584,
	       x__h175709,
	       x__h307565,
	       y_avValue_fst__h780904,
	       y_avValue_fst__h782129,
	       y_avValue_fst__h782183;
  wire [3 : 0] IF_IF_coreFix_memExe_dMem_cache_m_banks_0_pipe_ETC___d1972,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1973,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2728,
	       IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1222,
	       IF_coreFix_memExe_stMemLatTimer_doneEn_whas__7_ETC___d3836,
	       IF_fetchStage_pipelines_0_first__2438_BIT_68_2_ETC___d12656,
	       vm_mode_reg__read__h679802;
  wire [2 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2370,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2685,
	       IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1179,
	       _theResult_____2__h319525,
	       next_deqP___1__h319822,
	       v__h318858,
	       v__h319104,
	       x_decodeInfo_frm__h719142;
  wire [1 : 0] IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2681,
	       IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1175,
	       IF_rob_deqPort_0_canDeq__3974_THEN_IF_NOT_rob__ETC___d14195,
	       IF_sfdin10433_BIT_33_THEN_2_ELSE_0__q28,
	       IF_sfdin11030_BIT_4_THEN_2_ELSE_0__q167,
	       IF_sfdin13857_BIT_33_THEN_2_ELSE_0__q98,
	       IF_sfdin41892_BIT_33_THEN_2_ELSE_0__q53,
	       IF_sfdin54532_BIT_4_THEN_2_ELSE_0__q144,
	       IF_sfdin62146_BIT_33_THEN_2_ELSE_0__q63,
	       IF_sfdin67949_BIT_4_THEN_2_ELSE_0__q127,
	       IF_sfdin90179_BIT_33_THEN_2_ELSE_0__q18,
	       IF_sfdin93603_BIT_33_THEN_2_ELSE_0__q88,
	       IF_theResult___snd00025_BIT_33_THEN_2_ELSE_0__q20,
	       IF_theResult___snd00155_BIT_4_THEN_2_ELSE_0__q163,
	       IF_theResult___snd03449_BIT_33_THEN_2_ELSE_0__q90,
	       IF_theResult___snd20303_BIT_33_THEN_2_ELSE_0__q33,
	       IF_theResult___snd21048_BIT_4_THEN_2_ELSE_0__q170,
	       IF_theResult___snd23727_BIT_33_THEN_2_ELSE_0__q103,
	       IF_theResult___snd43657_BIT_4_THEN_2_ELSE_0__q140,
	       IF_theResult___snd51738_BIT_33_THEN_2_ELSE_0__q55,
	       IF_theResult___snd57074_BIT_4_THEN_2_ELSE_0__q123,
	       IF_theResult___snd64550_BIT_4_THEN_2_ELSE_0__q147,
	       IF_theResult___snd72016_BIT_33_THEN_2_ELSE_0__q68,
	       IF_theResult___snd77967_BIT_4_THEN_2_ELSE_0__q130,
	       guard__h380829,
	       guard__h390793,
	       guard__h400956,
	       guard__h411047,
	       guard__h432544,
	       guard__h442506,
	       guard__h452669,
	       guard__h462760,
	       guard__h484255,
	       guard__h494217,
	       guard__h504380,
	       guard__h514471,
	       guard__h547929,
	       guard__h558474,
	       guard__h568798,
	       guard__h591010,
	       guard__h601555,
	       guard__h611879,
	       guard__h634512,
	       guard__h645057,
	       guard__h655381,
	       i__h362270,
	       prv__h783968,
	       prv__h784006,
	       r1__read_BITS_13_TO_12___h719333,
	       sbIdx__h172469,
	       v__h670767,
	       v__h670777,
	       v__h671847,
	       x__h778015,
	       x__h782816,
	       y_avValue_snd_snd_snd_fst__h781428,
	       y_avValue_snd_snd_snd_fst__h782458,
	       y_avValue_snd_snd_snd_fst__h782578;
  wire IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d5426,
       IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d5476,
       IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6818,
       IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6868,
       IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d8210,
       IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d8260,
       IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10227,
       IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10728,
       IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10995,
       IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9244,
       IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9959,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10005,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10212,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10239,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10774,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10980,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d11007,
       IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9290,
       IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12603,
       IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d13003,
       IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d13039,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10009,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10214,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10242,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10243,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10778,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10982,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11010,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11011,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11066,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11107,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11151,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11166,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11176,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11187,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11206,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11220,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11235,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11252,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11264,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11277,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11294,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11306,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11319,
       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9294,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d10433,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d8949,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d9664,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12095,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12096,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12097,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12125,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12126,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12127,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12141,
       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12149,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11567,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11568,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11569,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11597,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11598,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11599,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11613,
       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11621,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8537,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8538,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8539,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8566,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8567,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8568,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8595,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8596,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8597,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8611,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8618,
       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8625,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1513,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1514,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1515,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1542,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1543,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1544,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1557,
       IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1564,
       IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d1931,
       IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d1948,
       IF_NOT_fetchStage_pipelines_0_canDeq__2436_243_ETC___d13150,
       IF_NOT_fetchStage_pipelines_0_canDeq__2436_243_ETC___d13158,
       IF_NOT_fetchStage_pipelines_1_first__2447_BITS_ETC___d13080,
       IF_NOT_fetchStage_pipelines_1_first__2447_BITS_ETC___d13157,
       IF_NOT_rob_deqPort_1_deq_data__3981_BIT_25_398_ETC___d14186,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10007,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10241,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10776,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11009,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11204,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11218,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11233,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11250,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11262,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11275,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11292,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11304,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11317,
       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9292,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5456,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5493,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5584,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5597,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5610,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6848,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6885,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6976,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6989,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7002,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8240,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8277,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8368,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8381,
       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8394,
       IF_coreFix_aluExe_0_dispToRegQ_RDY_first__2050_ETC___d12071,
       IF_coreFix_aluExe_0_dispToRegQ_RDY_first__2050_ETC___d12110,
       IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1522_ETC___d11543,
       IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1522_ETC___d11582,
       IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8513,
       IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8551,
       IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8580,
       IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6889,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6850,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6887,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6951,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6962,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6978,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6991,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d7004,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5458,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5495,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5559,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5570,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5586,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5599,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5612,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8242,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8279,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8343,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8354,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8370,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8383,
       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8396,
       IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5497,
       IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8281,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10391,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10738,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11156,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11192,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11240,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11282,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11324,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d8734,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d8891,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9254,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9622,
       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9969,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1929,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1949,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1952,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3042,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3057,
       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3069,
       IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3148,
       IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3163,
       IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3170,
       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2974,
       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2979,
       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2985,
       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2990,
       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2996,
       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d3001,
       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d3007,
       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d3012,
       IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d1915,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1889,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1891,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1892,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1900,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1951,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1953,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2416,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2479,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2502,
       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2578,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3269,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3284,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3292,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3360,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3375,
       IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3383,
       IF_coreFix_memExe_dTlb_procResp__644_BIT_110_6_ETC___d1672,
       IF_coreFix_memExe_dispToRegQ_RDY_first__469_AN_ETC___d1489,
       IF_coreFix_memExe_dispToRegQ_RDY_first__469_AN_ETC___d1527,
       IF_coreFix_memExe_forwardQ_deqReq_dummy2_2_rea_ETC___d3655,
       IF_coreFix_memExe_forwardQ_deqReq_lat_1_whas___ETC___d3648,
       IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3633,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4074,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4079,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4085,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4090,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4096,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4101,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4107,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4112,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4118,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4123,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4129,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4134,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4140,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4145,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4151,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4156,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4162,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4167,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4173,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4178,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4184,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4189,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4195,
       IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4200,
       IF_coreFix_memExe_memRespLdQ_deqReq_dummy2_2_r_ETC___d3566,
       IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_whas_ETC___d3559,
       IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3544,
       IF_coreFix_memExe_respLrScAmoQ_enqReq_lat_1_wh_ETC___d3469,
       IF_coreFix_memExe_stMemLatTimer_startEn_whas___ETC___d3816,
       IF_coreFix_memExe_stMemLatTimer_startEn_whas___ETC___d3821,
       IF_coreFix_memExe_stMemLatTimer_startEn_whas___ETC___d3827,
       IF_coreFix_memExe_stMemLatTimer_startEn_whas___ETC___d3832,
       IF_fetchStage_RDY_pipelines_0_first__2435_AND__ETC___d12814,
       IF_fetchStage_RDY_pipelines_1_first__2446_AND__ETC___d13082,
       IF_fetchStage_RDY_pipelines_1_first__2446_AND__ETC___d13147,
       IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13197,
       IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13311,
       IF_mmio_cRqQ_enqReq_lat_1_whas__42_THEN_mmio_c_ETC___d351,
       IF_mmio_cRsQ_enqReq_lat_1_whas__78_THEN_mmio_c_ETC___d814,
       IF_mmio_dataReqQ_enqReq_lat_1_whas__1_THEN_mmi_ETC___d50,
       IF_mmio_dataRespQ_enqReq_lat_1_whas__08_THEN_m_ETC___d244,
       IF_mmio_pRqQ_enqReq_lat_1_whas__11_THEN_mmio_p_ETC___d620,
       IF_mmio_pRsQ_enqReq_lat_1_whas__09_THEN_mmio_p_ETC___d518,
       IF_rob_deqPort_1_canDeq__3978_THEN_IF_NOT_rob__ETC___d14187,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d5578,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d5606,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6970,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6998,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d8362,
       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d8390,
       NOT_IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_246_ETC___d12713,
       NOT_IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_246_ETC___d12802,
       NOT_IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_246_ETC___d12974,
       NOT_IF_NOT_rob_deqPort_0_canDeq__3974_3975_OR__ETC___d14192,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11069,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11111,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11169,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11180,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11209,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11224,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11255,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11268,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11297,
       NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11310,
       NOT_IF_rob_deqPort_0_deq_data__3579_BITS_97_TO_ETC___d13950,
       NOT_SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__ETC___d12867,
       NOT_coreFix_aluExe_0_bypassWire_0_whas__2058_2_ETC___d12087,
       NOT_coreFix_aluExe_0_bypassWire_0_whas__2058_2_ETC___d12120,
       NOT_coreFix_aluExe_1_bypassWire_0_whas__1530_1_ETC___d11559,
       NOT_coreFix_aluExe_1_bypassWire_0_whas__1530_1_ETC___d11592,
       NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8529,
       NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8561,
       NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8590,
       NOT_coreFix_fpuMulDivExe_0_regToExeQ_first__67_ETC___d8733,
       NOT_coreFix_fpuMulDivExe_0_rsFpuMulDiv_canEnq__ETC___d13091,
       NOT_coreFix_memExe_bypassWire_0_whas__476_484__ETC___d1505,
       NOT_coreFix_memExe_bypassWire_0_whas__476_484__ETC___d1537,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2357,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2531,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3068,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3089,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3137,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3193,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d1917,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d1968,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2364,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2366,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2388,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2392,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2395,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2409,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2412,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2419,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2425,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2432,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2457,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2465,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2473,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2483,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2509,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2526,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2529,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2539,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2541,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2547,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2614,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_rqFrom_ETC___d1100,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3258,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3315,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3349,
       NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3406,
       NOT_coreFix_memExe_dMem_perfReqQ_clearReq_dumm_ETC___d1725,
       NOT_coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_ETC___d1769,
       NOT_coreFix_memExe_dTlb_procResp__644_BITS_174_ETC___d1683,
       NOT_coreFix_memExe_forwardQ_clearReq_dummy2_1__ETC___d3622,
       NOT_coreFix_memExe_forwardQ_enqReq_dummy2_2_re_ETC___d3677,
       NOT_coreFix_memExe_memRespLdQ_clearReq_dummy2__ETC___d3533,
       NOT_coreFix_memExe_memRespLdQ_enqReq_dummy2_2__ETC___d3588,
       NOT_coreFix_memExe_reqLdQ_full_dummy2_0_read___ETC___d1417,
       NOT_coreFix_memExe_reqLrScAmoQ_full_dummy2_0_r_ETC___d990,
       NOT_coreFix_memExe_respLrScAmoQ_clearReq_dummy_ETC___d3458,
       NOT_coreFix_memExe_respLrScAmoQ_enqReq_dummy2__ETC___d3500,
       NOT_coreFix_memExe_respLrScAmoQ_full_792_793_A_ETC___d1927,
       NOT_coreFix_memExe_rsMem_canEnq__2834_2897_OR__ETC___d13092,
       NOT_csrf_fs_reg_read__1649_EQ_0_2536_2537_OR_N_ETC___d12706,
       NOT_csrf_fs_reg_read__1649_EQ_0_2536_2537_OR_N_ETC___d12800,
       NOT_csrf_fs_reg_read__1649_EQ_0_2536_2537_OR_N_ETC___d12972,
       NOT_csrf_prv_reg_read__2466_ULE_1_3692_3730_OR_ETC___d13734,
       NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13061,
       NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13074,
       NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13113,
       NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13130,
       NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13265,
       NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13317,
       NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435,
       NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13437,
       NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13448,
       NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13468,
       NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13489,
       NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13498,
       NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13522,
       NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13547,
       NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12700,
       NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12807,
       NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12849,
       NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12993,
       NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12999,
       NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d13155,
       NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d13323,
       NOT_fetchStage_pipelines_0_first__2438_BITS_32_ETC___d13347,
       NOT_fetchStage_pipelines_0_first__2438_BIT_68__ETC___d12860,
       NOT_fetchStage_pipelines_1_canDeq__2444_2445_O_ETC___d12453,
       NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d12983,
       NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d12985,
       NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13101,
       NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13122,
       NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13139,
       NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13445,
       NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13493,
       NOT_fetchStage_pipelines_1_first__2447_BITS_32_ETC___d13484,
       NOT_fetchStage_pipelines_1_first__2447_BIT_68__ETC___d13442,
       NOT_mmio_cRqQ_clearReq_dummy2_1_read__64_65_OR_ETC___d469,
       NOT_mmio_cRqQ_enqReq_dummy2_2_read__70_85_OR_I_ETC___d495,
       NOT_mmio_cRsQ_clearReq_dummy2_1_read__03_04_OR_ETC___d808,
       NOT_mmio_cRsQ_enqReq_dummy2_2_read__09_29_OR_I_ETC___d839,
       NOT_mmio_dataPendQ_empty_35_062_AND_rob_RDY_se_ETC___d1063,
       NOT_mmio_dataPendQ_empty_35_062_AND_rob_RDY_se_ETC___d1331,
       NOT_mmio_dataPendQ_enqReq_dummy2_2_read__12_27_ETC___d337,
       NOT_mmio_dataReqQ_clearReq_dummy2_1_read__63_6_ETC___d168,
       NOT_mmio_dataReqQ_enqReq_dummy2_2_read__69_84__ETC___d194,
       NOT_mmio_dataRespQ_clearReq_dummy2_1_read__33__ETC___d238,
       NOT_mmio_dataRespQ_enqReq_dummy2_2_read__39_59_ETC___d269,
       NOT_mmio_pRqQ_clearReq_dummy2_1_read__33_34_OR_ETC___d738,
       NOT_mmio_pRqQ_enqReq_dummy2_2_read__39_54_OR_I_ETC___d764,
       NOT_mmio_pRsQ_clearReq_dummy2_1_read__69_70_OR_ETC___d574,
       NOT_mmio_pRsQ_enqReq_dummy2_2_read__75_90_OR_I_ETC___d600,
       NOT_regRenamingTable_rename_0_canRename__2787__ETC___d12891,
       NOT_regRenamingTable_rename_0_canRename__2787__ETC___d13107,
       NOT_regRenamingTable_rename_0_canRename__2787__ETC___d13162,
       NOT_regRenamingTable_rename_1_canRename__2911__ETC___d13222,
       NOT_rob_deqPort_0_canDeq__3974_3975_OR_rob_RDY_ETC___d14013,
       NOT_rob_deqPort_0_canDeq__3974_3975_OR_rob_deq_ETC___d14166,
       NOT_rob_deqPort_0_deq_data__3579_BITS_257_TO_2_ETC___d13960,
       NOT_rob_deqPort_1_deq_data__3981_BIT_25_3982_3_ETC___d14010,
       NOT_specTagManager_canClaim__2785_2875_OR_NOT__ETC___d13244,
       NOT_specTagManager_canClaim__2785_2875_OR_NOT__ETC___d13301,
       SEL_ARR_fetchStage_pipelines_0_canDeq__2436_AN_ETC___d13048,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10436,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10437,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8952,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8953,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9667,
       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9668,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6301,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6302,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4909,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4910,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7693,
       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7694,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d4606,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5998,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d7390,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10686,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d9202,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d9917,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5157,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6549,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7941,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10389,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10736,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8889,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9252,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9620,
       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9967,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4837,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5230,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6229,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6622,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7621,
       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8014,
       _0_OR_NOT_fetchStage_pipelines_0_first__2438_BI_ETC___d13171,
       _0_OR_NOT_fetchStage_pipelines_1_first__2447_BI_ETC___d13249,
       _0_OR_fetchStage_RDY_pipelines_0_first__2435_30_ETC___d13077,
       _0b0_CONCAT_csrf_medeleg_15_reg_read__1760_1761_ETC___d13697,
       _0b0_CONCAT_csrf_mideleg_11_reg_read__1769_1770_ETC___d13695,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4369,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4370,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5541,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5566,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5593,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5761,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5762,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6933,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6958,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6985,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7153,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7154,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8325,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8350,
       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8377,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10314,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10316,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8814,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8816,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9545,
       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9547,
       _dfoo12,
       _dfoo18,
       _dfoo2,
       _dfoo20,
       _dfoo26,
       _dfoo7,
       _dor1coreFix_aluExe_0_bypassWire_2$EN_wset,
       _dor1coreFix_aluExe_0_bypassWire_3$EN_wset,
       _dor1coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put,
       _dor1coreFix_aluExe_1_bypassWire_2$EN_wset,
       _dor1coreFix_aluExe_1_bypassWire_3$EN_wset,
       _dor1coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put,
       _dor1coreFix_fpuMulDivExe_0_bypassWire_2$EN_wset,
       _dor1coreFix_fpuMulDivExe_0_bypassWire_3$EN_wset,
       _dor1coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put,
       _dor1coreFix_memExe_bypassWire_2$EN_wset,
       _dor1coreFix_memExe_bypassWire_3$EN_wset,
       _dor1coreFix_memExe_forwardQ_enqReq_dummy2_0$EN_write,
       _dor1coreFix_memExe_reqLdQ_data_0_dummy2_0$EN_write,
       _dor1coreFix_memExe_reqLdQ_empty_dummy2_0$EN_write,
       _dor1coreFix_memExe_reqLdQ_empty_lat_0$EN_wset,
       _dor1coreFix_memExe_reqLdQ_enqP_dummy2_0$EN_write,
       _dor1coreFix_memExe_reqLdQ_full_dummy2_0$EN_write,
       _dor1coreFix_memExe_reqLdQ_full_lat_0$EN_wset,
       _dor1coreFix_memExe_rsMem$EN_setRegReady_3_put,
       _dor1rf$EN_write_0_wr,
       _dor1rf$EN_write_1_wr,
       _dor1sbAggr$EN_setReady_3_put,
       _dor1sbCons$EN_setReady_0_put,
       _dor1sbCons$EN_setReady_1_put,
       _theResult_____2__h328530,
       _theResult_____2__h335052,
       _theResult_____2__h343858,
       _theResult_____2__h354394,
       _theResult_____2__h357785,
       coreFix_aluExe_0_bypassWire_0_wget__2059_BITS__ETC___d12063,
       coreFix_aluExe_0_bypassWire_0_wget__2059_BITS__ETC___d12107,
       coreFix_aluExe_0_bypassWire_1_wget__2074_BITS__ETC___d12076,
       coreFix_aluExe_0_bypassWire_1_wget__2074_BITS__ETC___d12113,
       coreFix_aluExe_0_bypassWire_2_wget__2082_BITS__ETC___d12084,
       coreFix_aluExe_0_bypassWire_2_wget__2082_BITS__ETC___d12117,
       coreFix_aluExe_0_bypassWire_3_wget__2089_BITS__ETC___d12091,
       coreFix_aluExe_0_bypassWire_3_wget__2089_BITS__ETC___d12121,
       coreFix_aluExe_0_dispToRegQ_RDY_first__2050_AN_ETC___d12132,
       coreFix_aluExe_0_exeToFinQ_RDY_first__2322_AND_ETC___d12360,
       coreFix_aluExe_0_rsAlu_approximateCount__2821__ETC___d12823,
       coreFix_aluExe_1_bypassWire_0_wget__1531_BITS__ETC___d11535,
       coreFix_aluExe_1_bypassWire_0_wget__1531_BITS__ETC___d11579,
       coreFix_aluExe_1_bypassWire_1_wget__1546_BITS__ETC___d11548,
       coreFix_aluExe_1_bypassWire_1_wget__1546_BITS__ETC___d11585,
       coreFix_aluExe_1_bypassWire_2_wget__1554_BITS__ETC___d11556,
       coreFix_aluExe_1_bypassWire_2_wget__1554_BITS__ETC___d11589,
       coreFix_aluExe_1_bypassWire_3_wget__1561_BITS__ETC___d11563,
       coreFix_aluExe_1_bypassWire_3_wget__1561_BITS__ETC___d11593,
       coreFix_aluExe_1_dispToRegQ_RDY_first__1522_AN_ETC___d11604,
       coreFix_aluExe_1_exeToFinQ_RDY_first__1976_AND_ETC___d12015,
       coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8505,
       coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8548,
       coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8577,
       coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8518,
       coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8554,
       coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8583,
       coreFix_fpuMulDivExe_0_bypassWire_2_wget__524__ETC___d8526,
       coreFix_fpuMulDivExe_0_bypassWire_2_wget__524__ETC___d8558,
       coreFix_fpuMulDivExe_0_bypassWire_2_wget__524__ETC___d8587,
       coreFix_fpuMulDivExe_0_bypassWire_3_wget__531__ETC___d8533,
       coreFix_fpuMulDivExe_0_bypassWire_3_wget__531__ETC___d8562,
       coreFix_fpuMulDivExe_0_bypassWire_3_wget__531__ETC___d8591,
       coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first__4_ETC___d8603,
       coreFix_fpuMulDivExe_0_fpuExec_divQ_RDY_first__ETC___d5629,
       coreFix_fpuMulDivExe_0_fpuExec_fmaQ_RDY_first__ETC___d4237,
       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_RDY_first_ETC___d7021,
       coreFix_fpuMulDivExe_0_mulDivExec_divQ_RDY_enq_ETC___d8731,
       coreFix_fpuMulDivExe_0_mulDivExec_mulQ_RDY_fir_ETC___d8413,
       coreFix_fpuMulDivExe_0_rsFpuMulDiv_RDY_enq__31_ETC___d13256,
       coreFix_memExe_bypassWire_0_wget__477_BITS_70__ETC___d1481,
       coreFix_memExe_bypassWire_0_wget__477_BITS_70__ETC___d1524,
       coreFix_memExe_bypassWire_1_wget__492_BITS_70__ETC___d1494,
       coreFix_memExe_bypassWire_1_wget__492_BITS_70__ETC___d1530,
       coreFix_memExe_bypassWire_2_wget__500_BITS_70__ETC___d1502,
       coreFix_memExe_bypassWire_2_wget__500_BITS_70__ETC___d1534,
       coreFix_memExe_bypassWire_3_wget__507_BITS_70__ETC___d1509,
       coreFix_memExe_bypassWire_3_wget__507_BITS_70__ETC___d1538,
       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_pi_ETC___d2408,
       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIn_ETC___d3078,
       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enq_ETC___d3180,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1983,
       coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2620,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2362,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2391,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2396,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2413,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2426,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2446,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2449,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2470,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2476,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2515,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2527,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2537,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2554,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2571,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2574,
       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2597,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2689,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2693,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2697,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2702,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2706,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2711,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2715,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2720,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2732,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2736,
       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2740,
       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enq_ETC___d3301,
       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enq_ETC___d3392,
       coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2_r_ETC___d1753,
       coreFix_memExe_dTlb_procResp__644_BITS_105_TO__ETC___d1712,
       coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1654,
       coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1655,
       coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1659,
       coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1662,
       coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1663,
       coreFix_memExe_forwardQ_enqReq_dummy2_2_read___ETC___d3664,
       coreFix_memExe_memRespLdQ_enqReq_dummy2_2_read_ETC___d3575,
       coreFix_memExe_regToExeQ_RDY_enq__468_AND_core_ETC___d1550,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1183,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1187,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1191,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1196,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1200,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1205,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1209,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1214,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1226,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1230,
       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1234,
       coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2_re_ETC___d3485,
       csrf_fs_reg_read__1649_EQ_0_2536_AND_fetchStag_ETC___d12596,
       csrf_fs_reg_read__1649_EQ_0_2536_AND_fetchStag_ETC___d12884,
       csrf_fs_reg_read__1649_EQ_0_2536_AND_fetchStag_ETC___d13037,
       csrf_prv_reg_read__2466_ULE_1_3692_AND_IF_comm_ETC___d13699,
       csrf_prv_reg_read__2466_ULE_1___d13692,
       csrf_prv_reg_read__2466_ULT_IF_fetchStage_pipe_ETC___d12591,
       fetchStage_RDY_pipelines_0_first__2435_AND_NOT_ETC___d12810,
       fetchStage_RDY_pipelines_0_first__2435_AND_fet_ETC___d12881,
       fetchStage_RDY_pipelines_1_deq__2450_AND_NOT_f_ETC___d13305,
       fetchStage_iTlbIfc_noPendingReq__3685_AND_core_ETC___d13768,
       fetchStage_pipelines_0_canDeq__2436_AND_NOT_fe_ETC___d13326,
       fetchStage_pipelines_0_canDeq__2436_AND_fetchS_ETC___d13315,
       fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13253,
       fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13260,
       fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13281,
       fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13292,
       fetchStage_pipelines_0_canDeq__2436_AND_specTa_ETC___d13415,
       fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d12589,
       fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13013,
       fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13089,
       fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13199,
       fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13205,
       fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13227,
       fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13234,
       fetchStage_pipelines_0_first__2438_BITS_199_TO_ETC___d13006,
       fetchStage_pipelines_0_first__2438_BIT_68_2465_ETC___d12889,
       fetchStage_pipelines_1_first__2447_BITS_194_TO_ETC___d13216,
       fetchStage_pipelines_1_first__2447_BITS_199_TO_ETC___d13045,
       fetchStage_pipelines_1_first__2447_BIT_68_2939_ETC___d13220,
       guard__h401554,
       guard__h453267,
       guard__h504978,
       guard__h559072,
       guard__h602153,
       guard__h645655,
       idx__h731419,
       idx__h749150,
       k__h731393,
       k__h749572,
       mmio_cRqQ_enqReq_dummy2_2_read__70_AND_IF_mmio_ETC___d482,
       mmio_cRsQ_enqReq_dummy2_2_read__09_AND_IF_mmio_ETC___d826,
       mmio_dataPendQ_enqReq_dummy2_2_read__12_AND_IF_ETC___d324,
       mmio_dataReqQ_enqReq_dummy2_2_read__69_AND_IF__ETC___d181,
       mmio_dataRespQ_enqReq_dummy2_2_read__39_AND_IF_ETC___d256,
       mmio_pRqQ_empty_62_AND_epochManager_checkEpoch_ETC___d12607,
       mmio_pRqQ_empty_62_AND_epochManager_checkEpoch_ETC___d12732,
       mmio_pRqQ_empty_62_AND_epochManager_checkEpoch_ETC___d13320,
       mmio_pRqQ_enqReq_dummy2_2_read__39_AND_IF_mmio_ETC___d751,
       mmio_pRsQ_enqReq_dummy2_2_read__75_AND_IF_mmio_ETC___d587,
       next_deqP___1__h328827,
       next_deqP___1__h335636,
       next_deqP___1__h344442,
       next_deqP___1__h354691,
       next_deqP___1__h358082,
       r1__read_BIT_20___h719700,
       r__h678679,
       r__h680178,
       regRenamingTable_RDY_rename_0_getRename__2670__ETC___d13184,
       regRenamingTable_RDY_rename_1_getRename__3240__ETC___d13251,
       regRenamingTable_rename_0_canRename__2787_AND__ETC___d12862,
       regRenamingTable_rename_0_canRename__2787_AND__ETC___d12876,
       regRenamingTable_rename_0_canRename__2787_AND__ETC___d13072,
       regRenamingTable_rename_0_canRename__2787_AND__ETC___d13213,
       regRenamingTable_rename_0_canRename__2787_AND__ETC___d13337,
       regRenamingTable_rename_0_canRename__2787_AND__ETC___d13351,
       regRenamingTable_rename_0_canRename__2787_AND__ETC___d13356,
       regRenamingTable_rename_0_canRename__2787_AND__ETC___d13361,
       regRenamingTable_rename_0_canRename__2787_AND__ETC___d13387,
       regRenamingTable_rename_0_canRename__2787_AND__ETC___d13391,
       regRenamingTable_rename_0_canRename__2787_AND__ETC___d13397,
       regRenamingTable_rename_0_canRename__2787_AND__ETC___d13401,
       regRenamingTable_rename_0_canRename__2787_AND__ETC___d13409,
       regRenamingTable_rename_1_canRename__2911_AND__ETC___d13444,
       regRenamingTable_rename_1_canRename__2911_AND__ETC___d13517,
       regRenamingTable_rename_1_canRename__2911_AND__ETC___d13528,
       rob_RDY_enqPort_0_enq__2460_AND_regRenamingTab_ETC___d12678,
       rob_enqPort_1_canEnq__2976_AND_epochManager_ch_ETC___d12981,
       rob_enqPort_1_canEnq__2976_AND_epochManager_ch_ETC___d13120,
       rob_enqPort_1_canEnq__2976_AND_epochManager_ch_ETC___d13137,
       v__h322304,
       v__h322837,
       v__h333902,
       v__h334148,
       v__h338230,
       v__h338476,
       v__h353809,
       v__h354055,
       v__h357200,
       v__h357446,
       x__h670112;

  // action method coreReq_start
  assign RDY_coreReq_start = 1'd1 ;
  assign CAN_FIRE_coreReq_start = 1'd1 ;
  assign WILL_FIRE_coreReq_start = EN_coreReq_start ;

  // action method coreReq_perfReq
  assign RDY_coreReq_perfReq = perfReqQ$FULL_N ;
  assign CAN_FIRE_coreReq_perfReq = perfReqQ$FULL_N ;
  assign WILL_FIRE_coreReq_perfReq = EN_coreReq_perfReq ;

  // actionvalue method coreIndInv_perfResp
  assign coreIndInv_perfResp = { perfReqQ$D_OUT, 64'd0 } ;
  assign RDY_coreIndInv_perfResp = perfReqQ$EMPTY_N ;
  assign CAN_FIRE_coreIndInv_perfResp = perfReqQ$EMPTY_N ;
  assign WILL_FIRE_coreIndInv_perfResp = EN_coreIndInv_perfResp ;

  // action method coreIndInv_terminate
  assign RDY_coreIndInv_terminate = csrf_terminate_module_terminateQ$EMPTY_N ;
  assign CAN_FIRE_coreIndInv_terminate =
	     csrf_terminate_module_terminateQ$EMPTY_N ;
  assign WILL_FIRE_coreIndInv_terminate = EN_coreIndInv_terminate ;

  // value method dCacheToParent_rsToP_notEmpty
  assign dCacheToParent_rsToP_notEmpty =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty ;
  assign RDY_dCacheToParent_rsToP_notEmpty = 1'd1 ;

  // action method dCacheToParent_rsToP_deq
  assign RDY_dCacheToParent_rsToP_deq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty ;
  assign CAN_FIRE_dCacheToParent_rsToP_deq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty ;
  assign WILL_FIRE_dCacheToParent_rsToP_deq = EN_dCacheToParent_rsToP_deq ;

  // value method dCacheToParent_rsToP_first
  assign dCacheToParent_rsToP_first =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q238,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q239,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14285 } ;
  assign RDY_dCacheToParent_rsToP_first =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty ;

  // value method dCacheToParent_rqToP_notEmpty
  assign dCacheToParent_rqToP_notEmpty =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty ;
  assign RDY_dCacheToParent_rqToP_notEmpty = 1'd1 ;

  // action method dCacheToParent_rqToP_deq
  assign RDY_dCacheToParent_rqToP_deq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty ;
  assign CAN_FIRE_dCacheToParent_rqToP_deq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty ;
  assign WILL_FIRE_dCacheToParent_rqToP_deq = EN_dCacheToParent_rqToP_deq ;

  // value method dCacheToParent_rqToP_first
  assign dCacheToParent_rqToP_first =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q243,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q244,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rq_ETC___d14309 } ;
  assign RDY_dCacheToParent_rqToP_first =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty ;

  // value method dCacheToParent_fromP_notFull
  assign dCacheToParent_fromP_notFull =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full ;
  assign RDY_dCacheToParent_fromP_notFull = 1'd1 ;

  // action method dCacheToParent_fromP_enq
  assign RDY_dCacheToParent_fromP_enq =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full ;
  assign CAN_FIRE_dCacheToParent_fromP_enq =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full ;
  assign WILL_FIRE_dCacheToParent_fromP_enq = EN_dCacheToParent_fromP_enq ;

  // value method iCacheToParent_rsToP_notEmpty
  assign iCacheToParent_rsToP_notEmpty =
	     fetchStage$iMemIfc_to_parent_rsToP_notEmpty ;
  assign RDY_iCacheToParent_rsToP_notEmpty = 1'd1 ;

  // action method iCacheToParent_rsToP_deq
  assign RDY_iCacheToParent_rsToP_deq =
	     fetchStage$RDY_iMemIfc_to_parent_rsToP_deq ;
  assign CAN_FIRE_iCacheToParent_rsToP_deq =
	     fetchStage$RDY_iMemIfc_to_parent_rsToP_deq ;
  assign WILL_FIRE_iCacheToParent_rsToP_deq = EN_iCacheToParent_rsToP_deq ;

  // value method iCacheToParent_rsToP_first
  assign iCacheToParent_rsToP_first =
	     fetchStage$iMemIfc_to_parent_rsToP_first ;
  assign RDY_iCacheToParent_rsToP_first =
	     fetchStage$RDY_iMemIfc_to_parent_rsToP_first ;

  // value method iCacheToParent_rqToP_notEmpty
  assign iCacheToParent_rqToP_notEmpty =
	     fetchStage$iMemIfc_to_parent_rqToP_notEmpty ;
  assign RDY_iCacheToParent_rqToP_notEmpty = 1'd1 ;

  // action method iCacheToParent_rqToP_deq
  assign RDY_iCacheToParent_rqToP_deq =
	     fetchStage$RDY_iMemIfc_to_parent_rqToP_deq ;
  assign CAN_FIRE_iCacheToParent_rqToP_deq =
	     fetchStage$RDY_iMemIfc_to_parent_rqToP_deq ;
  assign WILL_FIRE_iCacheToParent_rqToP_deq = EN_iCacheToParent_rqToP_deq ;

  // value method iCacheToParent_rqToP_first
  assign iCacheToParent_rqToP_first =
	     fetchStage$iMemIfc_to_parent_rqToP_first ;
  assign RDY_iCacheToParent_rqToP_first =
	     fetchStage$RDY_iMemIfc_to_parent_rqToP_first ;

  // value method iCacheToParent_fromP_notFull
  assign iCacheToParent_fromP_notFull =
	     fetchStage$iMemIfc_to_parent_fromP_notFull ;
  assign RDY_iCacheToParent_fromP_notFull = 1'd1 ;

  // action method iCacheToParent_fromP_enq
  assign RDY_iCacheToParent_fromP_enq =
	     fetchStage$RDY_iMemIfc_to_parent_fromP_enq ;
  assign CAN_FIRE_iCacheToParent_fromP_enq =
	     fetchStage$RDY_iMemIfc_to_parent_fromP_enq ;
  assign WILL_FIRE_iCacheToParent_fromP_enq = EN_iCacheToParent_fromP_enq ;

  // value method tlbToMem_memReq_notEmpty
  assign tlbToMem_memReq_notEmpty = l2Tlb$toMem_memReq_notEmpty ;
  assign RDY_tlbToMem_memReq_notEmpty = 1'd1 ;

  // action method tlbToMem_memReq_deq
  assign RDY_tlbToMem_memReq_deq = l2Tlb$RDY_toMem_memReq_deq ;
  assign CAN_FIRE_tlbToMem_memReq_deq = l2Tlb$RDY_toMem_memReq_deq ;
  assign WILL_FIRE_tlbToMem_memReq_deq = EN_tlbToMem_memReq_deq ;

  // value method tlbToMem_memReq_first
  assign tlbToMem_memReq_first = l2Tlb$toMem_memReq_first ;
  assign RDY_tlbToMem_memReq_first = l2Tlb$RDY_toMem_memReq_first ;

  // value method tlbToMem_respLd_notFull
  assign tlbToMem_respLd_notFull = l2Tlb$toMem_respLd_notFull ;
  assign RDY_tlbToMem_respLd_notFull = 1'd1 ;

  // action method tlbToMem_respLd_enq
  assign RDY_tlbToMem_respLd_enq = l2Tlb$RDY_toMem_respLd_enq ;
  assign CAN_FIRE_tlbToMem_respLd_enq = l2Tlb$RDY_toMem_respLd_enq ;
  assign WILL_FIRE_tlbToMem_respLd_enq = EN_tlbToMem_respLd_enq ;

  // value method mmioToPlatform_cRq_notEmpty
  assign mmioToPlatform_cRq_notEmpty = !mmio_cRqQ_empty ;
  assign RDY_mmioToPlatform_cRq_notEmpty = 1'd1 ;

  // action method mmioToPlatform_cRq_deq
  assign RDY_mmioToPlatform_cRq_deq = !mmio_cRqQ_empty ;
  assign CAN_FIRE_mmioToPlatform_cRq_deq = !mmio_cRqQ_empty ;
  assign WILL_FIRE_mmioToPlatform_cRq_deq = EN_mmioToPlatform_cRq_deq ;

  // value method mmioToPlatform_cRq_first
  assign mmioToPlatform_cRq_first = mmio_cRqQ_data_0 ;
  assign RDY_mmioToPlatform_cRq_first = !mmio_cRqQ_empty ;

  // value method mmioToPlatform_pRs_notFull
  assign mmioToPlatform_pRs_notFull = !mmio_pRsQ_full ;
  assign RDY_mmioToPlatform_pRs_notFull = 1'd1 ;

  // action method mmioToPlatform_pRs_enq
  assign RDY_mmioToPlatform_pRs_enq = !mmio_pRsQ_full ;
  assign CAN_FIRE_mmioToPlatform_pRs_enq = !mmio_pRsQ_full ;
  assign WILL_FIRE_mmioToPlatform_pRs_enq = EN_mmioToPlatform_pRs_enq ;

  // value method mmioToPlatform_pRq_notFull
  assign mmioToPlatform_pRq_notFull = !mmio_pRqQ_full ;
  assign RDY_mmioToPlatform_pRq_notFull = 1'd1 ;

  // action method mmioToPlatform_pRq_enq
  assign RDY_mmioToPlatform_pRq_enq = !mmio_pRqQ_full ;
  assign CAN_FIRE_mmioToPlatform_pRq_enq = !mmio_pRqQ_full ;
  assign WILL_FIRE_mmioToPlatform_pRq_enq = EN_mmioToPlatform_pRq_enq ;

  // value method mmioToPlatform_cRs_notEmpty
  assign mmioToPlatform_cRs_notEmpty = !mmio_cRsQ_empty ;
  assign RDY_mmioToPlatform_cRs_notEmpty = 1'd1 ;

  // action method mmioToPlatform_cRs_deq
  assign RDY_mmioToPlatform_cRs_deq = !mmio_cRsQ_empty ;
  assign CAN_FIRE_mmioToPlatform_cRs_deq = !mmio_cRsQ_empty ;
  assign WILL_FIRE_mmioToPlatform_cRs_deq = EN_mmioToPlatform_cRs_deq ;

  // value method mmioToPlatform_cRs_first
  assign mmioToPlatform_cRs_first = mmio_cRsQ_data_0 ;
  assign RDY_mmioToPlatform_cRs_first = !mmio_cRsQ_empty ;

  // action method mmioToPlatform_setTime
  assign RDY_mmioToPlatform_setTime = 1'd1 ;
  assign CAN_FIRE_mmioToPlatform_setTime = 1'd1 ;
  assign WILL_FIRE_mmioToPlatform_setTime = EN_mmioToPlatform_setTime ;

  // actionvalue method sendDoStats
  assign sendDoStats = csrf_stats_module_writeQ$D_OUT ;
  assign RDY_sendDoStats = csrf_stats_module_writeQ$EMPTY_N ;
  assign CAN_FIRE_sendDoStats = csrf_stats_module_writeQ$EMPTY_N ;
  assign WILL_FIRE_sendDoStats = EN_sendDoStats ;

  // action method recvDoStats
  assign RDY_recvDoStats = 1'd1 ;
  assign CAN_FIRE_recvDoStats = 1'd1 ;
  assign WILL_FIRE_recvDoStats = EN_recvDoStats ;

  // actionvalue method deadlock_dCacheCRqStuck_get
  assign deadlock_dCacheCRqStuck_get = 73'h0AAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_dCacheCRqStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_dCacheCRqStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_dCacheCRqStuck_get =
	     EN_deadlock_dCacheCRqStuck_get ;

  // actionvalue method deadlock_dCachePRqStuck_get
  assign deadlock_dCachePRqStuck_get = 68'hAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_dCachePRqStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_dCachePRqStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_dCachePRqStuck_get =
	     EN_deadlock_dCachePRqStuck_get ;

  // actionvalue method deadlock_iCacheCRqStuck_get
  assign deadlock_iCacheCRqStuck_get = fetchStage$iMemIfc_cRqStuck_get ;
  assign RDY_deadlock_iCacheCRqStuck_get =
	     fetchStage$RDY_iMemIfc_cRqStuck_get ;
  assign CAN_FIRE_deadlock_iCacheCRqStuck_get =
	     fetchStage$RDY_iMemIfc_cRqStuck_get ;
  assign WILL_FIRE_deadlock_iCacheCRqStuck_get =
	     EN_deadlock_iCacheCRqStuck_get ;

  // actionvalue method deadlock_iCachePRqStuck_get
  assign deadlock_iCachePRqStuck_get = fetchStage$iMemIfc_pRqStuck_get ;
  assign RDY_deadlock_iCachePRqStuck_get =
	     fetchStage$RDY_iMemIfc_pRqStuck_get ;
  assign CAN_FIRE_deadlock_iCachePRqStuck_get =
	     fetchStage$RDY_iMemIfc_pRqStuck_get ;
  assign WILL_FIRE_deadlock_iCachePRqStuck_get =
	     EN_deadlock_iCachePRqStuck_get ;

  // actionvalue method deadlock_renameInstStuck_get
  assign deadlock_renameInstStuck_get = 78'h2AAAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_renameInstStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_renameInstStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_renameInstStuck_get =
	     EN_deadlock_renameInstStuck_get ;

  // actionvalue method deadlock_renameCorrectPathStuck_get
  assign deadlock_renameCorrectPathStuck_get = 78'h2AAAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_renameCorrectPathStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_renameCorrectPathStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_renameCorrectPathStuck_get =
	     EN_deadlock_renameCorrectPathStuck_get ;

  // actionvalue method deadlock_commitInstStuck_get
  assign deadlock_commitInstStuck_get =
	     163'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_commitInstStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_commitInstStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_commitInstStuck_get =
	     EN_deadlock_commitInstStuck_get ;

  // actionvalue method deadlock_commitUserInstStuck_get
  assign deadlock_commitUserInstStuck_get =
	     163'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign RDY_deadlock_commitUserInstStuck_get = 1'd0 ;
  assign CAN_FIRE_deadlock_commitUserInstStuck_get = 1'd0 ;
  assign WILL_FIRE_deadlock_commitUserInstStuck_get =
	     EN_deadlock_commitUserInstStuck_get ;

  // action method deadlock_checkStarted_get
  assign RDY_deadlock_checkStarted_get = 1'd0 ;
  assign CAN_FIRE_deadlock_checkStarted_get = 1'd0 ;
  assign WILL_FIRE_deadlock_checkStarted_get = EN_deadlock_checkStarted_get ;

  // actionvalue method renameDebug_renameErr_get
  assign renameDebug_renameErr_get = 89'h0AAAAAAAAAAAAAAAAAAAAAA ;
  assign RDY_renameDebug_renameErr_get = 1'd0 ;
  assign CAN_FIRE_renameDebug_renameErr_get = 1'd0 ;
  assign WILL_FIRE_renameDebug_renameErr_get = EN_renameDebug_renameErr_get ;

  // action method setMEIP
  assign RDY_setMEIP = 1'd1 ;
  assign CAN_FIRE_setMEIP = 1'd1 ;
  assign WILL_FIRE_setMEIP = EN_setMEIP ;

  // action method setSEIP
  assign RDY_setSEIP = 1'd1 ;
  assign CAN_FIRE_setSEIP = 1'd1 ;
  assign WILL_FIRE_setSEIP = EN_setSEIP ;

  // submodule coreFix_aluExe_0_dispToRegQ
  mkAluDispToRegFifo coreFix_aluExe_0_dispToRegQ(.CLK(CLK),
						 .RST_N(RST_N),
						 .enq_x(coreFix_aluExe_0_dispToRegQ$enq_x),
						 .specUpdate_correctSpeculation_mask(coreFix_aluExe_0_dispToRegQ$specUpdate_correctSpeculation_mask),
						 .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all),
						 .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag),
						 .EN_enq(coreFix_aluExe_0_dispToRegQ$EN_enq),
						 .EN_deq(coreFix_aluExe_0_dispToRegQ$EN_deq),
						 .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation),
						 .EN_specUpdate_correctSpeculation(coreFix_aluExe_0_dispToRegQ$EN_specUpdate_correctSpeculation),
						 .RDY_enq(coreFix_aluExe_0_dispToRegQ$RDY_enq),
						 .RDY_deq(coreFix_aluExe_0_dispToRegQ$RDY_deq),
						 .first(coreFix_aluExe_0_dispToRegQ$first),
						 .RDY_first(coreFix_aluExe_0_dispToRegQ$RDY_first),
						 .RDY_specUpdate_incorrectSpeculation(),
						 .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_0_exeToFinQ
  mkAluExeToFinFifo coreFix_aluExe_0_exeToFinQ(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_aluExe_0_exeToFinQ$enq_x),
					       .specUpdate_correctSpeculation_mask(coreFix_aluExe_0_exeToFinQ$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_aluExe_0_exeToFinQ$EN_enq),
					       .EN_deq(coreFix_aluExe_0_exeToFinQ$EN_deq),
					       .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_0_exeToFinQ$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_aluExe_0_exeToFinQ$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_aluExe_0_exeToFinQ$RDY_enq),
					       .RDY_deq(coreFix_aluExe_0_exeToFinQ$RDY_deq),
					       .first(coreFix_aluExe_0_exeToFinQ$first),
					       .RDY_first(coreFix_aluExe_0_exeToFinQ$RDY_first),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_0_regToExeQ
  mkAluRegToExeFifo coreFix_aluExe_0_regToExeQ(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_aluExe_0_regToExeQ$enq_x),
					       .specUpdate_correctSpeculation_mask(coreFix_aluExe_0_regToExeQ$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_aluExe_0_regToExeQ$EN_enq),
					       .EN_deq(coreFix_aluExe_0_regToExeQ$EN_deq),
					       .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_aluExe_0_regToExeQ$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_aluExe_0_regToExeQ$RDY_enq),
					       .RDY_deq(coreFix_aluExe_0_regToExeQ$RDY_deq),
					       .first(coreFix_aluExe_0_regToExeQ$first),
					       .RDY_first(coreFix_aluExe_0_regToExeQ$RDY_first),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_0_rsAlu
  mkReservationStationAlu coreFix_aluExe_0_rsAlu(.CLK(CLK),
						 .RST_N(RST_N),
						 .enq_x(coreFix_aluExe_0_rsAlu$enq_x),
						 .setRegReady_0_put(coreFix_aluExe_0_rsAlu$setRegReady_0_put),
						 .setRegReady_1_put(coreFix_aluExe_0_rsAlu$setRegReady_1_put),
						 .setRegReady_2_put(coreFix_aluExe_0_rsAlu$setRegReady_2_put),
						 .setRegReady_3_put(coreFix_aluExe_0_rsAlu$setRegReady_3_put),
						 .setRegReady_4_put(coreFix_aluExe_0_rsAlu$setRegReady_4_put),
						 .setRobEnqTime_t(coreFix_aluExe_0_rsAlu$setRobEnqTime_t),
						 .specUpdate_correctSpeculation_mask(coreFix_aluExe_0_rsAlu$specUpdate_correctSpeculation_mask),
						 .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_all),
						 .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag),
						 .EN_enq(coreFix_aluExe_0_rsAlu$EN_enq),
						 .EN_setRobEnqTime(coreFix_aluExe_0_rsAlu$EN_setRobEnqTime),
						 .EN_doDispatch(coreFix_aluExe_0_rsAlu$EN_doDispatch),
						 .EN_setRegReady_0_put(coreFix_aluExe_0_rsAlu$EN_setRegReady_0_put),
						 .EN_setRegReady_1_put(coreFix_aluExe_0_rsAlu$EN_setRegReady_1_put),
						 .EN_setRegReady_2_put(coreFix_aluExe_0_rsAlu$EN_setRegReady_2_put),
						 .EN_setRegReady_3_put(coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put),
						 .EN_setRegReady_4_put(coreFix_aluExe_0_rsAlu$EN_setRegReady_4_put),
						 .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_0_rsAlu$EN_specUpdate_incorrectSpeculation),
						 .EN_specUpdate_correctSpeculation(coreFix_aluExe_0_rsAlu$EN_specUpdate_correctSpeculation),
						 .RDY_enq(coreFix_aluExe_0_rsAlu$RDY_enq),
						 .canEnq(coreFix_aluExe_0_rsAlu$canEnq),
						 .RDY_canEnq(),
						 .RDY_setRobEnqTime(),
						 .dispatchData(coreFix_aluExe_0_rsAlu$dispatchData),
						 .RDY_dispatchData(coreFix_aluExe_0_rsAlu$RDY_dispatchData),
						 .RDY_doDispatch(coreFix_aluExe_0_rsAlu$RDY_doDispatch),
						 .RDY_setRegReady_0_put(),
						 .RDY_setRegReady_1_put(),
						 .RDY_setRegReady_2_put(),
						 .RDY_setRegReady_3_put(),
						 .RDY_setRegReady_4_put(),
						 .approximateCount(coreFix_aluExe_0_rsAlu$approximateCount),
						 .RDY_approximateCount(),
						 .isFull_ehrPort0(),
						 .RDY_isFull_ehrPort0(),
						 .RDY_specUpdate_incorrectSpeculation(),
						 .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_1_dispToRegQ
  mkAluDispToRegFifo coreFix_aluExe_1_dispToRegQ(.CLK(CLK),
						 .RST_N(RST_N),
						 .enq_x(coreFix_aluExe_1_dispToRegQ$enq_x),
						 .specUpdate_correctSpeculation_mask(coreFix_aluExe_1_dispToRegQ$specUpdate_correctSpeculation_mask),
						 .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_all),
						 .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag),
						 .EN_enq(coreFix_aluExe_1_dispToRegQ$EN_enq),
						 .EN_deq(coreFix_aluExe_1_dispToRegQ$EN_deq),
						 .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_1_dispToRegQ$EN_specUpdate_incorrectSpeculation),
						 .EN_specUpdate_correctSpeculation(coreFix_aluExe_1_dispToRegQ$EN_specUpdate_correctSpeculation),
						 .RDY_enq(coreFix_aluExe_1_dispToRegQ$RDY_enq),
						 .RDY_deq(coreFix_aluExe_1_dispToRegQ$RDY_deq),
						 .first(coreFix_aluExe_1_dispToRegQ$first),
						 .RDY_first(coreFix_aluExe_1_dispToRegQ$RDY_first),
						 .RDY_specUpdate_incorrectSpeculation(),
						 .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_1_exeToFinQ
  mkAluExeToFinFifo coreFix_aluExe_1_exeToFinQ(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_aluExe_1_exeToFinQ$enq_x),
					       .specUpdate_correctSpeculation_mask(coreFix_aluExe_1_exeToFinQ$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_aluExe_1_exeToFinQ$EN_enq),
					       .EN_deq(coreFix_aluExe_1_exeToFinQ$EN_deq),
					       .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_1_exeToFinQ$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_aluExe_1_exeToFinQ$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_aluExe_1_exeToFinQ$RDY_enq),
					       .RDY_deq(coreFix_aluExe_1_exeToFinQ$RDY_deq),
					       .first(coreFix_aluExe_1_exeToFinQ$first),
					       .RDY_first(coreFix_aluExe_1_exeToFinQ$RDY_first),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_1_regToExeQ
  mkAluRegToExeFifo coreFix_aluExe_1_regToExeQ(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_aluExe_1_regToExeQ$enq_x),
					       .specUpdate_correctSpeculation_mask(coreFix_aluExe_1_regToExeQ$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_aluExe_1_regToExeQ$EN_enq),
					       .EN_deq(coreFix_aluExe_1_regToExeQ$EN_deq),
					       .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_1_regToExeQ$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_aluExe_1_regToExeQ$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_aluExe_1_regToExeQ$RDY_enq),
					       .RDY_deq(coreFix_aluExe_1_regToExeQ$RDY_deq),
					       .first(coreFix_aluExe_1_regToExeQ$first),
					       .RDY_first(coreFix_aluExe_1_regToExeQ$RDY_first),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_aluExe_1_rsAlu
  mkReservationStationAlu coreFix_aluExe_1_rsAlu(.CLK(CLK),
						 .RST_N(RST_N),
						 .enq_x(coreFix_aluExe_1_rsAlu$enq_x),
						 .setRegReady_0_put(coreFix_aluExe_1_rsAlu$setRegReady_0_put),
						 .setRegReady_1_put(coreFix_aluExe_1_rsAlu$setRegReady_1_put),
						 .setRegReady_2_put(coreFix_aluExe_1_rsAlu$setRegReady_2_put),
						 .setRegReady_3_put(coreFix_aluExe_1_rsAlu$setRegReady_3_put),
						 .setRegReady_4_put(coreFix_aluExe_1_rsAlu$setRegReady_4_put),
						 .setRobEnqTime_t(coreFix_aluExe_1_rsAlu$setRobEnqTime_t),
						 .specUpdate_correctSpeculation_mask(coreFix_aluExe_1_rsAlu$specUpdate_correctSpeculation_mask),
						 .specUpdate_incorrectSpeculation_kill_all(coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_all),
						 .specUpdate_incorrectSpeculation_kill_tag(coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag),
						 .EN_enq(coreFix_aluExe_1_rsAlu$EN_enq),
						 .EN_setRobEnqTime(coreFix_aluExe_1_rsAlu$EN_setRobEnqTime),
						 .EN_doDispatch(coreFix_aluExe_1_rsAlu$EN_doDispatch),
						 .EN_setRegReady_0_put(coreFix_aluExe_1_rsAlu$EN_setRegReady_0_put),
						 .EN_setRegReady_1_put(coreFix_aluExe_1_rsAlu$EN_setRegReady_1_put),
						 .EN_setRegReady_2_put(coreFix_aluExe_1_rsAlu$EN_setRegReady_2_put),
						 .EN_setRegReady_3_put(coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put),
						 .EN_setRegReady_4_put(coreFix_aluExe_1_rsAlu$EN_setRegReady_4_put),
						 .EN_specUpdate_incorrectSpeculation(coreFix_aluExe_1_rsAlu$EN_specUpdate_incorrectSpeculation),
						 .EN_specUpdate_correctSpeculation(coreFix_aluExe_1_rsAlu$EN_specUpdate_correctSpeculation),
						 .RDY_enq(coreFix_aluExe_1_rsAlu$RDY_enq),
						 .canEnq(coreFix_aluExe_1_rsAlu$canEnq),
						 .RDY_canEnq(),
						 .RDY_setRobEnqTime(),
						 .dispatchData(coreFix_aluExe_1_rsAlu$dispatchData),
						 .RDY_dispatchData(coreFix_aluExe_1_rsAlu$RDY_dispatchData),
						 .RDY_doDispatch(coreFix_aluExe_1_rsAlu$RDY_doDispatch),
						 .RDY_setRegReady_0_put(),
						 .RDY_setRegReady_1_put(),
						 .RDY_setRegReady_2_put(),
						 .RDY_setRegReady_3_put(),
						 .RDY_setRegReady_4_put(),
						 .approximateCount(coreFix_aluExe_1_rsAlu$approximateCount),
						 .RDY_approximateCount(),
						 .isFull_ehrPort0(),
						 .RDY_isFull_ehrPort0(),
						 .RDY_specUpdate_incorrectSpeculation(),
						 .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_dispToRegQ
  mkFpuMulDivDispToRegFifo coreFix_fpuMulDivExe_0_dispToRegQ(.CLK(CLK),
							     .RST_N(RST_N),
							     .enq_x(coreFix_fpuMulDivExe_0_dispToRegQ$enq_x),
							     .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_correctSpeculation_mask),
							     .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all),
							     .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag),
							     .EN_enq(coreFix_fpuMulDivExe_0_dispToRegQ$EN_enq),
							     .EN_deq(coreFix_fpuMulDivExe_0_dispToRegQ$EN_deq),
							     .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation),
							     .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_correctSpeculation),
							     .RDY_enq(coreFix_fpuMulDivExe_0_dispToRegQ$RDY_enq),
							     .RDY_deq(coreFix_fpuMulDivExe_0_dispToRegQ$RDY_deq),
							     .first(coreFix_fpuMulDivExe_0_dispToRegQ$first),
							     .RDY_first(coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first),
							     .RDY_specUpdate_incorrectSpeculation(),
							     .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_fpuExec_divQ
  mkMinimumExecQ coreFix_fpuMulDivExe_0_fpuExec_divQ(.CLK(CLK),
						     .RST_N(RST_N),
						     .enq_x(coreFix_fpuMulDivExe_0_fpuExec_divQ$enq_x),
						     .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_correctSpeculation_mask),
						     .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_all),
						     .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag),
						     .EN_enq(coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_enq),
						     .EN_deq(coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_deq),
						     .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_incorrectSpeculation),
						     .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_correctSpeculation),
						     .RDY_enq(coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_enq),
						     .RDY_deq(coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_deq),
						     .first_data(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data),
						     .RDY_first_data(coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_data),
						     .first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_poisoned),
						     .RDY_first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_poisoned),
						     .RDY_specUpdate_incorrectSpeculation(),
						     .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_div
  mkDoubleDiv coreFix_fpuMulDivExe_0_fpuExec_double_div(.CLK(CLK),
							.RST_N(RST_N),
							.request_put(coreFix_fpuMulDivExe_0_fpuExec_double_div$request_put),
							.EN_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_request_put),
							.EN_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_response_get),
							.RDY_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_request_put),
							.response_get(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get),
							.RDY_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_response_get));

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_fma
  mkDoubleFMA coreFix_fpuMulDivExe_0_fpuExec_double_fma(.CLK(CLK),
							.RST_N(RST_N),
							.request_put(coreFix_fpuMulDivExe_0_fpuExec_double_fma$request_put),
							.EN_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_request_put),
							.EN_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_response_get),
							.RDY_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_request_put),
							.response_get(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get),
							.RDY_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_response_get));

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_sqrt
  mkDoubleSqrt coreFix_fpuMulDivExe_0_fpuExec_double_sqrt(.CLK(CLK),
							  .RST_N(RST_N),
							  .request_put(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$request_put),
							  .EN_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_request_put),
							  .EN_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_response_get),
							  .RDY_request_put(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_request_put),
							  .response_get(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get),
							  .RDY_response_get(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_response_get));

  // submodule coreFix_fpuMulDivExe_0_fpuExec_fmaQ
  mkFmaExecQ coreFix_fpuMulDivExe_0_fpuExec_fmaQ(.CLK(CLK),
						 .RST_N(RST_N),
						 .enq_x(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$enq_x),
						 .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_correctSpeculation_mask),
						 .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_all),
						 .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag),
						 .EN_enq(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_enq),
						 .EN_deq(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_deq),
						 .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_incorrectSpeculation),
						 .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_correctSpeculation),
						 .RDY_enq(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_enq),
						 .RDY_deq(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_deq),
						 .first_data(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data),
						 .RDY_first_data(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_data),
						 .first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_poisoned),
						 .RDY_first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_poisoned),
						 .RDY_specUpdate_incorrectSpeculation(),
						 .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_fpuExec_simpleQ
  mkSimpleRespQ coreFix_fpuMulDivExe_0_fpuExec_simpleQ(.CLK(CLK),
						       .RST_N(RST_N),
						       .enq_x(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$enq_x),
						       .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_correctSpeculation_mask),
						       .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_all),
						       .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag),
						       .EN_enq(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_enq),
						       .EN_deq(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_deq),
						       .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_incorrectSpeculation),
						       .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_correctSpeculation),
						       .RDY_enq(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_enq),
						       .RDY_deq(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_deq),
						       .first(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first),
						       .RDY_first(coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_first),
						       .RDY_specUpdate_incorrectSpeculation(),
						       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_fpuExec_sqrtQ
  mkMinimumExecQ coreFix_fpuMulDivExe_0_fpuExec_sqrtQ(.CLK(CLK),
						      .RST_N(RST_N),
						      .enq_x(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$enq_x),
						      .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_correctSpeculation_mask),
						      .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_all),
						      .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag),
						      .EN_enq(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_enq),
						      .EN_deq(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_deq),
						      .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_incorrectSpeculation),
						      .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_correctSpeculation),
						      .RDY_enq(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_enq),
						      .RDY_deq(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_deq),
						      .first_data(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data),
						      .RDY_first_data(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_data),
						      .first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_poisoned),
						      .RDY_first_poisoned(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_poisoned),
						      .RDY_specUpdate_incorrectSpeculation(),
						      .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divQ
  mkDivExecQ coreFix_fpuMulDivExe_0_mulDivExec_divQ(.CLK(CLK),
						    .RST_N(RST_N),
						    .enq_x(coreFix_fpuMulDivExe_0_mulDivExec_divQ$enq_x),
						    .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_correctSpeculation_mask),
						    .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_all),
						    .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag),
						    .EN_enq(coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_enq),
						    .EN_deq(coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_deq),
						    .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_incorrectSpeculation),
						    .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_correctSpeculation),
						    .RDY_enq(coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_enq),
						    .RDY_deq(coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_deq),
						    .first_data(coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data),
						    .RDY_first_data(coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_data),
						    .first_poisoned(coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_poisoned),
						    .RDY_first_poisoned(coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_poisoned),
						    .RDY_specUpdate_incorrectSpeculation(),
						    .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ
  FIFO2 #(.width(32'd140),
	  .guarded(1'd1)) coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ(.RST(RST_N),
										     .CLK(CLK),
										     .D_IN(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_IN),
										     .ENQ(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$ENQ),
										     .DEQ(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$DEQ),
										     .CLR(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$CLR),
										     .D_OUT(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_OUT),
										     .FULL_N(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$FULL_N),
										     .EMPTY_N(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$EMPTY_N));

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ
  FIFO2 #(.width(32'd64),
	  .guarded(1'd1)) coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ(.RST(RST_N),
										    .CLK(CLK),
										    .D_IN(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$D_IN),
										    .ENQ(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$ENQ),
										    .DEQ(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$DEQ),
										    .CLR(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$CLR),
										    .D_OUT(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$D_OUT),
										    .FULL_N(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$FULL_N),
										    .EMPTY_N(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$EMPTY_N));

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ
  FIFO2 #(.width(32'd204),
	  .guarded(1'd1)) coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ(.RST(RST_N),
										 .CLK(CLK),
										 .D_IN(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_IN),
										 .ENQ(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$ENQ),
										 .DEQ(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$DEQ),
										 .CLR(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$CLR),
										 .D_OUT(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT),
										 .FULL_N(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$FULL_N),
										 .EMPTY_N(coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$EMPTY_N));

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulQ
  mkMulExecQ coreFix_fpuMulDivExe_0_mulDivExec_mulQ(.CLK(CLK),
						    .RST_N(RST_N),
						    .enq_x(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$enq_x),
						    .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_correctSpeculation_mask),
						    .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_all),
						    .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag),
						    .EN_enq(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_enq),
						    .EN_deq(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_deq),
						    .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_incorrectSpeculation),
						    .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_correctSpeculation),
						    .RDY_enq(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_enq),
						    .RDY_deq(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_deq),
						    .first_data(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data),
						    .RDY_first_data(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_data),
						    .first_poisoned(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_poisoned),
						    .RDY_first_poisoned(coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_poisoned),
						    .RDY_specUpdate_incorrectSpeculation(),
						    .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ
  SizedFIFO #(.p1width(32'd128),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd0)) coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ(.RST(RST_N),
									      .CLK(CLK),
									      .D_IN(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_IN),
									      .ENQ(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$ENQ),
									      .DEQ(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$DEQ),
									      .CLR(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$CLR),
									      .D_OUT(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_OUT),
									      .FULL_N(),
									      .EMPTY_N(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$EMPTY_N));

  // submodule coreFix_fpuMulDivExe_0_regToExeQ
  mkFpuMulDivRegToExeFifo coreFix_fpuMulDivExe_0_regToExeQ(.CLK(CLK),
							   .RST_N(RST_N),
							   .enq_x(coreFix_fpuMulDivExe_0_regToExeQ$enq_x),
							   .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_correctSpeculation_mask),
							   .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all),
							   .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag),
							   .EN_enq(coreFix_fpuMulDivExe_0_regToExeQ$EN_enq),
							   .EN_deq(coreFix_fpuMulDivExe_0_regToExeQ$EN_deq),
							   .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation),
							   .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_correctSpeculation),
							   .RDY_enq(coreFix_fpuMulDivExe_0_regToExeQ$RDY_enq),
							   .RDY_deq(coreFix_fpuMulDivExe_0_regToExeQ$RDY_deq),
							   .first(coreFix_fpuMulDivExe_0_regToExeQ$first),
							   .RDY_first(coreFix_fpuMulDivExe_0_regToExeQ$RDY_first),
							   .RDY_specUpdate_incorrectSpeculation(),
							   .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_fpuMulDivExe_0_rsFpuMulDiv
  mkReservationStationFpuMulDiv coreFix_fpuMulDivExe_0_rsFpuMulDiv(.CLK(CLK),
								   .RST_N(RST_N),
								   .enq_x(coreFix_fpuMulDivExe_0_rsFpuMulDiv$enq_x),
								   .setRegReady_0_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_0_put),
								   .setRegReady_1_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_1_put),
								   .setRegReady_2_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put),
								   .setRegReady_3_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_3_put),
								   .setRegReady_4_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put),
								   .setRobEnqTime_t(coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRobEnqTime_t),
								   .specUpdate_correctSpeculation_mask(coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_correctSpeculation_mask),
								   .specUpdate_incorrectSpeculation_kill_all(coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_all),
								   .specUpdate_incorrectSpeculation_kill_tag(coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag),
								   .EN_enq(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_enq),
								   .EN_setRobEnqTime(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRobEnqTime),
								   .EN_doDispatch(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_doDispatch),
								   .EN_setRegReady_0_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_0_put),
								   .EN_setRegReady_1_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_1_put),
								   .EN_setRegReady_2_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_2_put),
								   .EN_setRegReady_3_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put),
								   .EN_setRegReady_4_put(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_4_put),
								   .EN_specUpdate_incorrectSpeculation(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_incorrectSpeculation),
								   .EN_specUpdate_correctSpeculation(coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_correctSpeculation),
								   .RDY_enq(coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_enq),
								   .canEnq(coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq),
								   .RDY_canEnq(),
								   .RDY_setRobEnqTime(),
								   .dispatchData(coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData),
								   .RDY_dispatchData(coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_dispatchData),
								   .RDY_doDispatch(coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_doDispatch),
								   .RDY_setRegReady_0_put(),
								   .RDY_setRegReady_1_put(),
								   .RDY_setRegReady_2_put(),
								   .RDY_setRegReady_3_put(),
								   .RDY_setRegReady_4_put(),
								   .approximateCount(),
								   .RDY_approximateCount(),
								   .isFull_ehrPort0(),
								   .RDY_isFull_ehrPort0(),
								   .RDY_specUpdate_incorrectSpeculation(),
								   .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqMshr
  mkDCRqMshrWrapper coreFix_memExe_dMem_cache_m_banks_0_cRqMshr(.CLK(CLK),
								.RST_N(RST_N),
								.cRqTransfer_getEmptyEntryInit_r(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit_r),
								.cRqTransfer_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq_n),
								.pipelineResp_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq_n),
								.pipelineResp_getSlot_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot_n),
								.pipelineResp_getState_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState_n),
								.pipelineResp_getSucc_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc_n),
								.pipelineResp_releaseEntry_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n),
								.pipelineResp_searchEndOfChain_addr(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain_addr),
								.pipelineResp_setData_d(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_d),
								.pipelineResp_setData_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_n),
								.pipelineResp_setStateSlot_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_n),
								.pipelineResp_setStateSlot_slot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_slot),
								.pipelineResp_setStateSlot_state(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_state),
								.pipelineResp_setSucc_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_n),
								.pipelineResp_setSucc_succ(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_succ),
								.sendRqToP_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq_n),
								.sendRqToP_getSlot_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot_n),
								.sendRsToP_cRq_getData_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData_n),
								.sendRsToP_cRq_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq_n),
								.sendRsToP_cRq_getSlot_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot_n),
								.sendRsToP_cRq_getState_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState_n),
								.sendRsToP_cRq_setWaitSt_setSlot_clearData_n(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_n),
								.sendRsToP_cRq_setWaitSt_setSlot_clearData_slot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_slot),
								.EN_cRqTransfer_getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_cRqTransfer_getEmptyEntryInit),
								.EN_sendRsToP_cRq_setWaitSt_setSlot_clearData(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_sendRsToP_cRq_setWaitSt_setSlot_clearData),
								.EN_pipelineResp_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_releaseEntry),
								.EN_pipelineResp_setData(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setData),
								.EN_pipelineResp_setStateSlot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setStateSlot),
								.EN_pipelineResp_setSucc(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setSucc),
								.EN_stuck_get(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_stuck_get),
								.cRqTransfer_getRq(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq),
								.RDY_cRqTransfer_getRq(),
								.cRqTransfer_getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit),
								.RDY_cRqTransfer_getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_cRqTransfer_getEmptyEntryInit),
								.sendRsToP_cRq_getState(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState),
								.RDY_sendRsToP_cRq_getState(),
								.sendRsToP_cRq_getRq(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq),
								.RDY_sendRsToP_cRq_getRq(),
								.sendRsToP_cRq_getSlot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot),
								.RDY_sendRsToP_cRq_getSlot(),
								.sendRsToP_cRq_getData(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData),
								.RDY_sendRsToP_cRq_getData(),
								.RDY_sendRsToP_cRq_setWaitSt_setSlot_clearData(),
								.sendRqToP_getRq(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq),
								.RDY_sendRqToP_getRq(),
								.sendRqToP_getSlot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot),
								.RDY_sendRqToP_getSlot(),
								.RDY_pipelineResp_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry),
								.pipelineResp_getState(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState),
								.RDY_pipelineResp_getState(),
								.pipelineResp_getRq(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq),
								.RDY_pipelineResp_getRq(),
								.pipelineResp_getSlot(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot),
								.RDY_pipelineResp_getSlot(),
								.RDY_pipelineResp_setData(),
								.RDY_pipelineResp_setStateSlot(),
								.pipelineResp_getSucc(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc),
								.RDY_pipelineResp_getSucc(),
								.RDY_pipelineResp_setSucc(),
								.pipelineResp_searchEndOfChain(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain),
								.RDY_pipelineResp_searchEndOfChain(),
								.emptyForFlush(),
								.RDY_emptyForFlush(),
								.stuck_get(),
								.RDY_stuck_get());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0(.CLK(CLK),
												.D_IN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0$D_IN),
												.EN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0$EN),
												.Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1(.CLK(CLK),
												.D_IN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$D_IN),
												.EN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$EN),
												.Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0(.CLK(CLK),
											      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0$D_IN),
											      .EN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0$EN),
											      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1(.CLK(CLK),
											      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1$D_IN),
											      .EN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1$EN),
											      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2(.CLK(CLK),
											      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$D_IN),
											      .EN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$EN),
											      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0(.CLK(CLK),
											      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0$D_IN),
											      .EN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0$EN),
											      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1(.CLK(CLK),
											      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1$D_IN),
											      .EN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1$EN),
											      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2(.CLK(CLK),
											      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$D_IN),
											      .EN(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$EN),
											      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0(.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0$D_IN),
											.EN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0$EN),
											.Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1(.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$D_IN),
											.EN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$EN),
											.Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0(.CLK(CLK),
										    .D_IN(coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$D_IN),
										    .EN(coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$EN),
										    .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1(.CLK(CLK),
										    .D_IN(coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$D_IN),
										    .EN(coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$EN),
										    .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_pRqMshr
  mkDPRqMshrWrapper coreFix_memExe_dMem_cache_m_banks_0_pRqMshr(.CLK(CLK),
								.RST_N(RST_N),
								.getEmptyEntryInit_r(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit_r),
								.pipelineResp_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq_n),
								.pipelineResp_getState_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getState_n),
								.pipelineResp_releaseEntry_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_releaseEntry_n),
								.pipelineResp_setDone_setData_d(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_d),
								.pipelineResp_setDone_setData_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_n),
								.sendRsToP_pRq_getData_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData_n),
								.sendRsToP_pRq_getRq_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq_n),
								.sendRsToP_pRq_releaseEntry_n(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_releaseEntry_n),
								.EN_getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_getEmptyEntryInit),
								.EN_sendRsToP_pRq_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_sendRsToP_pRq_releaseEntry),
								.EN_pipelineResp_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_releaseEntry),
								.EN_pipelineResp_setDone_setData(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_setDone_setData),
								.EN_stuck_get(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_stuck_get),
								.getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit),
								.RDY_getEmptyEntryInit(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_getEmptyEntryInit),
								.sendRsToP_pRq_getRq(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq),
								.RDY_sendRsToP_pRq_getRq(),
								.sendRsToP_pRq_getData(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData),
								.RDY_sendRsToP_pRq_getData(),
								.RDY_sendRsToP_pRq_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_sendRsToP_pRq_releaseEntry),
								.pipelineResp_getRq(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq),
								.RDY_pipelineResp_getRq(),
								.pipelineResp_getState(),
								.RDY_pipelineResp_getState(),
								.RDY_pipelineResp_releaseEntry(coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_pipelineResp_releaseEntry),
								.RDY_pipelineResp_setDone_setData(),
								.stuck_get(),
								.RDY_stuck_get());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_pipeline
  mkDPipeline coreFix_memExe_dMem_cache_m_banks_0_pipeline(.CLK(CLK),
							   .RST_N(RST_N),
							   .deqWrite_swapRq(coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq),
							   .deqWrite_updateRep(coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep),
							   .deqWrite_wrRam(coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam),
							   .send_r(coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r),
							   .EN_send(coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_send),
							   .EN_deqWrite(coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_deqWrite),
							   .RDY_send(coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send),
							   .first(coreFix_memExe_dMem_cache_m_banks_0_pipeline$first),
							   .RDY_first(coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first),
							   .RDY_deqWrite(coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0(.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0$D_IN),
											.EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0$EN),
											.Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1(.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$D_IN),
											.EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$EN),
											.Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0(.CLK(CLK),
										       .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0$D_IN),
										       .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0$EN),
										       .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1(.CLK(CLK),
										       .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$D_IN),
										       .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$EN),
										       .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2(.CLK(CLK),
										       .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$D_IN),
										       .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$EN),
										       .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ
  SizedFIFO #(.p1width(32'd3),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ(.RST(RST_N),
									      .CLK(CLK),
									      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_IN),
									      .ENQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$ENQ),
									      .DEQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$DEQ),
									      .CLR(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$CLR),
									      .D_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT),
									      .FULL_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$FULL_N),
									      .EMPTY_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$EMPTY_N));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp
  FIFO2 #(.width(32'd3),
	  .guarded(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp(.RST(RST_N),
										       .CLK(CLK),
										       .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_IN),
										       .ENQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$ENQ),
										       .DEQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$DEQ),
										       .CLR(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$CLR),
										       .D_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_OUT),
										       .FULL_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$FULL_N),
										       .EMPTY_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$EMPTY_N));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP
  FIFO2 #(.width(32'd3),
	  .guarded(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP(.RST(RST_N),
										    .CLK(CLK),
										    .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_IN),
										    .ENQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$ENQ),
										    .DEQ(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$DEQ),
										    .CLR(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$CLR),
										    .D_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_OUT),
										    .FULL_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$FULL_N),
										    .EMPTY_N(coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$EMPTY_N));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0(.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0$D_IN),
											.EN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0$EN),
											.Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1(.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$D_IN),
											.EN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$EN),
											.Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ
  SizedFIFO #(.p1width(32'd4),
	      .p2depth(32'd12),
	      .p3cntr_width(32'd4),
	      .guarded(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ(.RST(RST_N),
									      .CLK(CLK),
									      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_IN),
									      .ENQ(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$ENQ),
									      .DEQ(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$DEQ),
									      .CLR(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$CLR),
									      .D_OUT(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT),
									      .FULL_N(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$FULL_N),
									      .EMPTY_N(coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$EMPTY_N));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0(.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0$D_IN),
											.EN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0$EN),
											.Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1(.CLK(CLK),
											.D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$D_IN),
											.EN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$EN),
											.Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1$EN),
										      .Q_OUT());

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2(.CLK(CLK),
										      .D_IN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$D_IN),
										      .EN(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$EN),
										      .Q_OUT(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0(.CLK(CLK),
									  .D_IN(coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0$D_IN),
									  .EN(coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0$EN),
									  .Q_OUT());

  // submodule coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1(.CLK(CLK),
									  .D_IN(coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$D_IN),
									  .EN(coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$EN),
									  .Q_OUT(coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0(.CLK(CLK),
									.D_IN(coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0$D_IN),
									.EN(coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0$EN),
									.Q_OUT());

  // submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1(.CLK(CLK),
									.D_IN(coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1$D_IN),
									.EN(coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1$EN),
									.Q_OUT());

  // submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2(.CLK(CLK),
									.D_IN(coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$D_IN),
									.EN(coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$EN),
									.Q_OUT(coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0(.CLK(CLK),
									.D_IN(coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0$D_IN),
									.EN(coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0$EN),
									.Q_OUT());

  // submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1(.CLK(CLK),
									.D_IN(coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1$D_IN),
									.EN(coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1$EN),
									.Q_OUT());

  // submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2(.CLK(CLK),
									.D_IN(coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$D_IN),
									.EN(coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$EN),
									.Q_OUT(coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_dTlb
  mkDTlbSynth coreFix_memExe_dTlb(.CLK(CLK),
				  .RST_N(RST_N),
				  .perf_req_r(coreFix_memExe_dTlb$perf_req_r),
				  .perf_setStatus_doStats(coreFix_memExe_dTlb$perf_setStatus_doStats),
				  .procReq_req(coreFix_memExe_dTlb$procReq_req),
				  .specUpdate_correctSpeculation_mask(coreFix_memExe_dTlb$specUpdate_correctSpeculation_mask),
				  .specUpdate_incorrectSpeculation_kill_all(coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_all),
				  .specUpdate_incorrectSpeculation_kill_tag(coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag),
				  .toParent_ldTransRsFromP_enq_x(coreFix_memExe_dTlb$toParent_ldTransRsFromP_enq_x),
				  .updateVMInfo_vm(coreFix_memExe_dTlb$updateVMInfo_vm),
				  .EN_flush(coreFix_memExe_dTlb$EN_flush),
				  .EN_updateVMInfo(coreFix_memExe_dTlb$EN_updateVMInfo),
				  .EN_procReq(coreFix_memExe_dTlb$EN_procReq),
				  .EN_deqProcResp(coreFix_memExe_dTlb$EN_deqProcResp),
				  .EN_toParent_rqToP_deq(coreFix_memExe_dTlb$EN_toParent_rqToP_deq),
				  .EN_toParent_ldTransRsFromP_enq(coreFix_memExe_dTlb$EN_toParent_ldTransRsFromP_enq),
				  .EN_toParent_flush_request_get(coreFix_memExe_dTlb$EN_toParent_flush_request_get),
				  .EN_toParent_flush_response_put(coreFix_memExe_dTlb$EN_toParent_flush_response_put),
				  .EN_specUpdate_incorrectSpeculation(coreFix_memExe_dTlb$EN_specUpdate_incorrectSpeculation),
				  .EN_specUpdate_correctSpeculation(coreFix_memExe_dTlb$EN_specUpdate_correctSpeculation),
				  .EN_perf_setStatus(coreFix_memExe_dTlb$EN_perf_setStatus),
				  .EN_perf_req(coreFix_memExe_dTlb$EN_perf_req),
				  .EN_perf_resp(coreFix_memExe_dTlb$EN_perf_resp),
				  .flush_done(coreFix_memExe_dTlb$flush_done),
				  .RDY_flush_done(),
				  .RDY_flush(coreFix_memExe_dTlb$RDY_flush),
				  .RDY_updateVMInfo(),
				  .noPendingReq(coreFix_memExe_dTlb$noPendingReq),
				  .RDY_noPendingReq(),
				  .RDY_procReq(coreFix_memExe_dTlb$RDY_procReq),
				  .procResp(coreFix_memExe_dTlb$procResp),
				  .RDY_procResp(coreFix_memExe_dTlb$RDY_procResp),
				  .RDY_deqProcResp(coreFix_memExe_dTlb$RDY_deqProcResp),
				  .toParent_rqToP_notEmpty(),
				  .RDY_toParent_rqToP_notEmpty(),
				  .RDY_toParent_rqToP_deq(coreFix_memExe_dTlb$RDY_toParent_rqToP_deq),
				  .toParent_rqToP_first(coreFix_memExe_dTlb$toParent_rqToP_first),
				  .RDY_toParent_rqToP_first(coreFix_memExe_dTlb$RDY_toParent_rqToP_first),
				  .toParent_ldTransRsFromP_notFull(),
				  .RDY_toParent_ldTransRsFromP_notFull(),
				  .RDY_toParent_ldTransRsFromP_enq(coreFix_memExe_dTlb$RDY_toParent_ldTransRsFromP_enq),
				  .RDY_toParent_flush_request_get(coreFix_memExe_dTlb$RDY_toParent_flush_request_get),
				  .RDY_toParent_flush_response_put(coreFix_memExe_dTlb$RDY_toParent_flush_response_put),
				  .RDY_specUpdate_incorrectSpeculation(),
				  .RDY_specUpdate_correctSpeculation(),
				  .RDY_perf_setStatus(),
				  .RDY_perf_req(),
				  .perf_resp(),
				  .RDY_perf_resp(),
				  .perf_respValid(),
				  .RDY_perf_respValid());

  // submodule coreFix_memExe_dispToRegQ
  mkMemDispToRegFifo coreFix_memExe_dispToRegQ(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_memExe_dispToRegQ$enq_x),
					       .specUpdate_correctSpeculation_mask(coreFix_memExe_dispToRegQ$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_memExe_dispToRegQ$EN_enq),
					       .EN_deq(coreFix_memExe_dispToRegQ$EN_deq),
					       .EN_specUpdate_incorrectSpeculation(coreFix_memExe_dispToRegQ$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_memExe_dispToRegQ$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_memExe_dispToRegQ$RDY_enq),
					       .RDY_deq(coreFix_memExe_dispToRegQ$RDY_deq),
					       .first(coreFix_memExe_dispToRegQ$first),
					       .RDY_first(coreFix_memExe_dispToRegQ$RDY_first),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_memExe_forwardQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_forwardQ_clearReq_dummy2_0(.CLK(CLK),
								     .D_IN(coreFix_memExe_forwardQ_clearReq_dummy2_0$D_IN),
								     .EN(coreFix_memExe_forwardQ_clearReq_dummy2_0$EN),
								     .Q_OUT());

  // submodule coreFix_memExe_forwardQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_forwardQ_clearReq_dummy2_1(.CLK(CLK),
								     .D_IN(coreFix_memExe_forwardQ_clearReq_dummy2_1$D_IN),
								     .EN(coreFix_memExe_forwardQ_clearReq_dummy2_1$EN),
								     .Q_OUT(coreFix_memExe_forwardQ_clearReq_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_forwardQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_forwardQ_deqReq_dummy2_0(.CLK(CLK),
								   .D_IN(coreFix_memExe_forwardQ_deqReq_dummy2_0$D_IN),
								   .EN(coreFix_memExe_forwardQ_deqReq_dummy2_0$EN),
								   .Q_OUT());

  // submodule coreFix_memExe_forwardQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_forwardQ_deqReq_dummy2_1(.CLK(CLK),
								   .D_IN(coreFix_memExe_forwardQ_deqReq_dummy2_1$D_IN),
								   .EN(coreFix_memExe_forwardQ_deqReq_dummy2_1$EN),
								   .Q_OUT());

  // submodule coreFix_memExe_forwardQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_forwardQ_deqReq_dummy2_2(.CLK(CLK),
								   .D_IN(coreFix_memExe_forwardQ_deqReq_dummy2_2$D_IN),
								   .EN(coreFix_memExe_forwardQ_deqReq_dummy2_2$EN),
								   .Q_OUT(coreFix_memExe_forwardQ_deqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_forwardQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_forwardQ_enqReq_dummy2_0(.CLK(CLK),
								   .D_IN(coreFix_memExe_forwardQ_enqReq_dummy2_0$D_IN),
								   .EN(coreFix_memExe_forwardQ_enqReq_dummy2_0$EN),
								   .Q_OUT());

  // submodule coreFix_memExe_forwardQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_forwardQ_enqReq_dummy2_1(.CLK(CLK),
								   .D_IN(coreFix_memExe_forwardQ_enqReq_dummy2_1$D_IN),
								   .EN(coreFix_memExe_forwardQ_enqReq_dummy2_1$EN),
								   .Q_OUT());

  // submodule coreFix_memExe_forwardQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_forwardQ_enqReq_dummy2_2(.CLK(CLK),
								   .D_IN(coreFix_memExe_forwardQ_enqReq_dummy2_2$D_IN),
								   .EN(coreFix_memExe_forwardQ_enqReq_dummy2_2$EN),
								   .Q_OUT(coreFix_memExe_forwardQ_enqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_lsq
  mkSplitLSQ coreFix_memExe_lsq(.CLK(CLK),
				.RST_N(RST_N),
				.enqLd_dst(coreFix_memExe_lsq$enqLd_dst),
				.enqLd_inst_tag(coreFix_memExe_lsq$enqLd_inst_tag),
				.enqLd_mem_inst(coreFix_memExe_lsq$enqLd_mem_inst),
				.enqLd_spec_bits(coreFix_memExe_lsq$enqLd_spec_bits),
				.enqSt_dst(coreFix_memExe_lsq$enqSt_dst),
				.enqSt_inst_tag(coreFix_memExe_lsq$enqSt_inst_tag),
				.enqSt_mem_inst(coreFix_memExe_lsq$enqSt_mem_inst),
				.enqSt_spec_bits(coreFix_memExe_lsq$enqSt_spec_bits),
				.getHit_t(coreFix_memExe_lsq$getHit_t),
				.getOrigBE_t(coreFix_memExe_lsq$getOrigBE_t),
				.issueLd_lsqTag(coreFix_memExe_lsq$issueLd_lsqTag),
				.issueLd_paddr(coreFix_memExe_lsq$issueLd_paddr),
				.issueLd_sbRes(coreFix_memExe_lsq$issueLd_sbRes),
				.issueLd_shiftedBE(coreFix_memExe_lsq$issueLd_shiftedBE),
				.respLd_alignedData(coreFix_memExe_lsq$respLd_alignedData),
				.respLd_t(coreFix_memExe_lsq$respLd_t),
				.setAtCommit_0_put(coreFix_memExe_lsq$setAtCommit_0_put),
				.setAtCommit_1_put(coreFix_memExe_lsq$setAtCommit_1_put),
				.specUpdate_correctSpeculation_mask(coreFix_memExe_lsq$specUpdate_correctSpeculation_mask),
				.specUpdate_incorrectSpeculation_kill_all(coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_all),
				.specUpdate_incorrectSpeculation_kill_tag(coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag),
				.updateAddr_fault(coreFix_memExe_lsq$updateAddr_fault),
				.updateAddr_isMMIO(coreFix_memExe_lsq$updateAddr_isMMIO),
				.updateAddr_lsqTag(coreFix_memExe_lsq$updateAddr_lsqTag),
				.updateAddr_paddr(coreFix_memExe_lsq$updateAddr_paddr),
				.updateAddr_shiftedBE(coreFix_memExe_lsq$updateAddr_shiftedBE),
				.updateData_d(coreFix_memExe_lsq$updateData_d),
				.updateData_t(coreFix_memExe_lsq$updateData_t),
				.wakeupLdStalledBySB_sbIdx(coreFix_memExe_lsq$wakeupLdStalledBySB_sbIdx),
				.EN_enqLd(coreFix_memExe_lsq$EN_enqLd),
				.EN_enqSt(coreFix_memExe_lsq$EN_enqSt),
				.EN_getHit(coreFix_memExe_lsq$EN_getHit),
				.EN_updateData(coreFix_memExe_lsq$EN_updateData),
				.EN_updateAddr(coreFix_memExe_lsq$EN_updateAddr),
				.EN_issueLd(coreFix_memExe_lsq$EN_issueLd),
				.EN_getIssueLd(coreFix_memExe_lsq$EN_getIssueLd),
				.EN_respLd(coreFix_memExe_lsq$EN_respLd),
				.EN_deqLd(coreFix_memExe_lsq$EN_deqLd),
				.EN_deqSt(coreFix_memExe_lsq$EN_deqSt),
				.EN_wakeupLdStalledBySB(coreFix_memExe_lsq$EN_wakeupLdStalledBySB),
				.EN_setAtCommit_0_put(coreFix_memExe_lsq$EN_setAtCommit_0_put),
				.EN_setAtCommit_1_put(coreFix_memExe_lsq$EN_setAtCommit_1_put),
				.EN_specUpdate_incorrectSpeculation(coreFix_memExe_lsq$EN_specUpdate_incorrectSpeculation),
				.EN_specUpdate_correctSpeculation(coreFix_memExe_lsq$EN_specUpdate_correctSpeculation),
				.enqLdTag(coreFix_memExe_lsq$enqLdTag),
				.RDY_enqLdTag(),
				.enqStTag(coreFix_memExe_lsq$enqStTag),
				.RDY_enqStTag(),
				.RDY_enqLd(coreFix_memExe_lsq$RDY_enqLd),
				.RDY_enqSt(coreFix_memExe_lsq$RDY_enqSt),
				.getOrigBE(coreFix_memExe_lsq$getOrigBE),
				.RDY_getOrigBE(),
				.getHit(coreFix_memExe_lsq$getHit),
				.RDY_getHit(),
				.RDY_updateData(),
				.updateAddr(coreFix_memExe_lsq$updateAddr),
				.RDY_updateAddr(),
				.issueLd(coreFix_memExe_lsq$issueLd),
				.RDY_issueLd(),
				.getIssueLd(coreFix_memExe_lsq$getIssueLd),
				.RDY_getIssueLd(coreFix_memExe_lsq$RDY_getIssueLd),
				.respLd(coreFix_memExe_lsq$respLd),
				.RDY_respLd(),
				.firstLd(coreFix_memExe_lsq$firstLd),
				.RDY_firstLd(coreFix_memExe_lsq$RDY_firstLd),
				.RDY_deqLd(coreFix_memExe_lsq$RDY_deqLd),
				.firstSt(coreFix_memExe_lsq$firstSt),
				.RDY_firstSt(coreFix_memExe_lsq$RDY_firstSt),
				.RDY_deqSt(coreFix_memExe_lsq$RDY_deqSt),
				.RDY_wakeupLdStalledBySB(),
				.stqEmpty(coreFix_memExe_lsq$stqEmpty),
				.RDY_stqEmpty(),
				.RDY_setAtCommit_0_put(),
				.RDY_setAtCommit_1_put(),
				.RDY_specUpdate_incorrectSpeculation(),
				.RDY_specUpdate_correctSpeculation(),
				.stqFull_ehrPort0(),
				.RDY_stqFull_ehrPort0(),
				.ldqFull_ehrPort0(),
				.RDY_ldqFull_ehrPort0(),
				.noWrongPathLoads(),
				.RDY_noWrongPathLoads());

  // submodule coreFix_memExe_memRespLdQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_memRespLdQ_clearReq_dummy2_0(.CLK(CLK),
								       .D_IN(coreFix_memExe_memRespLdQ_clearReq_dummy2_0$D_IN),
								       .EN(coreFix_memExe_memRespLdQ_clearReq_dummy2_0$EN),
								       .Q_OUT());

  // submodule coreFix_memExe_memRespLdQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_memRespLdQ_clearReq_dummy2_1(.CLK(CLK),
								       .D_IN(coreFix_memExe_memRespLdQ_clearReq_dummy2_1$D_IN),
								       .EN(coreFix_memExe_memRespLdQ_clearReq_dummy2_1$EN),
								       .Q_OUT(coreFix_memExe_memRespLdQ_clearReq_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_memRespLdQ_deqReq_dummy2_0(.CLK(CLK),
								     .D_IN(coreFix_memExe_memRespLdQ_deqReq_dummy2_0$D_IN),
								     .EN(coreFix_memExe_memRespLdQ_deqReq_dummy2_0$EN),
								     .Q_OUT());

  // submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_memRespLdQ_deqReq_dummy2_1(.CLK(CLK),
								     .D_IN(coreFix_memExe_memRespLdQ_deqReq_dummy2_1$D_IN),
								     .EN(coreFix_memExe_memRespLdQ_deqReq_dummy2_1$EN),
								     .Q_OUT());

  // submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_memRespLdQ_deqReq_dummy2_2(.CLK(CLK),
								     .D_IN(coreFix_memExe_memRespLdQ_deqReq_dummy2_2$D_IN),
								     .EN(coreFix_memExe_memRespLdQ_deqReq_dummy2_2$EN),
								     .Q_OUT(coreFix_memExe_memRespLdQ_deqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_memRespLdQ_enqReq_dummy2_0(.CLK(CLK),
								     .D_IN(coreFix_memExe_memRespLdQ_enqReq_dummy2_0$D_IN),
								     .EN(coreFix_memExe_memRespLdQ_enqReq_dummy2_0$EN),
								     .Q_OUT());

  // submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_memRespLdQ_enqReq_dummy2_1(.CLK(CLK),
								     .D_IN(coreFix_memExe_memRespLdQ_enqReq_dummy2_1$D_IN),
								     .EN(coreFix_memExe_memRespLdQ_enqReq_dummy2_1$EN),
								     .Q_OUT());

  // submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_memRespLdQ_enqReq_dummy2_2(.CLK(CLK),
								     .D_IN(coreFix_memExe_memRespLdQ_enqReq_dummy2_2$D_IN),
								     .EN(coreFix_memExe_memRespLdQ_enqReq_dummy2_2$EN),
								     .Q_OUT(coreFix_memExe_memRespLdQ_enqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_regToExeQ
  mkMemRegToExeFifo coreFix_memExe_regToExeQ(.CLK(CLK),
					     .RST_N(RST_N),
					     .enq_x(coreFix_memExe_regToExeQ$enq_x),
					     .specUpdate_correctSpeculation_mask(coreFix_memExe_regToExeQ$specUpdate_correctSpeculation_mask),
					     .specUpdate_incorrectSpeculation_kill_all(coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_all),
					     .specUpdate_incorrectSpeculation_kill_tag(coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag),
					     .EN_enq(coreFix_memExe_regToExeQ$EN_enq),
					     .EN_deq(coreFix_memExe_regToExeQ$EN_deq),
					     .EN_specUpdate_incorrectSpeculation(coreFix_memExe_regToExeQ$EN_specUpdate_incorrectSpeculation),
					     .EN_specUpdate_correctSpeculation(coreFix_memExe_regToExeQ$EN_specUpdate_correctSpeculation),
					     .RDY_enq(coreFix_memExe_regToExeQ$RDY_enq),
					     .RDY_deq(coreFix_memExe_regToExeQ$RDY_deq),
					     .first(coreFix_memExe_regToExeQ$first),
					     .RDY_first(coreFix_memExe_regToExeQ$RDY_first),
					     .RDY_specUpdate_incorrectSpeculation(),
					     .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_memExe_reqLdQ_data_0_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_data_0_dummy2_0(.CLK(CLK),
								 .D_IN(coreFix_memExe_reqLdQ_data_0_dummy2_0$D_IN),
								 .EN(coreFix_memExe_reqLdQ_data_0_dummy2_0$EN),
								 .Q_OUT());

  // submodule coreFix_memExe_reqLdQ_data_0_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_data_0_dummy2_1(.CLK(CLK),
								 .D_IN(coreFix_memExe_reqLdQ_data_0_dummy2_1$D_IN),
								 .EN(coreFix_memExe_reqLdQ_data_0_dummy2_1$EN),
								 .Q_OUT(coreFix_memExe_reqLdQ_data_0_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqLdQ_deqP_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_deqP_dummy2_0(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqLdQ_deqP_dummy2_0$D_IN),
							       .EN(coreFix_memExe_reqLdQ_deqP_dummy2_0$EN),
							       .Q_OUT());

  // submodule coreFix_memExe_reqLdQ_deqP_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_deqP_dummy2_1(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqLdQ_deqP_dummy2_1$D_IN),
							       .EN(coreFix_memExe_reqLdQ_deqP_dummy2_1$EN),
							       .Q_OUT());

  // submodule coreFix_memExe_reqLdQ_empty_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_empty_dummy2_0(.CLK(CLK),
								.D_IN(coreFix_memExe_reqLdQ_empty_dummy2_0$D_IN),
								.EN(coreFix_memExe_reqLdQ_empty_dummy2_0$EN),
								.Q_OUT());

  // submodule coreFix_memExe_reqLdQ_empty_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_empty_dummy2_1(.CLK(CLK),
								.D_IN(coreFix_memExe_reqLdQ_empty_dummy2_1$D_IN),
								.EN(coreFix_memExe_reqLdQ_empty_dummy2_1$EN),
								.Q_OUT(coreFix_memExe_reqLdQ_empty_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqLdQ_empty_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_empty_dummy2_2(.CLK(CLK),
								.D_IN(coreFix_memExe_reqLdQ_empty_dummy2_2$D_IN),
								.EN(coreFix_memExe_reqLdQ_empty_dummy2_2$EN),
								.Q_OUT(coreFix_memExe_reqLdQ_empty_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_reqLdQ_enqP_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_enqP_dummy2_0(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqLdQ_enqP_dummy2_0$D_IN),
							       .EN(coreFix_memExe_reqLdQ_enqP_dummy2_0$EN),
							       .Q_OUT());

  // submodule coreFix_memExe_reqLdQ_enqP_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_enqP_dummy2_1(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqLdQ_enqP_dummy2_1$D_IN),
							       .EN(coreFix_memExe_reqLdQ_enqP_dummy2_1$EN),
							       .Q_OUT());

  // submodule coreFix_memExe_reqLdQ_full_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_full_dummy2_0(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqLdQ_full_dummy2_0$D_IN),
							       .EN(coreFix_memExe_reqLdQ_full_dummy2_0$EN),
							       .Q_OUT(coreFix_memExe_reqLdQ_full_dummy2_0$Q_OUT));

  // submodule coreFix_memExe_reqLdQ_full_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_full_dummy2_1(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqLdQ_full_dummy2_1$D_IN),
							       .EN(coreFix_memExe_reqLdQ_full_dummy2_1$EN),
							       .Q_OUT(coreFix_memExe_reqLdQ_full_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqLdQ_full_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLdQ_full_dummy2_2(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqLdQ_full_dummy2_2$D_IN),
							       .EN(coreFix_memExe_reqLdQ_full_dummy2_2$EN),
							       .Q_OUT(coreFix_memExe_reqLdQ_full_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0(.CLK(CLK),
								      .D_IN(coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0$D_IN),
								      .EN(coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0$EN),
								      .Q_OUT());

  // submodule coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1(.CLK(CLK),
								      .D_IN(coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$D_IN),
								      .EN(coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$EN),
								      .Q_OUT(coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0(.CLK(CLK),
								    .D_IN(coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0$D_IN),
								    .EN(coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0$EN),
								    .Q_OUT());

  // submodule coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1(.CLK(CLK),
								    .D_IN(coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1$D_IN),
								    .EN(coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1$EN),
								    .Q_OUT());

  // submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_empty_dummy2_0(.CLK(CLK),
								     .D_IN(coreFix_memExe_reqLrScAmoQ_empty_dummy2_0$D_IN),
								     .EN(coreFix_memExe_reqLrScAmoQ_empty_dummy2_0$EN),
								     .Q_OUT());

  // submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_empty_dummy2_1(.CLK(CLK),
								     .D_IN(coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$D_IN),
								     .EN(coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$EN),
								     .Q_OUT(coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_empty_dummy2_2(.CLK(CLK),
								     .D_IN(coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$D_IN),
								     .EN(coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$EN),
								     .Q_OUT(coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0(.CLK(CLK),
								    .D_IN(coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0$D_IN),
								    .EN(coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0$EN),
								    .Q_OUT());

  // submodule coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1(.CLK(CLK),
								    .D_IN(coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1$D_IN),
								    .EN(coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1$EN),
								    .Q_OUT());

  // submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_full_dummy2_0(.CLK(CLK),
								    .D_IN(coreFix_memExe_reqLrScAmoQ_full_dummy2_0$D_IN),
								    .EN(coreFix_memExe_reqLrScAmoQ_full_dummy2_0$EN),
								    .Q_OUT(coreFix_memExe_reqLrScAmoQ_full_dummy2_0$Q_OUT));

  // submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_full_dummy2_1(.CLK(CLK),
								    .D_IN(coreFix_memExe_reqLrScAmoQ_full_dummy2_1$D_IN),
								    .EN(coreFix_memExe_reqLrScAmoQ_full_dummy2_1$EN),
								    .Q_OUT(coreFix_memExe_reqLrScAmoQ_full_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqLrScAmoQ_full_dummy2_2(.CLK(CLK),
								    .D_IN(coreFix_memExe_reqLrScAmoQ_full_dummy2_2$D_IN),
								    .EN(coreFix_memExe_reqLrScAmoQ_full_dummy2_2$EN),
								    .Q_OUT(coreFix_memExe_reqLrScAmoQ_full_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_reqStQ_data_0_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_data_0_dummy2_0(.CLK(CLK),
								 .D_IN(coreFix_memExe_reqStQ_data_0_dummy2_0$D_IN),
								 .EN(coreFix_memExe_reqStQ_data_0_dummy2_0$EN),
								 .Q_OUT());

  // submodule coreFix_memExe_reqStQ_data_0_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_data_0_dummy2_1(.CLK(CLK),
								 .D_IN(coreFix_memExe_reqStQ_data_0_dummy2_1$D_IN),
								 .EN(coreFix_memExe_reqStQ_data_0_dummy2_1$EN),
								 .Q_OUT(coreFix_memExe_reqStQ_data_0_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqStQ_deqP_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_deqP_dummy2_0(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqStQ_deqP_dummy2_0$D_IN),
							       .EN(coreFix_memExe_reqStQ_deqP_dummy2_0$EN),
							       .Q_OUT());

  // submodule coreFix_memExe_reqStQ_deqP_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_deqP_dummy2_1(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqStQ_deqP_dummy2_1$D_IN),
							       .EN(coreFix_memExe_reqStQ_deqP_dummy2_1$EN),
							       .Q_OUT());

  // submodule coreFix_memExe_reqStQ_empty_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_empty_dummy2_0(.CLK(CLK),
								.D_IN(coreFix_memExe_reqStQ_empty_dummy2_0$D_IN),
								.EN(coreFix_memExe_reqStQ_empty_dummy2_0$EN),
								.Q_OUT());

  // submodule coreFix_memExe_reqStQ_empty_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_empty_dummy2_1(.CLK(CLK),
								.D_IN(coreFix_memExe_reqStQ_empty_dummy2_1$D_IN),
								.EN(coreFix_memExe_reqStQ_empty_dummy2_1$EN),
								.Q_OUT(coreFix_memExe_reqStQ_empty_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqStQ_empty_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_empty_dummy2_2(.CLK(CLK),
								.D_IN(coreFix_memExe_reqStQ_empty_dummy2_2$D_IN),
								.EN(coreFix_memExe_reqStQ_empty_dummy2_2$EN),
								.Q_OUT(coreFix_memExe_reqStQ_empty_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_reqStQ_enqP_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_enqP_dummy2_0(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqStQ_enqP_dummy2_0$D_IN),
							       .EN(coreFix_memExe_reqStQ_enqP_dummy2_0$EN),
							       .Q_OUT());

  // submodule coreFix_memExe_reqStQ_enqP_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_enqP_dummy2_1(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqStQ_enqP_dummy2_1$D_IN),
							       .EN(coreFix_memExe_reqStQ_enqP_dummy2_1$EN),
							       .Q_OUT());

  // submodule coreFix_memExe_reqStQ_full_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_full_dummy2_0(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqStQ_full_dummy2_0$D_IN),
							       .EN(coreFix_memExe_reqStQ_full_dummy2_0$EN),
							       .Q_OUT(coreFix_memExe_reqStQ_full_dummy2_0$Q_OUT));

  // submodule coreFix_memExe_reqStQ_full_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_full_dummy2_1(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqStQ_full_dummy2_1$D_IN),
							       .EN(coreFix_memExe_reqStQ_full_dummy2_1$EN),
							       .Q_OUT(coreFix_memExe_reqStQ_full_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_reqStQ_full_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_reqStQ_full_dummy2_2(.CLK(CLK),
							       .D_IN(coreFix_memExe_reqStQ_full_dummy2_2$D_IN),
							       .EN(coreFix_memExe_reqStQ_full_dummy2_2$EN),
							       .Q_OUT(coreFix_memExe_reqStQ_full_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0(.CLK(CLK),
									 .D_IN(coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0$D_IN),
									 .EN(coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0$EN),
									 .Q_OUT());

  // submodule coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1(.CLK(CLK),
									 .D_IN(coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$D_IN),
									 .EN(coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$EN),
									 .Q_OUT(coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$Q_OUT));

  // submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0(.CLK(CLK),
								       .D_IN(coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0$D_IN),
								       .EN(coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0$EN),
								       .Q_OUT());

  // submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1(.CLK(CLK),
								       .D_IN(coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1$D_IN),
								       .EN(coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1$EN),
								       .Q_OUT());

  // submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2(.CLK(CLK),
								       .D_IN(coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$D_IN),
								       .EN(coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$EN),
								       .Q_OUT(coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0(.CLK(CLK),
								       .D_IN(coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$D_IN),
								       .EN(coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$EN),
								       .Q_OUT());

  // submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1(.CLK(CLK),
								       .D_IN(coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1$D_IN),
								       .EN(coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1$EN),
								       .Q_OUT());

  // submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2(.CLK(CLK),
								       .D_IN(coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$D_IN),
								       .EN(coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$EN),
								       .Q_OUT(coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$Q_OUT));

  // submodule coreFix_memExe_rsMem
  mkReservationStationMem coreFix_memExe_rsMem(.CLK(CLK),
					       .RST_N(RST_N),
					       .enq_x(coreFix_memExe_rsMem$enq_x),
					       .setRegReady_0_put(coreFix_memExe_rsMem$setRegReady_0_put),
					       .setRegReady_1_put(coreFix_memExe_rsMem$setRegReady_1_put),
					       .setRegReady_2_put(coreFix_memExe_rsMem$setRegReady_2_put),
					       .setRegReady_3_put(coreFix_memExe_rsMem$setRegReady_3_put),
					       .setRegReady_4_put(coreFix_memExe_rsMem$setRegReady_4_put),
					       .setRobEnqTime_t(coreFix_memExe_rsMem$setRobEnqTime_t),
					       .specUpdate_correctSpeculation_mask(coreFix_memExe_rsMem$specUpdate_correctSpeculation_mask),
					       .specUpdate_incorrectSpeculation_kill_all(coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_all),
					       .specUpdate_incorrectSpeculation_kill_tag(coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag),
					       .EN_enq(coreFix_memExe_rsMem$EN_enq),
					       .EN_setRobEnqTime(coreFix_memExe_rsMem$EN_setRobEnqTime),
					       .EN_doDispatch(coreFix_memExe_rsMem$EN_doDispatch),
					       .EN_setRegReady_0_put(coreFix_memExe_rsMem$EN_setRegReady_0_put),
					       .EN_setRegReady_1_put(coreFix_memExe_rsMem$EN_setRegReady_1_put),
					       .EN_setRegReady_2_put(coreFix_memExe_rsMem$EN_setRegReady_2_put),
					       .EN_setRegReady_3_put(coreFix_memExe_rsMem$EN_setRegReady_3_put),
					       .EN_setRegReady_4_put(coreFix_memExe_rsMem$EN_setRegReady_4_put),
					       .EN_specUpdate_incorrectSpeculation(coreFix_memExe_rsMem$EN_specUpdate_incorrectSpeculation),
					       .EN_specUpdate_correctSpeculation(coreFix_memExe_rsMem$EN_specUpdate_correctSpeculation),
					       .RDY_enq(coreFix_memExe_rsMem$RDY_enq),
					       .canEnq(coreFix_memExe_rsMem$canEnq),
					       .RDY_canEnq(),
					       .RDY_setRobEnqTime(),
					       .dispatchData(coreFix_memExe_rsMem$dispatchData),
					       .RDY_dispatchData(coreFix_memExe_rsMem$RDY_dispatchData),
					       .RDY_doDispatch(coreFix_memExe_rsMem$RDY_doDispatch),
					       .RDY_setRegReady_0_put(),
					       .RDY_setRegReady_1_put(),
					       .RDY_setRegReady_2_put(),
					       .RDY_setRegReady_3_put(),
					       .RDY_setRegReady_4_put(),
					       .approximateCount(),
					       .RDY_approximateCount(),
					       .isFull_ehrPort0(),
					       .RDY_isFull_ehrPort0(),
					       .RDY_specUpdate_incorrectSpeculation(),
					       .RDY_specUpdate_correctSpeculation());

  // submodule coreFix_memExe_stb
  mkStoreBufferEhr coreFix_memExe_stb(.CLK(CLK),
				      .RST_N(RST_N),
				      .deq_idx(coreFix_memExe_stb$deq_idx),
				      .enq_be(coreFix_memExe_stb$enq_be),
				      .enq_data(coreFix_memExe_stb$enq_data),
				      .enq_idx(coreFix_memExe_stb$enq_idx),
				      .enq_paddr(coreFix_memExe_stb$enq_paddr),
				      .getEnqIndex_paddr(coreFix_memExe_stb$getEnqIndex_paddr),
				      .noMatchLdQ_be(coreFix_memExe_stb$noMatchLdQ_be),
				      .noMatchLdQ_paddr(coreFix_memExe_stb$noMatchLdQ_paddr),
				      .noMatchStQ_be(coreFix_memExe_stb$noMatchStQ_be),
				      .noMatchStQ_paddr(coreFix_memExe_stb$noMatchStQ_paddr),
				      .search_be(coreFix_memExe_stb$search_be),
				      .search_paddr(coreFix_memExe_stb$search_paddr),
				      .EN_enq(coreFix_memExe_stb$EN_enq),
				      .EN_deq(coreFix_memExe_stb$EN_deq),
				      .EN_issue(coreFix_memExe_stb$EN_issue),
				      .isEmpty(coreFix_memExe_stb$isEmpty),
				      .RDY_isEmpty(),
				      .getEnqIndex(coreFix_memExe_stb$getEnqIndex),
				      .RDY_getEnqIndex(),
				      .RDY_enq(coreFix_memExe_stb$RDY_enq),
				      .deq(coreFix_memExe_stb$deq),
				      .RDY_deq(coreFix_memExe_stb$RDY_deq),
				      .issue(coreFix_memExe_stb$issue),
				      .RDY_issue(coreFix_memExe_stb$RDY_issue),
				      .search(coreFix_memExe_stb$search),
				      .RDY_search(),
				      .noMatchLdQ(coreFix_memExe_stb$noMatchLdQ),
				      .RDY_noMatchLdQ(),
				      .noMatchStQ(coreFix_memExe_stb$noMatchStQ),
				      .RDY_noMatchStQ());

  // submodule coreFix_trainBPQ_0
  FIFO2 #(.width(32'd160), .guarded(1'd1)) coreFix_trainBPQ_0(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(coreFix_trainBPQ_0$D_IN),
							      .ENQ(coreFix_trainBPQ_0$ENQ),
							      .DEQ(coreFix_trainBPQ_0$DEQ),
							      .CLR(coreFix_trainBPQ_0$CLR),
							      .D_OUT(coreFix_trainBPQ_0$D_OUT),
							      .FULL_N(coreFix_trainBPQ_0$FULL_N),
							      .EMPTY_N(coreFix_trainBPQ_0$EMPTY_N));

  // submodule coreFix_trainBPQ_1
  FIFO2 #(.width(32'd160), .guarded(1'd1)) coreFix_trainBPQ_1(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(coreFix_trainBPQ_1$D_IN),
							      .ENQ(coreFix_trainBPQ_1$ENQ),
							      .DEQ(coreFix_trainBPQ_1$DEQ),
							      .CLR(coreFix_trainBPQ_1$CLR),
							      .D_OUT(coreFix_trainBPQ_1$D_OUT),
							      .FULL_N(coreFix_trainBPQ_1$FULL_N),
							      .EMPTY_N(coreFix_trainBPQ_1$EMPTY_N));

  // submodule csrInstOrInterruptInflight_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) csrInstOrInterruptInflight_dummy2_0(.CLK(CLK),
							       .D_IN(csrInstOrInterruptInflight_dummy2_0$D_IN),
							       .EN(csrInstOrInterruptInflight_dummy2_0$EN),
							       .Q_OUT(csrInstOrInterruptInflight_dummy2_0$Q_OUT));

  // submodule csrInstOrInterruptInflight_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) csrInstOrInterruptInflight_dummy2_1(.CLK(CLK),
							       .D_IN(csrInstOrInterruptInflight_dummy2_1$D_IN),
							       .EN(csrInstOrInterruptInflight_dummy2_1$EN),
							       .Q_OUT(csrInstOrInterruptInflight_dummy2_1$Q_OUT));

  // submodule csrf_mcycle_ehr_data_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) csrf_mcycle_ehr_data_dummy2_0(.CLK(CLK),
							 .D_IN(csrf_mcycle_ehr_data_dummy2_0$D_IN),
							 .EN(csrf_mcycle_ehr_data_dummy2_0$EN),
							 .Q_OUT(csrf_mcycle_ehr_data_dummy2_0$Q_OUT));

  // submodule csrf_mcycle_ehr_data_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) csrf_mcycle_ehr_data_dummy2_1(.CLK(CLK),
							 .D_IN(csrf_mcycle_ehr_data_dummy2_1$D_IN),
							 .EN(csrf_mcycle_ehr_data_dummy2_1$EN),
							 .Q_OUT(csrf_mcycle_ehr_data_dummy2_1$Q_OUT));

  // submodule csrf_minstret_ehr_data_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) csrf_minstret_ehr_data_dummy2_0(.CLK(CLK),
							   .D_IN(csrf_minstret_ehr_data_dummy2_0$D_IN),
							   .EN(csrf_minstret_ehr_data_dummy2_0$EN),
							   .Q_OUT(csrf_minstret_ehr_data_dummy2_0$Q_OUT));

  // submodule csrf_minstret_ehr_data_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) csrf_minstret_ehr_data_dummy2_1(.CLK(CLK),
							   .D_IN(csrf_minstret_ehr_data_dummy2_1$D_IN),
							   .EN(csrf_minstret_ehr_data_dummy2_1$EN),
							   .Q_OUT(csrf_minstret_ehr_data_dummy2_1$Q_OUT));

  // submodule csrf_stats_module_writeQ
  FIFO1 #(.width(32'd1), .guarded(1'd1)) csrf_stats_module_writeQ(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(csrf_stats_module_writeQ$D_IN),
								  .ENQ(csrf_stats_module_writeQ$ENQ),
								  .DEQ(csrf_stats_module_writeQ$DEQ),
								  .CLR(csrf_stats_module_writeQ$CLR),
								  .D_OUT(csrf_stats_module_writeQ$D_OUT),
								  .FULL_N(csrf_stats_module_writeQ$FULL_N),
								  .EMPTY_N(csrf_stats_module_writeQ$EMPTY_N));

  // submodule csrf_terminate_module_terminateQ
  FIFO10 #(.guarded(1'd1)) csrf_terminate_module_terminateQ(.RST(RST_N),
							    .CLK(CLK),
							    .ENQ(csrf_terminate_module_terminateQ$ENQ),
							    .DEQ(csrf_terminate_module_terminateQ$DEQ),
							    .CLR(csrf_terminate_module_terminateQ$CLR),
							    .FULL_N(csrf_terminate_module_terminateQ$FULL_N),
							    .EMPTY_N(csrf_terminate_module_terminateQ$EMPTY_N));

  // submodule epochManager
  mkEpochManager epochManager(.CLK(CLK),
			      .RST_N(RST_N),
			      .checkEpoch_0_check_e(epochManager$checkEpoch_0_check_e),
			      .checkEpoch_1_check_e(epochManager$checkEpoch_1_check_e),
			      .updatePrevEpoch_0_update_e(epochManager$updatePrevEpoch_0_update_e),
			      .updatePrevEpoch_1_update_e(epochManager$updatePrevEpoch_1_update_e),
			      .EN_updatePrevEpoch_0_update(epochManager$EN_updatePrevEpoch_0_update),
			      .EN_updatePrevEpoch_1_update(epochManager$EN_updatePrevEpoch_1_update),
			      .EN_incrementEpoch(epochManager$EN_incrementEpoch),
			      .checkEpoch_0_check(epochManager$checkEpoch_0_check),
			      .RDY_checkEpoch_0_check(),
			      .checkEpoch_1_check(epochManager$checkEpoch_1_check),
			      .RDY_checkEpoch_1_check(),
			      .RDY_updatePrevEpoch_0_update(),
			      .RDY_updatePrevEpoch_1_update(),
			      .getEpoch(),
			      .RDY_getEpoch(),
			      .RDY_incrementEpoch(epochManager$RDY_incrementEpoch),
			      .getEpochState(),
			      .RDY_getEpochState(),
			      .isFull_ehrPort0(),
			      .RDY_isFull_ehrPort0());

  // submodule fetchStage
  mkFetchStage fetchStage(.CLK(CLK),
			  .RST_N(RST_N),
			  .iMemIfc_perf_req_r(fetchStage$iMemIfc_perf_req_r),
			  .iMemIfc_perf_setStatus_doStats(fetchStage$iMemIfc_perf_setStatus_doStats),
			  .iMemIfc_to_parent_fromP_enq_x(fetchStage$iMemIfc_to_parent_fromP_enq_x),
			  .iMemIfc_to_proc_request_put(fetchStage$iMemIfc_to_proc_request_put),
			  .iTlbIfc_perf_req_r(fetchStage$iTlbIfc_perf_req_r),
			  .iTlbIfc_perf_setStatus_doStats(fetchStage$iTlbIfc_perf_setStatus_doStats),
			  .iTlbIfc_toParent_rsFromP_enq_x(fetchStage$iTlbIfc_toParent_rsFromP_enq_x),
			  .iTlbIfc_to_proc_request_put(fetchStage$iTlbIfc_to_proc_request_put),
			  .iTlbIfc_updateVMInfo_vm(fetchStage$iTlbIfc_updateVMInfo_vm),
			  .mmioIfc_instResp_enq_x(fetchStage$mmioIfc_instResp_enq_x),
			  .mmioIfc_setHtifAddrs_fromHost(fetchStage$mmioIfc_setHtifAddrs_fromHost),
			  .mmioIfc_setHtifAddrs_toHost(fetchStage$mmioIfc_setHtifAddrs_toHost),
			  .perf_req_r(fetchStage$perf_req_r),
			  .perf_setStatus_doStats(fetchStage$perf_setStatus_doStats),
			  .redirect_pc(fetchStage$redirect_pc),
			  .start_pc(fetchStage$start_pc),
			  .train_predictors_dpTrain(fetchStage$train_predictors_dpTrain),
			  .train_predictors_iType(fetchStage$train_predictors_iType),
			  .train_predictors_isCompressed(fetchStage$train_predictors_isCompressed),
			  .train_predictors_mispred(fetchStage$train_predictors_mispred),
			  .train_predictors_next_pc(fetchStage$train_predictors_next_pc),
			  .train_predictors_pc(fetchStage$train_predictors_pc),
			  .train_predictors_taken(fetchStage$train_predictors_taken),
			  .EN_pipelines_0_deq(fetchStage$EN_pipelines_0_deq),
			  .EN_pipelines_1_deq(fetchStage$EN_pipelines_1_deq),
			  .EN_iTlbIfc_flush(fetchStage$EN_iTlbIfc_flush),
			  .EN_iTlbIfc_updateVMInfo(fetchStage$EN_iTlbIfc_updateVMInfo),
			  .EN_iTlbIfc_to_proc_request_put(fetchStage$EN_iTlbIfc_to_proc_request_put),
			  .EN_iTlbIfc_to_proc_response_get(fetchStage$EN_iTlbIfc_to_proc_response_get),
			  .EN_iTlbIfc_toParent_rqToP_deq(fetchStage$EN_iTlbIfc_toParent_rqToP_deq),
			  .EN_iTlbIfc_toParent_rsFromP_enq(fetchStage$EN_iTlbIfc_toParent_rsFromP_enq),
			  .EN_iTlbIfc_toParent_flush_request_get(fetchStage$EN_iTlbIfc_toParent_flush_request_get),
			  .EN_iTlbIfc_toParent_flush_response_put(fetchStage$EN_iTlbIfc_toParent_flush_response_put),
			  .EN_iTlbIfc_perf_setStatus(fetchStage$EN_iTlbIfc_perf_setStatus),
			  .EN_iTlbIfc_perf_req(fetchStage$EN_iTlbIfc_perf_req),
			  .EN_iTlbIfc_perf_resp(fetchStage$EN_iTlbIfc_perf_resp),
			  .EN_iMemIfc_to_proc_request_put(fetchStage$EN_iMemIfc_to_proc_request_put),
			  .EN_iMemIfc_to_proc_response_get(fetchStage$EN_iMemIfc_to_proc_response_get),
			  .EN_iMemIfc_flush(fetchStage$EN_iMemIfc_flush),
			  .EN_iMemIfc_perf_setStatus(fetchStage$EN_iMemIfc_perf_setStatus),
			  .EN_iMemIfc_perf_req(fetchStage$EN_iMemIfc_perf_req),
			  .EN_iMemIfc_perf_resp(fetchStage$EN_iMemIfc_perf_resp),
			  .EN_iMemIfc_to_parent_rsToP_deq(fetchStage$EN_iMemIfc_to_parent_rsToP_deq),
			  .EN_iMemIfc_to_parent_rqToP_deq(fetchStage$EN_iMemIfc_to_parent_rqToP_deq),
			  .EN_iMemIfc_to_parent_fromP_enq(fetchStage$EN_iMemIfc_to_parent_fromP_enq),
			  .EN_iMemIfc_cRqStuck_get(fetchStage$EN_iMemIfc_cRqStuck_get),
			  .EN_iMemIfc_pRqStuck_get(fetchStage$EN_iMemIfc_pRqStuck_get),
			  .EN_mmioIfc_instReq_deq(fetchStage$EN_mmioIfc_instReq_deq),
			  .EN_mmioIfc_instResp_enq(fetchStage$EN_mmioIfc_instResp_enq),
			  .EN_mmioIfc_setHtifAddrs(fetchStage$EN_mmioIfc_setHtifAddrs),
			  .EN_start(fetchStage$EN_start),
			  .EN_stop(fetchStage$EN_stop),
			  .EN_setWaitRedirect(fetchStage$EN_setWaitRedirect),
			  .EN_redirect(fetchStage$EN_redirect),
			  .EN_done_flushing(fetchStage$EN_done_flushing),
			  .EN_train_predictors(fetchStage$EN_train_predictors),
			  .EN_flush_predictors(fetchStage$EN_flush_predictors),
			  .EN_perf_setStatus(fetchStage$EN_perf_setStatus),
			  .EN_perf_req(fetchStage$EN_perf_req),
			  .EN_perf_resp(fetchStage$EN_perf_resp),
			  .pipelines_0_canDeq(fetchStage$pipelines_0_canDeq),
			  .RDY_pipelines_0_canDeq(),
			  .RDY_pipelines_0_deq(fetchStage$RDY_pipelines_0_deq),
			  .pipelines_0_first(fetchStage$pipelines_0_first),
			  .RDY_pipelines_0_first(fetchStage$RDY_pipelines_0_first),
			  .pipelines_1_canDeq(fetchStage$pipelines_1_canDeq),
			  .RDY_pipelines_1_canDeq(),
			  .RDY_pipelines_1_deq(fetchStage$RDY_pipelines_1_deq),
			  .pipelines_1_first(fetchStage$pipelines_1_first),
			  .RDY_pipelines_1_first(fetchStage$RDY_pipelines_1_first),
			  .iTlbIfc_flush_done(fetchStage$iTlbIfc_flush_done),
			  .RDY_iTlbIfc_flush_done(),
			  .RDY_iTlbIfc_flush(fetchStage$RDY_iTlbIfc_flush),
			  .RDY_iTlbIfc_updateVMInfo(),
			  .iTlbIfc_noPendingReq(fetchStage$iTlbIfc_noPendingReq),
			  .RDY_iTlbIfc_noPendingReq(),
			  .RDY_iTlbIfc_to_proc_request_put(),
			  .iTlbIfc_to_proc_response_get(),
			  .RDY_iTlbIfc_to_proc_response_get(),
			  .iTlbIfc_toParent_rqToP_notEmpty(),
			  .RDY_iTlbIfc_toParent_rqToP_notEmpty(),
			  .RDY_iTlbIfc_toParent_rqToP_deq(fetchStage$RDY_iTlbIfc_toParent_rqToP_deq),
			  .iTlbIfc_toParent_rqToP_first(fetchStage$iTlbIfc_toParent_rqToP_first),
			  .RDY_iTlbIfc_toParent_rqToP_first(fetchStage$RDY_iTlbIfc_toParent_rqToP_first),
			  .iTlbIfc_toParent_rsFromP_notFull(),
			  .RDY_iTlbIfc_toParent_rsFromP_notFull(),
			  .RDY_iTlbIfc_toParent_rsFromP_enq(fetchStage$RDY_iTlbIfc_toParent_rsFromP_enq),
			  .RDY_iTlbIfc_toParent_flush_request_get(fetchStage$RDY_iTlbIfc_toParent_flush_request_get),
			  .RDY_iTlbIfc_toParent_flush_response_put(fetchStage$RDY_iTlbIfc_toParent_flush_response_put),
			  .RDY_iTlbIfc_perf_setStatus(),
			  .RDY_iTlbIfc_perf_req(),
			  .iTlbIfc_perf_resp(),
			  .RDY_iTlbIfc_perf_resp(),
			  .iTlbIfc_perf_respValid(),
			  .RDY_iTlbIfc_perf_respValid(),
			  .RDY_iMemIfc_to_proc_request_put(),
			  .iMemIfc_to_proc_response_get(),
			  .RDY_iMemIfc_to_proc_response_get(),
			  .RDY_iMemIfc_flush(),
			  .iMemIfc_flush_done(),
			  .RDY_iMemIfc_flush_done(),
			  .RDY_iMemIfc_perf_setStatus(),
			  .RDY_iMemIfc_perf_req(),
			  .iMemIfc_perf_resp(),
			  .RDY_iMemIfc_perf_resp(),
			  .iMemIfc_perf_respValid(),
			  .RDY_iMemIfc_perf_respValid(),
			  .iMemIfc_to_parent_rsToP_notEmpty(fetchStage$iMemIfc_to_parent_rsToP_notEmpty),
			  .RDY_iMemIfc_to_parent_rsToP_notEmpty(),
			  .RDY_iMemIfc_to_parent_rsToP_deq(fetchStage$RDY_iMemIfc_to_parent_rsToP_deq),
			  .iMemIfc_to_parent_rsToP_first(fetchStage$iMemIfc_to_parent_rsToP_first),
			  .RDY_iMemIfc_to_parent_rsToP_first(fetchStage$RDY_iMemIfc_to_parent_rsToP_first),
			  .iMemIfc_to_parent_rqToP_notEmpty(fetchStage$iMemIfc_to_parent_rqToP_notEmpty),
			  .RDY_iMemIfc_to_parent_rqToP_notEmpty(),
			  .RDY_iMemIfc_to_parent_rqToP_deq(fetchStage$RDY_iMemIfc_to_parent_rqToP_deq),
			  .iMemIfc_to_parent_rqToP_first(fetchStage$iMemIfc_to_parent_rqToP_first),
			  .RDY_iMemIfc_to_parent_rqToP_first(fetchStage$RDY_iMemIfc_to_parent_rqToP_first),
			  .iMemIfc_to_parent_fromP_notFull(fetchStage$iMemIfc_to_parent_fromP_notFull),
			  .RDY_iMemIfc_to_parent_fromP_notFull(),
			  .RDY_iMemIfc_to_parent_fromP_enq(fetchStage$RDY_iMemIfc_to_parent_fromP_enq),
			  .iMemIfc_cRqStuck_get(fetchStage$iMemIfc_cRqStuck_get),
			  .RDY_iMemIfc_cRqStuck_get(fetchStage$RDY_iMemIfc_cRqStuck_get),
			  .iMemIfc_pRqStuck_get(fetchStage$iMemIfc_pRqStuck_get),
			  .RDY_iMemIfc_pRqStuck_get(fetchStage$RDY_iMemIfc_pRqStuck_get),
			  .mmioIfc_instReq_notEmpty(),
			  .RDY_mmioIfc_instReq_notEmpty(),
			  .RDY_mmioIfc_instReq_deq(fetchStage$RDY_mmioIfc_instReq_deq),
			  .mmioIfc_instReq_first_fst(fetchStage$mmioIfc_instReq_first_fst),
			  .RDY_mmioIfc_instReq_first_fst(fetchStage$RDY_mmioIfc_instReq_first_fst),
			  .mmioIfc_instReq_first_snd(fetchStage$mmioIfc_instReq_first_snd),
			  .RDY_mmioIfc_instReq_first_snd(fetchStage$RDY_mmioIfc_instReq_first_snd),
			  .mmioIfc_instResp_notFull(),
			  .RDY_mmioIfc_instResp_notFull(),
			  .RDY_mmioIfc_instResp_enq(fetchStage$RDY_mmioIfc_instResp_enq),
			  .RDY_mmioIfc_setHtifAddrs(),
			  .RDY_start(),
			  .RDY_stop(),
			  .RDY_setWaitRedirect(),
			  .RDY_redirect(),
			  .RDY_done_flushing(fetchStage$RDY_done_flushing),
			  .RDY_train_predictors(),
			  .emptyForFlush(),
			  .RDY_emptyForFlush(),
			  .RDY_flush_predictors(),
			  .flush_predictors_done(),
			  .RDY_flush_predictors_done(),
			  .getFetchState(),
			  .RDY_getFetchState(),
			  .RDY_perf_setStatus(),
			  .RDY_perf_req(),
			  .perf_resp(),
			  .RDY_perf_resp(),
			  .perf_respValid(),
			  .RDY_perf_respValid());

  // submodule l2Tlb
  mkL2Tlb l2Tlb(.CLK(CLK),
		.RST_N(RST_N),
		.perf_req_r(l2Tlb$perf_req_r),
		.perf_setStatus_doStats(l2Tlb$perf_setStatus_doStats),
		.toChildren_rqFromC_put(l2Tlb$toChildren_rqFromC_put),
		.toMem_respLd_enq_x(l2Tlb$toMem_respLd_enq_x),
		.updateVMInfo_vmD(l2Tlb$updateVMInfo_vmD),
		.updateVMInfo_vmI(l2Tlb$updateVMInfo_vmI),
		.EN_updateVMInfo(l2Tlb$EN_updateVMInfo),
		.EN_toChildren_rqFromC_put(l2Tlb$EN_toChildren_rqFromC_put),
		.EN_toChildren_rsToC_deq(l2Tlb$EN_toChildren_rsToC_deq),
		.EN_toChildren_iTlbReqFlush_put(l2Tlb$EN_toChildren_iTlbReqFlush_put),
		.EN_toChildren_dTlbReqFlush_put(l2Tlb$EN_toChildren_dTlbReqFlush_put),
		.EN_toChildren_flushDone_get(l2Tlb$EN_toChildren_flushDone_get),
		.EN_toMem_memReq_deq(l2Tlb$EN_toMem_memReq_deq),
		.EN_toMem_respLd_enq(l2Tlb$EN_toMem_respLd_enq),
		.EN_perf_setStatus(l2Tlb$EN_perf_setStatus),
		.EN_perf_req(l2Tlb$EN_perf_req),
		.EN_perf_resp(l2Tlb$EN_perf_resp),
		.RDY_updateVMInfo(),
		.RDY_toChildren_rqFromC_put(l2Tlb$RDY_toChildren_rqFromC_put),
		.toChildren_rsToC_notEmpty(),
		.RDY_toChildren_rsToC_notEmpty(),
		.RDY_toChildren_rsToC_deq(l2Tlb$RDY_toChildren_rsToC_deq),
		.toChildren_rsToC_first(l2Tlb$toChildren_rsToC_first),
		.RDY_toChildren_rsToC_first(l2Tlb$RDY_toChildren_rsToC_first),
		.RDY_toChildren_iTlbReqFlush_put(l2Tlb$RDY_toChildren_iTlbReqFlush_put),
		.RDY_toChildren_dTlbReqFlush_put(l2Tlb$RDY_toChildren_dTlbReqFlush_put),
		.RDY_toChildren_flushDone_get(l2Tlb$RDY_toChildren_flushDone_get),
		.toMem_memReq_notEmpty(l2Tlb$toMem_memReq_notEmpty),
		.RDY_toMem_memReq_notEmpty(),
		.RDY_toMem_memReq_deq(l2Tlb$RDY_toMem_memReq_deq),
		.toMem_memReq_first(l2Tlb$toMem_memReq_first),
		.RDY_toMem_memReq_first(l2Tlb$RDY_toMem_memReq_first),
		.toMem_respLd_notFull(l2Tlb$toMem_respLd_notFull),
		.RDY_toMem_respLd_notFull(),
		.RDY_toMem_respLd_enq(l2Tlb$RDY_toMem_respLd_enq),
		.RDY_perf_setStatus(),
		.RDY_perf_req(),
		.perf_resp(),
		.RDY_perf_resp(),
		.perf_respValid(),
		.RDY_perf_respValid());

  // submodule mmio_cRqQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_cRqQ_clearReq_dummy2_0(.CLK(CLK),
						       .D_IN(mmio_cRqQ_clearReq_dummy2_0$D_IN),
						       .EN(mmio_cRqQ_clearReq_dummy2_0$EN),
						       .Q_OUT());

  // submodule mmio_cRqQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_cRqQ_clearReq_dummy2_1(.CLK(CLK),
						       .D_IN(mmio_cRqQ_clearReq_dummy2_1$D_IN),
						       .EN(mmio_cRqQ_clearReq_dummy2_1$EN),
						       .Q_OUT(mmio_cRqQ_clearReq_dummy2_1$Q_OUT));

  // submodule mmio_cRqQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRqQ_deqReq_dummy2_0(.CLK(CLK),
								    .D_IN(mmio_cRqQ_deqReq_dummy2_0$D_IN),
								    .EN(mmio_cRqQ_deqReq_dummy2_0$EN),
								    .Q_OUT());

  // submodule mmio_cRqQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRqQ_deqReq_dummy2_1(.CLK(CLK),
								    .D_IN(mmio_cRqQ_deqReq_dummy2_1$D_IN),
								    .EN(mmio_cRqQ_deqReq_dummy2_1$EN),
								    .Q_OUT());

  // submodule mmio_cRqQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRqQ_deqReq_dummy2_2(.CLK(CLK),
								    .D_IN(mmio_cRqQ_deqReq_dummy2_2$D_IN),
								    .EN(mmio_cRqQ_deqReq_dummy2_2$EN),
								    .Q_OUT(mmio_cRqQ_deqReq_dummy2_2$Q_OUT));

  // submodule mmio_cRqQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRqQ_enqReq_dummy2_0(.CLK(CLK),
								    .D_IN(mmio_cRqQ_enqReq_dummy2_0$D_IN),
								    .EN(mmio_cRqQ_enqReq_dummy2_0$EN),
								    .Q_OUT());

  // submodule mmio_cRqQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRqQ_enqReq_dummy2_1(.CLK(CLK),
								    .D_IN(mmio_cRqQ_enqReq_dummy2_1$D_IN),
								    .EN(mmio_cRqQ_enqReq_dummy2_1$EN),
								    .Q_OUT());

  // submodule mmio_cRqQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRqQ_enqReq_dummy2_2(.CLK(CLK),
								    .D_IN(mmio_cRqQ_enqReq_dummy2_2$D_IN),
								    .EN(mmio_cRqQ_enqReq_dummy2_2$EN),
								    .Q_OUT(mmio_cRqQ_enqReq_dummy2_2$Q_OUT));

  // submodule mmio_cRsQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_cRsQ_clearReq_dummy2_0(.CLK(CLK),
						       .D_IN(mmio_cRsQ_clearReq_dummy2_0$D_IN),
						       .EN(mmio_cRsQ_clearReq_dummy2_0$EN),
						       .Q_OUT());

  // submodule mmio_cRsQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_cRsQ_clearReq_dummy2_1(.CLK(CLK),
						       .D_IN(mmio_cRsQ_clearReq_dummy2_1$D_IN),
						       .EN(mmio_cRsQ_clearReq_dummy2_1$EN),
						       .Q_OUT(mmio_cRsQ_clearReq_dummy2_1$Q_OUT));

  // submodule mmio_cRsQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRsQ_deqReq_dummy2_0(.CLK(CLK),
								    .D_IN(mmio_cRsQ_deqReq_dummy2_0$D_IN),
								    .EN(mmio_cRsQ_deqReq_dummy2_0$EN),
								    .Q_OUT());

  // submodule mmio_cRsQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRsQ_deqReq_dummy2_1(.CLK(CLK),
								    .D_IN(mmio_cRsQ_deqReq_dummy2_1$D_IN),
								    .EN(mmio_cRsQ_deqReq_dummy2_1$EN),
								    .Q_OUT());

  // submodule mmio_cRsQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRsQ_deqReq_dummy2_2(.CLK(CLK),
								    .D_IN(mmio_cRsQ_deqReq_dummy2_2$D_IN),
								    .EN(mmio_cRsQ_deqReq_dummy2_2$EN),
								    .Q_OUT(mmio_cRsQ_deqReq_dummy2_2$Q_OUT));

  // submodule mmio_cRsQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRsQ_enqReq_dummy2_0(.CLK(CLK),
								    .D_IN(mmio_cRsQ_enqReq_dummy2_0$D_IN),
								    .EN(mmio_cRsQ_enqReq_dummy2_0$EN),
								    .Q_OUT());

  // submodule mmio_cRsQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRsQ_enqReq_dummy2_1(.CLK(CLK),
								    .D_IN(mmio_cRsQ_enqReq_dummy2_1$D_IN),
								    .EN(mmio_cRsQ_enqReq_dummy2_1$EN),
								    .Q_OUT());

  // submodule mmio_cRsQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_cRsQ_enqReq_dummy2_2(.CLK(CLK),
								    .D_IN(mmio_cRsQ_enqReq_dummy2_2$D_IN),
								    .EN(mmio_cRsQ_enqReq_dummy2_2$EN),
								    .Q_OUT(mmio_cRsQ_enqReq_dummy2_2$Q_OUT));

  // submodule mmio_dataPendQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataPendQ_clearReq_dummy2_0(.CLK(CLK),
							    .D_IN(mmio_dataPendQ_clearReq_dummy2_0$D_IN),
							    .EN(mmio_dataPendQ_clearReq_dummy2_0$EN),
							    .Q_OUT());

  // submodule mmio_dataPendQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataPendQ_clearReq_dummy2_1(.CLK(CLK),
							    .D_IN(mmio_dataPendQ_clearReq_dummy2_1$D_IN),
							    .EN(mmio_dataPendQ_clearReq_dummy2_1$EN),
							    .Q_OUT(mmio_dataPendQ_clearReq_dummy2_1$Q_OUT));

  // submodule mmio_dataPendQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataPendQ_deqReq_dummy2_0(.CLK(CLK),
							  .D_IN(mmio_dataPendQ_deqReq_dummy2_0$D_IN),
							  .EN(mmio_dataPendQ_deqReq_dummy2_0$EN),
							  .Q_OUT());

  // submodule mmio_dataPendQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataPendQ_deqReq_dummy2_1(.CLK(CLK),
							  .D_IN(mmio_dataPendQ_deqReq_dummy2_1$D_IN),
							  .EN(mmio_dataPendQ_deqReq_dummy2_1$EN),
							  .Q_OUT());

  // submodule mmio_dataPendQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataPendQ_deqReq_dummy2_2(.CLK(CLK),
							  .D_IN(mmio_dataPendQ_deqReq_dummy2_2$D_IN),
							  .EN(mmio_dataPendQ_deqReq_dummy2_2$EN),
							  .Q_OUT(mmio_dataPendQ_deqReq_dummy2_2$Q_OUT));

  // submodule mmio_dataPendQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataPendQ_enqReq_dummy2_0(.CLK(CLK),
							  .D_IN(mmio_dataPendQ_enqReq_dummy2_0$D_IN),
							  .EN(mmio_dataPendQ_enqReq_dummy2_0$EN),
							  .Q_OUT());

  // submodule mmio_dataPendQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataPendQ_enqReq_dummy2_1(.CLK(CLK),
							  .D_IN(mmio_dataPendQ_enqReq_dummy2_1$D_IN),
							  .EN(mmio_dataPendQ_enqReq_dummy2_1$EN),
							  .Q_OUT());

  // submodule mmio_dataPendQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataPendQ_enqReq_dummy2_2(.CLK(CLK),
							  .D_IN(mmio_dataPendQ_enqReq_dummy2_2$D_IN),
							  .EN(mmio_dataPendQ_enqReq_dummy2_2$EN),
							  .Q_OUT(mmio_dataPendQ_enqReq_dummy2_2$Q_OUT));

  // submodule mmio_dataReqQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataReqQ_clearReq_dummy2_0(.CLK(CLK),
							   .D_IN(mmio_dataReqQ_clearReq_dummy2_0$D_IN),
							   .EN(mmio_dataReqQ_clearReq_dummy2_0$EN),
							   .Q_OUT());

  // submodule mmio_dataReqQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataReqQ_clearReq_dummy2_1(.CLK(CLK),
							   .D_IN(mmio_dataReqQ_clearReq_dummy2_1$D_IN),
							   .EN(mmio_dataReqQ_clearReq_dummy2_1$EN),
							   .Q_OUT(mmio_dataReqQ_clearReq_dummy2_1$Q_OUT));

  // submodule mmio_dataReqQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataReqQ_deqReq_dummy2_0(.CLK(CLK),
							 .D_IN(mmio_dataReqQ_deqReq_dummy2_0$D_IN),
							 .EN(mmio_dataReqQ_deqReq_dummy2_0$EN),
							 .Q_OUT());

  // submodule mmio_dataReqQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataReqQ_deqReq_dummy2_1(.CLK(CLK),
							 .D_IN(mmio_dataReqQ_deqReq_dummy2_1$D_IN),
							 .EN(mmio_dataReqQ_deqReq_dummy2_1$EN),
							 .Q_OUT());

  // submodule mmio_dataReqQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataReqQ_deqReq_dummy2_2(.CLK(CLK),
							 .D_IN(mmio_dataReqQ_deqReq_dummy2_2$D_IN),
							 .EN(mmio_dataReqQ_deqReq_dummy2_2$EN),
							 .Q_OUT(mmio_dataReqQ_deqReq_dummy2_2$Q_OUT));

  // submodule mmio_dataReqQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataReqQ_enqReq_dummy2_0(.CLK(CLK),
							 .D_IN(mmio_dataReqQ_enqReq_dummy2_0$D_IN),
							 .EN(mmio_dataReqQ_enqReq_dummy2_0$EN),
							 .Q_OUT());

  // submodule mmio_dataReqQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataReqQ_enqReq_dummy2_1(.CLK(CLK),
							 .D_IN(mmio_dataReqQ_enqReq_dummy2_1$D_IN),
							 .EN(mmio_dataReqQ_enqReq_dummy2_1$EN),
							 .Q_OUT());

  // submodule mmio_dataReqQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataReqQ_enqReq_dummy2_2(.CLK(CLK),
							 .D_IN(mmio_dataReqQ_enqReq_dummy2_2$D_IN),
							 .EN(mmio_dataReqQ_enqReq_dummy2_2$EN),
							 .Q_OUT(mmio_dataReqQ_enqReq_dummy2_2$Q_OUT));

  // submodule mmio_dataRespQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataRespQ_clearReq_dummy2_0(.CLK(CLK),
							    .D_IN(mmio_dataRespQ_clearReq_dummy2_0$D_IN),
							    .EN(mmio_dataRespQ_clearReq_dummy2_0$EN),
							    .Q_OUT());

  // submodule mmio_dataRespQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataRespQ_clearReq_dummy2_1(.CLK(CLK),
							    .D_IN(mmio_dataRespQ_clearReq_dummy2_1$D_IN),
							    .EN(mmio_dataRespQ_clearReq_dummy2_1$EN),
							    .Q_OUT(mmio_dataRespQ_clearReq_dummy2_1$Q_OUT));

  // submodule mmio_dataRespQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataRespQ_deqReq_dummy2_0(.CLK(CLK),
							  .D_IN(mmio_dataRespQ_deqReq_dummy2_0$D_IN),
							  .EN(mmio_dataRespQ_deqReq_dummy2_0$EN),
							  .Q_OUT());

  // submodule mmio_dataRespQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataRespQ_deqReq_dummy2_1(.CLK(CLK),
							  .D_IN(mmio_dataRespQ_deqReq_dummy2_1$D_IN),
							  .EN(mmio_dataRespQ_deqReq_dummy2_1$EN),
							  .Q_OUT());

  // submodule mmio_dataRespQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataRespQ_deqReq_dummy2_2(.CLK(CLK),
							  .D_IN(mmio_dataRespQ_deqReq_dummy2_2$D_IN),
							  .EN(mmio_dataRespQ_deqReq_dummy2_2$EN),
							  .Q_OUT(mmio_dataRespQ_deqReq_dummy2_2$Q_OUT));

  // submodule mmio_dataRespQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataRespQ_enqReq_dummy2_0(.CLK(CLK),
							  .D_IN(mmio_dataRespQ_enqReq_dummy2_0$D_IN),
							  .EN(mmio_dataRespQ_enqReq_dummy2_0$EN),
							  .Q_OUT());

  // submodule mmio_dataRespQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataRespQ_enqReq_dummy2_1(.CLK(CLK),
							  .D_IN(mmio_dataRespQ_enqReq_dummy2_1$D_IN),
							  .EN(mmio_dataRespQ_enqReq_dummy2_1$EN),
							  .Q_OUT());

  // submodule mmio_dataRespQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_dataRespQ_enqReq_dummy2_2(.CLK(CLK),
							  .D_IN(mmio_dataRespQ_enqReq_dummy2_2$D_IN),
							  .EN(mmio_dataRespQ_enqReq_dummy2_2$EN),
							  .Q_OUT(mmio_dataRespQ_enqReq_dummy2_2$Q_OUT));

  // submodule mmio_pRqQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_pRqQ_clearReq_dummy2_0(.CLK(CLK),
						       .D_IN(mmio_pRqQ_clearReq_dummy2_0$D_IN),
						       .EN(mmio_pRqQ_clearReq_dummy2_0$EN),
						       .Q_OUT());

  // submodule mmio_pRqQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_pRqQ_clearReq_dummy2_1(.CLK(CLK),
						       .D_IN(mmio_pRqQ_clearReq_dummy2_1$D_IN),
						       .EN(mmio_pRqQ_clearReq_dummy2_1$EN),
						       .Q_OUT(mmio_pRqQ_clearReq_dummy2_1$Q_OUT));

  // submodule mmio_pRqQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRqQ_deqReq_dummy2_0(.CLK(CLK),
								    .D_IN(mmio_pRqQ_deqReq_dummy2_0$D_IN),
								    .EN(mmio_pRqQ_deqReq_dummy2_0$EN),
								    .Q_OUT());

  // submodule mmio_pRqQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRqQ_deqReq_dummy2_1(.CLK(CLK),
								    .D_IN(mmio_pRqQ_deqReq_dummy2_1$D_IN),
								    .EN(mmio_pRqQ_deqReq_dummy2_1$EN),
								    .Q_OUT());

  // submodule mmio_pRqQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRqQ_deqReq_dummy2_2(.CLK(CLK),
								    .D_IN(mmio_pRqQ_deqReq_dummy2_2$D_IN),
								    .EN(mmio_pRqQ_deqReq_dummy2_2$EN),
								    .Q_OUT(mmio_pRqQ_deqReq_dummy2_2$Q_OUT));

  // submodule mmio_pRqQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRqQ_enqReq_dummy2_0(.CLK(CLK),
								    .D_IN(mmio_pRqQ_enqReq_dummy2_0$D_IN),
								    .EN(mmio_pRqQ_enqReq_dummy2_0$EN),
								    .Q_OUT());

  // submodule mmio_pRqQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRqQ_enqReq_dummy2_1(.CLK(CLK),
								    .D_IN(mmio_pRqQ_enqReq_dummy2_1$D_IN),
								    .EN(mmio_pRqQ_enqReq_dummy2_1$EN),
								    .Q_OUT());

  // submodule mmio_pRqQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRqQ_enqReq_dummy2_2(.CLK(CLK),
								    .D_IN(mmio_pRqQ_enqReq_dummy2_2$D_IN),
								    .EN(mmio_pRqQ_enqReq_dummy2_2$EN),
								    .Q_OUT(mmio_pRqQ_enqReq_dummy2_2$Q_OUT));

  // submodule mmio_pRsQ_clearReq_dummy2_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_pRsQ_clearReq_dummy2_0(.CLK(CLK),
						       .D_IN(mmio_pRsQ_clearReq_dummy2_0$D_IN),
						       .EN(mmio_pRsQ_clearReq_dummy2_0$EN),
						       .Q_OUT());

  // submodule mmio_pRsQ_clearReq_dummy2_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mmio_pRsQ_clearReq_dummy2_1(.CLK(CLK),
						       .D_IN(mmio_pRsQ_clearReq_dummy2_1$D_IN),
						       .EN(mmio_pRsQ_clearReq_dummy2_1$EN),
						       .Q_OUT(mmio_pRsQ_clearReq_dummy2_1$Q_OUT));

  // submodule mmio_pRsQ_deqReq_dummy2_0
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRsQ_deqReq_dummy2_0(.CLK(CLK),
								    .D_IN(mmio_pRsQ_deqReq_dummy2_0$D_IN),
								    .EN(mmio_pRsQ_deqReq_dummy2_0$EN),
								    .Q_OUT());

  // submodule mmio_pRsQ_deqReq_dummy2_1
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRsQ_deqReq_dummy2_1(.CLK(CLK),
								    .D_IN(mmio_pRsQ_deqReq_dummy2_1$D_IN),
								    .EN(mmio_pRsQ_deqReq_dummy2_1$EN),
								    .Q_OUT());

  // submodule mmio_pRsQ_deqReq_dummy2_2
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRsQ_deqReq_dummy2_2(.CLK(CLK),
								    .D_IN(mmio_pRsQ_deqReq_dummy2_2$D_IN),
								    .EN(mmio_pRsQ_deqReq_dummy2_2$EN),
								    .Q_OUT(mmio_pRsQ_deqReq_dummy2_2$Q_OUT));

  // submodule mmio_pRsQ_enqReq_dummy2_0
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRsQ_enqReq_dummy2_0(.CLK(CLK),
								    .D_IN(mmio_pRsQ_enqReq_dummy2_0$D_IN),
								    .EN(mmio_pRsQ_enqReq_dummy2_0$EN),
								    .Q_OUT());

  // submodule mmio_pRsQ_enqReq_dummy2_1
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRsQ_enqReq_dummy2_1(.CLK(CLK),
								    .D_IN(mmio_pRsQ_enqReq_dummy2_1$D_IN),
								    .EN(mmio_pRsQ_enqReq_dummy2_1$EN),
								    .Q_OUT());

  // submodule mmio_pRsQ_enqReq_dummy2_2
  RevertReg #(.width(32'd1), .init(1'd1)) mmio_pRsQ_enqReq_dummy2_2(.CLK(CLK),
								    .D_IN(mmio_pRsQ_enqReq_dummy2_2$D_IN),
								    .EN(mmio_pRsQ_enqReq_dummy2_2$EN),
								    .Q_OUT(mmio_pRsQ_enqReq_dummy2_2$Q_OUT));

  // submodule perfReqQ
  FIFO1 #(.width(32'd9), .guarded(1'd1)) perfReqQ(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(perfReqQ$D_IN),
						  .ENQ(perfReqQ$ENQ),
						  .DEQ(perfReqQ$DEQ),
						  .CLR(perfReqQ$CLR),
						  .D_OUT(perfReqQ$D_OUT),
						  .FULL_N(perfReqQ$FULL_N),
						  .EMPTY_N(perfReqQ$EMPTY_N));

  // submodule regRenamingTable
  mkRegRenamingTable regRenamingTable(.CLK(CLK),
				      .RST_N(RST_N),
				      .rename_0_claimRename_r(regRenamingTable$rename_0_claimRename_r),
				      .rename_0_claimRename_sb(regRenamingTable$rename_0_claimRename_sb),
				      .rename_0_getRename_r(regRenamingTable$rename_0_getRename_r),
				      .rename_1_claimRename_r(regRenamingTable$rename_1_claimRename_r),
				      .rename_1_claimRename_sb(regRenamingTable$rename_1_claimRename_sb),
				      .rename_1_getRename_r(regRenamingTable$rename_1_getRename_r),
				      .specUpdate_correctSpeculation_mask(regRenamingTable$specUpdate_correctSpeculation_mask),
				      .specUpdate_incorrectSpeculation_kill_all(regRenamingTable$specUpdate_incorrectSpeculation_kill_all),
				      .specUpdate_incorrectSpeculation_kill_tag(regRenamingTable$specUpdate_incorrectSpeculation_kill_tag),
				      .EN_rename_0_claimRename(regRenamingTable$EN_rename_0_claimRename),
				      .EN_rename_1_claimRename(regRenamingTable$EN_rename_1_claimRename),
				      .EN_commit_0_commit(regRenamingTable$EN_commit_0_commit),
				      .EN_commit_1_commit(regRenamingTable$EN_commit_1_commit),
				      .EN_specUpdate_incorrectSpeculation(regRenamingTable$EN_specUpdate_incorrectSpeculation),
				      .EN_specUpdate_correctSpeculation(regRenamingTable$EN_specUpdate_correctSpeculation),
				      .rename_0_getRename(regRenamingTable$rename_0_getRename),
				      .RDY_rename_0_getRename(regRenamingTable$RDY_rename_0_getRename),
				      .RDY_rename_0_claimRename(regRenamingTable$RDY_rename_0_claimRename),
				      .rename_0_canRename(regRenamingTable$rename_0_canRename),
				      .RDY_rename_0_canRename(),
				      .rename_1_getRename(regRenamingTable$rename_1_getRename),
				      .RDY_rename_1_getRename(regRenamingTable$RDY_rename_1_getRename),
				      .RDY_rename_1_claimRename(regRenamingTable$RDY_rename_1_claimRename),
				      .rename_1_canRename(regRenamingTable$rename_1_canRename),
				      .RDY_rename_1_canRename(),
				      .RDY_commit_0_commit(regRenamingTable$RDY_commit_0_commit),
				      .commit_0_canCommit(),
				      .RDY_commit_0_canCommit(),
				      .RDY_commit_1_commit(regRenamingTable$RDY_commit_1_commit),
				      .commit_1_canCommit(),
				      .RDY_commit_1_canCommit(),
				      .RDY_specUpdate_incorrectSpeculation(),
				      .RDY_specUpdate_correctSpeculation());

  // submodule rf
  mkRFileSynth rf(.CLK(CLK),
		  .RST_N(RST_N),
		  .read_0_rd1_rindx(rf$read_0_rd1_rindx),
		  .read_0_rd2_rindx(rf$read_0_rd2_rindx),
		  .read_0_rd3_rindx(rf$read_0_rd3_rindx),
		  .read_1_rd1_rindx(rf$read_1_rd1_rindx),
		  .read_1_rd2_rindx(rf$read_1_rd2_rindx),
		  .read_1_rd3_rindx(rf$read_1_rd3_rindx),
		  .read_2_rd1_rindx(rf$read_2_rd1_rindx),
		  .read_2_rd2_rindx(rf$read_2_rd2_rindx),
		  .read_2_rd3_rindx(rf$read_2_rd3_rindx),
		  .read_3_rd1_rindx(rf$read_3_rd1_rindx),
		  .read_3_rd2_rindx(rf$read_3_rd2_rindx),
		  .read_3_rd3_rindx(rf$read_3_rd3_rindx),
		  .read_4_rd1_rindx(rf$read_4_rd1_rindx),
		  .read_4_rd2_rindx(rf$read_4_rd2_rindx),
		  .read_4_rd3_rindx(rf$read_4_rd3_rindx),
		  .write_0_wr_data(rf$write_0_wr_data),
		  .write_0_wr_rindx(rf$write_0_wr_rindx),
		  .write_1_wr_data(rf$write_1_wr_data),
		  .write_1_wr_rindx(rf$write_1_wr_rindx),
		  .write_2_wr_data(rf$write_2_wr_data),
		  .write_2_wr_rindx(rf$write_2_wr_rindx),
		  .write_3_wr_data(rf$write_3_wr_data),
		  .write_3_wr_rindx(rf$write_3_wr_rindx),
		  .write_4_wr_data(rf$write_4_wr_data),
		  .write_4_wr_rindx(rf$write_4_wr_rindx),
		  .EN_write_0_wr(rf$EN_write_0_wr),
		  .EN_write_1_wr(rf$EN_write_1_wr),
		  .EN_write_2_wr(rf$EN_write_2_wr),
		  .EN_write_3_wr(rf$EN_write_3_wr),
		  .EN_write_4_wr(rf$EN_write_4_wr),
		  .RDY_write_0_wr(),
		  .RDY_write_1_wr(),
		  .RDY_write_2_wr(),
		  .RDY_write_3_wr(),
		  .RDY_write_4_wr(),
		  .read_0_rd1(rf$read_0_rd1),
		  .RDY_read_0_rd1(),
		  .read_0_rd2(rf$read_0_rd2),
		  .RDY_read_0_rd2(),
		  .read_0_rd3(),
		  .RDY_read_0_rd3(),
		  .read_1_rd1(rf$read_1_rd1),
		  .RDY_read_1_rd1(),
		  .read_1_rd2(rf$read_1_rd2),
		  .RDY_read_1_rd2(),
		  .read_1_rd3(),
		  .RDY_read_1_rd3(),
		  .read_2_rd1(rf$read_2_rd1),
		  .RDY_read_2_rd1(),
		  .read_2_rd2(rf$read_2_rd2),
		  .RDY_read_2_rd2(),
		  .read_2_rd3(rf$read_2_rd3),
		  .RDY_read_2_rd3(),
		  .read_3_rd1(rf$read_3_rd1),
		  .RDY_read_3_rd1(),
		  .read_3_rd2(rf$read_3_rd2),
		  .RDY_read_3_rd2(),
		  .read_3_rd3(),
		  .RDY_read_3_rd3(),
		  .read_4_rd1(),
		  .RDY_read_4_rd1(),
		  .read_4_rd2(),
		  .RDY_read_4_rd2(),
		  .read_4_rd3(),
		  .RDY_read_4_rd3());

  // submodule rob
  mkReorderBufferSynth rob(.CLK(CLK),
			   .RST_N(RST_N),
			   .enqPort_0_enq_x(rob$enqPort_0_enq_x),
			   .enqPort_1_enq_x(rob$enqPort_1_enq_x),
			   .getOrigPC_0_get_x(rob$getOrigPC_0_get_x),
			   .getOrigPC_1_get_x(rob$getOrigPC_1_get_x),
			   .getOrigPC_2_get_x(rob$getOrigPC_2_get_x),
			   .getOrigPredPC_0_get_x(rob$getOrigPredPC_0_get_x),
			   .getOrigPredPC_1_get_x(rob$getOrigPredPC_1_get_x),
			   .getOrig_Inst_0_get_x(rob$getOrig_Inst_0_get_x),
			   .getOrig_Inst_1_get_x(rob$getOrig_Inst_1_get_x),
			   .setExecuted_deqLSQ_cause(rob$setExecuted_deqLSQ_cause),
			   .setExecuted_deqLSQ_ld_killed(rob$setExecuted_deqLSQ_ld_killed),
			   .setExecuted_deqLSQ_x(rob$setExecuted_deqLSQ_x),
			   .setExecuted_doFinishAlu_0_set_cf(rob$setExecuted_doFinishAlu_0_set_cf),
			   .setExecuted_doFinishAlu_0_set_csrData(rob$setExecuted_doFinishAlu_0_set_csrData),
			   .setExecuted_doFinishAlu_0_set_dst_data(rob$setExecuted_doFinishAlu_0_set_dst_data),
			   .setExecuted_doFinishAlu_0_set_x(rob$setExecuted_doFinishAlu_0_set_x),
			   .setExecuted_doFinishAlu_1_set_cf(rob$setExecuted_doFinishAlu_1_set_cf),
			   .setExecuted_doFinishAlu_1_set_csrData(rob$setExecuted_doFinishAlu_1_set_csrData),
			   .setExecuted_doFinishAlu_1_set_dst_data(rob$setExecuted_doFinishAlu_1_set_dst_data),
			   .setExecuted_doFinishAlu_1_set_x(rob$setExecuted_doFinishAlu_1_set_x),
			   .setExecuted_doFinishFpuMulDiv_0_set_dst_data(rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data),
			   .setExecuted_doFinishFpuMulDiv_0_set_fflags(rob$setExecuted_doFinishFpuMulDiv_0_set_fflags),
			   .setExecuted_doFinishFpuMulDiv_0_set_x(rob$setExecuted_doFinishFpuMulDiv_0_set_x),
			   .setExecuted_doFinishMem_access_at_commit(rob$setExecuted_doFinishMem_access_at_commit),
			   .setExecuted_doFinishMem_non_mmio_st_done(rob$setExecuted_doFinishMem_non_mmio_st_done),
			   .setExecuted_doFinishMem_store_data(rob$setExecuted_doFinishMem_store_data),
			   .setExecuted_doFinishMem_store_data_BE(rob$setExecuted_doFinishMem_store_data_BE),
			   .setExecuted_doFinishMem_vaddr(rob$setExecuted_doFinishMem_vaddr),
			   .setExecuted_doFinishMem_x(rob$setExecuted_doFinishMem_x),
			   .setLSQAtCommitNotified_x(rob$setLSQAtCommitNotified_x),
			   .specUpdate_correctSpeculation_mask(rob$specUpdate_correctSpeculation_mask),
			   .specUpdate_incorrectSpeculation_inst_tag(rob$specUpdate_incorrectSpeculation_inst_tag),
			   .specUpdate_incorrectSpeculation_kill_all(rob$specUpdate_incorrectSpeculation_kill_all),
			   .specUpdate_incorrectSpeculation_spec_tag(rob$specUpdate_incorrectSpeculation_spec_tag),
			   .EN_enqPort_0_enq(rob$EN_enqPort_0_enq),
			   .EN_enqPort_1_enq(rob$EN_enqPort_1_enq),
			   .EN_deqPort_0_deq(rob$EN_deqPort_0_deq),
			   .EN_deqPort_1_deq(rob$EN_deqPort_1_deq),
			   .EN_setLSQAtCommitNotified(rob$EN_setLSQAtCommitNotified),
			   .EN_setExecuted_deqLSQ(rob$EN_setExecuted_deqLSQ),
			   .EN_setExecuted_doFinishAlu_0_set(rob$EN_setExecuted_doFinishAlu_0_set),
			   .EN_setExecuted_doFinishAlu_1_set(rob$EN_setExecuted_doFinishAlu_1_set),
			   .EN_setExecuted_doFinishFpuMulDiv_0_set(rob$EN_setExecuted_doFinishFpuMulDiv_0_set),
			   .EN_setExecuted_doFinishMem(rob$EN_setExecuted_doFinishMem),
			   .EN_specUpdate_incorrectSpeculation(rob$EN_specUpdate_incorrectSpeculation),
			   .EN_specUpdate_correctSpeculation(rob$EN_specUpdate_correctSpeculation),
			   .enqPort_0_canEnq(rob$enqPort_0_canEnq),
			   .RDY_enqPort_0_canEnq(),
			   .RDY_enqPort_0_enq(rob$RDY_enqPort_0_enq),
			   .enqPort_0_getEnqInstTag(rob$enqPort_0_getEnqInstTag),
			   .RDY_enqPort_0_getEnqInstTag(),
			   .enqPort_1_canEnq(rob$enqPort_1_canEnq),
			   .RDY_enqPort_1_canEnq(),
			   .RDY_enqPort_1_enq(rob$RDY_enqPort_1_enq),
			   .enqPort_1_getEnqInstTag(rob$enqPort_1_getEnqInstTag),
			   .RDY_enqPort_1_getEnqInstTag(),
			   .isEmpty(rob$isEmpty),
			   .RDY_isEmpty(),
			   .deqPort_0_canDeq(rob$deqPort_0_canDeq),
			   .RDY_deqPort_0_canDeq(),
			   .RDY_deqPort_0_deq(rob$RDY_deqPort_0_deq),
			   .deqPort_0_getDeqInstTag(rob$deqPort_0_getDeqInstTag),
			   .RDY_deqPort_0_getDeqInstTag(),
			   .deqPort_0_deq_data(rob$deqPort_0_deq_data),
			   .RDY_deqPort_0_deq_data(rob$RDY_deqPort_0_deq_data),
			   .deqPort_1_canDeq(rob$deqPort_1_canDeq),
			   .RDY_deqPort_1_canDeq(),
			   .RDY_deqPort_1_deq(rob$RDY_deqPort_1_deq),
			   .deqPort_1_getDeqInstTag(),
			   .RDY_deqPort_1_getDeqInstTag(),
			   .deqPort_1_deq_data(rob$deqPort_1_deq_data),
			   .RDY_deqPort_1_deq_data(rob$RDY_deqPort_1_deq_data),
			   .RDY_setLSQAtCommitNotified(rob$RDY_setLSQAtCommitNotified),
			   .RDY_setExecuted_deqLSQ(rob$RDY_setExecuted_deqLSQ),
			   .RDY_setExecuted_doFinishAlu_0_set(rob$RDY_setExecuted_doFinishAlu_0_set),
			   .RDY_setExecuted_doFinishAlu_1_set(rob$RDY_setExecuted_doFinishAlu_1_set),
			   .RDY_setExecuted_doFinishFpuMulDiv_0_set(rob$RDY_setExecuted_doFinishFpuMulDiv_0_set),
			   .RDY_setExecuted_doFinishMem(rob$RDY_setExecuted_doFinishMem),
			   .getOrigPC_0_get(rob$getOrigPC_0_get),
			   .RDY_getOrigPC_0_get(),
			   .getOrigPC_1_get(rob$getOrigPC_1_get),
			   .RDY_getOrigPC_1_get(),
			   .getOrigPC_2_get(),
			   .RDY_getOrigPC_2_get(),
			   .getOrigPredPC_0_get(rob$getOrigPredPC_0_get),
			   .RDY_getOrigPredPC_0_get(),
			   .getOrigPredPC_1_get(rob$getOrigPredPC_1_get),
			   .RDY_getOrigPredPC_1_get(),
			   .getOrig_Inst_0_get(rob$getOrig_Inst_0_get),
			   .RDY_getOrig_Inst_0_get(),
			   .getOrig_Inst_1_get(rob$getOrig_Inst_1_get),
			   .RDY_getOrig_Inst_1_get(),
			   .getEnqTime(rob$getEnqTime),
			   .RDY_getEnqTime(),
			   .isEmpty_ehrPort0(),
			   .RDY_isEmpty_ehrPort0(),
			   .isFull_ehrPort0(),
			   .RDY_isFull_ehrPort0(),
			   .RDY_specUpdate_incorrectSpeculation(),
			   .RDY_specUpdate_correctSpeculation());

  // submodule sbAggr
  mkScoreboardAggr sbAggr(.CLK(CLK),
			  .RST_N(RST_N),
			  .eagerLookup_0_get_r(sbAggr$eagerLookup_0_get_r),
			  .eagerLookup_1_get_r(sbAggr$eagerLookup_1_get_r),
			  .setBusy_0_set_dst(sbAggr$setBusy_0_set_dst),
			  .setBusy_1_set_dst(sbAggr$setBusy_1_set_dst),
			  .setReady_0_put(sbAggr$setReady_0_put),
			  .setReady_1_put(sbAggr$setReady_1_put),
			  .setReady_2_put(sbAggr$setReady_2_put),
			  .setReady_3_put(sbAggr$setReady_3_put),
			  .setReady_4_put(sbAggr$setReady_4_put),
			  .EN_setBusy_0_set(sbAggr$EN_setBusy_0_set),
			  .EN_setBusy_1_set(sbAggr$EN_setBusy_1_set),
			  .EN_setReady_0_put(sbAggr$EN_setReady_0_put),
			  .EN_setReady_1_put(sbAggr$EN_setReady_1_put),
			  .EN_setReady_2_put(sbAggr$EN_setReady_2_put),
			  .EN_setReady_3_put(sbAggr$EN_setReady_3_put),
			  .EN_setReady_4_put(sbAggr$EN_setReady_4_put),
			  .eagerLookup_0_get(sbAggr$eagerLookup_0_get),
			  .RDY_eagerLookup_0_get(),
			  .eagerLookup_1_get(sbAggr$eagerLookup_1_get),
			  .RDY_eagerLookup_1_get(),
			  .RDY_setBusy_0_set(),
			  .RDY_setBusy_1_set(),
			  .RDY_setReady_0_put(),
			  .RDY_setReady_1_put(),
			  .RDY_setReady_2_put(),
			  .RDY_setReady_3_put(),
			  .RDY_setReady_4_put());

  // submodule sbCons
  mkScoreboardCons sbCons(.CLK(CLK),
			  .RST_N(RST_N),
			  .eagerLookup_0_get_r(sbCons$eagerLookup_0_get_r),
			  .eagerLookup_1_get_r(sbCons$eagerLookup_1_get_r),
			  .lazyLookup_0_get_r(sbCons$lazyLookup_0_get_r),
			  .lazyLookup_1_get_r(sbCons$lazyLookup_1_get_r),
			  .lazyLookup_2_get_r(sbCons$lazyLookup_2_get_r),
			  .lazyLookup_3_get_r(sbCons$lazyLookup_3_get_r),
			  .lazyLookup_4_get_r(sbCons$lazyLookup_4_get_r),
			  .setBusy_0_set_dst(sbCons$setBusy_0_set_dst),
			  .setBusy_1_set_dst(sbCons$setBusy_1_set_dst),
			  .setReady_0_put(sbCons$setReady_0_put),
			  .setReady_1_put(sbCons$setReady_1_put),
			  .setReady_2_put(sbCons$setReady_2_put),
			  .setReady_3_put(sbCons$setReady_3_put),
			  .setReady_4_put(sbCons$setReady_4_put),
			  .EN_setBusy_0_set(sbCons$EN_setBusy_0_set),
			  .EN_setBusy_1_set(sbCons$EN_setBusy_1_set),
			  .EN_setReady_0_put(sbCons$EN_setReady_0_put),
			  .EN_setReady_1_put(sbCons$EN_setReady_1_put),
			  .EN_setReady_2_put(sbCons$EN_setReady_2_put),
			  .EN_setReady_3_put(sbCons$EN_setReady_3_put),
			  .EN_setReady_4_put(sbCons$EN_setReady_4_put),
			  .eagerLookup_0_get(),
			  .RDY_eagerLookup_0_get(),
			  .eagerLookup_1_get(),
			  .RDY_eagerLookup_1_get(),
			  .RDY_setBusy_0_set(),
			  .RDY_setBusy_1_set(),
			  .RDY_setReady_0_put(),
			  .RDY_setReady_1_put(),
			  .RDY_setReady_2_put(),
			  .RDY_setReady_3_put(),
			  .RDY_setReady_4_put(),
			  .lazyLookup_0_get(sbCons$lazyLookup_0_get),
			  .RDY_lazyLookup_0_get(),
			  .lazyLookup_1_get(sbCons$lazyLookup_1_get),
			  .RDY_lazyLookup_1_get(),
			  .lazyLookup_2_get(sbCons$lazyLookup_2_get),
			  .RDY_lazyLookup_2_get(),
			  .lazyLookup_3_get(sbCons$lazyLookup_3_get),
			  .RDY_lazyLookup_3_get(),
			  .lazyLookup_4_get(),
			  .RDY_lazyLookup_4_get());

  // submodule specTagManager
  mkSpecTagManager specTagManager(.CLK(CLK),
				  .RST_N(RST_N),
				  .specUpdate_correctSpeculation_mask(specTagManager$specUpdate_correctSpeculation_mask),
				  .specUpdate_incorrectSpeculation_kill_all(specTagManager$specUpdate_incorrectSpeculation_kill_all),
				  .specUpdate_incorrectSpeculation_kill_tag(specTagManager$specUpdate_incorrectSpeculation_kill_tag),
				  .EN_claimSpecTag(specTagManager$EN_claimSpecTag),
				  .EN_specUpdate_incorrectSpeculation(specTagManager$EN_specUpdate_incorrectSpeculation),
				  .EN_specUpdate_correctSpeculation(specTagManager$EN_specUpdate_correctSpeculation),
				  .currentSpecBits(specTagManager$currentSpecBits),
				  .RDY_currentSpecBits(),
				  .nextSpecTag(specTagManager$nextSpecTag),
				  .RDY_nextSpecTag(specTagManager$RDY_nextSpecTag),
				  .RDY_claimSpecTag(specTagManager$RDY_claimSpecTag),
				  .canClaim(specTagManager$canClaim),
				  .RDY_canClaim(),
				  .RDY_specUpdate_incorrectSpeculation(),
				  .RDY_specUpdate_correctSpeculation(),
				  .isFull_ehrPort0(),
				  .RDY_isFull_ehrPort0());

  // rule RL_rl_outOfReset
  assign CAN_FIRE_RL_rl_outOfReset = !outOfReset ;
  assign WILL_FIRE_RL_rl_outOfReset = CAN_FIRE_RL_rl_outOfReset ;

  // rule RL_sendDTlbReq
  assign CAN_FIRE_RL_sendDTlbReq =
	     coreFix_memExe_dTlb$RDY_toParent_rqToP_first &&
	     coreFix_memExe_dTlb$RDY_toParent_rqToP_deq &&
	     l2Tlb$RDY_toChildren_rqFromC_put ;
  assign WILL_FIRE_RL_sendDTlbReq = CAN_FIRE_RL_sendDTlbReq ;

  // rule RL_sendITlbReq
  assign CAN_FIRE_RL_sendITlbReq =
	     l2Tlb$RDY_toChildren_rqFromC_put &&
	     fetchStage$RDY_iTlbIfc_toParent_rqToP_first &&
	     fetchStage$RDY_iTlbIfc_toParent_rqToP_deq ;
  assign WILL_FIRE_RL_sendITlbReq =
	     CAN_FIRE_RL_sendITlbReq && !WILL_FIRE_RL_sendDTlbReq ;

  // rule RL_sendRsToDTlb
  assign CAN_FIRE_RL_sendRsToDTlb =
	     l2Tlb$RDY_toChildren_rsToC_first &&
	     l2Tlb$RDY_toChildren_rsToC_deq &&
	     coreFix_memExe_dTlb$RDY_toParent_ldTransRsFromP_enq &&
	     l2Tlb$toChildren_rsToC_first[83] ;
  assign WILL_FIRE_RL_sendRsToDTlb = CAN_FIRE_RL_sendRsToDTlb ;

  // rule RL_sendRsToITlb
  assign CAN_FIRE_RL_sendRsToITlb =
	     l2Tlb$RDY_toChildren_rsToC_first &&
	     l2Tlb$RDY_toChildren_rsToC_deq &&
	     fetchStage$RDY_iTlbIfc_toParent_rsFromP_enq &&
	     !l2Tlb$toChildren_rsToC_first[83] ;
  assign WILL_FIRE_RL_sendRsToITlb = CAN_FIRE_RL_sendRsToITlb ;

  // rule RL_mkConnectionGetPut
  assign CAN_FIRE_RL_mkConnectionGetPut =
	     coreFix_memExe_dTlb$RDY_toParent_flush_request_get &&
	     l2Tlb$RDY_toChildren_dTlbReqFlush_put ;
  assign WILL_FIRE_RL_mkConnectionGetPut = CAN_FIRE_RL_mkConnectionGetPut ;

  // rule RL_mkConnectionGetPut_1
  assign CAN_FIRE_RL_mkConnectionGetPut_1 =
	     l2Tlb$RDY_toChildren_iTlbReqFlush_put &&
	     fetchStage$RDY_iTlbIfc_toParent_flush_request_get ;
  assign WILL_FIRE_RL_mkConnectionGetPut_1 =
	     CAN_FIRE_RL_mkConnectionGetPut_1 ;

  // rule RL_sendFlushDone
  assign CAN_FIRE_RL_sendFlushDone =
	     coreFix_memExe_dTlb$RDY_toParent_flush_response_put &&
	     l2Tlb$RDY_toChildren_flushDone_get &&
	     fetchStage$RDY_iTlbIfc_toParent_flush_response_put ;
  assign WILL_FIRE_RL_sendFlushDone = CAN_FIRE_RL_sendFlushDone ;

  // rule RL_sendRobEnqTime
  assign CAN_FIRE_RL_sendRobEnqTime = 1'd1 ;
  assign WILL_FIRE_RL_sendRobEnqTime = 1'd1 ;

  // rule RL_readyToFetch
  assign CAN_FIRE_RL_readyToFetch =
	     fetchStage$RDY_done_flushing && !flush_reservation &&
	     !flush_tlbs &&
	     !update_vm_info &&
	     fetchStage$iTlbIfc_flush_done &&
	     coreFix_memExe_dTlb$flush_done ;
  assign WILL_FIRE_RL_readyToFetch =
	     CAN_FIRE_RL_readyToFetch && !EN_coreReq_start ;

  // rule RL_csrf_minstret_ehr_setRead
  assign CAN_FIRE_RL_csrf_minstret_ehr_setRead = 1'd1 ;
  assign WILL_FIRE_RL_csrf_minstret_ehr_setRead = 1'd1 ;

  // rule RL_csrf_mcycle_ehr_setRead
  assign CAN_FIRE_RL_csrf_mcycle_ehr_setRead = 1'd1 ;
  assign WILL_FIRE_RL_csrf_mcycle_ehr_setRead = 1'd1 ;

  // rule RL_mmio_handlePRq
  assign CAN_FIRE_RL_mmio_handlePRq =
	     !mmio_pRqQ_empty && !mmio_cRsQ_full &&
	     (!csrInstOrInterruptInflight_dummy2_0$Q_OUT ||
	      !csrInstOrInterruptInflight_dummy2_1$Q_OUT ||
	      !csrInstOrInterruptInflight_rl) ;
  assign WILL_FIRE_RL_mmio_handlePRq = CAN_FIRE_RL_mmio_handlePRq ;

  // rule RL_mmio_sendDataReq
  assign CAN_FIRE_RL_mmio_sendDataReq =
	     !mmio_dataReqQ_empty && !mmio_cRqQ_full ;
  assign WILL_FIRE_RL_mmio_sendDataReq = CAN_FIRE_RL_mmio_sendDataReq ;

  // rule RL_mmio_sendInstReq
  assign CAN_FIRE_RL_mmio_sendInstReq =
	     !mmio_cRqQ_full && fetchStage$RDY_mmioIfc_instReq_first_snd &&
	     fetchStage$RDY_mmioIfc_instReq_first_fst &&
	     fetchStage$RDY_mmioIfc_instReq_deq ;
  assign WILL_FIRE_RL_mmio_sendInstReq =
	     CAN_FIRE_RL_mmio_sendInstReq && !WILL_FIRE_RL_mmio_sendDataReq ;

  // rule RL_mmio_sendDataResp
  assign CAN_FIRE_RL_mmio_sendDataResp =
	     !mmio_dataRespQ_full && !mmio_pRsQ_empty &&
	     mmio_pRsQ_data_0[68] ;
  assign WILL_FIRE_RL_mmio_sendDataResp = CAN_FIRE_RL_mmio_sendDataResp ;

  // rule RL_mmio_sendInstResp
  assign CAN_FIRE_RL_mmio_sendInstResp =
	     !mmio_pRsQ_empty && fetchStage$RDY_mmioIfc_instResp_enq &&
	     !mmio_pRsQ_data_0[68] ;
  assign WILL_FIRE_RL_mmio_sendInstResp = CAN_FIRE_RL_mmio_sendInstResp ;

  // rule RL_mmio_cRqQ_canonicalize
  assign CAN_FIRE_RL_mmio_cRqQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRqQ_canonicalize = 1'd1 ;

  // rule RL_mmio_cRqQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_cRqQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRqQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_cRqQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_cRqQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRqQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_cRqQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_cRqQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRqQ_clearReq_canon = 1'd1 ;

  // rule RL_mmio_pRsQ_canonicalize
  assign CAN_FIRE_RL_mmio_pRsQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRsQ_canonicalize = 1'd1 ;

  // rule RL_mmio_pRsQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_pRsQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRsQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_pRsQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_pRsQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRsQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_pRsQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_pRsQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRsQ_clearReq_canon = 1'd1 ;

  // rule RL_mmio_cRsQ_canonicalize
  assign CAN_FIRE_RL_mmio_cRsQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRsQ_canonicalize = 1'd1 ;

  // rule RL_mmio_cRsQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_cRsQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRsQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_cRsQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_cRsQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRsQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_cRsQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_cRsQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_cRsQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_doFetchTrainBP
  assign CAN_FIRE_RL_coreFix_doFetchTrainBP = coreFix_trainBPQ_1$EMPTY_N ;
  assign WILL_FIRE_RL_coreFix_doFetchTrainBP = coreFix_trainBPQ_1$EMPTY_N ;

  // rule RL_coreFix_doFetchTrainBP_1
  assign CAN_FIRE_RL_coreFix_doFetchTrainBP_1 = coreFix_trainBPQ_0$EMPTY_N ;
  assign WILL_FIRE_RL_coreFix_doFetchTrainBP_1 =
	     coreFix_trainBPQ_0$EMPTY_N && !coreFix_trainBPQ_1$EMPTY_N ;

  // rule RL_coreFix_memExe_doIssueSB
  assign CAN_FIRE_RL_coreFix_memExe_doIssueSB =
	     (!coreFix_memExe_reqStQ_full_dummy2_0$Q_OUT ||
	      !coreFix_memExe_reqStQ_full_dummy2_1$Q_OUT ||
	      !coreFix_memExe_reqStQ_full_dummy2_2$Q_OUT ||
	      !coreFix_memExe_reqStQ_full_rl) &&
	     coreFix_memExe_stb$RDY_issue ;
  assign WILL_FIRE_RL_coreFix_memExe_doIssueSB =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ;

  // rule RL_coreFix_memExe_doDeqLdQ_Lr_issue
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue =
	     NOT_coreFix_memExe_reqLrScAmoQ_full_dummy2_0_r_ETC___d990 &&
	     coreFix_memExe_lsq$RDY_firstLd &&
	     !coreFix_memExe_lsq$firstLd[7] &&
	     !coreFix_memExe_lsq$firstLd[16] &&
	     coreFix_memExe_lsq$firstLd[101] &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd0 &&
	     coreFix_memExe_stb$noMatchLdQ &&
	     (!coreFix_memExe_lsq$firstLd[90] || coreFix_memExe_stb$isEmpty) ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ;

  // rule RL_coreFix_memExe_doDeqLdQ_MMIO_issue
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue =
	     !mmio_dataReqQ_full && !mmio_dataPendQ_full &&
	     coreFix_memExe_lsq$RDY_firstLd &&
	     !coreFix_memExe_lsq$firstLd[7] &&
	     coreFix_memExe_lsq$firstLd[16] &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd0 &&
	     (!coreFix_memExe_lsq$firstLd[90] || coreFix_memExe_stb$isEmpty) ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue ;

  // rule RL_coreFix_memExe_dMem_perfReqQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_canonicalize = 1'd1 ;

  // rule RL_coreFix_memExe_dMem_perfReqQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_dMem_perfReqQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_deqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_dMem_perfReqQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_perfReqQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_perfReqQ_enqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$EMPTY_N &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$FULL_N ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$FULL_N &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$EMPTY_N ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full &&
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_sendRsToP_pRq_releaseEntry &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$EMPTY_N &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[3] ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$EMPTY_N ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$EMPTY_N &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$FULL_N &&
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[3] ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo =
	     !coreFix_memExe_respLrScAmoQ_full &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	     coreFix_memExe_dMem_cache_m_banks_0_processAmo[160] ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2578 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_processAmo[160] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[578:577] ==
	     2'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_canonicalize =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_canonicalize =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_canonicalize =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_canonicalize =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_poisoned &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_poisoned ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned ;

  // rule RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_poisoned &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_poisoned ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned ;

  // rule RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_poisoned &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_poisoned ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_poisoned &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$EMPTY_N &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_poisoned ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned =
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_poisoned &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$EMPTY_N &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_poisoned ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute =
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$EMPTY_N &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$EMPTY_N &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$FULL_N ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute ;

  // rule RL_renameStage_doRenaming_wrongPath
  assign CAN_FIRE_RL_renameStage_doRenaming_wrongPath =
	     fetchStage$RDY_pipelines_0_first &&
	     (!fetchStage$pipelines_0_canDeq ||
	      epochManager$checkEpoch_0_check ||
	      fetchStage$RDY_pipelines_0_deq) &&
	     NOT_fetchStage_pipelines_1_canDeq__2444_2445_O_ETC___d12453 &&
	     !epochManager$checkEpoch_0_check ;
  assign WILL_FIRE_RL_renameStage_doRenaming_wrongPath =
	     CAN_FIRE_RL_renameStage_doRenaming_wrongPath ;

  // rule RL_commitStage_doCommitTrap_flush
  assign CAN_FIRE_RL_commitStage_doCommitTrap_flush =
	     rob$RDY_deqPort_0_deq_data && rob$RDY_deqPort_0_deq &&
	     (rob$deqPort_0_deq_data[12] ||
	      epochManager$RDY_incrementEpoch) &&
	     !commitStage_commitTrap[165] &&
	     rob$deqPort_0_deq_data[167] ;
  assign WILL_FIRE_RL_commitStage_doCommitTrap_flush =
	     CAN_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_renameStage_doRenaming &&
	     !WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     !WILL_FIRE_RL_renameStage_doRenaming_Trap &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doExeMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault &&
	     !EN_coreReq_start ;

  // rule RL_commitStage_doCommitTrap_handle
  assign CAN_FIRE_RL_commitStage_doCommitTrap_handle =
	     coreFix_memExe_stb$isEmpty && coreFix_memExe_lsq$stqEmpty &&
	     fetchStage$iTlbIfc_noPendingReq &&
	     coreFix_memExe_dTlb$noPendingReq &&
	     commitStage_commitTrap[165] ;
  assign WILL_FIRE_RL_commitStage_doCommitTrap_handle =
	     CAN_FIRE_RL_commitStage_doCommitTrap_handle &&
	     !WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     !WILL_FIRE_RL_renameStage_doRenaming_Trap &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_prepareCachesAndTlbs ;

  // rule RL_commitStage_doCommitKilledLd
  assign CAN_FIRE_RL_commitStage_doCommitKilledLd =
	     epochManager$RDY_incrementEpoch && rob$RDY_deqPort_0_deq_data &&
	     rob$RDY_deqPort_0_deq &&
	     !commitStage_commitTrap[165] &&
	     !rob$deqPort_0_deq_data[167] &&
	     rob$deqPort_0_deq_data[18] ;
  assign WILL_FIRE_RL_commitStage_doCommitKilledLd =
	     CAN_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_renameStage_doRenaming &&
	     !WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     !WILL_FIRE_RL_renameStage_doRenaming_Trap &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doExeMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_commitStage_doCommitSystemInst
  assign CAN_FIRE_RL_commitStage_doCommitSystemInst =
	     coreFix_memExe_stb$isEmpty && coreFix_memExe_lsq$stqEmpty &&
	     rob$RDY_deqPort_0_deq_data &&
	     rob$RDY_deqPort_0_deq &&
	     regRenamingTable$RDY_commit_0_commit &&
	     fetchStage_iTlbIfc_noPendingReq__3685_AND_core_ETC___d13768 &&
	     !commitStage_commitTrap[165] &&
	     !rob$deqPort_0_deq_data[167] &&
	     !rob$deqPort_0_deq_data[18] &&
	     rob$deqPort_0_deq_data[25] &&
	     (rob$deqPort_0_deq_data[257:253] == 5'd0 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd21 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd17 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd18 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd13 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd16 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd15 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd19 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd20) ;
  assign WILL_FIRE_RL_commitStage_doCommitSystemInst =
	     CAN_FIRE_RL_commitStage_doCommitSystemInst &&
	     !WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     !WILL_FIRE_RL_renameStage_doRenaming_Trap &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_prepareCachesAndTlbs ;

  // rule RL_csrf_incCycle
  assign CAN_FIRE_RL_csrf_incCycle = 1'd1 ;
  assign WILL_FIRE_RL_csrf_incCycle = 1'd1 ;

  // rule RL_csrf_mcycle_ehr_data_canon
  assign CAN_FIRE_RL_csrf_mcycle_ehr_data_canon = 1'd1 ;
  assign WILL_FIRE_RL_csrf_mcycle_ehr_data_canon = 1'd1 ;

  // rule RL_commitStage_notifyLSQCommit
  assign CAN_FIRE_RL_commitStage_notifyLSQCommit =
	     rob$RDY_setLSQAtCommitNotified && rob$RDY_deqPort_0_deq_data &&
	     !commitStage_commitTrap[165] &&
	     !rob$deqPort_0_deq_data[167] &&
	     !rob$deqPort_0_deq_data[18] &&
	     !rob$deqPort_0_deq_data[25] &&
	     rob$deqPort_0_deq_data[15] &&
	     !rob$deqPort_0_deq_data[14] ;
  assign WILL_FIRE_RL_commitStage_notifyLSQCommit =
	     CAN_FIRE_RL_commitStage_notifyLSQCommit ;

  // rule RL_commitStage_doCommitNormalInst
  assign CAN_FIRE_RL_commitStage_doCommitNormalInst =
	     rob$RDY_deqPort_0_deq_data &&
	     NOT_rob_deqPort_0_canDeq__3974_3975_OR_rob_RDY_ETC___d14013 &&
	     !commitStage_commitTrap[165] &&
	     !rob$deqPort_0_deq_data[167] &&
	     !rob$deqPort_0_deq_data[18] &&
	     rob$deqPort_0_deq_data[25] &&
	     rob$deqPort_0_deq_data[257:253] != 5'd0 &&
	     rob$deqPort_0_deq_data[257:253] != 5'd21 &&
	     rob$deqPort_0_deq_data[257:253] != 5'd17 &&
	     rob$deqPort_0_deq_data[257:253] != 5'd18 &&
	     rob$deqPort_0_deq_data[257:253] != 5'd13 &&
	     rob$deqPort_0_deq_data[257:253] != 5'd16 &&
	     rob$deqPort_0_deq_data[257:253] != 5'd15 &&
	     rob$deqPort_0_deq_data[257:253] != 5'd19 &&
	     rob$deqPort_0_deq_data[257:253] != 5'd20 ;
  assign WILL_FIRE_RL_commitStage_doCommitNormalInst =
	     CAN_FIRE_RL_commitStage_doCommitNormalInst ;

  // rule RL_csrf_minstret_ehr_data_canon
  assign CAN_FIRE_RL_csrf_minstret_ehr_data_canon = 1'd1 ;
  assign WILL_FIRE_RL_csrf_minstret_ehr_data_canon = 1'd1 ;

  // rule RL_coreFix_aluExe_1_doFinishAlu_T
  assign CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T =
	     coreFix_aluExe_1_exeToFinQ$first[17] &&
	     coreFix_aluExe_1_exeToFinQ$RDY_deq &&
	     coreFix_aluExe_1_exeToFinQ$RDY_first &&
	     rob$RDY_setExecuted_doFinishAlu_1_set &&
	     epochManager$RDY_incrementEpoch &&
	     coreFix_trainBPQ_1$FULL_N ;
  assign WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T =
	     CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doExeMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_aluExe_0_doFinishAlu_T
  assign CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T =
	     coreFix_aluExe_0_exeToFinQ$first[17] &&
	     coreFix_aluExe_0_exeToFinQ$RDY_deq &&
	     coreFix_aluExe_0_exeToFinQ$RDY_first &&
	     rob$RDY_setExecuted_doFinishAlu_0_set &&
	     epochManager$RDY_incrementEpoch &&
	     coreFix_trainBPQ_0$FULL_N ;
  assign WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T =
	     CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doExeMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_aluExe_0_doFinishAlu_F
  assign CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F =
	     !coreFix_aluExe_0_exeToFinQ$first[17] &&
	     coreFix_aluExe_0_exeToFinQ$RDY_deq &&
	     coreFix_aluExe_0_exeToFinQ_RDY_first__2322_AND_ETC___d12360 ;
  assign WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F =
	     CAN_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_1_doFinishAlu_F
  assign CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F =
	     !coreFix_aluExe_1_exeToFinQ$first[17] &&
	     coreFix_aluExe_1_exeToFinQ$RDY_deq &&
	     coreFix_aluExe_1_exeToFinQ_RDY_first__1976_AND_ETC___d12015 ;
  assign WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F =
	     CAN_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ;

  // rule RL_coreFix_aluExe_1_doExeAlu
  assign CAN_FIRE_RL_coreFix_aluExe_1_doExeAlu =
	     coreFix_aluExe_1_regToExeQ$RDY_deq &&
	     coreFix_aluExe_1_exeToFinQ$RDY_enq &&
	     coreFix_aluExe_1_regToExeQ$RDY_first ;
  assign WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu =
	     CAN_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_0_doExeAlu
  assign CAN_FIRE_RL_coreFix_aluExe_0_doExeAlu =
	     coreFix_aluExe_0_regToExeQ$RDY_deq &&
	     coreFix_aluExe_0_exeToFinQ$RDY_enq &&
	     coreFix_aluExe_0_regToExeQ$RDY_first ;
  assign WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu =
	     CAN_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_1_doRegReadAlu
  assign CAN_FIRE_RL_coreFix_aluExe_1_doRegReadAlu =
	     coreFix_aluExe_1_dispToRegQ$RDY_deq &&
	     coreFix_aluExe_1_regToExeQ$RDY_enq &&
	     coreFix_aluExe_1_dispToRegQ_RDY_first__1522_AN_ETC___d11604 ;
  assign WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu =
	     CAN_FIRE_RL_coreFix_aluExe_1_doRegReadAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_0_doRegReadAlu
  assign CAN_FIRE_RL_coreFix_aluExe_0_doRegReadAlu =
	     coreFix_aluExe_0_dispToRegQ$RDY_deq &&
	     coreFix_aluExe_0_regToExeQ$RDY_enq &&
	     coreFix_aluExe_0_dispToRegQ_RDY_first__2050_AN_ETC___d12132 ;
  assign WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu =
	     CAN_FIRE_RL_coreFix_aluExe_0_doRegReadAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_0_doDispatchAlu
  assign CAN_FIRE_RL_coreFix_aluExe_0_doDispatchAlu =
	     coreFix_aluExe_0_dispToRegQ$RDY_enq &&
	     coreFix_aluExe_0_rsAlu$RDY_doDispatch &&
	     coreFix_aluExe_0_rsAlu$RDY_dispatchData ;
  assign WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu =
	     CAN_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_aluExe_1_doDispatchAlu
  assign CAN_FIRE_RL_coreFix_aluExe_1_doDispatchAlu =
	     coreFix_aluExe_1_dispToRegQ$RDY_enq &&
	     coreFix_aluExe_1_rsAlu$RDY_doDispatch &&
	     coreFix_aluExe_1_rsAlu$RDY_dispatchData ;
  assign WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu =
	     CAN_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishFpSimple
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple =
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_first &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishFpFma
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ_RDY_first__ETC___d4237 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishFpDiv
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ_RDY_first__ETC___d5629 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_RDY_first_ETC___d7021 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishIntMul
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ_RDY_fir_ETC___d8413 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_fpuMulDivExe_0_doFinishIntDiv
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv =
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_poisoned &&
	     !coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_poisoned &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_first_data &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$EMPTY_N ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     !WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;

  // rule RL_coreFix_memExe_doDeqLdQ_fault
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_fault =
	     rob$RDY_setExecuted_deqLSQ && coreFix_memExe_lsq$RDY_deqLd &&
	     coreFix_memExe_lsq$RDY_firstLd &&
	     coreFix_memExe_lsq$firstLd[7] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqLdQ_Ld_Mem
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem =
	     rob$RDY_setExecuted_deqLSQ && coreFix_memExe_lsq$RDY_deqLd &&
	     coreFix_memExe_lsq$RDY_firstLd &&
	     !coreFix_memExe_lsq$firstLd[7] &&
	     !coreFix_memExe_lsq$firstLd[101] &&
	     !coreFix_memExe_lsq$firstLd[16] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem ;

  // rule RL_coreFix_memExe_doDeqLdQ_Lr_deq
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq =
	     !coreFix_memExe_respLrScAmoQ_empty &&
	     rob$RDY_setExecuted_deqLSQ &&
	     coreFix_memExe_lsq$RDY_deqLd &&
	     coreFix_memExe_lsq$RDY_firstLd &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqLdQ_MMIO_deq
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq =
	     !mmio_dataRespQ_empty &&
	     NOT_mmio_dataPendQ_empty_35_062_AND_rob_RDY_se_ETC___d1331 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd3 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[0] &&
	     mmio_dataRespQ_data_0[64] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqLdQ_MMIO_fault
  assign CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault =
	     !mmio_dataRespQ_empty &&
	     NOT_mmio_dataPendQ_empty_35_062_AND_rob_RDY_se_ETC___d1331 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd3 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[0] &&
	     !mmio_dataRespQ_data_0[64] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault =
	     CAN_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doFinishMem
  assign CAN_FIRE_RL_coreFix_memExe_doFinishMem =
	     rob$RDY_setExecuted_doFinishMem &&
	     coreFix_memExe_dTlb$RDY_deqProcResp &&
	     coreFix_memExe_dTlb$RDY_procResp ;
  assign WILL_FIRE_RL_coreFix_memExe_doFinishMem =
	     CAN_FIRE_RL_coreFix_memExe_doFinishMem ;

  // rule RL_coreFix_memExe_doDeqStQ_ScAmo_issue
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue =
	     NOT_coreFix_memExe_reqLrScAmoQ_full_dummy2_0_r_ETC___d990 &&
	     coreFix_memExe_lsq$RDY_firstSt &&
	     !coreFix_memExe_lsq$firstSt[4] &&
	     !coreFix_memExe_lsq$firstSt[77] &&
	     (coreFix_memExe_lsq$firstSt[158:157] == 2'd1 ||
	      coreFix_memExe_lsq$firstSt[158:157] == 2'd2) &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd0 &&
	     coreFix_memExe_stb$noMatchStQ &&
	     (!coreFix_memExe_lsq$firstSt[151] ||
	      coreFix_memExe_stb$isEmpty) ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ;

  // rule RL_coreFix_memExe_doDeqStQ_MMIO_issue
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue =
	     !mmio_dataReqQ_full && !mmio_dataPendQ_full &&
	     coreFix_memExe_lsq$RDY_firstSt &&
	     !coreFix_memExe_lsq$firstSt[4] &&
	     coreFix_memExe_lsq$firstSt[158:157] != 2'd3 &&
	     coreFix_memExe_lsq$firstSt[77] &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd0 &&
	     (!coreFix_memExe_lsq$firstSt[151] ||
	      coreFix_memExe_stb$isEmpty) ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ;

  // rule RL_mmio_dataReqQ_canonicalize
  assign CAN_FIRE_RL_mmio_dataReqQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataReqQ_canonicalize = 1'd1 ;

  // rule RL_mmio_dataReqQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_dataReqQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataReqQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_dataReqQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_dataReqQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataReqQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_dataReqQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_dataReqQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataReqQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_sendLrScAmoToMem
  assign CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqFrom_ETC___d1100 &&
	     (!coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$Q_OUT ||
	      !coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$Q_OUT ||
	      coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas ||
	      !coreFix_memExe_reqLrScAmoQ_empty_rl) ;
  assign WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem =
	     CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;

  // rule RL_coreFix_memExe_doIssueLdFromIssueQ
  assign CAN_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ =
	     coreFix_memExe_lsq$RDY_getIssueLd &&
	     !coreFix_memExe_forwardQ_full &&
	     NOT_coreFix_memExe_reqLdQ_full_dummy2_0_read___ETC___d1417 ;
  assign WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ =
	     CAN_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_doIssueLdFromUpdate
  assign CAN_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate =
	     !coreFix_memExe_forwardQ_full &&
	     NOT_coreFix_memExe_reqLdQ_full_dummy2_0_read___ETC___d1417 &&
	     coreFix_memExe_issueLd$whas ;
  assign WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate =
	     CAN_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_doDeqStQ_fault
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_fault =
	     rob$RDY_setExecuted_deqLSQ && coreFix_memExe_lsq$RDY_deqSt &&
	     coreFix_memExe_lsq$RDY_firstSt &&
	     coreFix_memExe_lsq$firstSt[4] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_fault &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqStQ_Fence
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_Fence =
	     rob$RDY_setExecuted_deqLSQ && coreFix_memExe_lsq$RDY_deqSt &&
	     coreFix_memExe_lsq$RDY_firstSt &&
	     !coreFix_memExe_lsq$firstSt[4] &&
	     coreFix_memExe_lsq$firstSt[158:157] == 2'd3 &&
	     (!coreFix_memExe_lsq$firstSt[151] ||
	      coreFix_memExe_stb$isEmpty) ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_Fence &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqStQ_ScAmo_deq
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq =
	     !coreFix_memExe_respLrScAmoQ_empty &&
	     rob$RDY_setExecuted_deqLSQ &&
	     coreFix_memExe_lsq$RDY_deqSt &&
	     coreFix_memExe_lsq$RDY_firstSt &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd2 ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqStQ_MMIO_deq
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq =
	     !mmio_dataRespQ_empty &&
	     NOT_mmio_dataPendQ_empty_35_062_AND_rob_RDY_se_ETC___d1063 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd3 &&
	     !coreFix_memExe_waitLrScAmoMMIOResp[0] &&
	     mmio_dataRespQ_data_0[64] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_coreFix_memExe_doDeqStQ_MMIO_fault
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault =
	     !mmio_dataRespQ_empty &&
	     NOT_mmio_dataPendQ_empty_35_062_AND_rob_RDY_se_ETC___d1063 &&
	     coreFix_memExe_waitLrScAmoMMIOResp[2:1] == 2'd3 &&
	     !coreFix_memExe_waitLrScAmoMMIOResp[0] &&
	     !mmio_dataRespQ_data_0[64] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ;

  // rule RL_mmio_dataRespQ_canonicalize
  assign CAN_FIRE_RL_mmio_dataRespQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataRespQ_canonicalize = 1'd1 ;

  // rule RL_mmio_dataRespQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_dataRespQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataRespQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_dataRespQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_dataRespQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataRespQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_dataRespQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_dataRespQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataRespQ_clearReq_canon = 1'd1 ;

  // rule RL_mmio_dataPendQ_canonicalize
  assign CAN_FIRE_RL_mmio_dataPendQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataPendQ_canonicalize = 1'd1 ;

  // rule RL_mmio_dataPendQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_dataPendQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataPendQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_dataPendQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_dataPendQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataPendQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_dataPendQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_dataPendQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_dataPendQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_sendLdToMem
  assign CAN_FIRE_RL_coreFix_memExe_sendLdToMem =
	     (!coreFix_memExe_reqLdQ_empty_dummy2_1$Q_OUT ||
	      !coreFix_memExe_reqLdQ_empty_dummy2_2$Q_OUT ||
	      coreFix_memExe_reqLdQ_empty_lat_0$whas ||
	      !coreFix_memExe_reqLdQ_empty_rl) &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqFrom_ETC___d1100 ;
  assign WILL_FIRE_RL_coreFix_memExe_sendLdToMem =
	     CAN_FIRE_RL_coreFix_memExe_sendLdToMem &&
	     !WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;

  // rule RL_coreFix_memExe_sendStToMem
  assign CAN_FIRE_RL_coreFix_memExe_sendStToMem =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqFrom_ETC___d1100 &&
	     (!coreFix_memExe_reqStQ_empty_dummy2_1$Q_OUT ||
	      !coreFix_memExe_reqStQ_empty_dummy2_2$Q_OUT ||
	      CAN_FIRE_RL_coreFix_memExe_doIssueSB ||
	      !coreFix_memExe_reqStQ_empty_rl) ;
  assign WILL_FIRE_RL_coreFix_memExe_sendStToMem =
	     CAN_FIRE_RL_coreFix_memExe_sendStToMem &&
	     !WILL_FIRE_RL_coreFix_memExe_sendLdToMem &&
	     !WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1953 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_processAmo[160] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[578:577] ==
	     2'd0 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2547 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_processAmo[160] &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[578:577] ==
	     2'd2 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_doDeqStQ_St_Mem
  assign CAN_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem =
	     coreFix_memExe_stb$RDY_enq && coreFix_memExe_lsq$RDY_deqSt &&
	     coreFix_memExe_lsq$RDY_firstSt &&
	     !coreFix_memExe_lsq$firstSt[4] &&
	     coreFix_memExe_lsq$firstSt[158:157] == 2'd0 &&
	     !coreFix_memExe_lsq$firstSt[77] &&
	     coreFix_memExe_stb$getEnqIndex[2] ;
  assign WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem =
	     CAN_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_memExe_doRespLdMem
  assign CAN_FIRE_RL_coreFix_memExe_doRespLdMem =
	     !coreFix_memExe_memRespLdQ_empty ;
  assign WILL_FIRE_RL_coreFix_memExe_doRespLdMem =
	     CAN_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_doRespLdForward
  assign CAN_FIRE_RL_coreFix_memExe_doRespLdForward =
	     !coreFix_memExe_forwardQ_empty ;
  assign WILL_FIRE_RL_coreFix_memExe_doRespLdForward =
	     CAN_FIRE_RL_coreFix_memExe_doRespLdForward &&
	     !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     !WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;

  // rule RL_coreFix_memExe_doExeMem
  assign CAN_FIRE_RL_coreFix_memExe_doExeMem =
	     coreFix_memExe_regToExeQ$RDY_deq &&
	     coreFix_memExe_regToExeQ$RDY_first &&
	     coreFix_memExe_dTlb$RDY_procReq ;
  assign WILL_FIRE_RL_coreFix_memExe_doExeMem =
	     CAN_FIRE_RL_coreFix_memExe_doExeMem ;

  // rule RL_prepareCachesAndTlbs
  assign CAN_FIRE_RL_prepareCachesAndTlbs =
	     (!flush_tlbs ||
	      coreFix_memExe_dTlb$RDY_flush &&
	      fetchStage$RDY_iTlbIfc_flush) &&
	     (flush_reservation || flush_tlbs || update_vm_info) ;
  assign WILL_FIRE_RL_prepareCachesAndTlbs =
	     CAN_FIRE_RL_prepareCachesAndTlbs ;

  // rule RL_coreFix_memExe_doRegReadMem
  assign CAN_FIRE_RL_coreFix_memExe_doRegReadMem =
	     coreFix_memExe_dispToRegQ$RDY_deq &&
	     coreFix_memExe_regToExeQ_RDY_enq__468_AND_core_ETC___d1550 ;
  assign WILL_FIRE_RL_coreFix_memExe_doRegReadMem =
	     CAN_FIRE_RL_coreFix_memExe_doRegReadMem &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_memExe_doDispatchMem
  assign CAN_FIRE_RL_coreFix_memExe_doDispatchMem =
	     coreFix_memExe_dispToRegQ$RDY_enq &&
	     coreFix_memExe_rsMem$RDY_doDispatch &&
	     coreFix_memExe_rsMem$RDY_dispatchData ;
  assign WILL_FIRE_RL_coreFix_memExe_doDispatchMem =
	     CAN_FIRE_RL_coreFix_memExe_doDispatchMem &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send &&
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_getEmptyEntryInit &&
	     CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q245 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry =
	     !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new =
	     (!coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$Q_OUT ||
	      !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$Q_OUT ||
	      coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas ||
	      !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_cRqTransfer_getEmptyEntryInit &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer &&
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_send &&
	     CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q246 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_latTimer_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_latTimer_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_latTimer_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_canonicalize =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_canonicalize =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_canonicalize =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_canonicalize =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_memRespLdQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_memRespLdQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_memRespLdQ_canonicalize = 1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_canon
  assign CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_canon =
	     1'd1 ;

  // rule RL_coreFix_memExe_respLrScAmoQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_canonicalize = 1'd1 ;

  // rule RL_coreFix_memExe_respLrScAmoQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_respLrScAmoQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_deqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_respLrScAmoQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_respLrScAmoQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_respLrScAmoQ_enqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_memRespLdQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_memRespLdQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_memRespLdQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_memRespLdQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_memRespLdQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_memRespLdQ_enqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_memRespLdQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_memRespLdQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_memRespLdQ_deqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_forwardQ_canonicalize
  assign CAN_FIRE_RL_coreFix_memExe_forwardQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_forwardQ_canonicalize = 1'd1 ;

  // rule RL_coreFix_memExe_forwardQ_clearReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_forwardQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_forwardQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_forwardQ_deqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_forwardQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_forwardQ_deqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_forwardQ_enqReq_canon
  assign CAN_FIRE_RL_coreFix_memExe_forwardQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_forwardQ_enqReq_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLrScAmoQ_empty_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_empty_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_empty_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqStQ_full_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqStQ_full_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqStQ_full_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqStQ_empty_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqStQ_empty_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqStQ_empty_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqStQ_data_0_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqStQ_data_0_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqStQ_data_0_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLrScAmoQ_full_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_full_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_full_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLrScAmoQ_data_0_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLrScAmoQ_data_0_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLrScAmoQ_data_0_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLdQ_full_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLdQ_full_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLdQ_full_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLdQ_empty_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLdQ_empty_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLdQ_empty_canon = 1'd1 ;

  // rule RL_coreFix_memExe_reqLdQ_data_0_canon
  assign CAN_FIRE_RL_coreFix_memExe_reqLdQ_data_0_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_reqLdQ_data_0_canon = 1'd1 ;

  // rule RL_coreFix_memExe_ldMemLatTimer_canon
  assign CAN_FIRE_RL_coreFix_memExe_ldMemLatTimer_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_ldMemLatTimer_canon = 1'd1 ;

  // rule RL_coreFix_memExe_stMemLatTimer_canon
  assign CAN_FIRE_RL_coreFix_memExe_stMemLatTimer_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_memExe_stMemLatTimer_canon = 1'd1 ;

  // rule RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv =
	     coreFix_fpuMulDivExe_0_regToExeQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_regToExeQ$RDY_first &&
	     IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d8734 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv =
	     coreFix_fpuMulDivExe_0_dispToRegQ$RDY_deq &&
	     coreFix_fpuMulDivExe_0_regToExeQ$RDY_enq &&
	     coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first__4_ETC___d8603 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv =
	     coreFix_fpuMulDivExe_0_dispToRegQ$RDY_enq &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_doDispatch &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_dispatchData ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv &&
	     !WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	     !WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit =
	     !coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_rl_ready
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_rl_ready =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_rl_ready =
	     1'd1 ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_canon
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_canon = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_canon = 1'd1 ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_canon
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_canon =
	     1'd1 ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_canon
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_canon =
	     1'd1 ;

  // rule RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_canon
  assign CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_canon =
	     1'd1 ;
  assign WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_canon =
	     1'd1 ;

  // rule RL_renameStage_doRenaming_Trap
  assign CAN_FIRE_RL_renameStage_doRenaming_Trap =
	     epochManager$RDY_incrementEpoch && rob$RDY_enqPort_0_enq &&
	     fetchStage$RDY_pipelines_0_first &&
	     fetchStage$RDY_pipelines_0_deq &&
	     mmio_pRqQ_empty_62_AND_epochManager_checkEpoch_ETC___d12607 ;
  assign WILL_FIRE_RL_renameStage_doRenaming_Trap =
	     CAN_FIRE_RL_renameStage_doRenaming_Trap &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !EN_coreReq_start ;

  // rule RL_renameStage_doRenaming_SystemInst
  assign CAN_FIRE_RL_renameStage_doRenaming_SystemInst =
	     epochManager$RDY_incrementEpoch &&
	     rob_RDY_enqPort_0_enq__2460_AND_regRenamingTab_ETC___d12678 &&
	     mmio_pRqQ_empty_62_AND_epochManager_checkEpoch_ETC___d12732 &&
	     rob$isEmpty ;
  assign WILL_FIRE_RL_renameStage_doRenaming_SystemInst =
	     CAN_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !EN_coreReq_start ;

  // rule RL_csrInstOrInterruptInflight_canon
  assign CAN_FIRE_RL_csrInstOrInterruptInflight_canon = 1'd1 ;
  assign WILL_FIRE_RL_csrInstOrInterruptInflight_canon = 1'd1 ;

  // rule RL_commitStage_doSetLSQAtCommit
  assign CAN_FIRE_RL_commitStage_doSetLSQAtCommit =
	     MUX_commitStage_setLSQAtCommit_0$wset_1__SEL_1 ||
	     WILL_FIRE_RL_commitStage_notifyLSQCommit ;
  assign WILL_FIRE_RL_commitStage_doSetLSQAtCommit =
	     CAN_FIRE_RL_commitStage_doSetLSQAtCommit ;

  // rule RL_commitStage_doSetLSQAtCommit_1
  assign CAN_FIRE_RL_commitStage_doSetLSQAtCommit_1 =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_1_canDeq &&
	     rob$deqPort_1_deq_data[25] &&
	     !rob$deqPort_1_deq_data[18] &&
	     !rob$deqPort_1_deq_data[167] &&
	     rob$deqPort_1_deq_data[257:253] != 5'd0 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd21 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd17 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd18 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd13 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd16 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd15 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd19 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd20 &&
	     rob$deqPort_1_deq_data[13] ;
  assign WILL_FIRE_RL_commitStage_doSetLSQAtCommit_1 =
	     CAN_FIRE_RL_commitStage_doSetLSQAtCommit_1 ;

  // rule RL_renameStage_doRenaming
  assign CAN_FIRE_RL_renameStage_doRenaming =
	     (!fetchStage$pipelines_0_canDeq ||
	      IF_fetchStage_RDY_pipelines_0_first__2435_AND__ETC___d12814) &&
	     IF_NOT_fetchStage_pipelines_0_canDeq__2436_243_ETC___d13150 &&
	     IF_NOT_fetchStage_pipelines_0_canDeq__2436_243_ETC___d13158 &&
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13317 &&
	     mmio_pRqQ_empty_62_AND_epochManager_checkEpoch_ETC___d13320 ;
  assign WILL_FIRE_RL_renameStage_doRenaming =
	     CAN_FIRE_RL_renameStage_doRenaming &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;

  // rule RL_mmio_pRqQ_canonicalize
  assign CAN_FIRE_RL_mmio_pRqQ_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRqQ_canonicalize = 1'd1 ;

  // rule RL_mmio_pRqQ_enqReq_canon
  assign CAN_FIRE_RL_mmio_pRqQ_enqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRqQ_enqReq_canon = 1'd1 ;

  // rule RL_mmio_pRqQ_deqReq_canon
  assign CAN_FIRE_RL_mmio_pRqQ_deqReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRqQ_deqReq_canon = 1'd1 ;

  // rule RL_mmio_pRqQ_clearReq_canon
  assign CAN_FIRE_RL_mmio_pRqQ_clearReq_canon = 1'd1 ;
  assign WILL_FIRE_RL_mmio_pRqQ_clearReq_canon = 1'd1 ;

  // rule RL_coreFix_globalSpecUpdate_canon_correct_spec
  assign CAN_FIRE_RL_coreFix_globalSpecUpdate_canon_correct_spec = 1'd1 ;
  assign WILL_FIRE_RL_coreFix_globalSpecUpdate_canon_correct_spec = 1'd1 ;

  // inputs to muxes for submodule ports
  assign MUX_commitStage_rg_serial_num$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ;
  assign MUX_commitStage_setLSQAtCommit_0$wset_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_0_canDeq &&
	     rob$deqPort_0_deq_data[13] ;
  assign MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3 =
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign MUX_coreFix_aluExe_0_rsAlu$enq_1__SEL_1 =
	     WILL_FIRE_RL_renameStage_doRenaming && _dfoo18 ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[32] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[32] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[32] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_1 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2449 ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_1 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_1 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2426 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd4 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2362 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2366) ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2413 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_3 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2620 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[1:0] ==
	     2'd0 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	       3'd4 ||
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 &&
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869 ||
	       !IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861) ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d1968) ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd4 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2465) ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd4 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570] &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2571 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2574 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2531 ;
  assign MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd2 ;
  assign MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd2 ;
  assign MUX_coreFix_memExe_ldMemLatTimer_doneEn$wset_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd0 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2432) ;
  assign MUX_coreFix_memExe_ldMemLatTimer_doneEn$wset_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 ;
  assign MUX_coreFix_memExe_ldMemLatTimer_startEn$wset_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;
  assign MUX_coreFix_memExe_ldMemLatTimer_startEn$wset_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;
  assign MUX_coreFix_memExe_lsq$wakeupLdStalledBySB_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd1 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2457) ;
  assign MUX_coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$write_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2396 ;
  assign MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_1 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_coreFix_memExe_waitLrScAmoMMIOResp$write_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;
  assign MUX_coreFix_trainBPQ_0$enq_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     (coreFix_aluExe_0_exeToFinQ$first[326:322] == 5'd9 ||
	      coreFix_aluExe_0_exeToFinQ$first[326:322] == 5'd10) ;
  assign MUX_coreFix_trainBPQ_1$enq_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     (coreFix_aluExe_1_exeToFinQ$first[326:322] == 5'd9 ||
	      coreFix_aluExe_1_exeToFinQ$first[326:322] == 5'd10) ;
  assign MUX_csrInstOrInterruptInflight_dummy2_0$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 ;
  assign MUX_csrInstOrInterruptInflight_dummy2_0$write_1__SEL_2 =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     commitStage_commitTrap[36] ;
  assign MUX_csrInstOrInterruptInflight_dummy2_1$write_1__SEL_2 =
	     WILL_FIRE_RL_renameStage_doRenaming_Trap &&
	     !fetchStage$pipelines_0_first[68] &&
	     (IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] ||
	      IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] ||
	      IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] ||
	      IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] ||
	      IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] ||
	      IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] ||
	      IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] ||
	      IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7] ||
	      IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[8] ||
	      IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[9] ||
	      IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[10] ||
	      IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[11]) ;
  assign MUX_csrf_external_int_pend_vec_1$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     (rob$deqPort_0_deq_data[180:169] == 12'd324 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd836) ;
  assign MUX_csrf_fflags_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     (rob$deqPort_0_deq_data[180:169] == 12'd1 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd3) ;
  assign MUX_csrf_fs_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     (rob$deqPort_0_deq_data[180:169] == 12'd1 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd2 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd3 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd256 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd768) ;
  assign MUX_csrf_ie_vec_1$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ;
  assign MUX_csrf_ie_vec_1$write_1__SEL_2 =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     csrf_prv_reg_read__2466_ULE_1_3692_AND_IF_comm_ETC___d13699 ;
  assign MUX_csrf_ie_vec_3$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo20 ;
  assign MUX_csrf_ie_vec_3$write_1__SEL_2 =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_csrf_prv_reg_read__2466_ULE_1_3692_3730_OR_ETC___d13734 ;
  assign MUX_csrf_mpp_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo20 ;
  assign MUX_csrf_prev_ie_vec_1$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ;
  assign MUX_csrf_prev_ie_vec_3$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo20 ;
  assign MUX_csrf_prv_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     (rob$deqPort_0_deq_data[257:253] == 5'd19 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd20) ;
  assign MUX_csrf_spp_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ;
  assign MUX_epochManager$updatePrevEpoch_0_update_1__SEL_2 =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d13323 &&
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872 ;
  assign MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2 =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	     NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13445 &&
	     IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13144 ;
  assign MUX_flush_reservation$write_1__SEL_1 =
	     WILL_FIRE_RL_prepareCachesAndTlbs && flush_reservation ;
  assign MUX_flush_tlbs$write_1__SEL_1 =
	     WILL_FIRE_RL_prepareCachesAndTlbs && flush_tlbs ;
  assign MUX_rf$write_3_wr_1__SEL_1 =
	     MUX_rf$write_3_wr_2__PSEL_1 && coreFix_memExe_lsq$respLd[72] ;
  assign MUX_rf$write_3_wr_1__SEL_2 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_rf$write_3_wr_1__SEL_3 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_rf$write_3_wr_1__SEL_4 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_rf$write_3_wr_1__SEL_5 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_rf$write_3_wr_2__PSEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdForward ||
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ;
  assign MUX_rf$write_3_wr_2__SEL_1 =
	     MUX_rf$write_3_wr_2__PSEL_1 && coreFix_memExe_lsq$respLd[72] ;
  assign MUX_rob$setExecuted_deqLSQ_1__SEL_1 =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence ;
  assign MUX_sbAggr$setReady_4_put_1__SEL_1 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_sbAggr$setReady_4_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_sbCons$setReady_3_put_1__SEL_1 =
	     MUX_rf$write_3_wr_2__PSEL_1 && coreFix_memExe_lsq$respLd[72] ;
  assign MUX_sbCons$setReady_3_put_1__SEL_2 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_1 &&
	     coreFix_memExe_lsq$firstSt[150] ;
  assign MUX_sbCons$setReady_3_put_1__SEL_3 =
	     MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign MUX_update_vm_info$write_1__SEL_1 =
	     WILL_FIRE_RL_prepareCachesAndTlbs && update_vm_info ;
  assign MUX_commitStage_commitTrap$write_1__VAL_2 =
	     { 1'd1,
	       rob$deqPort_0_deq_data[353:290],
	       x__h764974,
	       rob$deqPort_0_deq_data[166:162],
	       rob$deqPort_0_deq_data[289:258] } ;
  assign MUX_commitStage_rg_serial_num$write_1__VAL_1 =
	     commitStage_rg_serial_num + 64'd1 ;
  assign MUX_commitStage_rg_serial_num$write_1__VAL_2 =
	     commitStage_rg_serial_num + y__h782307 ;
  assign MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_1 =
	     (k__h731393 == 1'd0 &&
	      fetchStage_pipelines_0_canDeq__2436_AND_NOT_fe_ETC___d13326) ?
	       { fetchStage$pipelines_0_first[199:128],
		 fetchStage$pipelines_0_first[255:232],
		 regRenamingTable$rename_0_getRename,
		 rob$enqPort_0_getEnqInstTag,
		 specTagManager$currentSpecBits,
		 fetchStage$pipelines_0_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_0_get } :
	       { fetchStage$pipelines_1_first[199:128],
		 fetchStage$pipelines_1_first[255:232],
		 regRenamingTable$rename_1_getRename,
		 rob$enqPort_1_getEnqInstTag,
		 renaming_spec_bits__h749005,
		 fetchStage$pipelines_1_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_1_get } ;
  assign MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_2 =
	     { fetchStage$pipelines_0_first[199:128],
	       fetchStage$pipelines_0_first[255:232],
	       regRenamingTable$rename_0_getRename,
	       rob$enqPort_0_getEnqInstTag,
	       specTagManager$currentSpecBits,
	       5'd10,
	       sbAggr$eagerLookup_0_get } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1 =
	     { 1'd1, coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[31:25] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2 =
	     { 1'd1, coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[31:25] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3 =
	     { 1'd1, coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[31:25] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4 =
	     { 1'd1,
	       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[31:25] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5 =
	     { 1'd1,
	       coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[31:25] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6 =
	     { 1'd1,
	       coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[31:25] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1 =
	     { 1'd1, coreFix_memExe_lsq$firstSt[149:143] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2 =
	     { 1'd1, coreFix_memExe_lsq$firstLd[88:82] } ;
  assign MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3 =
	     { 1'd1, coreFix_memExe_lsq$getHit[7:1] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_2__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       (IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 ?
		  3'd3 :
		  3'd5) :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2370 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       (IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 ?
		  { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[573:571],
		    coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516],
		    53'h15555555555555 } :
		  58'h155555555555554) :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2381 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_2 =
	     { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[573:571],
	       55'h15555555555555 } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_1 =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2416,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:90] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_2 =
	     { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	       3'd2,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:90] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       IF_IF_coreFix_memExe_dMem_cache_m_banks_0_pipe_ETC___d1972 :
	       ((coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
		 3'd1) ?
		  4'd2 :
		  IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1973) ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       (IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 ?
		  IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d2342 :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:0]) :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2351 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_2 =
	     { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:96],
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1978,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2333 } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_3 =
	     { coreFix_memExe_dMem_cache_m_banks_0_processAmo[151:100],
	       2'd3,
	       coreFix_memExe_dMem_cache_m_banks_0_processAmo[3:0],
	       IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1845,
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd0) ?
		 n__h210716 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[63:0] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_4 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570] ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2571 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2574) ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:0] :
	       { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:518],
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
		   { 2'd0,
		     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515:512] } :
		   { coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[1:0],
		     4'd2 },
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_3__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	       (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
		!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) :
	       NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2357 ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_1 =
	     { 517'h02AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq[147:84],
	       x__h306156 } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_2 =
	     { 517'h02AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,
	       x__h307577,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_3 =
	     { 518'h1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2767,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_4 =
	     { 2'd2,
	       addr__h310363,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2832 } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_2 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_1 =
	     { x__h168728, x__h168734, 84'h82AAAAAAAAAAAAAAAAAAA } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_2 =
	     { x__h172584, x__h172590, 84'hCAAAAAAAAAAAAAAAAAAAA } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_3 =
	     { x__h175709,
	       x__h175713,
	       IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1175,
	       IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1179,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1183,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1187,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1191,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1196,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1200,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1205,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1209,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1214,
	       x__h177561,
	       IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1222,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1226,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1230,
	       coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1234 } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_2 =
	     { 1'd0,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_1 =
	     { 1'd1,
	       resp_addr__h312417,
	       2'd0,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData } ;
  assign MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_2 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq,
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData } ;
  assign MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_lsq$getIssueLd[76:72],
	       coreFix_memExe_lsq$issueLd[63:0] } ;
  assign MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_2 =
	     { 1'd1,
	       coreFix_memExe_issueLd$wget[76:72],
	       coreFix_memExe_lsq$issueLd[63:0] } ;
  assign MUX_coreFix_memExe_lsq$getHit_1__VAL_1 =
	     { 1'd0,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[152:148] } ;
  always@(coreFix_memExe_memRespLdQ_deqP or
	  coreFix_memExe_memRespLdQ_data_0 or
	  coreFix_memExe_memRespLdQ_data_1)
  begin
    case (coreFix_memExe_memRespLdQ_deqP)
      1'd0:
	  MUX_coreFix_memExe_lsq$respLd_1__VAL_1 =
	      coreFix_memExe_memRespLdQ_data_0[68:64];
      1'd1:
	  MUX_coreFix_memExe_lsq$respLd_1__VAL_1 =
	      coreFix_memExe_memRespLdQ_data_1[68:64];
    endcase
  end
  always@(coreFix_memExe_forwardQ_deqP or
	  coreFix_memExe_forwardQ_data_0 or coreFix_memExe_forwardQ_data_1)
  begin
    case (coreFix_memExe_forwardQ_deqP)
      1'd0:
	  MUX_coreFix_memExe_lsq$respLd_1__VAL_2 =
	      coreFix_memExe_forwardQ_data_0[68:64];
      1'd1:
	  MUX_coreFix_memExe_lsq$respLd_1__VAL_2 =
	      coreFix_memExe_forwardQ_data_1[68:64];
    endcase
  end
  always@(coreFix_memExe_memRespLdQ_deqP or
	  coreFix_memExe_memRespLdQ_data_0 or
	  coreFix_memExe_memRespLdQ_data_1)
  begin
    case (coreFix_memExe_memRespLdQ_deqP)
      1'd0:
	  MUX_coreFix_memExe_lsq$respLd_2__VAL_1 =
	      coreFix_memExe_memRespLdQ_data_0[63:0];
      1'd1:
	  MUX_coreFix_memExe_lsq$respLd_2__VAL_1 =
	      coreFix_memExe_memRespLdQ_data_1[63:0];
    endcase
  end
  always@(coreFix_memExe_forwardQ_deqP or
	  coreFix_memExe_forwardQ_data_0 or coreFix_memExe_forwardQ_data_1)
  begin
    case (coreFix_memExe_forwardQ_deqP)
      1'd0:
	  MUX_coreFix_memExe_lsq$respLd_2__VAL_2 =
	      coreFix_memExe_forwardQ_data_0[63:0];
      1'd1:
	  MUX_coreFix_memExe_lsq$respLd_2__VAL_2 =
	      coreFix_memExe_forwardQ_data_1[63:0];
    endcase
  end
  assign MUX_coreFix_memExe_memRespLdQ_enqReq_lat_0$wset_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[152:148],
	       x__h214333 } ;
  assign MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_1 =
	     { 5'd0,
	       coreFix_memExe_lsq$firstSt[141:78],
	       2'd3,
	       (coreFix_memExe_lsq$firstSt[158:157] == 2'd1) ? 3'd3 : 3'd4,
	       coreFix_memExe_lsq$firstSt[76:5],
	       coreFix_memExe_lsq$firstSt[156:153],
	       coreFix_memExe_lsq$firstSt[69] &&
	       coreFix_memExe_lsq$firstSt[70] &&
	       coreFix_memExe_lsq$firstSt[71] &&
	       coreFix_memExe_lsq$firstSt[72] &&
	       coreFix_memExe_lsq$firstSt[73] &&
	       coreFix_memExe_lsq$firstSt[74] &&
	       coreFix_memExe_lsq$firstSt[75] &&
	       coreFix_memExe_lsq$firstSt[76],
	       coreFix_memExe_lsq$firstSt[152:151] } ;
  assign MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_2 =
	     { 5'd0,
	       coreFix_memExe_lsq$firstLd[80:17],
	       84'h92AAAAAAAAAAAAAAAAAAA } ;
  assign MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_1 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       ((!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
		 !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) ?
		  { 1'd1,
		    IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2398 } :
		  65'h10000000000000001) :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2401 ;
  assign MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_2 =
	     { 1'd1,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2398 } ;
  assign MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_3 =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_processAmo[6] ?
		 curData__h209190 :
		 { {32{x__h209947[31]}}, x__h209947 } } ;
  assign MUX_coreFix_trainBPQ_0$enq_1__VAL_1 =
	     { coreFix_aluExe_0_exeToFinQ$first[146:19],
	       coreFix_aluExe_0_exeToFinQ$first[326:322],
	       coreFix_aluExe_0_exeToFinQ$first[18],
	       coreFix_aluExe_0_exeToFinQ$first[300:277],
	       1'd0,
	       coreFix_aluExe_0_exeToFinQ$first[276] } ;
  assign MUX_coreFix_trainBPQ_0$enq_1__VAL_2 =
	     { coreFix_aluExe_0_exeToFinQ$first[146:19],
	       coreFix_aluExe_0_exeToFinQ$first[326:322],
	       coreFix_aluExe_0_exeToFinQ$first[18],
	       coreFix_aluExe_0_exeToFinQ$first[300:277],
	       1'd1,
	       coreFix_aluExe_0_exeToFinQ$first[276] } ;
  assign MUX_coreFix_trainBPQ_1$enq_1__VAL_1 =
	     { coreFix_aluExe_1_exeToFinQ$first[146:19],
	       coreFix_aluExe_1_exeToFinQ$first[326:322],
	       coreFix_aluExe_1_exeToFinQ$first[18],
	       coreFix_aluExe_1_exeToFinQ$first[300:277],
	       1'd0,
	       coreFix_aluExe_1_exeToFinQ$first[276] } ;
  assign MUX_coreFix_trainBPQ_1$enq_1__VAL_2 =
	     { coreFix_aluExe_1_exeToFinQ$first[146:19],
	       coreFix_aluExe_1_exeToFinQ$first[326:322],
	       coreFix_aluExe_1_exeToFinQ$first[18],
	       coreFix_aluExe_1_exeToFinQ$first[300:277],
	       1'd1,
	       coreFix_aluExe_1_exeToFinQ$first[276] } ;
  assign MUX_csrInstOrInterruptInflight_dummy_1_0$wset_1__VAL_1 =
	     MUX_csrInstOrInterruptInflight_dummy2_0$write_1__SEL_1 ||
	     MUX_csrInstOrInterruptInflight_dummy2_0$write_1__SEL_2 ;
  assign MUX_csrf_fflags_reg$write_1__VAL_2 =
	     csrf_fflags_reg | fflags__h782275 ;
  always@(rob$deqPort_0_deq_data or robdeqPort_0_deq_data_BITS_95_TO_32__q247)
  begin
    case (rob$deqPort_0_deq_data[180:169])
      12'd1, 12'd2, 12'd3: MUX_csrf_fs_reg$write_1__VAL_1 = 2'b11;
      default: MUX_csrf_fs_reg$write_1__VAL_1 =
		   robdeqPort_0_deq_data_BITS_95_TO_32__q247[14:13];
    endcase
  end
  assign MUX_csrf_ie_vec_1$write_1__VAL_1 =
	     (rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	      (rob$deqPort_0_deq_data[180:169] == 12'd256 ||
	       rob$deqPort_0_deq_data[180:169] == 12'd768)) ?
	       robdeqPort_0_deq_data_BITS_95_TO_32__q247[1] :
	       csrf_prev_ie_vec_1 ;
  assign MUX_csrf_ie_vec_3$write_1__VAL_1 =
	     (rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	      rob$deqPort_0_deq_data[180:169] == 12'd768) ?
	       robdeqPort_0_deq_data_BITS_95_TO_32__q247[3] :
	       csrf_prev_ie_vec_3 ;
  assign MUX_csrf_mepc_csr$write_1__VAL_2 = rob$deqPort_0_deq_data[95:32] ;
  assign MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_1 =
	     n__read__h778738 + 64'd1 ;
  assign MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_2 =
	     n__read__h778738 + { 62'd0, x__h782816 } ;
  assign MUX_csrf_mpp_reg$write_1__VAL_1 =
	     (rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	      rob$deqPort_0_deq_data[180:169] == 12'd768) ?
	       MUX_csrf_mepc_csr$write_1__VAL_2[12:11] :
	       2'd0 ;
  assign MUX_csrf_mtval_csr$write_1__VAL_1 =
	     commitStage_commitTrap[36] ? 64'd0 : trap_val__h768632 ;
  assign MUX_csrf_mtval_csr$write_1__VAL_2 = rob$deqPort_0_deq_data[95:32] ;
  assign MUX_csrf_prev_ie_vec_1$write_1__VAL_1 =
	     rob$deqPort_0_deq_data[257:253] != 5'd13 ||
	     rob$deqPort_0_deq_data[180:169] != 12'd256 &&
	     rob$deqPort_0_deq_data[180:169] != 12'd768 ||
	     MUX_csrf_mtval_csr$write_1__VAL_2[5] ;
  assign MUX_csrf_prev_ie_vec_3$write_1__VAL_1 =
	     rob$deqPort_0_deq_data[257:253] != 5'd13 ||
	     rob$deqPort_0_deq_data[180:169] != 12'd768 ||
	     MUX_csrf_mtval_csr$write_1__VAL_2[7] ;
  assign MUX_csrf_prv_reg$write_1__VAL_1 =
	     (rob$deqPort_0_deq_data[257:253] == 5'd19) ?
	       x__h778015 :
	       csrf_mpp_reg ;
  assign MUX_csrf_prv_reg$write_1__VAL_2 =
	     csrf_prv_reg_read__2466_ULE_1_3692_AND_IF_comm_ETC___d13699 ?
	       2'd1 :
	       2'd3 ;
  assign MUX_csrf_sepc_csr$write_1__VAL_2 = rob$deqPort_0_deq_data[95:32] ;
  assign MUX_csrf_spp_reg$write_1__VAL_1 =
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     (rob$deqPort_0_deq_data[180:169] == 12'd256 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd768) &&
	     MUX_csrf_sepc_csr$write_1__VAL_2[8] ;
  assign MUX_fetchStage$redirect_1__VAL_4 =
	     csrf_prv_reg_read__2466_ULE_1_3692_AND_IF_comm_ETC___d13699 ?
	       y_avValue_new_pc__h768849 :
	       y_avValue_new_pc__h769098 ;
  always@(rob$deqPort_0_deq_data or
	  next_pc__h777816 or csrf_sepc_csr or csrf_mepc_csr)
  begin
    case (rob$deqPort_0_deq_data[257:253])
      5'd19: MUX_fetchStage$redirect_1__VAL_5 = csrf_sepc_csr;
      5'd20: MUX_fetchStage$redirect_1__VAL_5 = csrf_mepc_csr;
      default: MUX_fetchStage$redirect_1__VAL_5 = next_pc__h777816;
    endcase
  end
  assign MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_dTlb$toParent_rqToP_first[1:0],
	       coreFix_memExe_dTlb$toParent_rqToP_first[28:2] } ;
  assign MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_2 =
	     { 3'd2, fetchStage$iTlbIfc_toParent_rqToP_first } ;
  assign MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_1 =
	     { 1'd1, mmio_dataReqQ_data_0 } ;
  assign MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_2 =
	     { 1'd1,
	       fetchStage$mmioIfc_instReq_first_fst,
	       4'd2,
	       fetchStage$mmioIfc_instReq_first_snd,
	       72'hAAAAAAAAAAAAAAAAAA } ;
  assign MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_1 =
	     { 1'd1,
	       coreFix_memExe_lsq$firstSt[141:78],
	       (coreFix_memExe_lsq$firstSt[158:157] == 2'd0) ?
		 6'd42 :
		 { 2'd3, coreFix_memExe_lsq$firstSt[156:153] },
	       coreFix_memExe_lsq$firstSt[76:5] } ;
  assign MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_2 =
	     { 1'd1,
	       coreFix_memExe_lsq$firstLd[80:17],
	       6'd26,
	       coreFix_memExe_lsq$firstLd[15:0],
	       56'hAAAAAAAAAAAAAA } ;
  assign MUX_rf$write_2_wr_2__VAL_2 =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[39] ?
	       res_data__h371463 :
	       res_data__h371458 ;
  assign MUX_rf$write_2_wr_2__VAL_3 =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[39] ?
	       res_data__h423181 :
	       res_data__h423176 ;
  assign MUX_rf$write_2_wr_2__VAL_4 =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[39] ?
	       res_data__h474892 :
	       res_data__h474887 ;
  assign MUX_rf$write_2_wr_2__VAL_5 =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[33] ?
	       data___1__h526771 :
	       data__h526332 ;
  assign MUX_rf$write_2_wr_2__VAL_6 =
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[33] ?
	       data___1__h527615 :
	       data__h527176 ;
  assign MUX_rf$write_3_wr_2__VAL_4 =
	     coreFix_memExe_lsq$firstLd[100] ?
	       coreFix_memExe_respLrScAmoQ_data_0 :
	       IF_coreFix_memExe_lsq_firstLd__244_BIT_96_281__ETC___d1317 ;
  assign MUX_rf$write_3_wr_2__VAL_5 =
	     coreFix_memExe_lsq$firstLd[100] ?
	       mmio_dataRespQ_data_0[63:0] :
	       IF_coreFix_memExe_lsq_firstLd__244_BIT_96_281__ETC___d1366 ;
  assign MUX_rob$enqPort_0_enq_1__VAL_1 =
	     { fetchStage$pipelines_0_first[387:324],
	       fetchStage$pipelines_0_first[127:96],
	       fetchStage$pipelines_0_first[199:195],
	       fetchStage$pipelines_0_first[75:69],
	       64'hAAAAAAAAAAAAAAAA,
	       fetchStage$pipelines_0_first[173:161],
	       73'h1280000000000000000,
	       fetchStage$pipelines_0_first[323:260],
	       5'd0,
	       fetchStage$pipelines_0_first[75] &&
	       fetchStage$pipelines_0_first[74],
	       fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	       fetchStage$pipelines_0_first[194:192] != 3'd1 &&
	       fetchStage$pipelines_0_first[194:192] != 3'd2 &&
	       fetchStage$pipelines_0_first[194:192] != 3'd3 &&
	       fetchStage$pipelines_0_first[194:192] != 3'd4,
	       IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13424,
	       7'd32,
	       specTagManager$currentSpecBits } ;
  assign MUX_rob$enqPort_0_enq_1__VAL_2 =
	     { fetchStage$pipelines_0_first[387:324],
	       fetchStage$pipelines_0_first[127:96],
	       fetchStage$pipelines_0_first[199:195],
	       fetchStage$pipelines_0_first[75:69],
	       64'hAAAAAAAAAAAAAAAA,
	       fetchStage$pipelines_0_first[173:161],
	       2'd1,
	       !fetchStage$pipelines_0_first[68] &&
	       (IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] ||
		IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] ||
		IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] ||
		IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] ||
		IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] ||
		IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] ||
		IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] ||
		IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7] ||
		IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[8] ||
		IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[9] ||
		IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[10] ||
		IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[11]),
	       IF_fetchStage_pipelines_0_first__2438_BIT_68_2_ETC___d12656,
	       fetchStage$pipelines_0_first[63:0],
	       2'd0,
	       fetchStage$pipelines_0_first[323:260],
	       20'd13601,
	       specTagManager$currentSpecBits } ;
  assign MUX_rob$enqPort_0_enq_1__VAL_3 =
	     { fetchStage$pipelines_0_first[387:324],
	       fetchStage$pipelines_0_first[127:96],
	       fetchStage$pipelines_0_first[199:195],
	       fetchStage$pipelines_0_first[75:69],
	       64'hAAAAAAAAAAAAAAAA,
	       fetchStage$pipelines_0_first[173:161],
	       73'h1280000000000000000,
	       fetchStage$pipelines_0_first[323:260],
	       5'd0,
	       (fetchStage$pipelines_0_first[173] &&
		fetchStage$pipelines_0_first[199:195] == 5'd13 &&
		(fetchStage$pipelines_0_first[172:161] == 12'd1 ||
		 fetchStage$pipelines_0_first[172:161] == 12'd2 ||
		 fetchStage$pipelines_0_first[172:161] == 12'd3)) ?
		 fetchStage$pipelines_0_first[194:192] == 3'd0 &&
		 fetchStage$pipelines_0_first[178:174] == 5'd15 ||
		 (!fetchStage$pipelines_0_first[88] ||
		  fetchStage$pipelines_0_first[87] ||
		  fetchStage$pipelines_0_first[86:82] != 5'd0) &&
		 (!fetchStage$pipelines_0_first[160] ||
		  fetchStage$pipelines_0_first[159:128] != 32'd0) :
		 fetchStage$pipelines_0_first[75] &&
		 fetchStage$pipelines_0_first[74],
	       fetchStage$pipelines_0_first[194:192] != 3'd0,
	       13'h1521,
	       specTagManager$currentSpecBits } ;
  assign MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_2 =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[39] ?
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[4:0] :
	       res_fflags__h371459 ;
  assign MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_3 =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[39] ?
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[4:0] :
	       res_fflags__h423177 ;
  assign MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_4 =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[39] ?
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[4:0] :
	       res_fflags__h474888 ;

  // inlined wires
  assign csrf_minstret_ehr_data_lat_0$whas =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd2818 ;
  assign csrf_minstret_ehr_data_lat_1$whas =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ||
	     WILL_FIRE_RL_commitStage_doCommitNormalInst ;
  assign csrf_minstret_ehr_data_dummy_1_0$whas =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ;
  assign csrf_mcycle_ehr_data_lat_0$wget = rob$deqPort_0_deq_data[95:32] ;
  assign csrf_mcycle_ehr_data_lat_0$whas =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd2816 ;
  assign csrInstOrInterruptInflight_lat_1$whas =
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     fetchStage$pipelines_0_first[199:195] == 5'd13 ||
	     MUX_csrInstOrInterruptInflight_dummy2_1$write_1__SEL_2 ;
  assign mmio_dataReqQ_enqReq_lat_0$wget =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue ?
	       MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_1 :
	       MUX_mmio_dataReqQ_enqReq_lat_0$wset_1__VAL_2 ;
  assign mmio_dataReqQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue ;
  assign mmio_dataRespQ_enqReq_lat_0$wget = { 1'd1, mmio_pRsQ_data_0[64:0] } ;
  assign mmio_dataRespQ_deqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ;
  assign mmio_dataPendQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue ;
  assign mmio_cRqQ_enqReq_lat_0$wget =
	     WILL_FIRE_RL_mmio_sendDataReq ?
	       MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_1 :
	       MUX_mmio_cRqQ_enqReq_lat_0$wset_1__VAL_2 ;
  assign mmio_cRqQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_mmio_sendDataReq || WILL_FIRE_RL_mmio_sendInstReq ;
  assign mmio_pRsQ_enqReq_lat_0$wget = { 1'd1, mmioToPlatform_pRs_enq_x } ;
  assign mmio_pRsQ_deqReq_lat_0$whas =
	     WILL_FIRE_RL_mmio_sendInstResp ||
	     WILL_FIRE_RL_mmio_sendDataResp ;
  assign mmio_pRqQ_enqReq_lat_0$wget = { 1'd1, mmioToPlatform_pRq_enq_x } ;
  assign mmio_cRsQ_enqReq_lat_0$wget =
	     { 1'd1, csrf_software_int_pend_vec_3 } ;
  assign coreFix_globalSpecUpdate_correctSpecTag_0$whas =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     coreFix_aluExe_0_exeToFinQ$first[16] ;
  assign coreFix_globalSpecUpdate_correctSpecTag_1$whas =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     coreFix_aluExe_1_exeToFinQ$first[16] ;
  assign coreFix_aluExe_0_bypassWire_0$wget =
	     { coreFix_aluExe_0_regToExeQ$first[348:342],
	       basicExec___d12292[321:258] } ;
  assign coreFix_aluExe_0_bypassWire_0$whas =
	     WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	     coreFix_aluExe_0_regToExeQ$first[349] ;
  assign coreFix_aluExe_0_bypassWire_1$wget =
	     { coreFix_aluExe_1_regToExeQ$first[348:342],
	       basicExec___d11946[321:258] } ;
  assign coreFix_aluExe_0_bypassWire_1$whas =
	     WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	     coreFix_aluExe_1_regToExeQ$first[349] ;
  assign coreFix_aluExe_0_bypassWire_2$wget =
	     { coreFix_aluExe_0_exeToFinQ$first[320:314],
	       coreFix_aluExe_0_exeToFinQ$first[275:212] } ;
  assign coreFix_aluExe_0_bypassWire_2$whas =
	     _dor1coreFix_aluExe_0_bypassWire_2$EN_wset &&
	     coreFix_aluExe_0_exeToFinQ$first[321] ;
  assign coreFix_aluExe_0_bypassWire_3$wget =
	     { coreFix_aluExe_1_exeToFinQ$first[320:314],
	       coreFix_aluExe_1_exeToFinQ$first[275:212] } ;
  assign coreFix_aluExe_0_bypassWire_3$whas =
	     _dor1coreFix_aluExe_0_bypassWire_3$EN_wset &&
	     coreFix_aluExe_1_exeToFinQ$first[321] ;
  assign coreFix_aluExe_1_bypassWire_2$whas =
	     _dor1coreFix_aluExe_1_bypassWire_2$EN_wset &&
	     coreFix_aluExe_0_exeToFinQ$first[321] ;
  assign coreFix_aluExe_1_bypassWire_3$whas =
	     _dor1coreFix_aluExe_1_bypassWire_3$EN_wset &&
	     coreFix_aluExe_1_exeToFinQ$first[321] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_2$whas =
	     _dor1coreFix_fpuMulDivExe_0_bypassWire_2$EN_wset &&
	     coreFix_aluExe_0_exeToFinQ$first[321] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_3$whas =
	     _dor1coreFix_fpuMulDivExe_0_bypassWire_3$EN_wset &&
	     coreFix_aluExe_1_exeToFinQ$first[321] ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_newReq$whas =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd3 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd1) &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] == 2'd0 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_newReq$whas =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd3 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd1) &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] == 2'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_newReq$whas =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd3 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd1) &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] != 2'd0 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] != 2'd1 ;
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[226:225])
      2'd0, 2'd1:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$wget =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[226:225];
      default: coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$wget = 2'd2;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd3 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd1) ;
  assign coreFix_memExe_ldMemLatTimer_startEn$whas =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;
  assign coreFix_memExe_ldMemLatTimer_doneEn$whas =
	     MUX_coreFix_memExe_ldMemLatTimer_doneEn$wset_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 ;
  assign coreFix_memExe_stMemLatTimer_doneEn$whas =
	     MUX_coreFix_memExe_lsq$wakeupLdStalledBySB_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd1 ;
  assign coreFix_memExe_bypassWire_2$whas =
	     _dor1coreFix_memExe_bypassWire_2$EN_wset &&
	     coreFix_aluExe_0_exeToFinQ$first[321] ;
  assign coreFix_memExe_bypassWire_3$whas =
	     _dor1coreFix_memExe_bypassWire_3$EN_wset &&
	     coreFix_aluExe_1_exeToFinQ$first[321] ;
  assign coreFix_memExe_issueLd$wget =
	     { coreFix_memExe_dTlb$procResp[89:85],
	       coreFix_memExe_dTlb$procResp[174:111],
	       coreFix_memExe_dTlb$procResp[84:77] } ;
  assign coreFix_memExe_issueLd$whas =
	     WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	     coreFix_memExe_dTlb_procResp__644_BITS_105_TO__ETC___d1712 ;
  assign coreFix_memExe_reqLdQ_data_0_lat_0$wget =
	     MUX_coreFix_memExe_ldMemLatTimer_startEn$wset_1__SEL_2 ?
	       coreFix_memExe_issueLd$wget[76:8] :
	       coreFix_memExe_lsq$getIssueLd[76:8] ;
  assign coreFix_memExe_reqLdQ_data_0_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;
  assign coreFix_memExe_reqLdQ_empty_lat_0$whas =
	     _dor1coreFix_memExe_reqLdQ_empty_lat_0$EN_wset &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;
  assign coreFix_memExe_reqLdQ_full_lat_0$whas =
	     _dor1coreFix_memExe_reqLdQ_full_lat_0$EN_wset &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue ?
	       MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_1 :
	       MUX_coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wset_1__VAL_2 ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ;
  assign coreFix_memExe_reqStQ_data_0_lat_0$wget =
	     { coreFix_memExe_stb$issue[635:576], 6'd0 } ;
  assign coreFix_memExe_forwardQ_enqReq_lat_0$wget =
	     MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_1 ?
	       MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_1 :
	       MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__VAL_2 ;
  assign coreFix_memExe_forwardQ_enqReq_lat_0$whas =
	     MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_1 ||
	     MUX_coreFix_memExe_forwardQ_enqReq_lat_0$wset_1__SEL_2 ;
  assign coreFix_memExe_memRespLdQ_enqReq_lat_0$wget =
	     MUX_coreFix_memExe_ldMemLatTimer_doneEn$wset_1__SEL_1 ?
	       MUX_coreFix_memExe_memRespLdQ_enqReq_lat_0$wset_1__VAL_1 :
	       MUX_coreFix_memExe_memRespLdQ_enqReq_lat_0$wset_1__VAL_1 ;
  assign coreFix_memExe_memRespLdQ_enqReq_lat_0$whas =
	     MUX_coreFix_memExe_ldMemLatTimer_doneEn$wset_1__SEL_1 ||
	     MUX_coreFix_memExe_ldMemLatTimer_doneEn$wset_1__SEL_2 ;
  always@(MUX_coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$write_1__SEL_1 or
	  MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_2 or
	  MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo or
	  MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$write_1__SEL_1:
	  coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget =
	      MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_1;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_2:
	  coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget =
	      MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_2;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget =
	      MUX_coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wset_1__VAL_3;
      default: coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget =
		   65'h0AAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_respLrScAmoQ_enqReq_lat_0$whas =
	     MUX_coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$write_1__SEL_1 ||
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_2 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ;
  assign coreFix_memExe_respLrScAmoQ_deqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;
  always@(WILL_FIRE_RL_coreFix_memExe_sendLdToMem or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_1 or
	  WILL_FIRE_RL_coreFix_memExe_sendStToMem or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_2 or
	  WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_memExe_sendLdToMem:
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_1;
      WILL_FIRE_RL_coreFix_memExe_sendStToMem:
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_2;
      WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem:
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wset_1__VAL_3;
      default: coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget =
		   153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_sendLdToMem ||
	     WILL_FIRE_RL_coreFix_memExe_sendStToMem ||
	     WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ?
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_1 :
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wset_1__VAL_2 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq[147:84],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot[54:53],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq[83:82],
	       1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot[57:55] } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget =
	     { 1'd1, dCacheToParent_fromP_enq_x } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$wget =
	     { 1'd1,
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[2:0] } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2476 ;
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_2 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_2 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_1;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_2:
	  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wset_1__VAL_2;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_3:
	  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget =
	      59'h2AAAAAAAAAAAAAA;
      default: coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget =
		   59'h2AAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$whas =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_1 ||
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_2 ||
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$write_1__SEL_3 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_latTimer_doneEn$whas =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul ;
  assign coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas =
	     WILL_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ||
	     WILL_FIRE_RL_coreFix_memExe_sendStToMem ||
	     WILL_FIRE_RL_coreFix_memExe_sendLdToMem ;

  // register commitStage_commitTrap
  assign commitStage_commitTrap$D_IN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ?
	       166'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       MUX_commitStage_commitTrap$write_1__VAL_2 ;
  assign commitStage_commitTrap$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;

  // register commitStage_rg_serial_num
  assign commitStage_rg_serial_num$D_IN =
	     MUX_commitStage_rg_serial_num$write_1__SEL_1 ?
	       MUX_commitStage_rg_serial_num$write_1__VAL_1 :
	       MUX_commitStage_rg_serial_num$write_1__VAL_2 ;
  assign commitStage_rg_serial_num$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ||
	     WILL_FIRE_RL_commitStage_doCommitNormalInst ;

  // register coreFix_doStatsReg
  assign coreFix_doStatsReg$D_IN = 1'b0 ;
  assign coreFix_doStatsReg$EN = 1'b0 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$D_IN =
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt + 4'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$EN =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$D_IN = 1'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$EN =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_doInit &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt == 4'd15 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready$D_IN = 1'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready$EN = 1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$D_IN =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas ?
	       v__h671847 :
	       v__h670767 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$EN = 1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0$D_IN =
	     { coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_newReq$whas,
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d11385[127:0] } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0$EN =
	     1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1$D_IN =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1$EN =
	     1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0$D_IN =
	     { coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_newReq$whas,
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d11372[127:0] } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0$EN =
	     1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1$D_IN =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1$EN =
	     1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0$D_IN =
	     { coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_newReq$whas,
	       _0_CONCAT_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d11378[127:0] } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0$EN =
	     1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1$D_IN =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1$EN =
	     1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$D_IN =
	     { coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas,
	       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$wget } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$EN = 1'd1 ;

  // register coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$D_IN =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$D_IN =
	     1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$EN =
	     1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$wget[2:0] :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd0 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3068 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3042 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd1 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3068 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3042 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd2 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3068 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3042 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd3 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3068 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3042 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd4 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3068 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3042 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd5 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3068 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3042 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd6 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3068 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3042 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	     3'd7 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3068 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3042 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$D_IN =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$Q_OUT &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl) ?
	       3'd0 :
	       _theResult_____2__h319525 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$D_IN =
	     1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$EN =
	     1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl ||
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3069 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3089 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$D_IN =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$Q_OUT &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl) ?
	       3'd0 :
	       v__h318858 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$D_IN =
	     4'd2 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$EN =
	     1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3068 &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3069 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIn_ETC___d3078 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$D_IN =
	     { EN_dCacheToParent_fromP_enq ?
		 coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[582] :
		 coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[582],
	       IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3223 } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP == 1'd0 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3137 &&
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3148 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$D_IN ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP == 1'd1 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3137 &&
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3148 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3137 &&
	     _theResult_____2__h328530 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl ||
	     IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3170 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3193 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3137 &&
	     v__h322304 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$D_IN =
	     584'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3137 &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3170 &&
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enq_ETC___d3180 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_latTimer_started
  assign coreFix_memExe_dMem_cache_m_banks_0_latTimer_started$D_IN =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ?
	       { IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2974,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2979,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2985,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2990,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2996,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d3001,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d3007,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d3012 } :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d3018 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_latTimer_started$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer
  assign coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer$D_IN =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ?
	       IF_IF_coreFix_memExe_dMem_cache_m_banks_0_latT_ETC___d2964 :
	       { IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2917,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2923,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2930,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2936,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2943,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2949,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2956,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2962 } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$D_IN =
	     MUX_flush_reservation$write_1__SEL_1 ?
	       59'h2AAAAAAAAAAAAAA :
	       (coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_lat_0$wget :
		  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_processAmo
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_2 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_1;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_2:
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__VAL_2;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN =
	      161'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
      default: coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN =
		   161'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dMem_cache_m_banks_0_processAmo$EN =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_processAmo$write_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd4 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget :
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$D_IN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new ||
	     !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$D_IN =
	     !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas ||
	      coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$D_IN =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget[71:0] :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl[71:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP == 1'd0 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3258 &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3269 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$D_IN =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget[71:0] :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl[71:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP == 1'd1 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3258 &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3269 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3258 &&
	     _theResult_____2__h335052 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl ||
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3292 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3315 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3258 &&
	     v__h333902 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$D_IN =
	     73'h0AAAAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3258 &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3292 &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enq_ETC___d3301 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget[578:0] :
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl[578:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP == 1'd0 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3349 &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3360 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget[578:0] :
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl[578:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP == 1'd1 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3349 &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3360 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3349 &&
	     _theResult_____2__h343858 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl ||
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3383 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3406 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3349 &&
	     v__h338230 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$D_IN =
	     580'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$D_IN =
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3349 &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3383 &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enq_ETC___d3392 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$EN = 1'd1 ;

  // register coreFix_memExe_dMem_perfReqQ_clearReq_rl
  assign coreFix_memExe_dMem_perfReqQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_perfReqQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_perfReqQ_data_0
  assign coreFix_memExe_dMem_perfReqQ_data_0$D_IN =
	     coreFix_memExe_dMem_perfReqQ_enqReq_rl[3:0] ;
  assign coreFix_memExe_dMem_perfReqQ_data_0$EN =
	     NOT_coreFix_memExe_dMem_perfReqQ_clearReq_dumm_ETC___d1725 &&
	     coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$Q_OUT &&
	     coreFix_memExe_dMem_perfReqQ_enqReq_rl[4] ;

  // register coreFix_memExe_dMem_perfReqQ_deqReq_rl
  assign coreFix_memExe_dMem_perfReqQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_dMem_perfReqQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_perfReqQ_empty
  assign coreFix_memExe_dMem_perfReqQ_empty$D_IN =
	     coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$Q_OUT &&
	     coreFix_memExe_dMem_perfReqQ_clearReq_rl ||
	     NOT_coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_ETC___d1769 ;
  assign coreFix_memExe_dMem_perfReqQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_dMem_perfReqQ_enqReq_rl
  assign coreFix_memExe_dMem_perfReqQ_enqReq_rl$D_IN = 5'd10 ;
  assign coreFix_memExe_dMem_perfReqQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_dMem_perfReqQ_full
  assign coreFix_memExe_dMem_perfReqQ_full$D_IN =
	     NOT_coreFix_memExe_dMem_perfReqQ_clearReq_dumm_ETC___d1725 &&
	     coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2_r_ETC___d1753 ;
  assign coreFix_memExe_dMem_perfReqQ_full$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_clearReq_rl
  assign coreFix_memExe_forwardQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_forwardQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_data_0
  assign coreFix_memExe_forwardQ_data_0$D_IN =
	     coreFix_memExe_forwardQ_enqReq_lat_0$whas ?
	       coreFix_memExe_forwardQ_enqReq_lat_0$wget[68:0] :
	       coreFix_memExe_forwardQ_enqReq_rl[68:0] ;
  assign coreFix_memExe_forwardQ_data_0$EN =
	     coreFix_memExe_forwardQ_enqP == 1'd0 &&
	     NOT_coreFix_memExe_forwardQ_clearReq_dummy2_1__ETC___d3622 &&
	     coreFix_memExe_forwardQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3633 ;

  // register coreFix_memExe_forwardQ_data_1
  assign coreFix_memExe_forwardQ_data_1$D_IN =
	     coreFix_memExe_forwardQ_enqReq_lat_0$whas ?
	       coreFix_memExe_forwardQ_enqReq_lat_0$wget[68:0] :
	       coreFix_memExe_forwardQ_enqReq_rl[68:0] ;
  assign coreFix_memExe_forwardQ_data_1$EN =
	     coreFix_memExe_forwardQ_enqP == 1'd1 &&
	     NOT_coreFix_memExe_forwardQ_clearReq_dummy2_1__ETC___d3622 &&
	     coreFix_memExe_forwardQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3633 ;

  // register coreFix_memExe_forwardQ_deqP
  assign coreFix_memExe_forwardQ_deqP$D_IN =
	     NOT_coreFix_memExe_forwardQ_clearReq_dummy2_1__ETC___d3622 &&
	     _theResult_____2__h357785 ;
  assign coreFix_memExe_forwardQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_deqReq_rl
  assign coreFix_memExe_forwardQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_forwardQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_empty
  assign coreFix_memExe_forwardQ_empty$D_IN =
	     coreFix_memExe_forwardQ_clearReq_dummy2_1$Q_OUT &&
	     coreFix_memExe_forwardQ_clearReq_rl ||
	     IF_coreFix_memExe_forwardQ_deqReq_dummy2_2_rea_ETC___d3655 &&
	     NOT_coreFix_memExe_forwardQ_enqReq_dummy2_2_re_ETC___d3677 ;
  assign coreFix_memExe_forwardQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_enqP
  assign coreFix_memExe_forwardQ_enqP$D_IN =
	     NOT_coreFix_memExe_forwardQ_clearReq_dummy2_1__ETC___d3622 &&
	     v__h357200 ;
  assign coreFix_memExe_forwardQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_enqReq_rl
  assign coreFix_memExe_forwardQ_enqReq_rl$D_IN = 70'h0AAAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_forwardQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_forwardQ_full
  assign coreFix_memExe_forwardQ_full$D_IN =
	     NOT_coreFix_memExe_forwardQ_clearReq_dummy2_1__ETC___d3622 &&
	     IF_coreFix_memExe_forwardQ_deqReq_dummy2_2_rea_ETC___d3655 &&
	     coreFix_memExe_forwardQ_enqReq_dummy2_2_read___ETC___d3664 ;
  assign coreFix_memExe_forwardQ_full$EN = 1'd1 ;

  // register coreFix_memExe_ldMemLatTimer_started
  assign coreFix_memExe_ldMemLatTimer_started$D_IN =
	     coreFix_memExe_ldMemLatTimer_startEn$whas ?
	       { IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4074,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4079,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4085,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4090,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4096,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4101,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4107,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4112,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4118,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4123,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4129,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4134,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4140,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4145,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4151,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4156,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4162,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4167,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4173,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4178,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4184,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4189,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4195,
		 IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4200 } :
	       IF_coreFix_memExe_ldMemLatTimer_doneEn_whas__8_ETC___d4214 ;
  assign coreFix_memExe_ldMemLatTimer_started$EN = 1'd1 ;

  // register coreFix_memExe_ldMemLatTimer_timer
  assign coreFix_memExe_ldMemLatTimer_timer$D_IN =
	     coreFix_memExe_ldMemLatTimer_startEn$whas ?
	       IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d4056 :
	       { IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3905,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3911,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3918,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3924,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3931,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3937,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3944,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3950,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3957,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3963,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3970,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3976,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3983,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3989,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3996,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4002,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4009,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4015,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4022,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4028,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4035,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4041,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4048,
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4054 } ;
  assign coreFix_memExe_ldMemLatTimer_timer$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_clearReq_rl
  assign coreFix_memExe_memRespLdQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_memRespLdQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_data_0
  assign coreFix_memExe_memRespLdQ_data_0$D_IN =
	     coreFix_memExe_memRespLdQ_enqReq_lat_0$whas ?
	       coreFix_memExe_memRespLdQ_enqReq_lat_0$wget[68:0] :
	       coreFix_memExe_memRespLdQ_enqReq_rl[68:0] ;
  assign coreFix_memExe_memRespLdQ_data_0$EN =
	     coreFix_memExe_memRespLdQ_enqP == 1'd0 &&
	     NOT_coreFix_memExe_memRespLdQ_clearReq_dummy2__ETC___d3533 &&
	     coreFix_memExe_memRespLdQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3544 ;

  // register coreFix_memExe_memRespLdQ_data_1
  assign coreFix_memExe_memRespLdQ_data_1$D_IN =
	     coreFix_memExe_memRespLdQ_enqReq_lat_0$whas ?
	       coreFix_memExe_memRespLdQ_enqReq_lat_0$wget[68:0] :
	       coreFix_memExe_memRespLdQ_enqReq_rl[68:0] ;
  assign coreFix_memExe_memRespLdQ_data_1$EN =
	     coreFix_memExe_memRespLdQ_enqP == 1'd1 &&
	     NOT_coreFix_memExe_memRespLdQ_clearReq_dummy2__ETC___d3533 &&
	     coreFix_memExe_memRespLdQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3544 ;

  // register coreFix_memExe_memRespLdQ_deqP
  assign coreFix_memExe_memRespLdQ_deqP$D_IN =
	     NOT_coreFix_memExe_memRespLdQ_clearReq_dummy2__ETC___d3533 &&
	     _theResult_____2__h354394 ;
  assign coreFix_memExe_memRespLdQ_deqP$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_deqReq_rl
  assign coreFix_memExe_memRespLdQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_memRespLdQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_empty
  assign coreFix_memExe_memRespLdQ_empty$D_IN =
	     coreFix_memExe_memRespLdQ_clearReq_dummy2_1$Q_OUT &&
	     coreFix_memExe_memRespLdQ_clearReq_rl ||
	     IF_coreFix_memExe_memRespLdQ_deqReq_dummy2_2_r_ETC___d3566 &&
	     NOT_coreFix_memExe_memRespLdQ_enqReq_dummy2_2__ETC___d3588 ;
  assign coreFix_memExe_memRespLdQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_enqP
  assign coreFix_memExe_memRespLdQ_enqP$D_IN =
	     NOT_coreFix_memExe_memRespLdQ_clearReq_dummy2__ETC___d3533 &&
	     v__h353809 ;
  assign coreFix_memExe_memRespLdQ_enqP$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_enqReq_rl
  assign coreFix_memExe_memRespLdQ_enqReq_rl$D_IN = 70'h0AAAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_memRespLdQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_memRespLdQ_full
  assign coreFix_memExe_memRespLdQ_full$D_IN =
	     NOT_coreFix_memExe_memRespLdQ_clearReq_dummy2__ETC___d3533 &&
	     IF_coreFix_memExe_memRespLdQ_deqReq_dummy2_2_r_ETC___d3566 &&
	     coreFix_memExe_memRespLdQ_enqReq_dummy2_2_read_ETC___d3575 ;
  assign coreFix_memExe_memRespLdQ_full$EN = 1'd1 ;

  // register coreFix_memExe_reqLdQ_data_0_rl
  assign coreFix_memExe_reqLdQ_data_0_rl$D_IN =
	     coreFix_memExe_reqLdQ_data_0_lat_0$whas ?
	       coreFix_memExe_reqLdQ_data_0_lat_0$wget :
	       coreFix_memExe_reqLdQ_data_0_rl ;
  assign coreFix_memExe_reqLdQ_data_0_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqLdQ_empty_rl
  assign coreFix_memExe_reqLdQ_empty_rl$D_IN =
	     WILL_FIRE_RL_coreFix_memExe_sendLdToMem ||
	     !coreFix_memExe_reqLdQ_empty_lat_0$whas &&
	     coreFix_memExe_reqLdQ_empty_rl ;
  assign coreFix_memExe_reqLdQ_empty_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqLdQ_full_rl
  assign coreFix_memExe_reqLdQ_full_rl$D_IN =
	     !WILL_FIRE_RL_coreFix_memExe_sendLdToMem &&
	     (coreFix_memExe_reqLdQ_full_lat_0$whas ||
	      coreFix_memExe_reqLdQ_full_rl) ;
  assign coreFix_memExe_reqLdQ_full_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqLrScAmoQ_data_0_rl
  assign coreFix_memExe_reqLrScAmoQ_data_0_rl$D_IN =
	     coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
	       coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget :
	       coreFix_memExe_reqLrScAmoQ_data_0_rl ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqLrScAmoQ_empty_rl
  assign coreFix_memExe_reqLrScAmoQ_empty_rl$D_IN =
	     CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ||
	     !coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas &&
	     coreFix_memExe_reqLrScAmoQ_empty_rl ;
  assign coreFix_memExe_reqLrScAmoQ_empty_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqLrScAmoQ_full_rl
  assign coreFix_memExe_reqLrScAmoQ_full_rl$D_IN =
	     !CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem &&
	     (coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas ||
	      coreFix_memExe_reqLrScAmoQ_full_rl) ;
  assign coreFix_memExe_reqLrScAmoQ_full_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqStQ_data_0_rl
  assign coreFix_memExe_reqStQ_data_0_rl$D_IN =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ?
	       coreFix_memExe_reqStQ_data_0_lat_0$wget :
	       coreFix_memExe_reqStQ_data_0_rl ;
  assign coreFix_memExe_reqStQ_data_0_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqStQ_empty_rl
  assign coreFix_memExe_reqStQ_empty_rl$D_IN =
	     WILL_FIRE_RL_coreFix_memExe_sendStToMem ||
	     !CAN_FIRE_RL_coreFix_memExe_doIssueSB &&
	     coreFix_memExe_reqStQ_empty_rl ;
  assign coreFix_memExe_reqStQ_empty_rl$EN = 1'd1 ;

  // register coreFix_memExe_reqStQ_full_rl
  assign coreFix_memExe_reqStQ_full_rl$D_IN =
	     !WILL_FIRE_RL_coreFix_memExe_sendStToMem &&
	     (CAN_FIRE_RL_coreFix_memExe_doIssueSB ||
	      coreFix_memExe_reqStQ_full_rl) ;
  assign coreFix_memExe_reqStQ_full_rl$EN = 1'd1 ;

  // register coreFix_memExe_respLrScAmoQ_clearReq_rl
  assign coreFix_memExe_respLrScAmoQ_clearReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_respLrScAmoQ_clearReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_respLrScAmoQ_data_0
  assign coreFix_memExe_respLrScAmoQ_data_0$D_IN =
	     coreFix_memExe_respLrScAmoQ_enqReq_lat_0$whas ?
	       coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget[63:0] :
	       coreFix_memExe_respLrScAmoQ_enqReq_rl[63:0] ;
  assign coreFix_memExe_respLrScAmoQ_data_0$EN =
	     NOT_coreFix_memExe_respLrScAmoQ_clearReq_dummy_ETC___d3458 &&
	     coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_respLrScAmoQ_enqReq_lat_1_wh_ETC___d3469 ;

  // register coreFix_memExe_respLrScAmoQ_deqReq_rl
  assign coreFix_memExe_respLrScAmoQ_deqReq_rl$D_IN = 1'd0 ;
  assign coreFix_memExe_respLrScAmoQ_deqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_respLrScAmoQ_empty
  assign coreFix_memExe_respLrScAmoQ_empty$D_IN =
	     coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$Q_OUT &&
	     coreFix_memExe_respLrScAmoQ_clearReq_rl ||
	     NOT_coreFix_memExe_respLrScAmoQ_enqReq_dummy2__ETC___d3500 ;
  assign coreFix_memExe_respLrScAmoQ_empty$EN = 1'd1 ;

  // register coreFix_memExe_respLrScAmoQ_enqReq_rl
  assign coreFix_memExe_respLrScAmoQ_enqReq_rl$D_IN = 65'h0AAAAAAAAAAAAAAAA ;
  assign coreFix_memExe_respLrScAmoQ_enqReq_rl$EN = 1'd1 ;

  // register coreFix_memExe_respLrScAmoQ_full
  assign coreFix_memExe_respLrScAmoQ_full$D_IN =
	     NOT_coreFix_memExe_respLrScAmoQ_clearReq_dummy_ETC___d3458 &&
	     coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2_re_ETC___d3485 ;
  assign coreFix_memExe_respLrScAmoQ_full$EN = 1'd1 ;

  // register coreFix_memExe_stMemLatTimer_started
  assign coreFix_memExe_stMemLatTimer_started$D_IN =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ?
	       { IF_coreFix_memExe_stMemLatTimer_startEn_whas___ETC___d3816,
		 IF_coreFix_memExe_stMemLatTimer_startEn_whas___ETC___d3821,
		 IF_coreFix_memExe_stMemLatTimer_startEn_whas___ETC___d3827,
		 IF_coreFix_memExe_stMemLatTimer_startEn_whas___ETC___d3832 } :
	       IF_coreFix_memExe_stMemLatTimer_doneEn_whas__7_ETC___d3836 ;
  assign coreFix_memExe_stMemLatTimer_started$EN = 1'd1 ;

  // register coreFix_memExe_stMemLatTimer_timer
  assign coreFix_memExe_stMemLatTimer_timer$D_IN =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ?
	       IF_IF_coreFix_memExe_stMemLatTimer_startEn_wha_ETC___d3808 :
	       { IF_coreFix_memExe_stMemLatTimer_timer_783_BITS_ETC___d3787,
		 IF_coreFix_memExe_stMemLatTimer_timer_783_BITS_ETC___d3793,
		 IF_coreFix_memExe_stMemLatTimer_timer_783_BITS_ETC___d3800,
		 IF_coreFix_memExe_stMemLatTimer_timer_783_BITS_ETC___d3806 } ;
  assign coreFix_memExe_stMemLatTimer_timer$EN = 1'd1 ;

  // register coreFix_memExe_waitLrScAmoMMIOResp
  always@(MUX_coreFix_memExe_waitLrScAmoMMIOResp$write_1__SEL_1 or
	  WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue or
	  WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue or
	  WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue or
	  WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_waitLrScAmoMMIOResp$write_1__SEL_1:
	  coreFix_memExe_waitLrScAmoMMIOResp$D_IN = 3'd0;
      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue:
	  coreFix_memExe_waitLrScAmoMMIOResp$D_IN = 3'd4;
      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue:
	  coreFix_memExe_waitLrScAmoMMIOResp$D_IN = 3'd2;
      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue:
	  coreFix_memExe_waitLrScAmoMMIOResp$D_IN = 3'd6;
      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue:
	  coreFix_memExe_waitLrScAmoMMIOResp$D_IN = 3'd7;
      default: coreFix_memExe_waitLrScAmoMMIOResp$D_IN =
		   3'b010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_waitLrScAmoMMIOResp$EN =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue ;

  // register csrInstOrInterruptInflight_rl
  assign csrInstOrInterruptInflight_rl$D_IN =
	     csrInstOrInterruptInflight_lat_1$whas ?
	       1'd1 :
	       (MUX_csrInstOrInterruptInflight_dummy_1_0$wset_1__VAL_1 ?
		  1'd0 :
		  csrInstOrInterruptInflight_rl) ;
  assign csrInstOrInterruptInflight_rl$EN = 1'd1 ;

  // register csrf_external_int_en_vec_0
  assign csrf_external_int_en_vec_0$D_IN = 1'b0 ;
  assign csrf_external_int_en_vec_0$EN = 1'b0 ;

  // register csrf_external_int_en_vec_1
  assign csrf_external_int_en_vec_1$D_IN =
	     csrf_mcycle_ehr_data_lat_0$wget[9] ;
  assign csrf_external_int_en_vec_1$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     (rob$deqPort_0_deq_data[180:169] == 12'd260 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd772) ;

  // register csrf_external_int_en_vec_3
  assign csrf_external_int_en_vec_3$D_IN =
	     csrf_mcycle_ehr_data_lat_0$wget[11] ;
  assign csrf_external_int_en_vec_3$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd772 ;

  // register csrf_external_int_pend_vec_0
  assign csrf_external_int_pend_vec_0$D_IN = 1'b0 ;
  assign csrf_external_int_pend_vec_0$EN = 1'b0 ;

  // register csrf_external_int_pend_vec_1
  assign csrf_external_int_pend_vec_1$D_IN =
	     MUX_csrf_external_int_pend_vec_1$write_1__SEL_1 ?
	       csrf_mcycle_ehr_data_lat_0$wget[9] :
	       setSEIP_v ;
  assign csrf_external_int_pend_vec_1$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     (rob$deqPort_0_deq_data[180:169] == 12'd324 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd836) ||
	     EN_setSEIP ;

  // register csrf_external_int_pend_vec_3
  assign csrf_external_int_pend_vec_3$D_IN = setMEIP_v ;
  assign csrf_external_int_pend_vec_3$EN = EN_setMEIP ;

  // register csrf_fflags_reg
  assign csrf_fflags_reg$D_IN =
	     MUX_csrf_fflags_reg$write_1__SEL_1 ?
	       csrf_mcycle_ehr_data_lat_0$wget[4:0] :
	       MUX_csrf_fflags_reg$write_1__VAL_2 ;
  assign csrf_fflags_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     (rob$deqPort_0_deq_data[180:169] == 12'd1 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd3) ||
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     NOT_IF_NOT_rob_deqPort_0_canDeq__3974_3975_OR__ETC___d14192 ;

  // register csrf_frm_reg
  assign csrf_frm_reg$D_IN =
	     (rob$deqPort_0_deq_data[180:169] == 12'd2) ?
	       csrf_mcycle_ehr_data_lat_0$wget[2:0] :
	       csrf_mcycle_ehr_data_lat_0$wget[7:5] ;
  assign csrf_frm_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     (rob$deqPort_0_deq_data[180:169] == 12'd2 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd3) ;

  // register csrf_fs_reg
  assign csrf_fs_reg$D_IN =
	     MUX_csrf_fs_reg$write_1__SEL_1 ?
	       MUX_csrf_fs_reg$write_1__VAL_1 :
	       2'b11 ;
  assign csrf_fs_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     (rob$deqPort_0_deq_data[180:169] == 12'd1 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd2 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd3 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd256 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd768) ||
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     NOT_IF_NOT_rob_deqPort_0_canDeq__3974_3975_OR__ETC___d14192 ;

  // register csrf_ie_vec_0
  assign csrf_ie_vec_0$D_IN = csrf_mcycle_ehr_data_lat_0$wget[0] ;
  assign csrf_ie_vec_0$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     (rob$deqPort_0_deq_data[180:169] == 12'd256 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd768) ;

  // register csrf_ie_vec_1
  assign csrf_ie_vec_1$D_IN =
	     MUX_csrf_ie_vec_1$write_1__SEL_1 &&
	     MUX_csrf_ie_vec_1$write_1__VAL_1 ;
  assign csrf_ie_vec_1$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     csrf_prv_reg_read__2466_ULE_1_3692_AND_IF_comm_ETC___d13699 ;

  // register csrf_ie_vec_3
  assign csrf_ie_vec_3$D_IN =
	     MUX_csrf_ie_vec_3$write_1__SEL_1 &&
	     MUX_csrf_ie_vec_3$write_1__VAL_1 ;
  assign csrf_ie_vec_3$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo20 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_csrf_prv_reg_read__2466_ULE_1_3692_3730_OR_ETC___d13734 ;

  // register csrf_mcause_code_reg
  assign csrf_mcause_code_reg$D_IN =
	     MUX_csrf_ie_vec_3$write_1__SEL_2 ?
	       commitStage_commitTrap[35:32] :
	       csrf_mcycle_ehr_data_lat_0$wget[3:0] ;
  assign csrf_mcause_code_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_csrf_prv_reg_read__2466_ULE_1_3692_3730_OR_ETC___d13734 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd834 ;

  // register csrf_mcause_interrupt_reg
  assign csrf_mcause_interrupt_reg$D_IN =
	     MUX_csrf_ie_vec_3$write_1__SEL_2 ?
	       commitStage_commitTrap[36] :
	       csrf_mcycle_ehr_data_lat_0$wget[63] ;
  assign csrf_mcause_interrupt_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_csrf_prv_reg_read__2466_ULE_1_3692_3730_OR_ETC___d13734 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd834 ;

  // register csrf_mcounteren_cy_reg
  assign csrf_mcounteren_cy_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[0] ;
  assign csrf_mcounteren_cy_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd774 ;

  // register csrf_mcounteren_ir_reg
  assign csrf_mcounteren_ir_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[2] ;
  assign csrf_mcounteren_ir_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd774 ;

  // register csrf_mcounteren_tm_reg
  assign csrf_mcounteren_tm_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[1] ;
  assign csrf_mcounteren_tm_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd774 ;

  // register csrf_mcycle_ehr_data_rl
  assign csrf_mcycle_ehr_data_rl$D_IN = upd__h4986 ;
  assign csrf_mcycle_ehr_data_rl$EN = 1'd1 ;

  // register csrf_medeleg_13_11_reg
  assign csrf_medeleg_13_11_reg$D_IN =
	     csrf_mcycle_ehr_data_lat_0$wget[13:11] ;
  assign csrf_medeleg_13_11_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd770 ;

  // register csrf_medeleg_15_reg
  assign csrf_medeleg_15_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[15] ;
  assign csrf_medeleg_15_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd770 ;

  // register csrf_medeleg_9_0_reg
  assign csrf_medeleg_9_0_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[9:0] ;
  assign csrf_medeleg_9_0_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd770 ;

  // register csrf_mepc_csr
  assign csrf_mepc_csr$D_IN =
	     MUX_csrf_ie_vec_3$write_1__SEL_2 ?
	       commitStage_commitTrap[164:101] :
	       rob$deqPort_0_deq_data[95:32] ;
  assign csrf_mepc_csr$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_csrf_prv_reg_read__2466_ULE_1_3692_3730_OR_ETC___d13734 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd833 ;

  // register csrf_mideleg_11_reg
  assign csrf_mideleg_11_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[11] ;
  assign csrf_mideleg_11_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd771 ;

  // register csrf_mideleg_1_0_reg
  assign csrf_mideleg_1_0_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[1:0] ;
  assign csrf_mideleg_1_0_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd771 ;

  // register csrf_mideleg_5_3_reg
  assign csrf_mideleg_5_3_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[5:3] ;
  assign csrf_mideleg_5_3_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd771 ;

  // register csrf_mideleg_9_7_reg
  assign csrf_mideleg_9_7_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[9:7] ;
  assign csrf_mideleg_9_7_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd771 ;

  // register csrf_minstret_ehr_data_rl
  assign csrf_minstret_ehr_data_rl$D_IN =
	     csrf_minstret_ehr_data_lat_1$whas ?
	       upd__h3683 :
	       IF_csrf_minstret_ehr_data_lat_0_whas_THEN_IF_c_ETC___d10 ;
  assign csrf_minstret_ehr_data_rl$EN = 1'd1 ;

  // register csrf_mpp_reg
  assign csrf_mpp_reg$D_IN =
	     MUX_csrf_mpp_reg$write_1__SEL_1 ?
	       MUX_csrf_mpp_reg$write_1__VAL_1 :
	       csrf_prv_reg ;
  assign csrf_mpp_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo20 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_csrf_prv_reg_read__2466_ULE_1_3692_3730_OR_ETC___d13734 ;

  // register csrf_mprv_reg
  assign csrf_mprv_reg$D_IN = csrf_mcycle_ehr_data_lat_0$wget[17] ;
  assign csrf_mprv_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd768 ;

  // register csrf_mscratch_csr
  assign csrf_mscratch_csr$D_IN = rob$deqPort_0_deq_data[95:32] ;
  assign csrf_mscratch_csr$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd832 ;

  // register csrf_mtval_csr
  assign csrf_mtval_csr$D_IN =
	     MUX_csrf_ie_vec_3$write_1__SEL_2 ?
	       MUX_csrf_mtval_csr$write_1__VAL_1 :
	       rob$deqPort_0_deq_data[95:32] ;
  assign csrf_mtval_csr$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_csrf_prv_reg_read__2466_ULE_1_3692_3730_OR_ETC___d13734 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd835 ;

  // register csrf_mtvec_base_hi_reg
  assign csrf_mtvec_base_hi_reg$D_IN = csrf_mscratch_csr$D_IN[63:2] ;
  assign csrf_mtvec_base_hi_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd773 ;

  // register csrf_mtvec_mode_low_reg
  assign csrf_mtvec_mode_low_reg$D_IN = csrf_mscratch_csr$D_IN[0] ;
  assign csrf_mtvec_mode_low_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd773 ;

  // register csrf_mxr_reg
  assign csrf_mxr_reg$D_IN = csrf_mscratch_csr$D_IN[19] ;
  assign csrf_mxr_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     (rob$deqPort_0_deq_data[180:169] == 12'd256 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd768) ;

  // register csrf_ppn_reg
  assign csrf_ppn_reg$D_IN = csrf_mscratch_csr$D_IN[43:0] ;
  assign csrf_ppn_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd384 ;

  // register csrf_prev_ie_vec_0
  assign csrf_prev_ie_vec_0$D_IN = csrf_mscratch_csr$D_IN[4] ;
  assign csrf_prev_ie_vec_0$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     (rob$deqPort_0_deq_data[180:169] == 12'd256 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd768) ;

  // register csrf_prev_ie_vec_1
  assign csrf_prev_ie_vec_1$D_IN =
	     MUX_csrf_prev_ie_vec_1$write_1__SEL_1 ?
	       MUX_csrf_prev_ie_vec_1$write_1__VAL_1 :
	       csrf_ie_vec_1 ;
  assign csrf_prev_ie_vec_1$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     csrf_prv_reg_read__2466_ULE_1_3692_AND_IF_comm_ETC___d13699 ;

  // register csrf_prev_ie_vec_3
  assign csrf_prev_ie_vec_3$D_IN =
	     MUX_csrf_prev_ie_vec_3$write_1__SEL_1 ?
	       MUX_csrf_prev_ie_vec_3$write_1__VAL_1 :
	       csrf_ie_vec_3 ;
  assign csrf_prev_ie_vec_3$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo20 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     NOT_csrf_prv_reg_read__2466_ULE_1_3692_3730_OR_ETC___d13734 ;

  // register csrf_prv_reg
  assign csrf_prv_reg$D_IN =
	     MUX_csrf_prv_reg$write_1__SEL_1 ?
	       MUX_csrf_prv_reg$write_1__VAL_1 :
	       MUX_csrf_prv_reg$write_1__VAL_2 ;
  assign csrf_prv_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     (rob$deqPort_0_deq_data[257:253] == 5'd19 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd20) ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ;

  // register csrf_rg_tdata1_data
  assign csrf_rg_tdata1_data$D_IN = csrf_mscratch_csr$D_IN[58:0] ;
  assign csrf_rg_tdata1_data$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd1953 ;

  // register csrf_rg_tdata1_dmode
  assign csrf_rg_tdata1_dmode$D_IN = csrf_mscratch_csr$D_IN[59] ;
  assign csrf_rg_tdata1_dmode$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd1953 ;

  // register csrf_rg_tdata2
  assign csrf_rg_tdata2$D_IN = rob$deqPort_0_deq_data[95:32] ;
  assign csrf_rg_tdata2$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd1954 ;

  // register csrf_rg_tdata3
  assign csrf_rg_tdata3$D_IN = rob$deqPort_0_deq_data[95:32] ;
  assign csrf_rg_tdata3$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd1955 ;

  // register csrf_rg_tselect
  assign csrf_rg_tselect$D_IN = rob$deqPort_0_deq_data[95:32] ;
  assign csrf_rg_tselect$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd1952 ;

  // register csrf_scause_code_reg
  assign csrf_scause_code_reg$D_IN =
	     MUX_csrf_ie_vec_1$write_1__SEL_2 ?
	       commitStage_commitTrap[35:32] :
	       csrf_rg_tselect$D_IN[3:0] ;
  assign csrf_scause_code_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     csrf_prv_reg_read__2466_ULE_1_3692_AND_IF_comm_ETC___d13699 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd322 ;

  // register csrf_scause_interrupt_reg
  assign csrf_scause_interrupt_reg$D_IN =
	     MUX_csrf_ie_vec_1$write_1__SEL_2 ?
	       commitStage_commitTrap[36] :
	       csrf_rg_tselect$D_IN[63] ;
  assign csrf_scause_interrupt_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     csrf_prv_reg_read__2466_ULE_1_3692_AND_IF_comm_ETC___d13699 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd322 ;

  // register csrf_scounteren_cy_reg
  assign csrf_scounteren_cy_reg$D_IN = csrf_rg_tselect$D_IN[0] ;
  assign csrf_scounteren_cy_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd262 ;

  // register csrf_scounteren_ir_reg
  assign csrf_scounteren_ir_reg$D_IN = csrf_rg_tselect$D_IN[2] ;
  assign csrf_scounteren_ir_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd262 ;

  // register csrf_scounteren_tm_reg
  assign csrf_scounteren_tm_reg$D_IN = csrf_rg_tselect$D_IN[1] ;
  assign csrf_scounteren_tm_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd262 ;

  // register csrf_sepc_csr
  assign csrf_sepc_csr$D_IN =
	     MUX_csrf_ie_vec_1$write_1__SEL_2 ?
	       commitStage_commitTrap[164:101] :
	       rob$deqPort_0_deq_data[95:32] ;
  assign csrf_sepc_csr$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     csrf_prv_reg_read__2466_ULE_1_3692_AND_IF_comm_ETC___d13699 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd321 ;

  // register csrf_software_int_en_vec_0
  assign csrf_software_int_en_vec_0$D_IN = 1'b0 ;
  assign csrf_software_int_en_vec_0$EN = 1'b0 ;

  // register csrf_software_int_en_vec_1
  assign csrf_software_int_en_vec_1$D_IN = csrf_rg_tselect$D_IN[1] ;
  assign csrf_software_int_en_vec_1$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     (rob$deqPort_0_deq_data[180:169] == 12'd260 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd772) ;

  // register csrf_software_int_en_vec_3
  assign csrf_software_int_en_vec_3$D_IN = csrf_rg_tselect$D_IN[3] ;
  assign csrf_software_int_en_vec_3$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd772 ;

  // register csrf_software_int_pend_vec_0
  assign csrf_software_int_pend_vec_0$D_IN = 1'b0 ;
  assign csrf_software_int_pend_vec_0$EN = 1'b0 ;

  // register csrf_software_int_pend_vec_1
  assign csrf_software_int_pend_vec_1$D_IN = csrf_rg_tselect$D_IN[1] ;
  assign csrf_software_int_pend_vec_1$EN =
	     MUX_csrf_external_int_pend_vec_1$write_1__SEL_1 ;

  // register csrf_software_int_pend_vec_3
  assign csrf_software_int_pend_vec_3$D_IN =
	     (mmio_pRqQ_data_0[37:36] == 2'd2) ?
	       mmio_pRqQ_data_0[0] :
	       amoExec___d879[0] ;
  assign csrf_software_int_pend_vec_3$EN =
	     WILL_FIRE_RL_mmio_handlePRq && !mmio_pRqQ_data_0[38] &&
	     (mmio_pRqQ_data_0[37:36] == 2'd2 ||
	      mmio_pRqQ_data_0[37:36] == 2'd3) ;

  // register csrf_spp_reg
  assign csrf_spp_reg$D_IN =
	     MUX_csrf_spp_reg$write_1__SEL_1 ?
	       MUX_csrf_spp_reg$write_1__VAL_1 :
	       csrf_prv_reg[0] ;
  assign csrf_spp_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst && _dfoo26 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     csrf_prv_reg_read__2466_ULE_1_3692_AND_IF_comm_ETC___d13699 ;

  // register csrf_sscratch_csr
  assign csrf_sscratch_csr$D_IN = rob$deqPort_0_deq_data[95:32] ;
  assign csrf_sscratch_csr$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd320 ;

  // register csrf_stats_module_doStats
  assign csrf_stats_module_doStats$D_IN = recvDoStats_x ;
  assign csrf_stats_module_doStats$EN = EN_recvDoStats ;

  // register csrf_stval_csr
  assign csrf_stval_csr$D_IN =
	     MUX_csrf_ie_vec_1$write_1__SEL_2 ?
	       MUX_csrf_mtval_csr$write_1__VAL_1 :
	       rob$deqPort_0_deq_data[95:32] ;
  assign csrf_stval_csr$EN =
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     csrf_prv_reg_read__2466_ULE_1_3692_AND_IF_comm_ETC___d13699 ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd323 ;

  // register csrf_stvec_base_hi_reg
  assign csrf_stvec_base_hi_reg$D_IN = csrf_sscratch_csr$D_IN[63:2] ;
  assign csrf_stvec_base_hi_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd261 ;

  // register csrf_stvec_mode_low_reg
  assign csrf_stvec_mode_low_reg$D_IN = csrf_sscratch_csr$D_IN[0] ;
  assign csrf_stvec_mode_low_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd261 ;

  // register csrf_sum_reg
  assign csrf_sum_reg$D_IN = csrf_sscratch_csr$D_IN[18] ;
  assign csrf_sum_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     (rob$deqPort_0_deq_data[180:169] == 12'd256 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd768) ;

  // register csrf_time_reg
  assign csrf_time_reg$D_IN = mmioToPlatform_setTime_t ;
  assign csrf_time_reg$EN = EN_mmioToPlatform_setTime ;

  // register csrf_timer_int_en_vec_0
  assign csrf_timer_int_en_vec_0$D_IN = 1'b0 ;
  assign csrf_timer_int_en_vec_0$EN = 1'b0 ;

  // register csrf_timer_int_en_vec_1
  assign csrf_timer_int_en_vec_1$D_IN = csrf_sscratch_csr$D_IN[5] ;
  assign csrf_timer_int_en_vec_1$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     (rob$deqPort_0_deq_data[180:169] == 12'd260 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd772) ;

  // register csrf_timer_int_en_vec_3
  assign csrf_timer_int_en_vec_3$D_IN = csrf_sscratch_csr$D_IN[7] ;
  assign csrf_timer_int_en_vec_3$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd772 ;

  // register csrf_timer_int_pend_vec_0
  assign csrf_timer_int_pend_vec_0$D_IN = 1'b0 ;
  assign csrf_timer_int_pend_vec_0$EN = 1'b0 ;

  // register csrf_timer_int_pend_vec_1
  assign csrf_timer_int_pend_vec_1$D_IN = csrf_sscratch_csr$D_IN[5] ;
  assign csrf_timer_int_pend_vec_1$EN =
	     MUX_csrf_external_int_pend_vec_1$write_1__SEL_1 ;

  // register csrf_timer_int_pend_vec_3
  assign csrf_timer_int_pend_vec_3$D_IN = mmio_pRqQ_data_0[0] ;
  assign csrf_timer_int_pend_vec_3$EN =
	     WILL_FIRE_RL_mmio_handlePRq && mmio_pRqQ_data_0[38] &&
	     mmio_pRqQ_data_0[37:36] == 2'd2 ;

  // register csrf_tsr_reg
  assign csrf_tsr_reg$D_IN = csrf_sscratch_csr$D_IN[22] ;
  assign csrf_tsr_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd768 ;

  // register csrf_tvm_reg
  assign csrf_tvm_reg$D_IN = csrf_sscratch_csr$D_IN[20] ;
  assign csrf_tvm_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd768 ;

  // register csrf_tw_reg
  assign csrf_tw_reg$D_IN = csrf_sscratch_csr$D_IN[21] ;
  assign csrf_tw_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd768 ;

  // register csrf_vm_mode_sv39_reg
  assign csrf_vm_mode_sv39_reg$D_IN = csrf_sscratch_csr$D_IN[63] ;
  assign csrf_vm_mode_sv39_reg$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd384 ;

  // register flush_reservation
  assign flush_reservation$D_IN = !MUX_flush_reservation$write_1__SEL_1 ;
  assign flush_reservation$EN =
	     WILL_FIRE_RL_prepareCachesAndTlbs && flush_reservation ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ;

  // register flush_tlbs
  assign flush_tlbs$D_IN = !MUX_flush_tlbs$write_1__SEL_1 ;
  assign flush_tlbs$EN =
	     WILL_FIRE_RL_prepareCachesAndTlbs && flush_tlbs ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     (rob$deqPort_0_deq_data[257:253] == 5'd16 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	      rob$deqPort_0_deq_data[180:169] == 12'd384) ;

  // register mmio_cRqQ_clearReq_rl
  assign mmio_cRqQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_cRqQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_cRqQ_data_0
  assign mmio_cRqQ_data_0$D_IN =
	     { mmio_cRqQ_enqReq_lat_0$whas ?
		 mmio_cRqQ_enqReq_lat_0$wget[141:78] :
		 mmio_cRqQ_enqReq_rl[141:78],
	       IF_mmio_cRqQ_enqReq_lat_1_whas__42_THEN_IF_mmi_ETC___d504,
	       mmio_cRqQ_enqReq_lat_0$whas ?
		 mmio_cRqQ_enqReq_lat_0$wget[71:0] :
		 mmio_cRqQ_enqReq_rl[71:0] } ;
  assign mmio_cRqQ_data_0$EN =
	     NOT_mmio_cRqQ_clearReq_dummy2_1_read__64_65_OR_ETC___d469 &&
	     mmio_cRqQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_cRqQ_enqReq_lat_1_whas__42_THEN_mmio_c_ETC___d351 ;

  // register mmio_cRqQ_deqReq_rl
  assign mmio_cRqQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_cRqQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_cRqQ_empty
  assign mmio_cRqQ_empty$D_IN =
	     mmio_cRqQ_clearReq_dummy2_1$Q_OUT && mmio_cRqQ_clearReq_rl ||
	     NOT_mmio_cRqQ_enqReq_dummy2_2_read__70_85_OR_I_ETC___d495 ;
  assign mmio_cRqQ_empty$EN = 1'd1 ;

  // register mmio_cRqQ_enqReq_rl
  assign mmio_cRqQ_enqReq_rl$D_IN =
	     143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign mmio_cRqQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_cRqQ_full
  assign mmio_cRqQ_full$D_IN =
	     NOT_mmio_cRqQ_clearReq_dummy2_1_read__64_65_OR_ETC___d469 &&
	     mmio_cRqQ_enqReq_dummy2_2_read__70_AND_IF_mmio_ETC___d482 ;
  assign mmio_cRqQ_full$EN = 1'd1 ;

  // register mmio_cRsQ_clearReq_rl
  assign mmio_cRsQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_cRsQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_cRsQ_data_0
  assign mmio_cRsQ_data_0$D_IN =
	     CAN_FIRE_RL_mmio_handlePRq ?
	       mmio_cRsQ_enqReq_lat_0$wget[0] :
	       mmio_cRsQ_enqReq_rl[0] ;
  assign mmio_cRsQ_data_0$EN =
	     NOT_mmio_cRsQ_clearReq_dummy2_1_read__03_04_OR_ETC___d808 &&
	     mmio_cRsQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_cRsQ_enqReq_lat_1_whas__78_THEN_mmio_c_ETC___d814 ;

  // register mmio_cRsQ_deqReq_rl
  assign mmio_cRsQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_cRsQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_cRsQ_empty
  assign mmio_cRsQ_empty$D_IN =
	     mmio_cRsQ_clearReq_dummy2_1$Q_OUT && mmio_cRsQ_clearReq_rl ||
	     NOT_mmio_cRsQ_enqReq_dummy2_2_read__09_29_OR_I_ETC___d839 ;
  assign mmio_cRsQ_empty$EN = 1'd1 ;

  // register mmio_cRsQ_enqReq_rl
  assign mmio_cRsQ_enqReq_rl$D_IN = 2'd0 ;
  assign mmio_cRsQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_cRsQ_full
  assign mmio_cRsQ_full$D_IN =
	     NOT_mmio_cRsQ_clearReq_dummy2_1_read__03_04_OR_ETC___d808 &&
	     mmio_cRsQ_enqReq_dummy2_2_read__09_AND_IF_mmio_ETC___d826 ;
  assign mmio_cRsQ_full$EN = 1'd1 ;

  // register mmio_dataPendQ_clearReq_rl
  assign mmio_dataPendQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_dataPendQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_dataPendQ_deqReq_rl
  assign mmio_dataPendQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_dataPendQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_dataPendQ_empty
  assign mmio_dataPendQ_empty$D_IN =
	     mmio_dataPendQ_clearReq_dummy2_1$Q_OUT &&
	     mmio_dataPendQ_clearReq_rl ||
	     NOT_mmio_dataPendQ_enqReq_dummy2_2_read__12_27_ETC___d337 ;
  assign mmio_dataPendQ_empty$EN = 1'd1 ;

  // register mmio_dataPendQ_enqReq_rl
  assign mmio_dataPendQ_enqReq_rl$D_IN = 1'd0 ;
  assign mmio_dataPendQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_dataPendQ_full
  assign mmio_dataPendQ_full$D_IN =
	     (!mmio_dataPendQ_clearReq_dummy2_1$Q_OUT ||
	      !mmio_dataPendQ_clearReq_rl) &&
	     mmio_dataPendQ_enqReq_dummy2_2_read__12_AND_IF_ETC___d324 ;
  assign mmio_dataPendQ_full$EN = 1'd1 ;

  // register mmio_dataReqQ_clearReq_rl
  assign mmio_dataReqQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_dataReqQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_dataReqQ_data_0
  assign mmio_dataReqQ_data_0$D_IN =
	     { mmio_dataReqQ_enqReq_lat_0$whas ?
		 mmio_dataReqQ_enqReq_lat_0$wget[141:78] :
		 mmio_dataReqQ_enqReq_rl[141:78],
	       IF_mmio_dataReqQ_enqReq_lat_1_whas__1_THEN_IF__ETC___d203,
	       mmio_dataReqQ_enqReq_lat_0$whas ?
		 mmio_dataReqQ_enqReq_lat_0$wget[71:0] :
		 mmio_dataReqQ_enqReq_rl[71:0] } ;
  assign mmio_dataReqQ_data_0$EN =
	     NOT_mmio_dataReqQ_clearReq_dummy2_1_read__63_6_ETC___d168 &&
	     mmio_dataReqQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_dataReqQ_enqReq_lat_1_whas__1_THEN_mmi_ETC___d50 ;

  // register mmio_dataReqQ_deqReq_rl
  assign mmio_dataReqQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_dataReqQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_dataReqQ_empty
  assign mmio_dataReqQ_empty$D_IN =
	     mmio_dataReqQ_clearReq_dummy2_1$Q_OUT &&
	     mmio_dataReqQ_clearReq_rl ||
	     NOT_mmio_dataReqQ_enqReq_dummy2_2_read__69_84__ETC___d194 ;
  assign mmio_dataReqQ_empty$EN = 1'd1 ;

  // register mmio_dataReqQ_enqReq_rl
  assign mmio_dataReqQ_enqReq_rl$D_IN =
	     143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign mmio_dataReqQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_dataReqQ_full
  assign mmio_dataReqQ_full$D_IN =
	     NOT_mmio_dataReqQ_clearReq_dummy2_1_read__63_6_ETC___d168 &&
	     mmio_dataReqQ_enqReq_dummy2_2_read__69_AND_IF__ETC___d181 ;
  assign mmio_dataReqQ_full$EN = 1'd1 ;

  // register mmio_dataRespQ_clearReq_rl
  assign mmio_dataRespQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_dataRespQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_dataRespQ_data_0
  assign mmio_dataRespQ_data_0$D_IN =
	     CAN_FIRE_RL_mmio_sendDataResp ?
	       mmio_dataRespQ_enqReq_lat_0$wget[64:0] :
	       mmio_dataRespQ_enqReq_rl[64:0] ;
  assign mmio_dataRespQ_data_0$EN =
	     NOT_mmio_dataRespQ_clearReq_dummy2_1_read__33__ETC___d238 &&
	     mmio_dataRespQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_dataRespQ_enqReq_lat_1_whas__08_THEN_m_ETC___d244 ;

  // register mmio_dataRespQ_deqReq_rl
  assign mmio_dataRespQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_dataRespQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_dataRespQ_empty
  assign mmio_dataRespQ_empty$D_IN =
	     mmio_dataRespQ_clearReq_dummy2_1$Q_OUT &&
	     mmio_dataRespQ_clearReq_rl ||
	     NOT_mmio_dataRespQ_enqReq_dummy2_2_read__39_59_ETC___d269 ;
  assign mmio_dataRespQ_empty$EN = 1'd1 ;

  // register mmio_dataRespQ_enqReq_rl
  assign mmio_dataRespQ_enqReq_rl$D_IN = 66'h0AAAAAAAAAAAAAAAA ;
  assign mmio_dataRespQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_dataRespQ_full
  assign mmio_dataRespQ_full$D_IN =
	     NOT_mmio_dataRespQ_clearReq_dummy2_1_read__33__ETC___d238 &&
	     mmio_dataRespQ_enqReq_dummy2_2_read__39_AND_IF_ETC___d256 ;
  assign mmio_dataRespQ_full$EN = 1'd1 ;

  // register mmio_fromHostAddr
  assign mmio_fromHostAddr$D_IN = coreReq_start_fromHostAddr[63:3] ;
  assign mmio_fromHostAddr$EN = EN_coreReq_start ;

  // register mmio_pRqQ_clearReq_rl
  assign mmio_pRqQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_pRqQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_pRqQ_data_0
  assign mmio_pRqQ_data_0$D_IN =
	     { EN_mmioToPlatform_pRq_enq ?
		 mmio_pRqQ_enqReq_lat_0$wget[38] :
		 mmio_pRqQ_enqReq_rl[38],
	       IF_mmio_pRqQ_enqReq_lat_1_whas__11_THEN_IF_mmi_ETC___d773,
	       EN_mmioToPlatform_pRq_enq ?
		 mmio_pRqQ_enqReq_lat_0$wget[31:0] :
		 mmio_pRqQ_enqReq_rl[31:0] } ;
  assign mmio_pRqQ_data_0$EN =
	     NOT_mmio_pRqQ_clearReq_dummy2_1_read__33_34_OR_ETC___d738 &&
	     mmio_pRqQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_pRqQ_enqReq_lat_1_whas__11_THEN_mmio_p_ETC___d620 ;

  // register mmio_pRqQ_deqReq_rl
  assign mmio_pRqQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_pRqQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_pRqQ_empty
  assign mmio_pRqQ_empty$D_IN =
	     mmio_pRqQ_clearReq_dummy2_1$Q_OUT && mmio_pRqQ_clearReq_rl ||
	     NOT_mmio_pRqQ_enqReq_dummy2_2_read__39_54_OR_I_ETC___d764 ;
  assign mmio_pRqQ_empty$EN = 1'd1 ;

  // register mmio_pRqQ_enqReq_rl
  assign mmio_pRqQ_enqReq_rl$D_IN = 40'h2AAAAAAAAA ;
  assign mmio_pRqQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_pRqQ_full
  assign mmio_pRqQ_full$D_IN =
	     NOT_mmio_pRqQ_clearReq_dummy2_1_read__33_34_OR_ETC___d738 &&
	     mmio_pRqQ_enqReq_dummy2_2_read__39_AND_IF_mmio_ETC___d751 ;
  assign mmio_pRqQ_full$EN = 1'd1 ;

  // register mmio_pRsQ_clearReq_rl
  assign mmio_pRsQ_clearReq_rl$D_IN = 1'd0 ;
  assign mmio_pRsQ_clearReq_rl$EN = 1'd1 ;

  // register mmio_pRsQ_data_0
  assign mmio_pRsQ_data_0$D_IN =
	     { EN_mmioToPlatform_pRs_enq ?
		 mmio_pRsQ_enqReq_lat_0$wget[68] :
		 mmio_pRsQ_enqReq_rl[68],
	       (EN_mmioToPlatform_pRs_enq ?
		  !mmio_pRsQ_enqReq_lat_0$wget[68] :
		  !mmio_pRsQ_enqReq_rl[68]) ?
		 (EN_mmioToPlatform_pRs_enq ?
		    mmio_pRsQ_enqReq_lat_0$wget[67:0] :
		    mmio_pRsQ_enqReq_rl[67:0]) :
		 { 3'h2,
		   EN_mmioToPlatform_pRs_enq ?
		     mmio_pRsQ_enqReq_lat_0$wget[64:0] :
		     mmio_pRsQ_enqReq_rl[64:0] } } ;
  assign mmio_pRsQ_data_0$EN =
	     NOT_mmio_pRsQ_clearReq_dummy2_1_read__69_70_OR_ETC___d574 &&
	     mmio_pRsQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_pRsQ_enqReq_lat_1_whas__09_THEN_mmio_p_ETC___d518 ;

  // register mmio_pRsQ_deqReq_rl
  assign mmio_pRsQ_deqReq_rl$D_IN = 1'd0 ;
  assign mmio_pRsQ_deqReq_rl$EN = 1'd1 ;

  // register mmio_pRsQ_empty
  assign mmio_pRsQ_empty$D_IN =
	     mmio_pRsQ_clearReq_dummy2_1$Q_OUT && mmio_pRsQ_clearReq_rl ||
	     NOT_mmio_pRsQ_enqReq_dummy2_2_read__75_90_OR_I_ETC___d600 ;
  assign mmio_pRsQ_empty$EN = 1'd1 ;

  // register mmio_pRsQ_enqReq_rl
  assign mmio_pRsQ_enqReq_rl$D_IN = 70'h0AAAAAAAAAAAAAAAAA ;
  assign mmio_pRsQ_enqReq_rl$EN = 1'd1 ;

  // register mmio_pRsQ_full
  assign mmio_pRsQ_full$D_IN =
	     NOT_mmio_pRsQ_clearReq_dummy2_1_read__69_70_OR_ETC___d574 &&
	     mmio_pRsQ_enqReq_dummy2_2_read__75_AND_IF_mmio_ETC___d587 ;
  assign mmio_pRsQ_full$EN = 1'd1 ;

  // register mmio_toHostAddr
  assign mmio_toHostAddr$D_IN = coreReq_start_toHostAddr[63:3] ;
  assign mmio_toHostAddr$EN = EN_coreReq_start ;

  // register outOfReset
  assign outOfReset$D_IN = 1'd1 ;
  assign outOfReset$EN = CAN_FIRE_RL_rl_outOfReset ;

  // register started
  assign started$D_IN = 1'd1 ;
  assign started$EN = EN_coreReq_start ;

  // register update_vm_info
  assign update_vm_info$D_IN = !MUX_update_vm_info$write_1__SEL_1 ;
  assign update_vm_info$EN =
	     WILL_FIRE_RL_prepareCachesAndTlbs && update_vm_info ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ;

  // submodule coreFix_aluExe_0_dispToRegQ
  assign coreFix_aluExe_0_dispToRegQ$enq_x =
	     { coreFix_aluExe_0_rsAlu$dispatchData[161:90],
	       coreFix_aluExe_0_rsAlu$dispatchData[65:21],
	       coreFix_aluExe_0_rsAlu$dispatchData[89:66],
	       coreFix_aluExe_0_rsAlu$dispatchData[8:4],
	       coreFix_aluExe_0_rsAlu$dispatchData[20:9] } ;
  assign coreFix_aluExe_0_dispToRegQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all =
	     !WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	     !WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_dispToRegQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu ;
  assign coreFix_aluExe_0_dispToRegQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu ;
  assign coreFix_aluExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_0_dispToRegQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_0_exeToFinQ
  assign coreFix_aluExe_0_exeToFinQ$enq_x =
	     { coreFix_aluExe_0_regToExeQ$first[421:417],
	       coreFix_aluExe_0_regToExeQ$first[349:305],
	       coreFix_aluExe_0_regToExeQ$first[18:17] != 2'b11,
	       basicExec___d12292[321:258],
	       coreFix_aluExe_0_regToExeQ$first[395],
	       basicExec___d12292[257:194],
	       basicExec___d12292[129:0],
	       coreFix_aluExe_0_regToExeQ$first[16:0] } ;
  assign coreFix_aluExe_0_exeToFinQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_aluExe_0_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_exeToFinQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu ;
  assign coreFix_aluExe_0_exeToFinQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign coreFix_aluExe_0_exeToFinQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_0_exeToFinQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_0_regToExeQ
  assign coreFix_aluExe_0_regToExeQ$enq_x =
	     { coreFix_aluExe_0_dispToRegQ$first[157:86],
	       coreFix_aluExe_0_dispToRegQ$first[61:17],
	       x__h704263,
	       v__h701235,
	       rob$getOrigPC_0_get,
	       rob$getOrigPredPC_0_get,
	       rob$getOrig_Inst_0_get,
	       coreFix_aluExe_0_dispToRegQ$first[16:0] } ;
  assign coreFix_aluExe_0_regToExeQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_aluExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_regToExeQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu ;
  assign coreFix_aluExe_0_regToExeQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu ;
  assign coreFix_aluExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_0_regToExeQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_0_rsAlu
  assign coreFix_aluExe_0_rsAlu$enq_x =
	     MUX_coreFix_aluExe_0_rsAlu$enq_1__SEL_1 ?
	       MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_1 :
	       MUX_coreFix_aluExe_0_rsAlu$enq_1__VAL_2 ;
  assign coreFix_aluExe_0_rsAlu$setRegReady_0_put =
	     { 1'd1, coreFix_aluExe_0_rsAlu$dispatchData[40:34] } ;
  assign coreFix_aluExe_0_rsAlu$setRegReady_1_put =
	     { 1'd1, coreFix_aluExe_1_rsAlu$dispatchData[40:34] } ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  coreFix_aluExe_0_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6;
      default: coreFix_aluExe_0_rsAlu$setRegReady_2_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_rsAlu$setRegReady_3_put =
	     { 1'd1, coreFix_memExe_lsq$issueLd[71:65] } ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_1:
	  coreFix_aluExe_0_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_2:
	  coreFix_aluExe_0_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3:
	  coreFix_aluExe_0_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4:
	  coreFix_aluExe_0_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
      default: coreFix_aluExe_0_rsAlu$setRegReady_4_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_rsAlu$setRobEnqTime_t = rob$getEnqTime ;
  assign coreFix_aluExe_0_rsAlu$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_aluExe_0_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_0_rsAlu$EN_enq =
	     WILL_FIRE_RL_renameStage_doRenaming && _dfoo18 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     fetchStage$pipelines_0_first[194:192] == 3'd0 ;
  assign coreFix_aluExe_0_rsAlu$EN_setRobEnqTime = 1'd1 ;
  assign coreFix_aluExe_0_rsAlu$EN_doDispatch =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu ;
  assign coreFix_aluExe_0_rsAlu$EN_setRegReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     coreFix_aluExe_0_rsAlu$dispatchData[41] ;
  assign coreFix_aluExe_0_rsAlu$EN_setRegReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     coreFix_aluExe_1_rsAlu$dispatchData[41] ;
  assign coreFix_aluExe_0_rsAlu$EN_setRegReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[32] ;
  assign coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put =
	     _dor1coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd2 &&
	     coreFix_memExe_lsq$issueLd[72] ;
  assign coreFix_aluExe_0_rsAlu$EN_setRegReady_4_put =
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2449 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign coreFix_aluExe_0_rsAlu$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_0_rsAlu$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_1_dispToRegQ
  assign coreFix_aluExe_1_dispToRegQ$enq_x =
	     { coreFix_aluExe_1_rsAlu$dispatchData[161:90],
	       coreFix_aluExe_1_rsAlu$dispatchData[65:21],
	       coreFix_aluExe_1_rsAlu$dispatchData[89:66],
	       coreFix_aluExe_1_rsAlu$dispatchData[8:4],
	       coreFix_aluExe_1_rsAlu$dispatchData[20:9] } ;
  assign coreFix_aluExe_1_dispToRegQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_aluExe_1_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_dispToRegQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu ;
  assign coreFix_aluExe_1_dispToRegQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu ;
  assign coreFix_aluExe_1_dispToRegQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_1_dispToRegQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_1_exeToFinQ
  assign coreFix_aluExe_1_exeToFinQ$enq_x =
	     { coreFix_aluExe_1_regToExeQ$first[421:417],
	       coreFix_aluExe_1_regToExeQ$first[349:305],
	       coreFix_aluExe_1_regToExeQ$first[18:17] != 2'b11,
	       basicExec___d11946[321:258],
	       coreFix_aluExe_1_regToExeQ$first[395],
	       basicExec___d11946[257:194],
	       basicExec___d11946[129:0],
	       coreFix_aluExe_1_regToExeQ$first[16:0] } ;
  assign coreFix_aluExe_1_exeToFinQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_aluExe_1_exeToFinQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_exeToFinQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu ;
  assign coreFix_aluExe_1_exeToFinQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign coreFix_aluExe_1_exeToFinQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_1_exeToFinQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_1_regToExeQ
  assign coreFix_aluExe_1_regToExeQ$enq_x =
	     { coreFix_aluExe_1_dispToRegQ$first[157:86],
	       coreFix_aluExe_1_dispToRegQ$first[61:17],
	       x__h683308,
	       v__h680270,
	       rob$getOrigPC_1_get,
	       rob$getOrigPredPC_1_get,
	       rob$getOrig_Inst_1_get,
	       coreFix_aluExe_1_dispToRegQ$first[16:0] } ;
  assign coreFix_aluExe_1_regToExeQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_aluExe_1_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_regToExeQ$EN_enq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu ;
  assign coreFix_aluExe_1_regToExeQ$EN_deq =
	     WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu ;
  assign coreFix_aluExe_1_regToExeQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_1_regToExeQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_aluExe_1_rsAlu
  assign coreFix_aluExe_1_rsAlu$enq_x =
	     (k__h731393 == 1'd1 &&
	      fetchStage_pipelines_0_canDeq__2436_AND_NOT_fe_ETC___d13326) ?
	       { fetchStage$pipelines_0_first[199:128],
		 fetchStage$pipelines_0_first[255:232],
		 regRenamingTable$rename_0_getRename,
		 rob$enqPort_0_getEnqInstTag,
		 specTagManager$currentSpecBits,
		 fetchStage$pipelines_0_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_0_get } :
	       { fetchStage$pipelines_1_first[199:128],
		 fetchStage$pipelines_1_first[255:232],
		 regRenamingTable$rename_1_getRename,
		 rob$enqPort_1_getEnqInstTag,
		 renaming_spec_bits__h749005,
		 fetchStage$pipelines_1_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_1_get } ;
  assign coreFix_aluExe_1_rsAlu$setRegReady_0_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_0_put ;
  assign coreFix_aluExe_1_rsAlu$setRegReady_1_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_1_put ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  coreFix_aluExe_1_rsAlu$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6;
      default: coreFix_aluExe_1_rsAlu$setRegReady_2_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_rsAlu$setRegReady_3_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_3_put ;
  always@(MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1 or
	  MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_1:
	  coreFix_aluExe_1_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1;
      MUX_coreFix_aluExe_1_rsAlu$setRegReady_4_put_1__SEL_2:
	  coreFix_aluExe_1_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3:
	  coreFix_aluExe_1_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4:
	  coreFix_aluExe_1_rsAlu$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
      default: coreFix_aluExe_1_rsAlu$setRegReady_4_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_rsAlu$setRobEnqTime_t = rob$getEnqTime ;
  assign coreFix_aluExe_1_rsAlu$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_aluExe_1_rsAlu$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_aluExe_1_rsAlu$EN_enq =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     (k__h731393 == 1'd1 &&
	      fetchStage_pipelines_0_canDeq__2436_AND_NOT_fe_ETC___d13326 ||
	      k__h749572 == 1'd1 &&
	      NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13448) ;
  assign coreFix_aluExe_1_rsAlu$EN_setRobEnqTime = 1'd1 ;
  assign coreFix_aluExe_1_rsAlu$EN_doDispatch =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu ;
  assign coreFix_aluExe_1_rsAlu$EN_setRegReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     coreFix_aluExe_0_rsAlu$dispatchData[41] ;
  assign coreFix_aluExe_1_rsAlu$EN_setRegReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     coreFix_aluExe_1_rsAlu$dispatchData[41] ;
  assign coreFix_aluExe_1_rsAlu$EN_setRegReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[32] ;
  assign coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put =
	     _dor1coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd2 &&
	     coreFix_memExe_lsq$issueLd[72] ;
  assign coreFix_aluExe_1_rsAlu$EN_setRegReady_4_put =
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2449 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign coreFix_aluExe_1_rsAlu$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_aluExe_1_rsAlu$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_dispToRegQ
  assign coreFix_fpuMulDivExe_0_dispToRegQ$enq_x =
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[86:9] ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_dispToRegQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_divQ
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$enq_x =
	     { IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11021,
	       coreFix_fpuMulDivExe_0_regToExeQ$first[225],
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[225] &&
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11158,
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[225] &&
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11194,
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[225] &&
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11242,
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[225] &&
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11284,
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[225] &&
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11326,
	       coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd27 ||
	       coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd28,
	       coreFix_fpuMulDivExe_0_regToExeQ$first[224:204],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[11:0] } ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_fpuExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd4 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd3 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_div
  assign coreFix_fpuMulDivExe_0_fpuExec_double_div$request_put =
	     { IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9479,
	       IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10958,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11021 } ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_request_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd4 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd3 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_div$EN_response_get =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqDivPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_fma
  assign coreFix_fpuMulDivExe_0_fpuExec_double_fma$request_put =
	     { coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd2,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10248,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q248,
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q249,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11021 } ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_request_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd4 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd1 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd2 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd28) ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_fma$EN_response_get =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_double_sqrt
  assign coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$request_put =
	     { IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9479,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11021 } ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_request_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd4 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd4 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$EN_response_get =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_fmaQ
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$enq_x =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$enq_x ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_fpuExec_fmaQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd4 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd1 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd2 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd28) ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqFmaPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_simpleQ
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$enq_x =
	     { execFpuSimple___d11351,
	       coreFix_fpuMulDivExe_0_regToExeQ$first[224:204],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[11:0] } ;
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_fpuExec_simpleQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd4 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd0 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd1 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd2 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd25 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd26 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd27 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd28 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd3 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd4 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_deq =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ;
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_fpuExec_simpleQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_fpuExec_sqrtQ
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$enq_x =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$enq_x ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd4 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd4 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_fpuExec_deqSqrtPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divQ
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$enq_x =
	     { coreFix_fpuMulDivExe_0_regToExeQ$first[229:227],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[224:204],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[11:0] } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_mulDivExec_divQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd3 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] != 2'd0 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] != 2'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_IN =
	     { x__h670081,
	       b__h669504 == 64'd0,
	       a__h669503,
	       coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] == 2'd0,
	       x__h670112,
	       a__h669503[63],
	       8'd0 } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$ENQ =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd3 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] != 2'd0 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] != 2'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$DEQ =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$CLR =
	     1'b0 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$D_IN =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] == 2'd0) ?
	       _theResult___snd__h670098 :
	       b__h669504 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$ENQ =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd3 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] != 2'd0 &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] != 2'd1 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$DEQ =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$CLR =
	     1'b0 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_IN =
	     { x__h670697,
	       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_OUT[75:0] } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$ENQ =
	     CAN_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_compute ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$DEQ =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqDivPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$CLR = 1'b0 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulQ
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$enq_x =
	     { coreFix_fpuMulDivExe_0_regToExeQ$first[229:227],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[224:204],
	       coreFix_fpuMulDivExe_0_regToExeQ$first[11:0] } ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_mulDivExec_mulQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd3 &&
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[229:228] == 2'd1) ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_mulDivExec_deqMulPoisoned ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ
  always@(coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1)
  begin
    case (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1[1:0])
      2'd0:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_IN =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1[127:0];
      2'd1:
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_IN =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1[127:0];
      default: coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_IN =
		   coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1[127:0];
    endcase
  end
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$ENQ =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1[2] ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$DEQ =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$CLR = 1'b0 ;

  // submodule coreFix_fpuMulDivExe_0_regToExeQ
  assign coreFix_fpuMulDivExe_0_regToExeQ$enq_x =
	     { coreFix_fpuMulDivExe_0_dispToRegQ$first[77:57],
	       coreFix_fpuMulDivExe_0_dispToRegQ$first[32:12],
	       v__h530607,
	       v__h531845,
	       v__h532592,
	       coreFix_fpuMulDivExe_0_dispToRegQ$first[11:0] } ;
  assign coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_regToExeQ$EN_enq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv ;
  assign coreFix_fpuMulDivExe_0_regToExeQ$EN_deq =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv ;
  assign coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_regToExeQ$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_fpuMulDivExe_0_rsFpuMulDiv
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$enq_x =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__2787_AND__ETC___d13337) ?
	       { fetchStage$pipelines_0_first[194:174],
		 regRenamingTable$rename_0_getRename,
		 rob$enqPort_0_getEnqInstTag,
		 specTagManager$currentSpecBits,
		 fetchStage$pipelines_0_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_0_get } :
	       { fetchStage$pipelines_1_first[194:174],
		 regRenamingTable$rename_1_getRename,
		 rob$enqPort_1_getEnqInstTag,
		 renaming_spec_bits__h749005,
		 fetchStage$pipelines_1_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_1_get } ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_0_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_0_put ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_1_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_1_put ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6;
      default: coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_2_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_3_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_3_put ;
  always@(MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1 or
	  MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_1:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1;
      MUX_coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put_1__SEL_2:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
      default: coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRegReady_4_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$setRobEnqTime_t = rob$getEnqTime ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_fpuMulDivExe_0_rsFpuMulDiv$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_enq =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__2787_AND__ETC___d13337 ||
	      NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	      regRenamingTable_rename_1_canRename__2911_AND__ETC___d13444 &&
	      (fetchStage$pipelines_1_first[194:192] == 3'd3 ||
	       fetchStage$pipelines_1_first[194:192] == 3'd4) &&
	      NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13468 &&
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq) ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRobEnqTime = 1'd1 ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_doDispatch =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     coreFix_aluExe_0_rsAlu$dispatchData[41] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     coreFix_aluExe_1_rsAlu$dispatchData[41] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[32] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put =
	     _dor1coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd2 &&
	     coreFix_memExe_lsq$issueLd[72] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_4_put =
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2449 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_specUpdate_correctSpeculation =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqMshr
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getEmptyEntryInit_r =
	     { x__h307565,
	       x__h307577,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2681,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2685,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2689,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2693,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2697,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2702,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2706,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2711,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2715,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2720,
	       x__h309431,
	       IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2728,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2732,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2736,
	       coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2740 } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$cRqTransfer_getRq_n =
	     x__h306156 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq_n =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[578:577] ==
	      2'd0) ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] :
	       (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] :
		  3'd0) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot_n =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq_n ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState_n =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq_n ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc_n =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq_n ;
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_1 or
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo or
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574];
      MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2:
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512];
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n =
	      coreFix_memExe_dMem_cache_m_banks_0_processAmo[159:157];
      default: coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_n =
		   3'b010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain_addr =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:84] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_d =
	     { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	       2'd3,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setData_n =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_n =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1 ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] :
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_slot =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1 ?
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_1 :
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_3__VAL_2 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_state =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1 ?
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_2__VAL_1 :
	       3'd3 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_n =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setSucc_succ =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getRq_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRqToP_getSlot_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getData_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_setWaitSt_setSlot_clearData_slot =
	     { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot[57:55],
	       55'h15555555555555 } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_cRqTransfer_getEmptyEntryInit =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_sendRsToP_cRq_setWaitSt_setSlot_clearData =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_releaseEntry =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2426 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd4 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setData =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_2 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setStateSlot =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_setStateSlot_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570] &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2571 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2574 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_pipelineResp_setSucc =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      !IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$EN_stuck_get = 1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_0$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_0$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_lat_0$whas ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_0$EN =
	     EN_dCacheToParent_fromP_enq ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2413 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2620 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[1:0] ==
	     2'd0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$EN =
	     MUX_flush_reservation$write_1__SEL_1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_pRqMshr
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$getEmptyEntryInit_r =
	     { SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2767,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q250 } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq_n =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[575:574] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getState_n =
	     2'h0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_releaseEntry_n =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[575:574] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_d =
	     { !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	       2'd3,
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_setDone_setData_n =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[575:574] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getData_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[1:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_getRq_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[1:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$sendRsToP_pRq_releaseEntry_n =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[1:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_getEmptyEntryInit =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_sendRsToP_pRq_releaseEntry =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_releaseEntry =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570] ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2571 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2574) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_pipelineResp_setDone_setData =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$EN_stuck_get = 1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_pipeline
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__VAL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo or
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__VAL_1;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq =
	      coreFix_memExe_dMem_cache_m_banks_0_processAmo[3:0];
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq = 4'd2;
      default: coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_swapRq =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_3__VAL_1 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_3__VAL_1;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep =
	      1'd0;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 ||
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep =
	      1'd1;
      default: coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_updateRep =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  always@(MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_1 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2 or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_3 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_1;
      MUX_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_releaseEntry_1__SEL_2:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_2;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_3;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_2__VAL_4;
      default: coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_wrRam =
		   570'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_1 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_2 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_3 or
	  WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer or
	  MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_1;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_2;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_3;
      WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer:
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r =
	      MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_1__VAL_4;
      default: coreFix_memExe_dMem_cache_m_banks_0_pipeline$send_r =
		   584'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_send =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRqTransfer ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pRsTransfer ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline$EN_deqWrite =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_pipeline$deqWrite_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd4 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_deqP_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_1$EN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_dummy2_2$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$EN =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_enqP_lat_0$whas ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$EN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_new ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_IN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_OUT :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_OUT ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$ENQ =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$DEQ =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$CLR = 1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$ENQ =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2479 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	       3'd1) &&
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2483) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$DEQ =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromPipelineResp ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$CLR =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$D_IN =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_OUT[2:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$ENQ =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$DEQ =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_rqIndexFromSendRsToP ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_sendRsToP$CLR =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_0$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_0$EN =
	     EN_dCacheToParent_rqToP_deq ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_0$EN =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$D_IN =
	     MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__SEL_1 ?
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_1 :
	       MUX_coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$enq_1__VAL_2 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$ENQ =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570] &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2571 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2574 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2531 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$DEQ =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$CLR = 1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_0$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_0$EN =
	     EN_dCacheToParent_rsToP_deq ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_pRq ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1$D_IN =
	     1'b0 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_1$EN =
	     1'b0 ;

  // submodule coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$D_IN =
	     1'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$EN =
	     1'd1 ;

  // submodule coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0
  assign coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1
  assign coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0
  assign coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0$D_IN = 1'b0 ;
  assign coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_0$EN = 1'b0 ;

  // submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1
  assign coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2
  assign coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0
  assign coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0$D_IN = 1'b0 ;
  assign coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_0$EN = 1'b0 ;

  // submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1
  assign coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2
  assign coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule coreFix_memExe_dTlb
  assign coreFix_memExe_dTlb$perf_req_r = 3'h0 ;
  assign coreFix_memExe_dTlb$perf_setStatus_doStats = 1'b0 ;
  assign coreFix_memExe_dTlb$procReq_req =
	     { coreFix_memExe_regToExeQ$first[192:190],
	       coreFix_memExe_regToExeQ$first[157:140],
	       coreFix_memExe_lsq$getOrigBE << vaddr__h199240[2:0],
	       vaddr__h199240,
	       coreFix_memExe_lsq$getOrigBE[7] ?
		 vaddr__h199240[2:0] != 3'd0 :
		 (coreFix_memExe_lsq$getOrigBE[3] ?
		    vaddr__h199240[1:0] != 2'd0 :
		    coreFix_memExe_lsq$getOrigBE[1] && vaddr__h199240[0]),
	       coreFix_memExe_regToExeQ$first[11:0] } ;
  assign coreFix_memExe_dTlb$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_memExe_dTlb$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dTlb$toParent_ldTransRsFromP_enq_x =
	     { l2Tlb$toChildren_rsToC_first[80:0],
	       l2Tlb$toChildren_rsToC_first[82:81] } ;
  assign coreFix_memExe_dTlb$updateVMInfo_vm =
	     { prv__h784006,
	       prv__h784006 != 2'd3 && csrf_vm_mode_sv39_reg,
	       csrf_mxr_reg,
	       csrf_sum_reg,
	       csrf_ppn_reg } ;
  assign coreFix_memExe_dTlb$EN_flush = MUX_flush_tlbs$write_1__SEL_1 ;
  assign coreFix_memExe_dTlb$EN_updateVMInfo =
	     MUX_update_vm_info$write_1__SEL_1 ;
  assign coreFix_memExe_dTlb$EN_procReq =
	     CAN_FIRE_RL_coreFix_memExe_doExeMem ;
  assign coreFix_memExe_dTlb$EN_deqProcResp =
	     CAN_FIRE_RL_coreFix_memExe_doFinishMem ;
  assign coreFix_memExe_dTlb$EN_toParent_rqToP_deq = CAN_FIRE_RL_sendDTlbReq ;
  assign coreFix_memExe_dTlb$EN_toParent_ldTransRsFromP_enq =
	     CAN_FIRE_RL_sendRsToDTlb ;
  assign coreFix_memExe_dTlb$EN_toParent_flush_request_get =
	     CAN_FIRE_RL_mkConnectionGetPut ;
  assign coreFix_memExe_dTlb$EN_toParent_flush_response_put =
	     CAN_FIRE_RL_sendFlushDone ;
  assign coreFix_memExe_dTlb$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_memExe_dTlb$EN_specUpdate_correctSpeculation = 1'd1 ;
  assign coreFix_memExe_dTlb$EN_perf_setStatus = 1'b0 ;
  assign coreFix_memExe_dTlb$EN_perf_req = 1'b0 ;
  assign coreFix_memExe_dTlb$EN_perf_resp = 1'b0 ;

  // submodule coreFix_memExe_dispToRegQ
  assign coreFix_memExe_dispToRegQ$enq_x =
	     { coreFix_memExe_rsMem$dispatchData[106:72],
	       coreFix_memExe_rsMem$dispatchData[65:21],
	       coreFix_memExe_rsMem$dispatchData[71:66],
	       coreFix_memExe_rsMem$dispatchData[20:9] } ;
  assign coreFix_memExe_dispToRegQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_memExe_dispToRegQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_dispToRegQ$EN_enq =
	     WILL_FIRE_RL_coreFix_memExe_doDispatchMem ;
  assign coreFix_memExe_dispToRegQ$EN_deq =
	     WILL_FIRE_RL_coreFix_memExe_doRegReadMem ;
  assign coreFix_memExe_dispToRegQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_memExe_dispToRegQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_memExe_forwardQ_clearReq_dummy2_0
  assign coreFix_memExe_forwardQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign coreFix_memExe_forwardQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule coreFix_memExe_forwardQ_clearReq_dummy2_1
  assign coreFix_memExe_forwardQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_forwardQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule coreFix_memExe_forwardQ_deqReq_dummy2_0
  assign coreFix_memExe_forwardQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_forwardQ_deqReq_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdForward ;

  // submodule coreFix_memExe_forwardQ_deqReq_dummy2_1
  assign coreFix_memExe_forwardQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_forwardQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_forwardQ_deqReq_dummy2_2
  assign coreFix_memExe_forwardQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign coreFix_memExe_forwardQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule coreFix_memExe_forwardQ_enqReq_dummy2_0
  assign coreFix_memExe_forwardQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_forwardQ_enqReq_dummy2_0$EN =
	     _dor1coreFix_memExe_forwardQ_enqReq_dummy2_0$EN_write &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd2 ;

  // submodule coreFix_memExe_forwardQ_enqReq_dummy2_1
  assign coreFix_memExe_forwardQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_forwardQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_forwardQ_enqReq_dummy2_2
  assign coreFix_memExe_forwardQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign coreFix_memExe_forwardQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule coreFix_memExe_lsq
  assign coreFix_memExe_lsq$enqLd_dst =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__2787_AND__ETC___d13401) ?
	       regRenamingTable$rename_0_getRename[8:0] :
	       regRenamingTable$rename_1_getRename[8:0] ;
  assign coreFix_memExe_lsq$enqLd_inst_tag =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__2787_AND__ETC___d13401) ?
	       rob$enqPort_0_getEnqInstTag :
	       rob$enqPort_1_getEnqInstTag ;
  assign coreFix_memExe_lsq$enqLd_mem_inst =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__2787_AND__ETC___d13401) ?
	       fetchStage$pipelines_0_first[191:174] :
	       fetchStage$pipelines_1_first[191:174] ;
  assign coreFix_memExe_lsq$enqLd_spec_bits =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__2787_AND__ETC___d13401) ?
	       specTagManager$currentSpecBits :
	       renaming_spec_bits__h749005 ;
  assign coreFix_memExe_lsq$enqSt_dst =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__2787_AND__ETC___d13409) ?
	       regRenamingTable$rename_0_getRename[8:0] :
	       regRenamingTable$rename_1_getRename[8:0] ;
  assign coreFix_memExe_lsq$enqSt_inst_tag =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__2787_AND__ETC___d13409) ?
	       rob$enqPort_0_getEnqInstTag :
	       rob$enqPort_1_getEnqInstTag ;
  assign coreFix_memExe_lsq$enqSt_mem_inst =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__2787_AND__ETC___d13409) ?
	       fetchStage$pipelines_0_first[191:174] :
	       fetchStage$pipelines_1_first[191:174] ;
  assign coreFix_memExe_lsq$enqSt_spec_bits =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__2787_AND__ETC___d13409) ?
	       specTagManager$currentSpecBits :
	       renaming_spec_bits__h749005 ;
  assign coreFix_memExe_lsq$getHit_t =
	     MUX_coreFix_memExe_ldMemLatTimer_doneEn$wset_1__SEL_1 ?
	       MUX_coreFix_memExe_lsq$getHit_1__VAL_1 :
	       MUX_coreFix_memExe_lsq$getHit_1__VAL_1 ;
  assign coreFix_memExe_lsq$getOrigBE_t =
	     coreFix_memExe_regToExeQ$first[145:140] ;
  assign coreFix_memExe_lsq$issueLd_lsqTag =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       coreFix_memExe_lsq$getIssueLd[76:72] :
	       coreFix_memExe_issueLd$wget[76:72] ;
  assign coreFix_memExe_lsq$issueLd_paddr =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       coreFix_memExe_lsq$getIssueLd[71:8] :
	       coreFix_memExe_issueLd$wget[71:8] ;
  assign coreFix_memExe_lsq$issueLd_sbRes = coreFix_memExe_stb$search ;
  assign coreFix_memExe_lsq$issueLd_shiftedBE =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       coreFix_memExe_lsq$getIssueLd[7:0] :
	       coreFix_memExe_issueLd$wget[7:0] ;
  assign coreFix_memExe_lsq$respLd_alignedData =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ?
	       MUX_coreFix_memExe_lsq$respLd_2__VAL_1 :
	       MUX_coreFix_memExe_lsq$respLd_2__VAL_2 ;
  assign coreFix_memExe_lsq$respLd_t =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ?
	       MUX_coreFix_memExe_lsq$respLd_1__VAL_1 :
	       MUX_coreFix_memExe_lsq$respLd_1__VAL_2 ;
  assign coreFix_memExe_lsq$setAtCommit_0_put =
	     rob$deqPort_0_deq_data[24:19] ;
  assign coreFix_memExe_lsq$setAtCommit_1_put =
	     rob$deqPort_1_deq_data[24:19] ;
  assign coreFix_memExe_lsq$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_memExe_lsq$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_lsq$updateAddr_fault =
	     (!coreFix_memExe_dTlb$procResp[12] &&
	      !coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1663) ?
	       { coreFix_memExe_dTlb$procResp[105:103] == 3'd2 ||
		 coreFix_memExe_dTlb$procResp[105:103] == 3'd3 ||
		 coreFix_memExe_dTlb$procResp[12],
		 CASE_coreFix_memExe_dTlbprocResp_BITS_105_TO__ETC__q251 } :
	       { coreFix_memExe_dTlb$procResp[12] ||
		 coreFix_memExe_dTlb$procResp[110],
		 (!coreFix_memExe_dTlb$procResp[110] &&
		  coreFix_memExe_dTlb$procResp[12]) ?
		   CASE_coreFix_memExe_dTlbprocResp_BITS_105_TO__ETC__q252 :
		   coreFix_memExe_dTlb$procResp[109:106] } ;
  assign coreFix_memExe_lsq$updateAddr_isMMIO =
	     coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1663 ;
  assign coreFix_memExe_lsq$updateAddr_lsqTag =
	     coreFix_memExe_dTlb$procResp[90:85] ;
  assign coreFix_memExe_lsq$updateAddr_paddr =
	     coreFix_memExe_dTlb$procResp[174:111] ;
  assign coreFix_memExe_lsq$updateAddr_shiftedBE =
	     coreFix_memExe_dTlb$procResp[84:77] ;
  assign coreFix_memExe_lsq$updateData_d =
	     (coreFix_memExe_regToExeQ$first[192:190] == 3'd4) ?
	       coreFix_memExe_regToExeQ$first[75:12] :
	       shiftData__h199245 ;
  assign coreFix_memExe_lsq$updateData_t =
	     coreFix_memExe_regToExeQ$first[143:140] ;
  assign coreFix_memExe_lsq$wakeupLdStalledBySB_sbIdx = i__h362270 ;
  assign coreFix_memExe_lsq$EN_enqLd =
	     WILL_FIRE_RL_renameStage_doRenaming && _dfoo7 ;
  assign coreFix_memExe_lsq$EN_enqSt =
	     WILL_FIRE_RL_renameStage_doRenaming && _dfoo2 ;
  assign coreFix_memExe_lsq$EN_getHit =
	     MUX_coreFix_memExe_ldMemLatTimer_doneEn$wset_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 ;
  assign coreFix_memExe_lsq$EN_updateData =
	     WILL_FIRE_RL_coreFix_memExe_doExeMem &&
	     coreFix_memExe_regToExeQ$first[145] ;
  assign coreFix_memExe_lsq$EN_updateAddr =
	     CAN_FIRE_RL_coreFix_memExe_doFinishMem ;
  assign coreFix_memExe_lsq$EN_issueLd =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign coreFix_memExe_lsq$EN_getIssueLd =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ;
  assign coreFix_memExe_lsq$EN_respLd =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ||
	     WILL_FIRE_RL_coreFix_memExe_doRespLdForward ;
  assign coreFix_memExe_lsq$EN_deqLd =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ;
  assign coreFix_memExe_lsq$EN_deqSt =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault ;
  assign coreFix_memExe_lsq$EN_wakeupLdStalledBySB =
	     MUX_coreFix_memExe_lsq$wakeupLdStalledBySB_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd1 ;
  assign coreFix_memExe_lsq$EN_setAtCommit_0_put =
	     CAN_FIRE_RL_commitStage_doSetLSQAtCommit ;
  assign coreFix_memExe_lsq$EN_setAtCommit_1_put =
	     CAN_FIRE_RL_commitStage_doSetLSQAtCommit_1 ;
  assign coreFix_memExe_lsq$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_memExe_lsq$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_memExe_memRespLdQ_clearReq_dummy2_0
  assign coreFix_memExe_memRespLdQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign coreFix_memExe_memRespLdQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule coreFix_memExe_memRespLdQ_clearReq_dummy2_1
  assign coreFix_memExe_memRespLdQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_memRespLdQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_0
  assign coreFix_memExe_memRespLdQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_memRespLdQ_deqReq_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ;

  // submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_1
  assign coreFix_memExe_memRespLdQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_memRespLdQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_memRespLdQ_deqReq_dummy2_2
  assign coreFix_memExe_memRespLdQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign coreFix_memExe_memRespLdQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_0
  assign coreFix_memExe_memRespLdQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_memRespLdQ_enqReq_dummy2_0$EN =
	     MUX_coreFix_memExe_ldMemLatTimer_doneEn$wset_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 ;

  // submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_1
  assign coreFix_memExe_memRespLdQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_memRespLdQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_memRespLdQ_enqReq_dummy2_2
  assign coreFix_memExe_memRespLdQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign coreFix_memExe_memRespLdQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule coreFix_memExe_regToExeQ
  assign coreFix_memExe_regToExeQ$enq_x =
	     { coreFix_memExe_dispToRegQ$first[97:63],
	       coreFix_memExe_dispToRegQ$first[29:12],
	       v__h196709,
	       v__h198325,
	       coreFix_memExe_dispToRegQ$first[11:0] } ;
  assign coreFix_memExe_regToExeQ$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_memExe_regToExeQ$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_regToExeQ$EN_enq =
	     WILL_FIRE_RL_coreFix_memExe_doRegReadMem ;
  assign coreFix_memExe_regToExeQ$EN_deq =
	     CAN_FIRE_RL_coreFix_memExe_doExeMem ;
  assign coreFix_memExe_regToExeQ$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_memExe_regToExeQ$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_memExe_reqLdQ_data_0_dummy2_0
  assign coreFix_memExe_reqLdQ_data_0_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLdQ_data_0_dummy2_0$EN =
	     _dor1coreFix_memExe_reqLdQ_data_0_dummy2_0$EN_write &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;

  // submodule coreFix_memExe_reqLdQ_data_0_dummy2_1
  assign coreFix_memExe_reqLdQ_data_0_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLdQ_data_0_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLdQ_deqP_dummy2_0
  assign coreFix_memExe_reqLdQ_deqP_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLdQ_deqP_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_sendLdToMem ;

  // submodule coreFix_memExe_reqLdQ_deqP_dummy2_1
  assign coreFix_memExe_reqLdQ_deqP_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLdQ_deqP_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLdQ_empty_dummy2_0
  assign coreFix_memExe_reqLdQ_empty_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLdQ_empty_dummy2_0$EN =
	     _dor1coreFix_memExe_reqLdQ_empty_dummy2_0$EN_write &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;

  // submodule coreFix_memExe_reqLdQ_empty_dummy2_1
  assign coreFix_memExe_reqLdQ_empty_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLdQ_empty_dummy2_1$EN =
	     WILL_FIRE_RL_coreFix_memExe_sendLdToMem ;

  // submodule coreFix_memExe_reqLdQ_empty_dummy2_2
  assign coreFix_memExe_reqLdQ_empty_dummy2_2$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLdQ_empty_dummy2_2$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLdQ_enqP_dummy2_0
  assign coreFix_memExe_reqLdQ_enqP_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLdQ_enqP_dummy2_0$EN =
	     _dor1coreFix_memExe_reqLdQ_enqP_dummy2_0$EN_write &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;

  // submodule coreFix_memExe_reqLdQ_enqP_dummy2_1
  assign coreFix_memExe_reqLdQ_enqP_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLdQ_enqP_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLdQ_full_dummy2_0
  assign coreFix_memExe_reqLdQ_full_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLdQ_full_dummy2_0$EN =
	     _dor1coreFix_memExe_reqLdQ_full_dummy2_0$EN_write &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd0 ;

  // submodule coreFix_memExe_reqLdQ_full_dummy2_1
  assign coreFix_memExe_reqLdQ_full_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLdQ_full_dummy2_1$EN =
	     WILL_FIRE_RL_coreFix_memExe_sendLdToMem ;

  // submodule coreFix_memExe_reqLdQ_full_dummy2_2
  assign coreFix_memExe_reqLdQ_full_dummy2_2$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLdQ_full_dummy2_2$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_0$EN =
	     coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas ;

  // submodule coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0
  assign coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLrScAmoQ_deqP_dummy2_0$EN =
	     CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;

  // submodule coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1
  assign coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLrScAmoQ_deqP_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_0
  assign coreFix_memExe_reqLrScAmoQ_empty_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLrScAmoQ_empty_dummy2_0$EN =
	     coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas ;

  // submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_1
  assign coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLrScAmoQ_empty_dummy2_1$EN =
	     CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;

  // submodule coreFix_memExe_reqLrScAmoQ_empty_dummy2_2
  assign coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLrScAmoQ_empty_dummy2_2$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0
  assign coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLrScAmoQ_enqP_dummy2_0$EN =
	     coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas ;

  // submodule coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1
  assign coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLrScAmoQ_enqP_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_0
  assign coreFix_memExe_reqLrScAmoQ_full_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLrScAmoQ_full_dummy2_0$EN =
	     coreFix_memExe_reqLrScAmoQ_enqP_lat_0$whas ;

  // submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_1
  assign coreFix_memExe_reqLrScAmoQ_full_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_reqLrScAmoQ_full_dummy2_1$EN =
	     CAN_FIRE_RL_coreFix_memExe_sendLrScAmoToMem ;

  // submodule coreFix_memExe_reqLrScAmoQ_full_dummy2_2
  assign coreFix_memExe_reqLrScAmoQ_full_dummy2_2$D_IN = 1'b0 ;
  assign coreFix_memExe_reqLrScAmoQ_full_dummy2_2$EN = 1'b0 ;

  // submodule coreFix_memExe_reqStQ_data_0_dummy2_0
  assign coreFix_memExe_reqStQ_data_0_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqStQ_data_0_dummy2_0$EN =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ;

  // submodule coreFix_memExe_reqStQ_data_0_dummy2_1
  assign coreFix_memExe_reqStQ_data_0_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqStQ_data_0_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqStQ_deqP_dummy2_0
  assign coreFix_memExe_reqStQ_deqP_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqStQ_deqP_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_sendStToMem ;

  // submodule coreFix_memExe_reqStQ_deqP_dummy2_1
  assign coreFix_memExe_reqStQ_deqP_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqStQ_deqP_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqStQ_empty_dummy2_0
  assign coreFix_memExe_reqStQ_empty_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqStQ_empty_dummy2_0$EN =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ;

  // submodule coreFix_memExe_reqStQ_empty_dummy2_1
  assign coreFix_memExe_reqStQ_empty_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_reqStQ_empty_dummy2_1$EN =
	     WILL_FIRE_RL_coreFix_memExe_sendStToMem ;

  // submodule coreFix_memExe_reqStQ_empty_dummy2_2
  assign coreFix_memExe_reqStQ_empty_dummy2_2$D_IN = 1'b0 ;
  assign coreFix_memExe_reqStQ_empty_dummy2_2$EN = 1'b0 ;

  // submodule coreFix_memExe_reqStQ_enqP_dummy2_0
  assign coreFix_memExe_reqStQ_enqP_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqStQ_enqP_dummy2_0$EN =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ;

  // submodule coreFix_memExe_reqStQ_enqP_dummy2_1
  assign coreFix_memExe_reqStQ_enqP_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_reqStQ_enqP_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_reqStQ_full_dummy2_0
  assign coreFix_memExe_reqStQ_full_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_reqStQ_full_dummy2_0$EN =
	     CAN_FIRE_RL_coreFix_memExe_doIssueSB ;

  // submodule coreFix_memExe_reqStQ_full_dummy2_1
  assign coreFix_memExe_reqStQ_full_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_reqStQ_full_dummy2_1$EN =
	     WILL_FIRE_RL_coreFix_memExe_sendStToMem ;

  // submodule coreFix_memExe_reqStQ_full_dummy2_2
  assign coreFix_memExe_reqStQ_full_dummy2_2$D_IN = 1'b0 ;
  assign coreFix_memExe_reqStQ_full_dummy2_2$EN = 1'b0 ;

  // submodule coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0
  assign coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign coreFix_memExe_respLrScAmoQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1
  assign coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0
  assign coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_respLrScAmoQ_deqReq_dummy2_0$EN =
	     coreFix_memExe_respLrScAmoQ_deqReq_lat_0$whas ;

  // submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1
  assign coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_respLrScAmoQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2
  assign coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0
  assign coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign coreFix_memExe_respLrScAmoQ_enqReq_dummy2_0$EN =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2396 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo ;

  // submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1
  assign coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign coreFix_memExe_respLrScAmoQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2
  assign coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule coreFix_memExe_rsMem
  assign coreFix_memExe_rsMem$enq_x =
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__2787_AND__ETC___d13361) ?
	       { fetchStage$pipelines_0_first[191:189],
		 fetchStage$pipelines_0_first[159:128],
		 IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13383,
		 regRenamingTable$rename_0_getRename,
		 rob$enqPort_0_getEnqInstTag,
		 specTagManager$currentSpecBits,
		 fetchStage$pipelines_0_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_0_get } :
	       { fetchStage$pipelines_1_first[191:189],
		 fetchStage$pipelines_1_first[159:128],
		 IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13513,
		 regRenamingTable$rename_1_getRename,
		 rob$enqPort_1_getEnqInstTag,
		 renaming_spec_bits__h749005,
		 fetchStage$pipelines_1_first[194:192] == 3'd1,
		 specTagManager$nextSpecTag,
		 sbAggr$eagerLookup_1_get } ;
  assign coreFix_memExe_rsMem$setRegReady_0_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_0_put ;
  assign coreFix_memExe_rsMem$setRegReady_1_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_1_put ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_1;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_5;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  coreFix_memExe_rsMem$setRegReady_2_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__VAL_6;
      default: coreFix_memExe_rsMem$setRegReady_2_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_rsMem$setRegReady_3_put =
	     coreFix_aluExe_0_rsAlu$setRegReady_3_put ;
  always@(MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1 or
	  MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_1:
	  coreFix_memExe_rsMem$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_1;
      MUX_coreFix_memExe_rsMem$setRegReady_4_put_1__SEL_2:
	  coreFix_memExe_rsMem$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3:
	  coreFix_memExe_rsMem$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4:
	  coreFix_memExe_rsMem$setRegReady_4_put =
	      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__VAL_3;
      default: coreFix_memExe_rsMem$setRegReady_4_put =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_rsMem$setRobEnqTime_t = rob$getEnqTime ;
  assign coreFix_memExe_rsMem$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: coreFix_memExe_rsMem$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign coreFix_memExe_rsMem$EN_enq =
	     WILL_FIRE_RL_renameStage_doRenaming && _dfoo12 ;
  assign coreFix_memExe_rsMem$EN_setRobEnqTime = 1'd1 ;
  assign coreFix_memExe_rsMem$EN_doDispatch =
	     WILL_FIRE_RL_coreFix_memExe_doDispatchMem ;
  assign coreFix_memExe_rsMem$EN_setRegReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     coreFix_aluExe_0_rsAlu$dispatchData[41] ;
  assign coreFix_memExe_rsMem$EN_setRegReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     coreFix_aluExe_1_rsAlu$dispatchData[41] ;
  assign coreFix_memExe_rsMem$EN_setRegReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[32] ;
  assign coreFix_memExe_rsMem$EN_setRegReady_3_put =
	     _dor1coreFix_memExe_rsMem$EN_setRegReady_3_put &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd2 &&
	     coreFix_memExe_lsq$issueLd[72] ;
  assign coreFix_memExe_rsMem$EN_setRegReady_4_put =
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2449 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign coreFix_memExe_rsMem$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign coreFix_memExe_rsMem$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule coreFix_memExe_stb
  assign coreFix_memExe_stb$deq_idx = i__h362270 ;
  assign coreFix_memExe_stb$enq_be = coreFix_memExe_lsq$firstSt[76:69] ;
  assign coreFix_memExe_stb$enq_data = coreFix_memExe_lsq$firstSt[68:5] ;
  assign coreFix_memExe_stb$enq_idx = coreFix_memExe_stb$getEnqIndex[1:0] ;
  assign coreFix_memExe_stb$enq_paddr = coreFix_memExe_lsq$firstSt[141:78] ;
  assign coreFix_memExe_stb$getEnqIndex_paddr =
	     coreFix_memExe_lsq$firstSt[141:78] ;
  assign coreFix_memExe_stb$noMatchLdQ_be = coreFix_memExe_lsq$firstLd[15:8] ;
  assign coreFix_memExe_stb$noMatchLdQ_paddr =
	     coreFix_memExe_lsq$firstLd[80:17] ;
  assign coreFix_memExe_stb$noMatchStQ_be =
	     coreFix_memExe_lsq$firstSt[76:69] ;
  assign coreFix_memExe_stb$noMatchStQ_paddr =
	     coreFix_memExe_lsq$firstSt[141:78] ;
  assign coreFix_memExe_stb$search_be =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       coreFix_memExe_lsq$getIssueLd[7:0] :
	       coreFix_memExe_issueLd$wget[7:0] ;
  assign coreFix_memExe_stb$search_paddr =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ?
	       coreFix_memExe_lsq$getIssueLd[71:8] :
	       coreFix_memExe_issueLd$wget[71:8] ;
  assign coreFix_memExe_stb$EN_enq =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem ;
  assign coreFix_memExe_stb$EN_deq =
	     MUX_coreFix_memExe_lsq$wakeupLdStalledBySB_1__SEL_1 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd1 ;
  assign coreFix_memExe_stb$EN_issue = CAN_FIRE_RL_coreFix_memExe_doIssueSB ;

  // submodule coreFix_trainBPQ_0
  assign coreFix_trainBPQ_0$D_IN =
	     MUX_coreFix_trainBPQ_0$enq_1__SEL_1 ?
	       MUX_coreFix_trainBPQ_0$enq_1__VAL_1 :
	       MUX_coreFix_trainBPQ_0$enq_1__VAL_2 ;
  assign coreFix_trainBPQ_0$ENQ =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F &&
	     (coreFix_aluExe_0_exeToFinQ$first[326:322] == 5'd9 ||
	      coreFix_aluExe_0_exeToFinQ$first[326:322] == 5'd10) ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign coreFix_trainBPQ_0$DEQ = WILL_FIRE_RL_coreFix_doFetchTrainBP_1 ;
  assign coreFix_trainBPQ_0$CLR = 1'b0 ;

  // submodule coreFix_trainBPQ_1
  assign coreFix_trainBPQ_1$D_IN =
	     MUX_coreFix_trainBPQ_1$enq_1__SEL_1 ?
	       MUX_coreFix_trainBPQ_1$enq_1__VAL_1 :
	       MUX_coreFix_trainBPQ_1$enq_1__VAL_2 ;
  assign coreFix_trainBPQ_1$ENQ =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F &&
	     (coreFix_aluExe_1_exeToFinQ$first[326:322] == 5'd9 ||
	      coreFix_aluExe_1_exeToFinQ$first[326:322] == 5'd10) ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign coreFix_trainBPQ_1$DEQ = coreFix_trainBPQ_1$EMPTY_N ;
  assign coreFix_trainBPQ_1$CLR = 1'b0 ;

  // submodule csrInstOrInterruptInflight_dummy2_0
  assign csrInstOrInterruptInflight_dummy2_0$D_IN = 1'd1 ;
  assign csrInstOrInterruptInflight_dummy2_0$EN =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle &&
	     commitStage_commitTrap[36] ;

  // submodule csrInstOrInterruptInflight_dummy2_1
  assign csrInstOrInterruptInflight_dummy2_1$D_IN = 1'd1 ;
  assign csrInstOrInterruptInflight_dummy2_1$EN =
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	     fetchStage$pipelines_0_first[199:195] == 5'd13 ||
	     MUX_csrInstOrInterruptInflight_dummy2_1$write_1__SEL_2 ;

  // submodule csrf_mcycle_ehr_data_dummy2_0
  assign csrf_mcycle_ehr_data_dummy2_0$D_IN = 1'd1 ;
  assign csrf_mcycle_ehr_data_dummy2_0$EN = csrf_mcycle_ehr_data_lat_0$whas ;

  // submodule csrf_mcycle_ehr_data_dummy2_1
  assign csrf_mcycle_ehr_data_dummy2_1$D_IN = 1'd1 ;
  assign csrf_mcycle_ehr_data_dummy2_1$EN = 1'd1 ;

  // submodule csrf_minstret_ehr_data_dummy2_0
  assign csrf_minstret_ehr_data_dummy2_0$D_IN = 1'd1 ;
  assign csrf_minstret_ehr_data_dummy2_0$EN =
	     csrf_minstret_ehr_data_lat_0$whas ;

  // submodule csrf_minstret_ehr_data_dummy2_1
  assign csrf_minstret_ehr_data_dummy2_1$D_IN = 1'd1 ;
  assign csrf_minstret_ehr_data_dummy2_1$EN =
	     csrf_minstret_ehr_data_dummy_1_0$whas ;

  // submodule csrf_stats_module_writeQ
  assign csrf_stats_module_writeQ$D_IN = csrf_sscratch_csr$D_IN[0] ;
  assign csrf_stats_module_writeQ$ENQ =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd2049 ;
  assign csrf_stats_module_writeQ$DEQ = EN_sendDoStats ;
  assign csrf_stats_module_writeQ$CLR = 1'b0 ;

  // submodule csrf_terminate_module_terminateQ
  assign csrf_terminate_module_terminateQ$ENQ =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd2048 ;
  assign csrf_terminate_module_terminateQ$DEQ = EN_coreIndInv_terminate ;
  assign csrf_terminate_module_terminateQ$CLR = 1'b0 ;

  // submodule epochManager
  assign epochManager$checkEpoch_0_check_e =
	     fetchStage$pipelines_0_first[259:256] ;
  assign epochManager$checkEpoch_1_check_e =
	     fetchStage$pipelines_1_first[259:256] ;
  assign epochManager$updatePrevEpoch_0_update_e =
	     fetchStage$pipelines_0_first[259:256] ;
  assign epochManager$updatePrevEpoch_1_update_e =
	     fetchStage$pipelines_1_first[259:256] ;
  assign epochManager$EN_updatePrevEpoch_0_update =
	     WILL_FIRE_RL_renameStage_doRenaming_wrongPath &&
	     fetchStage$pipelines_0_canDeq ||
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d13323 &&
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ||
	     WILL_FIRE_RL_renameStage_doRenaming_Trap ;
  assign epochManager$EN_updatePrevEpoch_1_update =
	     WILL_FIRE_RL_renameStage_doRenaming_wrongPath &&
	     fetchStage$pipelines_1_canDeq &&
	     !epochManager$checkEpoch_1_check ||
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	     NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13445 &&
	     IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13144 ;
  assign epochManager$EN_incrementEpoch =
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !rob$deqPort_0_deq_data[12] ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ||
	     WILL_FIRE_RL_renameStage_doRenaming_Trap ;

  // submodule fetchStage
  assign fetchStage$iMemIfc_perf_req_r = 2'h0 ;
  assign fetchStage$iMemIfc_perf_setStatus_doStats = 1'b0 ;
  assign fetchStage$iMemIfc_to_parent_fromP_enq_x =
	     iCacheToParent_fromP_enq_x ;
  assign fetchStage$iMemIfc_to_proc_request_put = 64'h0 ;
  assign fetchStage$iTlbIfc_perf_req_r = 3'h0 ;
  assign fetchStage$iTlbIfc_perf_setStatus_doStats = 1'b0 ;
  assign fetchStage$iTlbIfc_toParent_rsFromP_enq_x =
	     l2Tlb$toChildren_rsToC_first[80:0] ;
  assign fetchStage$iTlbIfc_to_proc_request_put = 64'h0 ;
  assign fetchStage$iTlbIfc_updateVMInfo_vm =
	     { csrf_prv_reg,
	       csrf_prv_reg != 2'd3 && csrf_vm_mode_sv39_reg,
	       csrf_mxr_reg,
	       csrf_sum_reg,
	       csrf_ppn_reg } ;
  assign fetchStage$mmioIfc_instResp_enq_x = mmio_pRsQ_data_0[67:0] ;
  assign fetchStage$mmioIfc_setHtifAddrs_fromHost =
	     coreReq_start_fromHostAddr ;
  assign fetchStage$mmioIfc_setHtifAddrs_toHost = coreReq_start_toHostAddr ;
  assign fetchStage$perf_req_r = 2'h0 ;
  assign fetchStage$perf_setStatus_doStats = 1'b0 ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  WILL_FIRE_RL_commitStage_doCommitKilledLd or
	  rob$deqPort_0_deq_data or
	  WILL_FIRE_RL_commitStage_doCommitTrap_handle or
	  MUX_fetchStage$redirect_1__VAL_4 or
	  WILL_FIRE_RL_commitStage_doCommitSystemInst or
	  MUX_fetchStage$redirect_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  fetchStage$redirect_pc = coreFix_aluExe_1_exeToFinQ$first[82:19];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  fetchStage$redirect_pc = coreFix_aluExe_0_exeToFinQ$first[82:19];
      WILL_FIRE_RL_commitStage_doCommitKilledLd:
	  fetchStage$redirect_pc = rob$deqPort_0_deq_data[353:290];
      WILL_FIRE_RL_commitStage_doCommitTrap_handle:
	  fetchStage$redirect_pc = MUX_fetchStage$redirect_1__VAL_4;
      WILL_FIRE_RL_commitStage_doCommitSystemInst:
	  fetchStage$redirect_pc = MUX_fetchStage$redirect_1__VAL_5;
      default: fetchStage$redirect_pc =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fetchStage$start_pc = coreReq_start_startpc ;
  assign fetchStage$train_predictors_dpTrain =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[25:2] :
	       coreFix_trainBPQ_0$D_OUT[25:2] ;
  assign fetchStage$train_predictors_iType =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[31:27] :
	       coreFix_trainBPQ_0$D_OUT[31:27] ;
  assign fetchStage$train_predictors_isCompressed =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[0] :
	       coreFix_trainBPQ_0$D_OUT[0] ;
  assign fetchStage$train_predictors_mispred =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[1] :
	       coreFix_trainBPQ_0$D_OUT[1] ;
  assign fetchStage$train_predictors_next_pc =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[95:32] :
	       coreFix_trainBPQ_0$D_OUT[95:32] ;
  assign fetchStage$train_predictors_pc =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[159:96] :
	       coreFix_trainBPQ_0$D_OUT[159:96] ;
  assign fetchStage$train_predictors_taken =
	     coreFix_trainBPQ_1$EMPTY_N ?
	       coreFix_trainBPQ_1$D_OUT[26] :
	       coreFix_trainBPQ_0$D_OUT[26] ;
  assign fetchStage$EN_pipelines_0_deq =
	     WILL_FIRE_RL_renameStage_doRenaming_wrongPath &&
	     fetchStage$pipelines_0_canDeq ||
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d13323 &&
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ||
	     WILL_FIRE_RL_renameStage_doRenaming_Trap ;
  assign fetchStage$EN_pipelines_1_deq =
	     WILL_FIRE_RL_renameStage_doRenaming_wrongPath &&
	     fetchStage$pipelines_1_canDeq &&
	     !epochManager$checkEpoch_1_check ||
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	     NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13445 &&
	     IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13144 ;
  assign fetchStage$EN_iTlbIfc_flush = MUX_flush_tlbs$write_1__SEL_1 ;
  assign fetchStage$EN_iTlbIfc_updateVMInfo =
	     MUX_update_vm_info$write_1__SEL_1 ;
  assign fetchStage$EN_iTlbIfc_to_proc_request_put = 1'b0 ;
  assign fetchStage$EN_iTlbIfc_to_proc_response_get = 1'b0 ;
  assign fetchStage$EN_iTlbIfc_toParent_rqToP_deq = WILL_FIRE_RL_sendITlbReq ;
  assign fetchStage$EN_iTlbIfc_toParent_rsFromP_enq =
	     CAN_FIRE_RL_sendRsToITlb ;
  assign fetchStage$EN_iTlbIfc_toParent_flush_request_get =
	     CAN_FIRE_RL_mkConnectionGetPut_1 ;
  assign fetchStage$EN_iTlbIfc_toParent_flush_response_put =
	     CAN_FIRE_RL_sendFlushDone ;
  assign fetchStage$EN_iTlbIfc_perf_setStatus = 1'b0 ;
  assign fetchStage$EN_iTlbIfc_perf_req = 1'b0 ;
  assign fetchStage$EN_iTlbIfc_perf_resp = 1'b0 ;
  assign fetchStage$EN_iMemIfc_to_proc_request_put = 1'b0 ;
  assign fetchStage$EN_iMemIfc_to_proc_response_get = 1'b0 ;
  assign fetchStage$EN_iMemIfc_flush = 1'b0 ;
  assign fetchStage$EN_iMemIfc_perf_setStatus = 1'b0 ;
  assign fetchStage$EN_iMemIfc_perf_req = 1'b0 ;
  assign fetchStage$EN_iMemIfc_perf_resp = 1'b0 ;
  assign fetchStage$EN_iMemIfc_to_parent_rsToP_deq =
	     EN_iCacheToParent_rsToP_deq ;
  assign fetchStage$EN_iMemIfc_to_parent_rqToP_deq =
	     EN_iCacheToParent_rqToP_deq ;
  assign fetchStage$EN_iMemIfc_to_parent_fromP_enq =
	     EN_iCacheToParent_fromP_enq ;
  assign fetchStage$EN_iMemIfc_cRqStuck_get = EN_deadlock_iCacheCRqStuck_get ;
  assign fetchStage$EN_iMemIfc_pRqStuck_get = EN_deadlock_iCachePRqStuck_get ;
  assign fetchStage$EN_mmioIfc_instReq_deq = WILL_FIRE_RL_mmio_sendInstReq ;
  assign fetchStage$EN_mmioIfc_instResp_enq = CAN_FIRE_RL_mmio_sendInstResp ;
  assign fetchStage$EN_mmioIfc_setHtifAddrs = EN_coreReq_start ;
  assign fetchStage$EN_start = EN_coreReq_start ;
  assign fetchStage$EN_stop = 1'b0 ;
  assign fetchStage$EN_setWaitRedirect =
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	     !rob$deqPort_0_deq_data[12] ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ||
	     WILL_FIRE_RL_renameStage_doRenaming_Trap ;
  assign fetchStage$EN_redirect =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_handle ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ;
  assign fetchStage$EN_done_flushing = WILL_FIRE_RL_readyToFetch ;
  assign fetchStage$EN_train_predictors =
	     coreFix_trainBPQ_1$EMPTY_N ||
	     WILL_FIRE_RL_coreFix_doFetchTrainBP_1 ;
  assign fetchStage$EN_flush_predictors = 1'b0 ;
  assign fetchStage$EN_perf_setStatus = 1'b0 ;
  assign fetchStage$EN_perf_req = 1'b0 ;
  assign fetchStage$EN_perf_resp = 1'b0 ;

  // submodule l2Tlb
  assign l2Tlb$perf_req_r = 4'h0 ;
  assign l2Tlb$perf_setStatus_doStats = 1'b0 ;
  assign l2Tlb$toChildren_rqFromC_put =
	     WILL_FIRE_RL_sendDTlbReq ?
	       MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_1 :
	       MUX_l2Tlb$toChildren_rqFromC_put_1__VAL_2 ;
  assign l2Tlb$toMem_respLd_enq_x = tlbToMem_respLd_enq_x ;
  assign l2Tlb$updateVMInfo_vmD = coreFix_memExe_dTlb$updateVMInfo_vm ;
  assign l2Tlb$updateVMInfo_vmI = fetchStage$iTlbIfc_updateVMInfo_vm ;
  assign l2Tlb$EN_updateVMInfo = MUX_update_vm_info$write_1__SEL_1 ;
  assign l2Tlb$EN_toChildren_rqFromC_put =
	     WILL_FIRE_RL_sendDTlbReq || WILL_FIRE_RL_sendITlbReq ;
  assign l2Tlb$EN_toChildren_rsToC_deq =
	     WILL_FIRE_RL_sendRsToITlb || WILL_FIRE_RL_sendRsToDTlb ;
  assign l2Tlb$EN_toChildren_iTlbReqFlush_put =
	     CAN_FIRE_RL_mkConnectionGetPut_1 ;
  assign l2Tlb$EN_toChildren_dTlbReqFlush_put =
	     CAN_FIRE_RL_mkConnectionGetPut ;
  assign l2Tlb$EN_toChildren_flushDone_get = CAN_FIRE_RL_sendFlushDone ;
  assign l2Tlb$EN_toMem_memReq_deq = EN_tlbToMem_memReq_deq ;
  assign l2Tlb$EN_toMem_respLd_enq = EN_tlbToMem_respLd_enq ;
  assign l2Tlb$EN_perf_setStatus = 1'b0 ;
  assign l2Tlb$EN_perf_req = 1'b0 ;
  assign l2Tlb$EN_perf_resp = 1'b0 ;

  // submodule mmio_cRqQ_clearReq_dummy2_0
  assign mmio_cRqQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign mmio_cRqQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule mmio_cRqQ_clearReq_dummy2_1
  assign mmio_cRqQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign mmio_cRqQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule mmio_cRqQ_deqReq_dummy2_0
  assign mmio_cRqQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_cRqQ_deqReq_dummy2_0$EN = EN_mmioToPlatform_cRq_deq ;

  // submodule mmio_cRqQ_deqReq_dummy2_1
  assign mmio_cRqQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_cRqQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_cRqQ_deqReq_dummy2_2
  assign mmio_cRqQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_cRqQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_cRqQ_enqReq_dummy2_0
  assign mmio_cRqQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_cRqQ_enqReq_dummy2_0$EN =
	     WILL_FIRE_RL_mmio_sendInstReq || WILL_FIRE_RL_mmio_sendDataReq ;

  // submodule mmio_cRqQ_enqReq_dummy2_1
  assign mmio_cRqQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_cRqQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_cRqQ_enqReq_dummy2_2
  assign mmio_cRqQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_cRqQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_cRsQ_clearReq_dummy2_0
  assign mmio_cRsQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign mmio_cRsQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule mmio_cRsQ_clearReq_dummy2_1
  assign mmio_cRsQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign mmio_cRsQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule mmio_cRsQ_deqReq_dummy2_0
  assign mmio_cRsQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_cRsQ_deqReq_dummy2_0$EN = EN_mmioToPlatform_cRs_deq ;

  // submodule mmio_cRsQ_deqReq_dummy2_1
  assign mmio_cRsQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_cRsQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_cRsQ_deqReq_dummy2_2
  assign mmio_cRsQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_cRsQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_cRsQ_enqReq_dummy2_0
  assign mmio_cRsQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_cRsQ_enqReq_dummy2_0$EN = CAN_FIRE_RL_mmio_handlePRq ;

  // submodule mmio_cRsQ_enqReq_dummy2_1
  assign mmio_cRsQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_cRsQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_cRsQ_enqReq_dummy2_2
  assign mmio_cRsQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_cRsQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_dataPendQ_clearReq_dummy2_0
  assign mmio_dataPendQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign mmio_dataPendQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule mmio_dataPendQ_clearReq_dummy2_1
  assign mmio_dataPendQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign mmio_dataPendQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule mmio_dataPendQ_deqReq_dummy2_0
  assign mmio_dataPendQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_dataPendQ_deqReq_dummy2_0$EN =
	     mmio_dataRespQ_deqReq_lat_0$whas ;

  // submodule mmio_dataPendQ_deqReq_dummy2_1
  assign mmio_dataPendQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_dataPendQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_dataPendQ_deqReq_dummy2_2
  assign mmio_dataPendQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_dataPendQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_dataPendQ_enqReq_dummy2_0
  assign mmio_dataPendQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_dataPendQ_enqReq_dummy2_0$EN =
	     mmio_dataPendQ_enqReq_lat_0$whas ;

  // submodule mmio_dataPendQ_enqReq_dummy2_1
  assign mmio_dataPendQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_dataPendQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_dataPendQ_enqReq_dummy2_2
  assign mmio_dataPendQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_dataPendQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_dataReqQ_clearReq_dummy2_0
  assign mmio_dataReqQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign mmio_dataReqQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule mmio_dataReqQ_clearReq_dummy2_1
  assign mmio_dataReqQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign mmio_dataReqQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule mmio_dataReqQ_deqReq_dummy2_0
  assign mmio_dataReqQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_dataReqQ_deqReq_dummy2_0$EN = CAN_FIRE_RL_mmio_sendDataReq ;

  // submodule mmio_dataReqQ_deqReq_dummy2_1
  assign mmio_dataReqQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_dataReqQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_dataReqQ_deqReq_dummy2_2
  assign mmio_dataReqQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_dataReqQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_dataReqQ_enqReq_dummy2_0
  assign mmio_dataReqQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_dataReqQ_enqReq_dummy2_0$EN = mmio_dataPendQ_enqReq_lat_0$whas ;

  // submodule mmio_dataReqQ_enqReq_dummy2_1
  assign mmio_dataReqQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_dataReqQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_dataReqQ_enqReq_dummy2_2
  assign mmio_dataReqQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_dataReqQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_dataRespQ_clearReq_dummy2_0
  assign mmio_dataRespQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign mmio_dataRespQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule mmio_dataRespQ_clearReq_dummy2_1
  assign mmio_dataRespQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign mmio_dataRespQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule mmio_dataRespQ_deqReq_dummy2_0
  assign mmio_dataRespQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_dataRespQ_deqReq_dummy2_0$EN =
	     mmio_dataRespQ_deqReq_lat_0$whas ;

  // submodule mmio_dataRespQ_deqReq_dummy2_1
  assign mmio_dataRespQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_dataRespQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_dataRespQ_deqReq_dummy2_2
  assign mmio_dataRespQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_dataRespQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_dataRespQ_enqReq_dummy2_0
  assign mmio_dataRespQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_dataRespQ_enqReq_dummy2_0$EN = CAN_FIRE_RL_mmio_sendDataResp ;

  // submodule mmio_dataRespQ_enqReq_dummy2_1
  assign mmio_dataRespQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_dataRespQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_dataRespQ_enqReq_dummy2_2
  assign mmio_dataRespQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_dataRespQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_pRqQ_clearReq_dummy2_0
  assign mmio_pRqQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign mmio_pRqQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule mmio_pRqQ_clearReq_dummy2_1
  assign mmio_pRqQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign mmio_pRqQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule mmio_pRqQ_deqReq_dummy2_0
  assign mmio_pRqQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_pRqQ_deqReq_dummy2_0$EN = CAN_FIRE_RL_mmio_handlePRq ;

  // submodule mmio_pRqQ_deqReq_dummy2_1
  assign mmio_pRqQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_pRqQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_pRqQ_deqReq_dummy2_2
  assign mmio_pRqQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_pRqQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_pRqQ_enqReq_dummy2_0
  assign mmio_pRqQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_pRqQ_enqReq_dummy2_0$EN = EN_mmioToPlatform_pRq_enq ;

  // submodule mmio_pRqQ_enqReq_dummy2_1
  assign mmio_pRqQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_pRqQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_pRqQ_enqReq_dummy2_2
  assign mmio_pRqQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_pRqQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_pRsQ_clearReq_dummy2_0
  assign mmio_pRsQ_clearReq_dummy2_0$D_IN = 1'b0 ;
  assign mmio_pRsQ_clearReq_dummy2_0$EN = 1'b0 ;

  // submodule mmio_pRsQ_clearReq_dummy2_1
  assign mmio_pRsQ_clearReq_dummy2_1$D_IN = 1'd1 ;
  assign mmio_pRsQ_clearReq_dummy2_1$EN = 1'd1 ;

  // submodule mmio_pRsQ_deqReq_dummy2_0
  assign mmio_pRsQ_deqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_pRsQ_deqReq_dummy2_0$EN = mmio_pRsQ_deqReq_lat_0$whas ;

  // submodule mmio_pRsQ_deqReq_dummy2_1
  assign mmio_pRsQ_deqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_pRsQ_deqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_pRsQ_deqReq_dummy2_2
  assign mmio_pRsQ_deqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_pRsQ_deqReq_dummy2_2$EN = 1'd1 ;

  // submodule mmio_pRsQ_enqReq_dummy2_0
  assign mmio_pRsQ_enqReq_dummy2_0$D_IN = 1'd1 ;
  assign mmio_pRsQ_enqReq_dummy2_0$EN = EN_mmioToPlatform_pRs_enq ;

  // submodule mmio_pRsQ_enqReq_dummy2_1
  assign mmio_pRsQ_enqReq_dummy2_1$D_IN = 1'b0 ;
  assign mmio_pRsQ_enqReq_dummy2_1$EN = 1'b0 ;

  // submodule mmio_pRsQ_enqReq_dummy2_2
  assign mmio_pRsQ_enqReq_dummy2_2$D_IN = 1'd1 ;
  assign mmio_pRsQ_enqReq_dummy2_2$EN = 1'd1 ;

  // submodule perfReqQ
  assign perfReqQ$D_IN = { coreReq_perfReq_loc, coreReq_perfReq_t } ;
  assign perfReqQ$ENQ = EN_coreReq_perfReq ;
  assign perfReqQ$DEQ = EN_coreIndInv_perfResp ;
  assign perfReqQ$CLR = 1'b0 ;

  // submodule regRenamingTable
  assign regRenamingTable$rename_0_claimRename_r =
	     fetchStage$pipelines_0_first[95:69] ;
  assign regRenamingTable$rename_0_claimRename_sb =
	     specTagManager$currentSpecBits ;
  assign regRenamingTable$rename_0_getRename_r =
	     fetchStage$pipelines_0_first[95:69] ;
  assign regRenamingTable$rename_1_claimRename_r =
	     fetchStage$pipelines_1_first[95:69] ;
  assign regRenamingTable$rename_1_claimRename_sb =
	     renaming_spec_bits__h749005 ;
  assign regRenamingTable$rename_1_getRename_r =
	     fetchStage$pipelines_1_first[95:69] ;
  assign regRenamingTable$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign regRenamingTable$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  regRenamingTable$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  regRenamingTable$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  regRenamingTable$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: regRenamingTable$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign regRenamingTable$EN_rename_0_claimRename =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d13323 &&
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ;
  assign regRenamingTable$EN_rename_1_claimRename =
	     MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2 ;
  assign regRenamingTable$EN_commit_0_commit =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_0_canDeq ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ;
  assign regRenamingTable$EN_commit_1_commit =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_1_canDeq &&
	     rob$deqPort_1_deq_data[25] &&
	     !rob$deqPort_1_deq_data[18] &&
	     !rob$deqPort_1_deq_data[167] &&
	     rob$deqPort_1_deq_data[257:253] != 5'd0 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd21 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd17 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd18 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd13 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd16 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd15 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd19 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd20 ;
  assign regRenamingTable$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign regRenamingTable$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule rf
  assign rf$read_0_rd1_rindx = coreFix_aluExe_0_dispToRegQ$first[84:78] ;
  assign rf$read_0_rd2_rindx = coreFix_aluExe_0_dispToRegQ$first[76:70] ;
  assign rf$read_0_rd3_rindx = 7'h0 ;
  assign rf$read_1_rd1_rindx = coreFix_aluExe_1_dispToRegQ$first[84:78] ;
  assign rf$read_1_rd2_rindx = coreFix_aluExe_1_dispToRegQ$first[76:70] ;
  assign rf$read_1_rd3_rindx = 7'h0 ;
  assign rf$read_2_rd1_rindx =
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[55:49] ;
  assign rf$read_2_rd2_rindx =
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[47:41] ;
  assign rf$read_2_rd3_rindx =
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[39:33] ;
  assign rf$read_3_rd1_rindx = coreFix_memExe_dispToRegQ$first[61:55] ;
  assign rf$read_3_rd2_rindx = coreFix_memExe_dispToRegQ$first[53:47] ;
  assign rf$read_3_rd3_rindx = 7'h0 ;
  assign rf$read_4_rd1_rindx = 7'h0 ;
  assign rf$read_4_rd2_rindx = 7'h0 ;
  assign rf$read_4_rd3_rindx = 7'h0 ;
  assign rf$write_0_wr_data = coreFix_aluExe_0_exeToFinQ$first[275:212] ;
  assign rf$write_0_wr_rindx = coreFix_aluExe_0_exeToFinQ$first[320:314] ;
  assign rf$write_1_wr_data = coreFix_aluExe_1_exeToFinQ$first[275:212] ;
  assign rf$write_1_wr_rindx = coreFix_aluExe_1_exeToFinQ$first[320:314] ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  MUX_rf$write_2_wr_2__VAL_2 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  MUX_rf$write_2_wr_2__VAL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  MUX_rf$write_2_wr_2__VAL_4 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  MUX_rf$write_2_wr_2__VAL_5 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  MUX_rf$write_2_wr_2__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  rf$write_2_wr_data =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[101:38];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  rf$write_2_wr_data = MUX_rf$write_2_wr_2__VAL_2;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  rf$write_2_wr_data = MUX_rf$write_2_wr_2__VAL_3;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  rf$write_2_wr_data = MUX_rf$write_2_wr_2__VAL_4;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  rf$write_2_wr_data = MUX_rf$write_2_wr_2__VAL_5;
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  rf$write_2_wr_data = MUX_rf$write_2_wr_2__VAL_6;
      default: rf$write_2_wr_data =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  rf$write_2_wr_rindx =
	      coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[31:25];
      default: rf$write_2_wr_rindx = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  always@(MUX_rf$write_3_wr_2__SEL_1 or
	  coreFix_memExe_lsq$respLd or
	  MUX_rf$write_3_wr_1__SEL_2 or
	  coreFix_memExe_respLrScAmoQ_data_0 or
	  MUX_rf$write_3_wr_1__SEL_3 or
	  mmio_dataRespQ_data_0 or
	  MUX_rf$write_3_wr_1__SEL_4 or
	  MUX_rf$write_3_wr_2__VAL_4 or
	  MUX_rf$write_3_wr_1__SEL_5 or MUX_rf$write_3_wr_2__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rf$write_3_wr_2__SEL_1:
	  rf$write_3_wr_data = coreFix_memExe_lsq$respLd[63:0];
      MUX_rf$write_3_wr_1__SEL_2:
	  rf$write_3_wr_data = coreFix_memExe_respLrScAmoQ_data_0;
      MUX_rf$write_3_wr_1__SEL_3:
	  rf$write_3_wr_data = mmio_dataRespQ_data_0[63:0];
      MUX_rf$write_3_wr_1__SEL_4:
	  rf$write_3_wr_data = MUX_rf$write_3_wr_2__VAL_4;
      MUX_rf$write_3_wr_1__SEL_5:
	  rf$write_3_wr_data = MUX_rf$write_3_wr_2__VAL_5;
      default: rf$write_3_wr_data =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(MUX_rf$write_3_wr_1__SEL_1 or
	  coreFix_memExe_lsq$respLd or
	  MUX_rf$write_3_wr_1__SEL_4 or
	  MUX_rf$write_3_wr_1__SEL_5 or
	  coreFix_memExe_lsq$firstLd or
	  MUX_rf$write_3_wr_1__SEL_2 or
	  MUX_rf$write_3_wr_1__SEL_3 or coreFix_memExe_lsq$firstSt)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rf$write_3_wr_1__SEL_1:
	  rf$write_3_wr_rindx = coreFix_memExe_lsq$respLd[71:65];
      MUX_rf$write_3_wr_1__SEL_4 || MUX_rf$write_3_wr_1__SEL_5:
	  rf$write_3_wr_rindx = coreFix_memExe_lsq$firstLd[88:82];
      MUX_rf$write_3_wr_1__SEL_2 || MUX_rf$write_3_wr_1__SEL_3:
	  rf$write_3_wr_rindx = coreFix_memExe_lsq$firstSt[149:143];
      default: rf$write_3_wr_rindx = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  assign rf$write_4_wr_data = 64'h0 ;
  assign rf$write_4_wr_rindx = 7'h0 ;
  assign rf$EN_write_0_wr =
	     _dor1rf$EN_write_0_wr && coreFix_aluExe_0_exeToFinQ$first[321] ;
  assign rf$EN_write_1_wr =
	     _dor1rf$EN_write_1_wr && coreFix_aluExe_1_exeToFinQ$first[321] ;
  assign rf$EN_write_2_wr =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[32] ;
  assign rf$EN_write_3_wr =
	     (WILL_FIRE_RL_coreFix_memExe_doRespLdForward ||
	      WILL_FIRE_RL_coreFix_memExe_doRespLdMem) &&
	     coreFix_memExe_lsq$respLd[72] ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign rf$EN_write_4_wr = 1'b0 ;

  // submodule rob
  always@(MUX_epochManager$updatePrevEpoch_0_update_1__SEL_2 or
	  MUX_rob$enqPort_0_enq_1__VAL_1 or
	  WILL_FIRE_RL_renameStage_doRenaming_Trap or
	  MUX_rob$enqPort_0_enq_1__VAL_2 or
	  WILL_FIRE_RL_renameStage_doRenaming_SystemInst or
	  MUX_rob$enqPort_0_enq_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_epochManager$updatePrevEpoch_0_update_1__SEL_2:
	  rob$enqPort_0_enq_x = MUX_rob$enqPort_0_enq_1__VAL_1;
      WILL_FIRE_RL_renameStage_doRenaming_Trap:
	  rob$enqPort_0_enq_x = MUX_rob$enqPort_0_enq_1__VAL_2;
      WILL_FIRE_RL_renameStage_doRenaming_SystemInst:
	  rob$enqPort_0_enq_x = MUX_rob$enqPort_0_enq_1__VAL_3;
      default: rob$enqPort_0_enq_x =
		   354'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign rob$enqPort_1_enq_x =
	     { fetchStage$pipelines_1_first[387:324],
	       fetchStage$pipelines_1_first[127:96],
	       fetchStage$pipelines_1_first[199:195],
	       fetchStage$pipelines_1_first[75:69],
	       64'hAAAAAAAAAAAAAAAA,
	       fetchStage$pipelines_1_first[173:161],
	       73'h1280000000000000000,
	       fetchStage$pipelines_1_first[323:260],
	       5'd0,
	       fetchStage$pipelines_1_first[75] &&
	       fetchStage$pipelines_1_first[74],
	       fetchStage$pipelines_1_first[194:192] != 3'd0 &&
	       fetchStage$pipelines_1_first[194:192] != 3'd1 &&
	       fetchStage$pipelines_1_first[194:192] != 3'd2 &&
	       fetchStage$pipelines_1_first[194:192] != 3'd3 &&
	       fetchStage$pipelines_1_first[194:192] != 3'd4,
	       IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13506,
	       IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13564,
	       7'd32,
	       renaming_spec_bits__h749005 } ;
  assign rob$getOrigPC_0_get_x = coreFix_aluExe_0_dispToRegQ$first[52:41] ;
  assign rob$getOrigPC_1_get_x = coreFix_aluExe_1_dispToRegQ$first[52:41] ;
  assign rob$getOrigPC_2_get_x = 12'h0 ;
  assign rob$getOrigPredPC_0_get_x =
	     coreFix_aluExe_0_dispToRegQ$first[52:41] ;
  assign rob$getOrigPredPC_1_get_x =
	     coreFix_aluExe_1_dispToRegQ$first[52:41] ;
  assign rob$getOrig_Inst_0_get_x = coreFix_aluExe_0_dispToRegQ$first[52:41] ;
  assign rob$getOrig_Inst_1_get_x = coreFix_aluExe_1_dispToRegQ$first[52:41] ;
  always@(WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault or
	  coreFix_memExe_lsq$firstLd or
	  WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault or
	  coreFix_memExe_lsq$firstSt or
	  MUX_rob$setExecuted_deqLSQ_1__SEL_1 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 or
	  WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem or
	  WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault or
	  WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault:
	  rob$setExecuted_deqLSQ_cause = coreFix_memExe_lsq$firstLd[7:3];
      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault:
	  rob$setExecuted_deqLSQ_cause = coreFix_memExe_lsq$firstSt[4:0];
      MUX_rob$setExecuted_deqLSQ_1__SEL_1 ||
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 ||
      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem:
	  rob$setExecuted_deqLSQ_cause = 5'd10;
      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault:
	  rob$setExecuted_deqLSQ_cause = 5'd21;
      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault:
	  rob$setExecuted_deqLSQ_cause = 5'd23;
      default: rob$setExecuted_deqLSQ_cause =
		   5'b01010 /* unspecified value */ ;
    endcase
  end
  assign rob$setExecuted_deqLSQ_ld_killed =
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem ?
	       coreFix_memExe_lsq$firstLd[2:0] :
	       3'd2 ;
  assign rob$setExecuted_deqLSQ_x =
	     (MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__PSEL_2 ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault) ?
	       coreFix_memExe_lsq$firstLd[113:102] :
	       coreFix_memExe_lsq$firstSt[170:159] ;
  assign rob$setExecuted_doFinishAlu_0_set_cf =
	     coreFix_aluExe_0_exeToFinQ$first[146:17] ;
  assign rob$setExecuted_doFinishAlu_0_set_csrData =
	     coreFix_aluExe_0_exeToFinQ$first[211:147] ;
  assign rob$setExecuted_doFinishAlu_0_set_dst_data =
	     coreFix_aluExe_0_exeToFinQ$first[275:212] ;
  assign rob$setExecuted_doFinishAlu_0_set_x =
	     coreFix_aluExe_0_exeToFinQ$first[312:301] ;
  assign rob$setExecuted_doFinishAlu_1_set_cf =
	     coreFix_aluExe_1_exeToFinQ$first[146:17] ;
  assign rob$setExecuted_doFinishAlu_1_set_csrData =
	     coreFix_aluExe_1_exeToFinQ$first[211:147] ;
  assign rob$setExecuted_doFinishAlu_1_set_dst_data =
	     coreFix_aluExe_1_exeToFinQ$first[275:212] ;
  assign rob$setExecuted_doFinishAlu_1_set_x =
	     coreFix_aluExe_1_exeToFinQ$first[312:301] ;
  always@(WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma or
	  MUX_rf$write_2_wr_2__VAL_2 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv or
	  MUX_rf$write_2_wr_2__VAL_3 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt or
	  MUX_rf$write_2_wr_2__VAL_4 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul or
	  MUX_rf$write_2_wr_2__VAL_5 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv or
	  MUX_rf$write_2_wr_2__VAL_6)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[101:38];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      MUX_rf$write_2_wr_2__VAL_2;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      MUX_rf$write_2_wr_2__VAL_3;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      MUX_rf$write_2_wr_2__VAL_4;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      MUX_rf$write_2_wr_2__VAL_5;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
	      MUX_rf$write_2_wr_2__VAL_6;
      default: rob$setExecuted_doFinishFpuMulDiv_0_set_dst_data =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma or
	  MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_2 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv or
	  MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_3 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt or
	  MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_4 or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_fflags =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[37:33];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_fflags =
	      MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_2;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_fflags =
	      MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_3;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_fflags =
	      MUX_rob$setExecuted_doFinishFpuMulDiv_0_set_3__VAL_4;
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul ||
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_fflags = 5'd0;
      default: rob$setExecuted_doFinishFpuMulDiv_0_set_fflags =
		   5'b01010 /* unspecified value */ ;
    endcase
  end
  always@(WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma or
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv or
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt or
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data or
	  WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv or
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[23:12];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[23:12];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[23:12];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[23:12];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[23:12];
      WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv:
	  rob$setExecuted_doFinishFpuMulDiv_0_set_x =
	      coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[23:12];
      default: rob$setExecuted_doFinishFpuMulDiv_0_set_x =
		   12'b101010101010 /* unspecified value */ ;
    endcase
  end
  assign rob$setExecuted_doFinishMem_access_at_commit =
	     IF_coreFix_memExe_dTlb_procResp__644_BIT_110_6_ETC___d1672 &&
	     (coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1663 ||
	      coreFix_memExe_dTlb$procResp[105:103] == 3'd2 ||
	      coreFix_memExe_dTlb$procResp[105:103] == 3'd3 ||
	      coreFix_memExe_dTlb$procResp[105:103] == 3'd4) ;
  assign rob$setExecuted_doFinishMem_non_mmio_st_done =
	     IF_coreFix_memExe_dTlb_procResp__644_BIT_110_6_ETC___d1672 &&
	     NOT_coreFix_memExe_dTlb_procResp__644_BITS_174_ETC___d1683 &&
	     coreFix_memExe_dTlb$procResp[105:103] == 3'd1 ;
  assign rob$setExecuted_doFinishMem_store_data =
	     64'hAAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign rob$setExecuted_doFinishMem_store_data_BE =
	     8'b10101010 /* unspecified value */  ;
  assign rob$setExecuted_doFinishMem_vaddr =
	     coreFix_memExe_dTlb$procResp[76:13] ;
  assign rob$setExecuted_doFinishMem_x =
	     coreFix_memExe_dTlb$procResp[102:91] ;
  assign rob$setLSQAtCommitNotified_x = rob$deqPort_0_getDeqInstTag ;
  assign rob$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  rob$specUpdate_incorrectSpeculation_inst_tag =
	      coreFix_aluExe_1_exeToFinQ$first[312:301];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  rob$specUpdate_incorrectSpeculation_inst_tag =
	      coreFix_aluExe_0_exeToFinQ$first[312:301];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  rob$specUpdate_incorrectSpeculation_inst_tag =
	      12'b101010101010 /* unspecified value */ ;
      default: rob$specUpdate_incorrectSpeculation_inst_tag =
		   12'b101010101010 /* unspecified value */ ;
    endcase
  end
  assign rob$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  rob$specUpdate_incorrectSpeculation_spec_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  rob$specUpdate_incorrectSpeculation_spec_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  rob$specUpdate_incorrectSpeculation_spec_tag =
	      4'b1010 /* unspecified value */ ;
      default: rob$specUpdate_incorrectSpeculation_spec_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign rob$EN_enqPort_0_enq =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d13323 &&
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872 ||
	     WILL_FIRE_RL_renameStage_doRenaming_Trap ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ;
  assign rob$EN_enqPort_1_enq =
	     MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2 ;
  assign rob$EN_deqPort_0_deq =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_0_canDeq ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ||
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ;
  assign rob$EN_deqPort_1_deq =
	     WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	     rob$deqPort_1_canDeq &&
	     rob$deqPort_1_deq_data[25] &&
	     !rob$deqPort_1_deq_data[18] &&
	     !rob$deqPort_1_deq_data[167] &&
	     rob$deqPort_1_deq_data[257:253] != 5'd0 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd21 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd17 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd18 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd13 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd16 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd15 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd19 &&
	     rob$deqPort_1_deq_data[257:253] != 5'd20 ;
  assign rob$EN_setLSQAtCommitNotified =
	     CAN_FIRE_RL_commitStage_notifyLSQCommit ;
  assign rob$EN_setExecuted_deqLSQ =
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_Fence ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault ||
	     WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault ;
  assign rob$EN_setExecuted_doFinishAlu_0_set =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign rob$EN_setExecuted_doFinishAlu_1_set =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign rob$EN_setExecuted_doFinishFpuMulDiv_0_set =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv ;
  assign rob$EN_setExecuted_doFinishMem =
	     CAN_FIRE_RL_coreFix_memExe_doFinishMem ;
  assign rob$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign rob$EN_specUpdate_correctSpeculation = 1'd1 ;

  // submodule sbAggr
  assign sbAggr$eagerLookup_0_get_r = regRenamingTable$rename_0_getRename ;
  assign sbAggr$eagerLookup_1_get_r = regRenamingTable$rename_1_getRename ;
  assign sbAggr$setBusy_0_set_dst = regRenamingTable$rename_0_getRename[8:0] ;
  assign sbAggr$setBusy_1_set_dst = regRenamingTable$rename_1_getRename[8:0] ;
  assign sbAggr$setReady_0_put = coreFix_aluExe_0_rsAlu$dispatchData[40:34] ;
  assign sbAggr$setReady_1_put = coreFix_aluExe_1_rsAlu$dispatchData[40:34] ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  sbAggr$setReady_2_put =
	      coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[31:25];
      default: sbAggr$setReady_2_put = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  assign sbAggr$setReady_3_put = coreFix_memExe_lsq$issueLd[71:65] ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4 or
	  coreFix_memExe_lsq$getHit or
	  MUX_sbAggr$setReady_4_put_1__SEL_2 or
	  coreFix_memExe_lsq$firstLd or
	  MUX_sbAggr$setReady_4_put_1__SEL_1 or coreFix_memExe_lsq$firstSt)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_3 ||
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_4_put_1__SEL_4:
	  sbAggr$setReady_4_put = coreFix_memExe_lsq$getHit[7:1];
      MUX_sbAggr$setReady_4_put_1__SEL_2:
	  sbAggr$setReady_4_put = coreFix_memExe_lsq$firstLd[88:82];
      MUX_sbAggr$setReady_4_put_1__SEL_1:
	  sbAggr$setReady_4_put = coreFix_memExe_lsq$firstSt[149:143];
      default: sbAggr$setReady_4_put = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  assign sbAggr$EN_setBusy_0_set =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d13323 &&
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ;
  assign sbAggr$EN_setBusy_1_set =
	     MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2 ;
  assign sbAggr$EN_setReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doDispatchAlu &&
	     coreFix_aluExe_0_rsAlu$dispatchData[41] ;
  assign sbAggr$EN_setReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doDispatchAlu &&
	     coreFix_aluExe_1_rsAlu$dispatchData[41] ;
  assign sbAggr$EN_setReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[32] ;
  assign sbAggr$EN_setReady_3_put =
	     _dor1sbAggr$EN_setReady_3_put &&
	     coreFix_memExe_lsq$issueLd[74:73] == 2'd2 &&
	     coreFix_memExe_lsq$issueLd[72] ;
  assign sbAggr$EN_setReady_4_put =
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2449 ||
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;

  // submodule sbCons
  assign sbCons$eagerLookup_0_get_r = 33'h0 ;
  assign sbCons$eagerLookup_1_get_r = 33'h0 ;
  assign sbCons$lazyLookup_0_get_r =
	     coreFix_aluExe_0_dispToRegQ$first[85:53] ;
  assign sbCons$lazyLookup_1_get_r =
	     coreFix_aluExe_1_dispToRegQ$first[85:53] ;
  assign sbCons$lazyLookup_2_get_r =
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[56:24] ;
  assign sbCons$lazyLookup_3_get_r = coreFix_memExe_dispToRegQ$first[62:30] ;
  assign sbCons$lazyLookup_4_get_r = 33'h0 ;
  assign sbCons$setBusy_0_set_dst = regRenamingTable$rename_0_getRename[8:0] ;
  assign sbCons$setBusy_1_set_dst = regRenamingTable$rename_1_getRename[8:0] ;
  assign sbCons$setReady_0_put = coreFix_aluExe_0_exeToFinQ$first[320:314] ;
  assign sbCons$setReady_1_put = coreFix_aluExe_1_exeToFinQ$first[320:314] ;
  always@(MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1 or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2 or
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3 or
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4 or
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data or
	  MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6 or
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_1:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_2:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_3:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_4:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_5:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[31:25];
      MUX_coreFix_aluExe_0_rsAlu$setRegReady_2_put_1__SEL_6:
	  sbCons$setReady_2_put =
	      coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[31:25];
      default: sbCons$setReady_2_put = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  always@(MUX_sbCons$setReady_3_put_1__SEL_1 or
	  coreFix_memExe_lsq$respLd or
	  MUX_sbCons$setReady_3_put_1__SEL_2 or
	  coreFix_memExe_lsq$firstSt or
	  MUX_sbCons$setReady_3_put_1__SEL_3 or coreFix_memExe_lsq$firstLd)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_sbCons$setReady_3_put_1__SEL_1:
	  sbCons$setReady_3_put = coreFix_memExe_lsq$respLd[71:65];
      MUX_sbCons$setReady_3_put_1__SEL_2:
	  sbCons$setReady_3_put = coreFix_memExe_lsq$firstSt[149:143];
      MUX_sbCons$setReady_3_put_1__SEL_3:
	  sbCons$setReady_3_put = coreFix_memExe_lsq$firstLd[88:82];
      default: sbCons$setReady_3_put = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  assign sbCons$setReady_4_put = 7'h0 ;
  assign sbCons$EN_setBusy_0_set =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d13323 &&
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872 ||
	     WILL_FIRE_RL_renameStage_doRenaming_SystemInst ;
  assign sbCons$EN_setBusy_1_set =
	     MUX_epochManager$updatePrevEpoch_1_update_1__SEL_2 ;
  assign sbCons$EN_setReady_0_put =
	     _dor1sbCons$EN_setReady_0_put &&
	     coreFix_aluExe_0_exeToFinQ$first[321] ;
  assign sbCons$EN_setReady_1_put =
	     _dor1sbCons$EN_setReady_1_put &&
	     coreFix_aluExe_1_exeToFinQ$first[321] ;
  assign sbCons$EN_setReady_2_put =
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSimple &&
	     coreFix_fpuMulDivExe_0_fpuExec_simpleQ$first[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpFma &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpDiv &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishFpSqrt &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[32] ||
	     WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[32] ;
  assign sbCons$EN_setReady_3_put =
	     (WILL_FIRE_RL_coreFix_memExe_doRespLdForward ||
	      WILL_FIRE_RL_coreFix_memExe_doRespLdMem) &&
	     coreFix_memExe_lsq$respLd[72] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq) &&
	     coreFix_memExe_lsq$firstSt[150] ||
	     (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq ||
	      WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq) &&
	     coreFix_memExe_lsq$firstLd[89] ;
  assign sbCons$EN_setReady_4_put = 1'b0 ;

  // submodule specTagManager
  assign specTagManager$specUpdate_correctSpeculation_mask =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 ;
  assign specTagManager$specUpdate_incorrectSpeculation_kill_all =
	     coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_kill_all ;
  always@(WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T or
	  coreFix_aluExe_1_exeToFinQ$first or
	  WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T or
	  coreFix_aluExe_0_exeToFinQ$first or
	  MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T:
	  specTagManager$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_1_exeToFinQ$first[15:12];
      WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T:
	  specTagManager$specUpdate_incorrectSpeculation_kill_tag =
	      coreFix_aluExe_0_exeToFinQ$first[15:12];
      MUX_coreFix_aluExe_0_dispToRegQ$specUpdate_incorrectSpeculation_1__SEL_3:
	  specTagManager$specUpdate_incorrectSpeculation_kill_tag =
	      4'b1010 /* unspecified value */ ;
      default: specTagManager$specUpdate_incorrectSpeculation_kill_tag =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign specTagManager$EN_claimSpecTag =
	     WILL_FIRE_RL_renameStage_doRenaming &&
	     (fetchStage_pipelines_0_canDeq__2436_AND_specTa_ETC___d13415 ||
	      NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	      NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13547) ;
  assign specTagManager$EN_specUpdate_incorrectSpeculation =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ||
	     WILL_FIRE_RL_commitStage_doCommitKilledLd ||
	     WILL_FIRE_RL_commitStage_doCommitTrap_flush ;
  assign specTagManager$EN_specUpdate_correctSpeculation = 1'd1 ;

  // remaining internal signals
  module_amoExec instance_amoExec_2(.amoExec_amo_inst(coreFix_memExe_dMem_cache_m_banks_0_processAmo[10:4]),
				    .amoExec_current_data(curData__h209190),
				    .amoExec_in_data(coreFix_memExe_dMem_cache_m_banks_0_processAmo[74:11]),
				    .amoExec_upper_32_bits(coreFix_memExe_dMem_cache_m_banks_0_processAmo[90]),
				    .amoExec(n__h210716));
  module_amoExec instance_amoExec_3(.amoExec_amo_inst({ mmio_pRqQ_data_0[35:32],
							3'd0 }),
				    .amoExec_current_data({ 63'd0,
							    r__h680178 }),
				    .amoExec_in_data({ 32'd0, x__h79607 }),
				    .amoExec_upper_32_bits(1'd0),
				    .amoExec(amoExec___d879));
  module_basicExec instance_basicExec_6(.basicExec_dInst(coreFix_aluExe_1_regToExeQ$first[421:350]),
					.basicExec_rVal1(coreFix_aluExe_1_regToExeQ$first[304:241]),
					.basicExec_rVal2(coreFix_aluExe_1_regToExeQ$first[240:177]),
					.basicExec_pc(coreFix_aluExe_1_regToExeQ$first[176:113]),
					.basicExec_ppc(coreFix_aluExe_1_regToExeQ$first[112:49]),
					.basicExec_orig_inst(coreFix_aluExe_1_regToExeQ$first[48:17]),
					.basicExec(basicExec___d11946));
  module_basicExec instance_basicExec_5(.basicExec_dInst(coreFix_aluExe_0_regToExeQ$first[421:350]),
					.basicExec_rVal1(coreFix_aluExe_0_regToExeQ$first[304:241]),
					.basicExec_rVal2(coreFix_aluExe_0_regToExeQ$first[240:177]),
					.basicExec_pc(coreFix_aluExe_0_regToExeQ$first[176:113]),
					.basicExec_ppc(coreFix_aluExe_0_regToExeQ$first[112:49]),
					.basicExec_orig_inst(coreFix_aluExe_0_regToExeQ$first[48:17]),
					.basicExec(basicExec___d12292));
  module_checkForException instance_checkForException_0(.checkForException_dInst(fetchStage$pipelines_0_first[199:128]),
							.checkForException_regs(fetchStage$pipelines_0_first[95:69]),
							.checkForException_csrState({ x_decodeInfo_frm__h719142,
										      r1__read_BITS_13_TO_12___h719333 !=
										      2'd0,
										      { prv__h783968,
											csrf_tvm_reg,
											{ r1__read_BIT_20___h719700,
											  csrf_tsr_reg,
											  { csrf_mcounteren_cy_reg,
											    csrf_mcounteren_cy_reg &&
											    csrf_scounteren_cy_reg,
											    { csrf_mcounteren_ir_reg,
											      csrf_mcounteren_ir_reg &&
											      csrf_scounteren_ir_reg,
											      { csrf_mcounteren_tm_reg,
												csrf_mcounteren_tm_reg &&
												csrf_scounteren_tm_reg } } } } } }),
							.checkForException(checkForException___d12547));
  module_checkForException instance_checkForException_1(.checkForException_dInst(fetchStage$pipelines_1_first[199:128]),
							.checkForException_regs(fetchStage$pipelines_1_first[95:69]),
							.checkForException_csrState({ x_decodeInfo_frm__h719142,
										      r1__read_BITS_13_TO_12___h719333 !=
										      2'd0,
										      { prv__h783968,
											csrf_tvm_reg,
											{ r1__read_BIT_20___h719700,
											  csrf_tsr_reg,
											  { csrf_mcounteren_cy_reg,
											    csrf_mcounteren_cy_reg &&
											    csrf_scounteren_cy_reg,
											    { csrf_mcounteren_ir_reg,
											      csrf_mcounteren_ir_reg &&
											      csrf_scounteren_ir_reg,
											      { csrf_mcounteren_tm_reg,
												csrf_mcounteren_tm_reg &&
												csrf_scounteren_tm_reg } } } } } }),
							.checkForException(checkForException___d12943));
  module_execFpuSimple instance_execFpuSimple_4(.execFpuSimple_fpu_inst(coreFix_fpuMulDivExe_0_regToExeQ$first[233:225]),
						.execFpuSimple_rVal1(rVal1__h535562),
						.execFpuSimple_rVal2(rVal2__h535563),
						.execFpuSimple(execFpuSimple___d11351));
  assign DONTCARE_CONCAT_IF_IF_fetchStage_pipelines_0_f_ETC___d13380 =
	     { 1'h0,
	       CASE_fetchStagepipelines_0_first_BITS_191_TO__ETC__q221 } ;
  assign DONTCARE_CONCAT_IF_IF_fetchStage_pipelines_1_f_ETC___d13510 =
	     { 1'h0,
	       CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q222 } ;
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q17 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d4606 ?
	       _theResult___snd__h390248 :
	       _theResult____h380819 ;
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q52 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5998 ?
	       _theResult___snd__h441961 :
	       _theResult____h432534 ;
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q87 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d7390 ?
	       _theResult___snd__h493672 :
	       _theResult____h484245 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q126 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d9202 ?
	       _theResult___snd__h568018 :
	       _theResult____h558464 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q143 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d9917 ?
	       _theResult___snd__h654601 :
	       _theResult____h645047 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q166 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10686 ?
	       _theResult___snd__h611099 :
	       _theResult____h601545 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q27 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5157 ?
	       _theResult___snd__h410502 :
	       _theResult____h400946 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q62 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6549 ?
	       _theResult___snd__h462215 :
	       _theResult____h452659 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q97 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7941 ?
	       _theResult___snd__h513926 :
	       _theResult____h504370 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q122 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8889 ?
	       _theResult___snd__h557112 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q129 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9252 ?
	       _theResult___snd__h557112 :
	       _theResult___snd__h578005 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q139 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9620 ?
	       _theResult___snd__h643695 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q146 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9967 ?
	       _theResult___snd__h643695 :
	       _theResult___snd__h664588 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q162 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10389 ?
	       _theResult___snd__h600193 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q169 =
	     _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10736 ?
	       _theResult___snd__h600193 :
	       _theResult___snd__h621086 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q102 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8014 ?
	       _theResult___snd__h503487 :
	       _theResult___snd__h523765 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q19 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4837 ?
	       _theResult___snd__h400063 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q32 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5230 ?
	       _theResult___snd__h400063 :
	       _theResult___snd__h420341 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q54 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6229 ?
	       _theResult___snd__h451776 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q67 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6622 ?
	       _theResult___snd__h451776 :
	       _theResult___snd__h472054 ;
  assign IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q89 =
	     _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7621 ?
	       _theResult___snd__h503487 :
	       57'd0 ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d5426 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4370 ?
	       ((_theResult___fst_exp__h390185 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5411) :
	       ((_theResult___fst_exp__h400074 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5424) ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d5476 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4370 ?
	       ((_theResult___fst_exp__h390185 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5467) :
	       ((_theResult___fst_exp__h400074 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5474) ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6818 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5762 ?
	       ((_theResult___fst_exp__h441898 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6803) :
	       ((_theResult___fst_exp__h451787 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6816) ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6868 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5762 ?
	       ((_theResult___fst_exp__h441898 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6859) :
	       ((_theResult___fst_exp__h451787 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6866) ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d8210 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7154 ?
	       ((_theResult___fst_exp__h493609 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8195) :
	       ((_theResult___fst_exp__h503498 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8208) ;
  assign IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d8260 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7154 ?
	       ((_theResult___fst_exp__h493609 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8251) :
	       ((_theResult___fst_exp__h503498 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8258) ;
  assign IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d4604 =
	     (_theResult____h380819[56] ?
		6'd0 :
		(_theResult____h380819[55] ?
		   6'd1 :
		   (_theResult____h380819[54] ?
		      6'd2 :
		      (_theResult____h380819[53] ?
			 6'd3 :
			 (_theResult____h380819[52] ?
			    6'd4 :
			    (_theResult____h380819[51] ?
			       6'd5 :
			       (_theResult____h380819[50] ?
				  6'd6 :
				  (_theResult____h380819[49] ?
				     6'd7 :
				     (_theResult____h380819[48] ?
					6'd8 :
					(_theResult____h380819[47] ?
					   6'd9 :
					   (_theResult____h380819[46] ?
					      6'd10 :
					      (_theResult____h380819[45] ?
						 6'd11 :
						 (_theResult____h380819[44] ?
						    6'd12 :
						    (_theResult____h380819[43] ?
						       6'd13 :
						       (_theResult____h380819[42] ?
							  6'd14 :
							  (_theResult____h380819[41] ?
							     6'd15 :
							     (_theResult____h380819[40] ?
								6'd16 :
								(_theResult____h380819[39] ?
								   6'd17 :
								   (_theResult____h380819[38] ?
								      6'd18 :
								      (_theResult____h380819[37] ?
									 6'd19 :
									 (_theResult____h380819[36] ?
									    6'd20 :
									    (_theResult____h380819[35] ?
									       6'd21 :
									       (_theResult____h380819[34] ?
										  6'd22 :
										  (_theResult____h380819[33] ?
										     6'd23 :
										     (_theResult____h380819[32] ?
											6'd24 :
											(_theResult____h380819[31] ?
											   6'd25 :
											   (_theResult____h380819[30] ?
											      6'd26 :
											      (_theResult____h380819[29] ?
												 6'd27 :
												 (_theResult____h380819[28] ?
												    6'd28 :
												    (_theResult____h380819[27] ?
												       6'd29 :
												       (_theResult____h380819[26] ?
													  6'd30 :
													  (_theResult____h380819[25] ?
													     6'd31 :
													     (_theResult____h380819[24] ?
														6'd32 :
														(_theResult____h380819[23] ?
														   6'd33 :
														   (_theResult____h380819[22] ?
														      6'd34 :
														      (_theResult____h380819[21] ?
															 6'd35 :
															 (_theResult____h380819[20] ?
															    6'd36 :
															    (_theResult____h380819[19] ?
															       6'd37 :
															       (_theResult____h380819[18] ?
																  6'd38 :
																  (_theResult____h380819[17] ?
																     6'd39 :
																     (_theResult____h380819[16] ?
																	6'd40 :
																	(_theResult____h380819[15] ?
																	   6'd41 :
																	   (_theResult____h380819[14] ?
																	      6'd42 :
																	      (_theResult____h380819[13] ?
																		 6'd43 :
																		 (_theResult____h380819[12] ?
																		    6'd44 :
																		    (_theResult____h380819[11] ?
																		       6'd45 :
																		       (_theResult____h380819[10] ?
																			  6'd46 :
																			  (_theResult____h380819[9] ?
																			     6'd47 :
																			     (_theResult____h380819[8] ?
																				6'd48 :
																				(_theResult____h380819[7] ?
																				   6'd49 :
																				   (_theResult____h380819[6] ?
																				      6'd50 :
																				      (_theResult____h380819[5] ?
																					 6'd51 :
																					 (_theResult____h380819[4] ?
																					    6'd52 :
																					    (_theResult____h380819[3] ?
																					       6'd53 :
																					       (_theResult____h380819[2] ?
																						  6'd54 :
																						  (_theResult____h380819[1] ?
																						     6'd55 :
																						     (_theResult____h380819[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d5996 =
	     (_theResult____h432534[56] ?
		6'd0 :
		(_theResult____h432534[55] ?
		   6'd1 :
		   (_theResult____h432534[54] ?
		      6'd2 :
		      (_theResult____h432534[53] ?
			 6'd3 :
			 (_theResult____h432534[52] ?
			    6'd4 :
			    (_theResult____h432534[51] ?
			       6'd5 :
			       (_theResult____h432534[50] ?
				  6'd6 :
				  (_theResult____h432534[49] ?
				     6'd7 :
				     (_theResult____h432534[48] ?
					6'd8 :
					(_theResult____h432534[47] ?
					   6'd9 :
					   (_theResult____h432534[46] ?
					      6'd10 :
					      (_theResult____h432534[45] ?
						 6'd11 :
						 (_theResult____h432534[44] ?
						    6'd12 :
						    (_theResult____h432534[43] ?
						       6'd13 :
						       (_theResult____h432534[42] ?
							  6'd14 :
							  (_theResult____h432534[41] ?
							     6'd15 :
							     (_theResult____h432534[40] ?
								6'd16 :
								(_theResult____h432534[39] ?
								   6'd17 :
								   (_theResult____h432534[38] ?
								      6'd18 :
								      (_theResult____h432534[37] ?
									 6'd19 :
									 (_theResult____h432534[36] ?
									    6'd20 :
									    (_theResult____h432534[35] ?
									       6'd21 :
									       (_theResult____h432534[34] ?
										  6'd22 :
										  (_theResult____h432534[33] ?
										     6'd23 :
										     (_theResult____h432534[32] ?
											6'd24 :
											(_theResult____h432534[31] ?
											   6'd25 :
											   (_theResult____h432534[30] ?
											      6'd26 :
											      (_theResult____h432534[29] ?
												 6'd27 :
												 (_theResult____h432534[28] ?
												    6'd28 :
												    (_theResult____h432534[27] ?
												       6'd29 :
												       (_theResult____h432534[26] ?
													  6'd30 :
													  (_theResult____h432534[25] ?
													     6'd31 :
													     (_theResult____h432534[24] ?
														6'd32 :
														(_theResult____h432534[23] ?
														   6'd33 :
														   (_theResult____h432534[22] ?
														      6'd34 :
														      (_theResult____h432534[21] ?
															 6'd35 :
															 (_theResult____h432534[20] ?
															    6'd36 :
															    (_theResult____h432534[19] ?
															       6'd37 :
															       (_theResult____h432534[18] ?
																  6'd38 :
																  (_theResult____h432534[17] ?
																     6'd39 :
																     (_theResult____h432534[16] ?
																	6'd40 :
																	(_theResult____h432534[15] ?
																	   6'd41 :
																	   (_theResult____h432534[14] ?
																	      6'd42 :
																	      (_theResult____h432534[13] ?
																		 6'd43 :
																		 (_theResult____h432534[12] ?
																		    6'd44 :
																		    (_theResult____h432534[11] ?
																		       6'd45 :
																		       (_theResult____h432534[10] ?
																			  6'd46 :
																			  (_theResult____h432534[9] ?
																			     6'd47 :
																			     (_theResult____h432534[8] ?
																				6'd48 :
																				(_theResult____h432534[7] ?
																				   6'd49 :
																				   (_theResult____h432534[6] ?
																				      6'd50 :
																				      (_theResult____h432534[5] ?
																					 6'd51 :
																					 (_theResult____h432534[4] ?
																					    6'd52 :
																					    (_theResult____h432534[3] ?
																					       6'd53 :
																					       (_theResult____h432534[2] ?
																						  6'd54 :
																						  (_theResult____h432534[1] ?
																						     6'd55 :
																						     (_theResult____h432534[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d7388 =
	     (_theResult____h484245[56] ?
		6'd0 :
		(_theResult____h484245[55] ?
		   6'd1 :
		   (_theResult____h484245[54] ?
		      6'd2 :
		      (_theResult____h484245[53] ?
			 6'd3 :
			 (_theResult____h484245[52] ?
			    6'd4 :
			    (_theResult____h484245[51] ?
			       6'd5 :
			       (_theResult____h484245[50] ?
				  6'd6 :
				  (_theResult____h484245[49] ?
				     6'd7 :
				     (_theResult____h484245[48] ?
					6'd8 :
					(_theResult____h484245[47] ?
					   6'd9 :
					   (_theResult____h484245[46] ?
					      6'd10 :
					      (_theResult____h484245[45] ?
						 6'd11 :
						 (_theResult____h484245[44] ?
						    6'd12 :
						    (_theResult____h484245[43] ?
						       6'd13 :
						       (_theResult____h484245[42] ?
							  6'd14 :
							  (_theResult____h484245[41] ?
							     6'd15 :
							     (_theResult____h484245[40] ?
								6'd16 :
								(_theResult____h484245[39] ?
								   6'd17 :
								   (_theResult____h484245[38] ?
								      6'd18 :
								      (_theResult____h484245[37] ?
									 6'd19 :
									 (_theResult____h484245[36] ?
									    6'd20 :
									    (_theResult____h484245[35] ?
									       6'd21 :
									       (_theResult____h484245[34] ?
										  6'd22 :
										  (_theResult____h484245[33] ?
										     6'd23 :
										     (_theResult____h484245[32] ?
											6'd24 :
											(_theResult____h484245[31] ?
											   6'd25 :
											   (_theResult____h484245[30] ?
											      6'd26 :
											      (_theResult____h484245[29] ?
												 6'd27 :
												 (_theResult____h484245[28] ?
												    6'd28 :
												    (_theResult____h484245[27] ?
												       6'd29 :
												       (_theResult____h484245[26] ?
													  6'd30 :
													  (_theResult____h484245[25] ?
													     6'd31 :
													     (_theResult____h484245[24] ?
														6'd32 :
														(_theResult____h484245[23] ?
														   6'd33 :
														   (_theResult____h484245[22] ?
														      6'd34 :
														      (_theResult____h484245[21] ?
															 6'd35 :
															 (_theResult____h484245[20] ?
															    6'd36 :
															    (_theResult____h484245[19] ?
															       6'd37 :
															       (_theResult____h484245[18] ?
																  6'd38 :
																  (_theResult____h484245[17] ?
																     6'd39 :
																     (_theResult____h484245[16] ?
																	6'd40 :
																	(_theResult____h484245[15] ?
																	   6'd41 :
																	   (_theResult____h484245[14] ?
																	      6'd42 :
																	      (_theResult____h484245[13] ?
																		 6'd43 :
																		 (_theResult____h484245[12] ?
																		    6'd44 :
																		    (_theResult____h484245[11] ?
																		       6'd45 :
																		       (_theResult____h484245[10] ?
																			  6'd46 :
																			  (_theResult____h484245[9] ?
																			     6'd47 :
																			     (_theResult____h484245[8] ?
																				6'd48 :
																				(_theResult____h484245[7] ?
																				   6'd49 :
																				   (_theResult____h484245[6] ?
																				      6'd50 :
																				      (_theResult____h484245[5] ?
																					 6'd51 :
																					 (_theResult____h484245[4] ?
																					    6'd52 :
																					    (_theResult____h484245[3] ?
																					       6'd53 :
																					       (_theResult____h484245[2] ?
																						  6'd54 :
																						  (_theResult____h484245[1] ?
																						     6'd55 :
																						     (_theResult____h484245[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d10684 =
	     (_theResult____h601545[56] ?
		6'd0 :
		(_theResult____h601545[55] ?
		   6'd1 :
		   (_theResult____h601545[54] ?
		      6'd2 :
		      (_theResult____h601545[53] ?
			 6'd3 :
			 (_theResult____h601545[52] ?
			    6'd4 :
			    (_theResult____h601545[51] ?
			       6'd5 :
			       (_theResult____h601545[50] ?
				  6'd6 :
				  (_theResult____h601545[49] ?
				     6'd7 :
				     (_theResult____h601545[48] ?
					6'd8 :
					(_theResult____h601545[47] ?
					   6'd9 :
					   (_theResult____h601545[46] ?
					      6'd10 :
					      (_theResult____h601545[45] ?
						 6'd11 :
						 (_theResult____h601545[44] ?
						    6'd12 :
						    (_theResult____h601545[43] ?
						       6'd13 :
						       (_theResult____h601545[42] ?
							  6'd14 :
							  (_theResult____h601545[41] ?
							     6'd15 :
							     (_theResult____h601545[40] ?
								6'd16 :
								(_theResult____h601545[39] ?
								   6'd17 :
								   (_theResult____h601545[38] ?
								      6'd18 :
								      (_theResult____h601545[37] ?
									 6'd19 :
									 (_theResult____h601545[36] ?
									    6'd20 :
									    (_theResult____h601545[35] ?
									       6'd21 :
									       (_theResult____h601545[34] ?
										  6'd22 :
										  (_theResult____h601545[33] ?
										     6'd23 :
										     (_theResult____h601545[32] ?
											6'd24 :
											(_theResult____h601545[31] ?
											   6'd25 :
											   (_theResult____h601545[30] ?
											      6'd26 :
											      (_theResult____h601545[29] ?
												 6'd27 :
												 (_theResult____h601545[28] ?
												    6'd28 :
												    (_theResult____h601545[27] ?
												       6'd29 :
												       (_theResult____h601545[26] ?
													  6'd30 :
													  (_theResult____h601545[25] ?
													     6'd31 :
													     (_theResult____h601545[24] ?
														6'd32 :
														(_theResult____h601545[23] ?
														   6'd33 :
														   (_theResult____h601545[22] ?
														      6'd34 :
														      (_theResult____h601545[21] ?
															 6'd35 :
															 (_theResult____h601545[20] ?
															    6'd36 :
															    (_theResult____h601545[19] ?
															       6'd37 :
															       (_theResult____h601545[18] ?
																  6'd38 :
																  (_theResult____h601545[17] ?
																     6'd39 :
																     (_theResult____h601545[16] ?
																	6'd40 :
																	(_theResult____h601545[15] ?
																	   6'd41 :
																	   (_theResult____h601545[14] ?
																	      6'd42 :
																	      (_theResult____h601545[13] ?
																		 6'd43 :
																		 (_theResult____h601545[12] ?
																		    6'd44 :
																		    (_theResult____h601545[11] ?
																		       6'd45 :
																		       (_theResult____h601545[10] ?
																			  6'd46 :
																			  (_theResult____h601545[9] ?
																			     6'd47 :
																			     (_theResult____h601545[8] ?
																				6'd48 :
																				(_theResult____h601545[7] ?
																				   6'd49 :
																				   (_theResult____h601545[6] ?
																				      6'd50 :
																				      (_theResult____h601545[5] ?
																					 6'd51 :
																					 (_theResult____h601545[4] ?
																					    6'd52 :
																					    (_theResult____h601545[3] ?
																					       6'd53 :
																					       (_theResult____h601545[2] ?
																						  6'd54 :
																						  (_theResult____h601545[1] ?
																						     6'd55 :
																						     (_theResult____h601545[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9200 =
	     (_theResult____h558464[56] ?
		6'd0 :
		(_theResult____h558464[55] ?
		   6'd1 :
		   (_theResult____h558464[54] ?
		      6'd2 :
		      (_theResult____h558464[53] ?
			 6'd3 :
			 (_theResult____h558464[52] ?
			    6'd4 :
			    (_theResult____h558464[51] ?
			       6'd5 :
			       (_theResult____h558464[50] ?
				  6'd6 :
				  (_theResult____h558464[49] ?
				     6'd7 :
				     (_theResult____h558464[48] ?
					6'd8 :
					(_theResult____h558464[47] ?
					   6'd9 :
					   (_theResult____h558464[46] ?
					      6'd10 :
					      (_theResult____h558464[45] ?
						 6'd11 :
						 (_theResult____h558464[44] ?
						    6'd12 :
						    (_theResult____h558464[43] ?
						       6'd13 :
						       (_theResult____h558464[42] ?
							  6'd14 :
							  (_theResult____h558464[41] ?
							     6'd15 :
							     (_theResult____h558464[40] ?
								6'd16 :
								(_theResult____h558464[39] ?
								   6'd17 :
								   (_theResult____h558464[38] ?
								      6'd18 :
								      (_theResult____h558464[37] ?
									 6'd19 :
									 (_theResult____h558464[36] ?
									    6'd20 :
									    (_theResult____h558464[35] ?
									       6'd21 :
									       (_theResult____h558464[34] ?
										  6'd22 :
										  (_theResult____h558464[33] ?
										     6'd23 :
										     (_theResult____h558464[32] ?
											6'd24 :
											(_theResult____h558464[31] ?
											   6'd25 :
											   (_theResult____h558464[30] ?
											      6'd26 :
											      (_theResult____h558464[29] ?
												 6'd27 :
												 (_theResult____h558464[28] ?
												    6'd28 :
												    (_theResult____h558464[27] ?
												       6'd29 :
												       (_theResult____h558464[26] ?
													  6'd30 :
													  (_theResult____h558464[25] ?
													     6'd31 :
													     (_theResult____h558464[24] ?
														6'd32 :
														(_theResult____h558464[23] ?
														   6'd33 :
														   (_theResult____h558464[22] ?
														      6'd34 :
														      (_theResult____h558464[21] ?
															 6'd35 :
															 (_theResult____h558464[20] ?
															    6'd36 :
															    (_theResult____h558464[19] ?
															       6'd37 :
															       (_theResult____h558464[18] ?
																  6'd38 :
																  (_theResult____h558464[17] ?
																     6'd39 :
																     (_theResult____h558464[16] ?
																	6'd40 :
																	(_theResult____h558464[15] ?
																	   6'd41 :
																	   (_theResult____h558464[14] ?
																	      6'd42 :
																	      (_theResult____h558464[13] ?
																		 6'd43 :
																		 (_theResult____h558464[12] ?
																		    6'd44 :
																		    (_theResult____h558464[11] ?
																		       6'd45 :
																		       (_theResult____h558464[10] ?
																			  6'd46 :
																			  (_theResult____h558464[9] ?
																			     6'd47 :
																			     (_theResult____h558464[8] ?
																				6'd48 :
																				(_theResult____h558464[7] ?
																				   6'd49 :
																				   (_theResult____h558464[6] ?
																				      6'd50 :
																				      (_theResult____h558464[5] ?
																					 6'd51 :
																					 (_theResult____h558464[4] ?
																					    6'd52 :
																					    (_theResult____h558464[3] ?
																					       6'd53 :
																					       (_theResult____h558464[2] ?
																						  6'd54 :
																						  (_theResult____h558464[1] ?
																						     6'd55 :
																						     (_theResult____h558464[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9915 =
	     (_theResult____h645047[56] ?
		6'd0 :
		(_theResult____h645047[55] ?
		   6'd1 :
		   (_theResult____h645047[54] ?
		      6'd2 :
		      (_theResult____h645047[53] ?
			 6'd3 :
			 (_theResult____h645047[52] ?
			    6'd4 :
			    (_theResult____h645047[51] ?
			       6'd5 :
			       (_theResult____h645047[50] ?
				  6'd6 :
				  (_theResult____h645047[49] ?
				     6'd7 :
				     (_theResult____h645047[48] ?
					6'd8 :
					(_theResult____h645047[47] ?
					   6'd9 :
					   (_theResult____h645047[46] ?
					      6'd10 :
					      (_theResult____h645047[45] ?
						 6'd11 :
						 (_theResult____h645047[44] ?
						    6'd12 :
						    (_theResult____h645047[43] ?
						       6'd13 :
						       (_theResult____h645047[42] ?
							  6'd14 :
							  (_theResult____h645047[41] ?
							     6'd15 :
							     (_theResult____h645047[40] ?
								6'd16 :
								(_theResult____h645047[39] ?
								   6'd17 :
								   (_theResult____h645047[38] ?
								      6'd18 :
								      (_theResult____h645047[37] ?
									 6'd19 :
									 (_theResult____h645047[36] ?
									    6'd20 :
									    (_theResult____h645047[35] ?
									       6'd21 :
									       (_theResult____h645047[34] ?
										  6'd22 :
										  (_theResult____h645047[33] ?
										     6'd23 :
										     (_theResult____h645047[32] ?
											6'd24 :
											(_theResult____h645047[31] ?
											   6'd25 :
											   (_theResult____h645047[30] ?
											      6'd26 :
											      (_theResult____h645047[29] ?
												 6'd27 :
												 (_theResult____h645047[28] ?
												    6'd28 :
												    (_theResult____h645047[27] ?
												       6'd29 :
												       (_theResult____h645047[26] ?
													  6'd30 :
													  (_theResult____h645047[25] ?
													     6'd31 :
													     (_theResult____h645047[24] ?
														6'd32 :
														(_theResult____h645047[23] ?
														   6'd33 :
														   (_theResult____h645047[22] ?
														      6'd34 :
														      (_theResult____h645047[21] ?
															 6'd35 :
															 (_theResult____h645047[20] ?
															    6'd36 :
															    (_theResult____h645047[19] ?
															       6'd37 :
															       (_theResult____h645047[18] ?
																  6'd38 :
																  (_theResult____h645047[17] ?
																     6'd39 :
																     (_theResult____h645047[16] ?
																	6'd40 :
																	(_theResult____h645047[15] ?
																	   6'd41 :
																	   (_theResult____h645047[14] ?
																	      6'd42 :
																	      (_theResult____h645047[13] ?
																		 6'd43 :
																		 (_theResult____h645047[12] ?
																		    6'd44 :
																		    (_theResult____h645047[11] ?
																		       6'd45 :
																		       (_theResult____h645047[10] ?
																			  6'd46 :
																			  (_theResult____h645047[9] ?
																			     6'd47 :
																			     (_theResult____h645047[8] ?
																				6'd48 :
																				(_theResult____h645047[7] ?
																				   6'd49 :
																				   (_theResult____h645047[6] ?
																				      6'd50 :
																				      (_theResult____h645047[5] ?
																					 6'd51 :
																					 (_theResult____h645047[4] ?
																					    6'd52 :
																					    (_theResult____h645047[3] ?
																					       6'd53 :
																					       (_theResult____h645047[2] ?
																						  6'd54 :
																						  (_theResult____h645047[1] ?
																						     6'd55 :
																						     (_theResult____h645047[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d5155 =
	     (_theResult____h400946[56] ?
		6'd0 :
		(_theResult____h400946[55] ?
		   6'd1 :
		   (_theResult____h400946[54] ?
		      6'd2 :
		      (_theResult____h400946[53] ?
			 6'd3 :
			 (_theResult____h400946[52] ?
			    6'd4 :
			    (_theResult____h400946[51] ?
			       6'd5 :
			       (_theResult____h400946[50] ?
				  6'd6 :
				  (_theResult____h400946[49] ?
				     6'd7 :
				     (_theResult____h400946[48] ?
					6'd8 :
					(_theResult____h400946[47] ?
					   6'd9 :
					   (_theResult____h400946[46] ?
					      6'd10 :
					      (_theResult____h400946[45] ?
						 6'd11 :
						 (_theResult____h400946[44] ?
						    6'd12 :
						    (_theResult____h400946[43] ?
						       6'd13 :
						       (_theResult____h400946[42] ?
							  6'd14 :
							  (_theResult____h400946[41] ?
							     6'd15 :
							     (_theResult____h400946[40] ?
								6'd16 :
								(_theResult____h400946[39] ?
								   6'd17 :
								   (_theResult____h400946[38] ?
								      6'd18 :
								      (_theResult____h400946[37] ?
									 6'd19 :
									 (_theResult____h400946[36] ?
									    6'd20 :
									    (_theResult____h400946[35] ?
									       6'd21 :
									       (_theResult____h400946[34] ?
										  6'd22 :
										  (_theResult____h400946[33] ?
										     6'd23 :
										     (_theResult____h400946[32] ?
											6'd24 :
											(_theResult____h400946[31] ?
											   6'd25 :
											   (_theResult____h400946[30] ?
											      6'd26 :
											      (_theResult____h400946[29] ?
												 6'd27 :
												 (_theResult____h400946[28] ?
												    6'd28 :
												    (_theResult____h400946[27] ?
												       6'd29 :
												       (_theResult____h400946[26] ?
													  6'd30 :
													  (_theResult____h400946[25] ?
													     6'd31 :
													     (_theResult____h400946[24] ?
														6'd32 :
														(_theResult____h400946[23] ?
														   6'd33 :
														   (_theResult____h400946[22] ?
														      6'd34 :
														      (_theResult____h400946[21] ?
															 6'd35 :
															 (_theResult____h400946[20] ?
															    6'd36 :
															    (_theResult____h400946[19] ?
															       6'd37 :
															       (_theResult____h400946[18] ?
																  6'd38 :
																  (_theResult____h400946[17] ?
																     6'd39 :
																     (_theResult____h400946[16] ?
																	6'd40 :
																	(_theResult____h400946[15] ?
																	   6'd41 :
																	   (_theResult____h400946[14] ?
																	      6'd42 :
																	      (_theResult____h400946[13] ?
																		 6'd43 :
																		 (_theResult____h400946[12] ?
																		    6'd44 :
																		    (_theResult____h400946[11] ?
																		       6'd45 :
																		       (_theResult____h400946[10] ?
																			  6'd46 :
																			  (_theResult____h400946[9] ?
																			     6'd47 :
																			     (_theResult____h400946[8] ?
																				6'd48 :
																				(_theResult____h400946[7] ?
																				   6'd49 :
																				   (_theResult____h400946[6] ?
																				      6'd50 :
																				      (_theResult____h400946[5] ?
																					 6'd51 :
																					 (_theResult____h400946[4] ?
																					    6'd52 :
																					    (_theResult____h400946[3] ?
																					       6'd53 :
																					       (_theResult____h400946[2] ?
																						  6'd54 :
																						  (_theResult____h400946[1] ?
																						     6'd55 :
																						     (_theResult____h400946[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d6547 =
	     (_theResult____h452659[56] ?
		6'd0 :
		(_theResult____h452659[55] ?
		   6'd1 :
		   (_theResult____h452659[54] ?
		      6'd2 :
		      (_theResult____h452659[53] ?
			 6'd3 :
			 (_theResult____h452659[52] ?
			    6'd4 :
			    (_theResult____h452659[51] ?
			       6'd5 :
			       (_theResult____h452659[50] ?
				  6'd6 :
				  (_theResult____h452659[49] ?
				     6'd7 :
				     (_theResult____h452659[48] ?
					6'd8 :
					(_theResult____h452659[47] ?
					   6'd9 :
					   (_theResult____h452659[46] ?
					      6'd10 :
					      (_theResult____h452659[45] ?
						 6'd11 :
						 (_theResult____h452659[44] ?
						    6'd12 :
						    (_theResult____h452659[43] ?
						       6'd13 :
						       (_theResult____h452659[42] ?
							  6'd14 :
							  (_theResult____h452659[41] ?
							     6'd15 :
							     (_theResult____h452659[40] ?
								6'd16 :
								(_theResult____h452659[39] ?
								   6'd17 :
								   (_theResult____h452659[38] ?
								      6'd18 :
								      (_theResult____h452659[37] ?
									 6'd19 :
									 (_theResult____h452659[36] ?
									    6'd20 :
									    (_theResult____h452659[35] ?
									       6'd21 :
									       (_theResult____h452659[34] ?
										  6'd22 :
										  (_theResult____h452659[33] ?
										     6'd23 :
										     (_theResult____h452659[32] ?
											6'd24 :
											(_theResult____h452659[31] ?
											   6'd25 :
											   (_theResult____h452659[30] ?
											      6'd26 :
											      (_theResult____h452659[29] ?
												 6'd27 :
												 (_theResult____h452659[28] ?
												    6'd28 :
												    (_theResult____h452659[27] ?
												       6'd29 :
												       (_theResult____h452659[26] ?
													  6'd30 :
													  (_theResult____h452659[25] ?
													     6'd31 :
													     (_theResult____h452659[24] ?
														6'd32 :
														(_theResult____h452659[23] ?
														   6'd33 :
														   (_theResult____h452659[22] ?
														      6'd34 :
														      (_theResult____h452659[21] ?
															 6'd35 :
															 (_theResult____h452659[20] ?
															    6'd36 :
															    (_theResult____h452659[19] ?
															       6'd37 :
															       (_theResult____h452659[18] ?
																  6'd38 :
																  (_theResult____h452659[17] ?
																     6'd39 :
																     (_theResult____h452659[16] ?
																	6'd40 :
																	(_theResult____h452659[15] ?
																	   6'd41 :
																	   (_theResult____h452659[14] ?
																	      6'd42 :
																	      (_theResult____h452659[13] ?
																		 6'd43 :
																		 (_theResult____h452659[12] ?
																		    6'd44 :
																		    (_theResult____h452659[11] ?
																		       6'd45 :
																		       (_theResult____h452659[10] ?
																			  6'd46 :
																			  (_theResult____h452659[9] ?
																			     6'd47 :
																			     (_theResult____h452659[8] ?
																				6'd48 :
																				(_theResult____h452659[7] ?
																				   6'd49 :
																				   (_theResult____h452659[6] ?
																				      6'd50 :
																				      (_theResult____h452659[5] ?
																					 6'd51 :
																					 (_theResult____h452659[4] ?
																					    6'd52 :
																					    (_theResult____h452659[3] ?
																					       6'd53 :
																					       (_theResult____h452659[2] ?
																						  6'd54 :
																						  (_theResult____h452659[1] ?
																						     6'd55 :
																						     (_theResult____h452659[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d7939 =
	     (_theResult____h504370[56] ?
		6'd0 :
		(_theResult____h504370[55] ?
		   6'd1 :
		   (_theResult____h504370[54] ?
		      6'd2 :
		      (_theResult____h504370[53] ?
			 6'd3 :
			 (_theResult____h504370[52] ?
			    6'd4 :
			    (_theResult____h504370[51] ?
			       6'd5 :
			       (_theResult____h504370[50] ?
				  6'd6 :
				  (_theResult____h504370[49] ?
				     6'd7 :
				     (_theResult____h504370[48] ?
					6'd8 :
					(_theResult____h504370[47] ?
					   6'd9 :
					   (_theResult____h504370[46] ?
					      6'd10 :
					      (_theResult____h504370[45] ?
						 6'd11 :
						 (_theResult____h504370[44] ?
						    6'd12 :
						    (_theResult____h504370[43] ?
						       6'd13 :
						       (_theResult____h504370[42] ?
							  6'd14 :
							  (_theResult____h504370[41] ?
							     6'd15 :
							     (_theResult____h504370[40] ?
								6'd16 :
								(_theResult____h504370[39] ?
								   6'd17 :
								   (_theResult____h504370[38] ?
								      6'd18 :
								      (_theResult____h504370[37] ?
									 6'd19 :
									 (_theResult____h504370[36] ?
									    6'd20 :
									    (_theResult____h504370[35] ?
									       6'd21 :
									       (_theResult____h504370[34] ?
										  6'd22 :
										  (_theResult____h504370[33] ?
										     6'd23 :
										     (_theResult____h504370[32] ?
											6'd24 :
											(_theResult____h504370[31] ?
											   6'd25 :
											   (_theResult____h504370[30] ?
											      6'd26 :
											      (_theResult____h504370[29] ?
												 6'd27 :
												 (_theResult____h504370[28] ?
												    6'd28 :
												    (_theResult____h504370[27] ?
												       6'd29 :
												       (_theResult____h504370[26] ?
													  6'd30 :
													  (_theResult____h504370[25] ?
													     6'd31 :
													     (_theResult____h504370[24] ?
														6'd32 :
														(_theResult____h504370[23] ?
														   6'd33 :
														   (_theResult____h504370[22] ?
														      6'd34 :
														      (_theResult____h504370[21] ?
															 6'd35 :
															 (_theResult____h504370[20] ?
															    6'd36 :
															    (_theResult____h504370[19] ?
															       6'd37 :
															       (_theResult____h504370[18] ?
																  6'd38 :
																  (_theResult____h504370[17] ?
																     6'd39 :
																     (_theResult____h504370[16] ?
																	6'd40 :
																	(_theResult____h504370[15] ?
																	   6'd41 :
																	   (_theResult____h504370[14] ?
																	      6'd42 :
																	      (_theResult____h504370[13] ?
																		 6'd43 :
																		 (_theResult____h504370[12] ?
																		    6'd44 :
																		    (_theResult____h504370[11] ?
																		       6'd45 :
																		       (_theResult____h504370[10] ?
																			  6'd46 :
																			  (_theResult____h504370[9] ?
																			     6'd47 :
																			     (_theResult____h504370[8] ?
																				6'd48 :
																				(_theResult____h504370[7] ?
																				   6'd49 :
																				   (_theResult____h504370[6] ?
																				      6'd50 :
																				      (_theResult____h504370[5] ?
																					 6'd51 :
																					 (_theResult____h504370[4] ?
																					    6'd52 :
																					    (_theResult____h504370[3] ?
																					       6'd53 :
																					       (_theResult____h504370[2] ?
																						  6'd54 :
																						  (_theResult____h504370[1] ?
																						     6'd55 :
																						     (_theResult____h504370[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10227 =
	     (_theResult___fst_exp__h654538 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard45057_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q156 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q157) ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10728 =
	     (_theResult___fst_exp__h611036 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard01555_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q185 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q186) ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10995 =
	     (_theResult___fst_exp__h611036 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard01555_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q187 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q188) ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9244 =
	     (_theResult___fst_exp__h567955 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard58474_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q135 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q136) ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9959 =
	     (_theResult___fst_exp__h654538 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard45057_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q152 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q153) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4667 =
	     (guard__h380829 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___fst_exp__h390185 :
	       _theResult___exp__h390701 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4670 =
	     (guard__h380829 == 2'b0) ?
	       _theResult___fst_exp__h390185 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___exp__h390701 :
		  _theResult___fst_exp__h390185) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5314 =
	     (guard__h380829 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       sfdin__h390179[56:34] :
	       _theResult___sfd__h390702 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5316 =
	     (guard__h380829 == 2'b0) ?
	       sfdin__h390179[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___sfd__h390702 :
		  sfdin__h390179[56:34]) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6059 =
	     (guard__h432544 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___fst_exp__h441898 :
	       _theResult___exp__h442414 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6062 =
	     (guard__h432544 == 2'b0) ?
	       _theResult___fst_exp__h441898 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___exp__h442414 :
		  _theResult___fst_exp__h441898) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6706 =
	     (guard__h432544 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       sfdin__h441892[56:34] :
	       _theResult___sfd__h442415 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6708 =
	     (guard__h432544 == 2'b0) ?
	       sfdin__h441892[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___sfd__h442415 :
		  sfdin__h441892[56:34]) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7451 =
	     (guard__h484255 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___fst_exp__h493609 :
	       _theResult___exp__h494125 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7454 =
	     (guard__h484255 == 2'b0) ?
	       _theResult___fst_exp__h493609 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___exp__h494125 :
		  _theResult___fst_exp__h493609) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d8098 =
	     (guard__h484255 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       sfdin__h493603[56:34] :
	       _theResult___sfd__h494126 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d8100 =
	     (guard__h484255 == 2'b0) ?
	       sfdin__h493603[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___sfd__h494126 :
		  sfdin__h493603[56:34]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10071 =
	     (guard__h645057 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
	       _theResult___fst_exp__h654538 :
	       _theResult___exp__h655267 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10073 =
	     (guard__h645057 == 2'b0) ?
	       _theResult___fst_exp__h654538 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		  _theResult___exp__h655267 :
		  _theResult___fst_exp__h654538) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10154 =
	     (guard__h645057 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
	       sfdin__h654532[56:5] :
	       _theResult___sfd__h655268 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10156 =
	     (guard__h645057 == 2'b0) ?
	       sfdin__h654532[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		  _theResult___sfd__h655268 :
		  sfdin__h654532[56:5]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10840 =
	     (guard__h601555 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
	       _theResult___fst_exp__h611036 :
	       _theResult___exp__h611765 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10842 =
	     (guard__h601555 == 2'b0) ?
	       _theResult___fst_exp__h611036 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		  _theResult___exp__h611765 :
		  _theResult___fst_exp__h611036) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10923 =
	     (guard__h601555 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
	       sfdin__h611030[56:5] :
	       _theResult___sfd__h611766 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10925 =
	     (guard__h601555 == 2'b0) ?
	       sfdin__h611030[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		  _theResult___sfd__h611766 :
		  sfdin__h611030[56:5]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9361 =
	     (guard__h558474 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
	       _theResult___fst_exp__h567955 :
	       _theResult___exp__h568684 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9363 =
	     (guard__h558474 == 2'b0) ?
	       _theResult___fst_exp__h567955 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		  _theResult___exp__h568684 :
		  _theResult___fst_exp__h567955) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9445 =
	     (guard__h558474 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
	       sfdin__h567949[56:5] :
	       _theResult___sfd__h568685 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9447 =
	     (guard__h558474 == 2'b0) ?
	       sfdin__h567949[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		  _theResult___sfd__h568685 :
		  sfdin__h567949[56:5]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5214 =
	     (guard__h400956 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___fst_exp__h410439 :
	       _theResult___exp__h410955 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5216 =
	     (guard__h400956 == 2'b0) ?
	       _theResult___fst_exp__h410439 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___exp__h410955 :
		  _theResult___fst_exp__h410439) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5360 =
	     (guard__h400956 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       sfdin__h410433[56:34] :
	       _theResult___sfd__h410956 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5362 =
	     (guard__h400956 == 2'b0) ?
	       sfdin__h410433[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___sfd__h410956 :
		  sfdin__h410433[56:34]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6606 =
	     (guard__h452669 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___fst_exp__h462152 :
	       _theResult___exp__h462668 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6608 =
	     (guard__h452669 == 2'b0) ?
	       _theResult___fst_exp__h462152 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___exp__h462668 :
		  _theResult___fst_exp__h462152) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6752 =
	     (guard__h452669 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       sfdin__h462146[56:34] :
	       _theResult___sfd__h462669 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6754 =
	     (guard__h452669 == 2'b0) ?
	       sfdin__h462146[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___sfd__h462669 :
		  sfdin__h462146[56:34]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7998 =
	     (guard__h504380 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___fst_exp__h513863 :
	       _theResult___exp__h514379 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d8000 =
	     (guard__h504380 == 2'b0) ?
	       _theResult___fst_exp__h513863 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___exp__h514379 :
		  _theResult___fst_exp__h513863) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d8144 =
	     (guard__h504380 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       sfdin__h513857[56:34] :
	       _theResult___sfd__h514380 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d8146 =
	     (guard__h504380 == 2'b0) ?
	       sfdin__h513857[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___sfd__h514380 :
		  sfdin__h513857[56:34]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10033 =
	     (guard__h634512 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
	       _theResult___fst_exp__h643706 :
	       _theResult___exp__h644361 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10035 =
	     (guard__h634512 == 2'b0) ?
	       _theResult___fst_exp__h643706 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		  _theResult___exp__h644361 :
		  _theResult___fst_exp__h643706) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10102 =
	     (guard__h655381 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
	       _theResult___fst_exp__h664604 :
	       _theResult___exp__h665284 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10104 =
	     (guard__h655381 == 2'b0) ?
	       _theResult___fst_exp__h664604 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		  _theResult___exp__h665284 :
		  _theResult___fst_exp__h664604) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10128 =
	     (guard__h634512 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
	       _theResult___snd__h643657[56:5] :
	       _theResult___sfd__h644362 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10130 =
	     (guard__h634512 == 2'b0) ?
	       _theResult___snd__h643657[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		  _theResult___sfd__h644362 :
		  _theResult___snd__h643657[56:5]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10173 =
	     (guard__h655381 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
	       _theResult___snd__h664550[56:5] :
	       _theResult___sfd__h665285 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10175 =
	     (guard__h655381 == 2'b0) ?
	       _theResult___snd__h664550[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		  _theResult___sfd__h665285 :
		  _theResult___snd__h664550[56:5]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10802 =
	     (guard__h591010 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
	       _theResult___fst_exp__h600204 :
	       _theResult___exp__h600859 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10804 =
	     (guard__h591010 == 2'b0) ?
	       _theResult___fst_exp__h600204 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		  _theResult___exp__h600859 :
		  _theResult___fst_exp__h600204) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10871 =
	     (guard__h611879 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
	       _theResult___fst_exp__h621102 :
	       _theResult___exp__h621782 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10873 =
	     (guard__h611879 == 2'b0) ?
	       _theResult___fst_exp__h621102 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		  _theResult___exp__h621782 :
		  _theResult___fst_exp__h621102) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10897 =
	     (guard__h591010 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
	       _theResult___snd__h600155[56:5] :
	       _theResult___sfd__h600860 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10899 =
	     (guard__h591010 == 2'b0) ?
	       _theResult___snd__h600155[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		  _theResult___sfd__h600860 :
		  _theResult___snd__h600155[56:5]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10942 =
	     (guard__h611879 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
	       _theResult___snd__h621048[56:5] :
	       _theResult___sfd__h621783 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10944 =
	     (guard__h611879 == 2'b0) ?
	       _theResult___snd__h621048[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		  _theResult___sfd__h621783 :
		  _theResult___snd__h621048[56:5]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9318 =
	     (guard__h547929 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
	       _theResult___fst_exp__h557123 :
	       _theResult___exp__h557778 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9320 =
	     (guard__h547929 == 2'b0) ?
	       _theResult___fst_exp__h557123 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		  _theResult___exp__h557778 :
		  _theResult___fst_exp__h557123) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9392 =
	     (guard__h568798 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
	       _theResult___fst_exp__h578021 :
	       _theResult___exp__h578701 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9394 =
	     (guard__h568798 == 2'b0) ?
	       _theResult___fst_exp__h578021 :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		  _theResult___exp__h578701 :
		  _theResult___fst_exp__h578021) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9418 =
	     (guard__h547929 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
	       _theResult___snd__h557074[56:5] :
	       _theResult___sfd__h557779 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9420 =
	     (guard__h547929 == 2'b0) ?
	       _theResult___snd__h557074[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		  _theResult___sfd__h557779 :
		  _theResult___snd__h557074[56:5]) ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9464 =
	     (guard__h568798 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
	       _theResult___snd__h577967[56:5] :
	       _theResult___sfd__h578702 ;
  assign IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9466 =
	     (guard__h568798 == 2'b0) ?
	       _theResult___snd__h577967[56:5] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		 32'hFFFFFFFF &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		  _theResult___sfd__h578702 :
		  _theResult___snd__h577967[56:5]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4889 =
	     (guard__h390793 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___fst_exp__h400074 :
	       _theResult___exp__h400516 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4891 =
	     (guard__h390793 == 2'b0) ?
	       _theResult___fst_exp__h400074 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___exp__h400516 :
		  _theResult___fst_exp__h400074) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5283 =
	     (guard__h411047 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___fst_exp__h420357 :
	       _theResult___exp__h420824 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5285 =
	     (guard__h411047 == 2'b0) ?
	       _theResult___fst_exp__h420357 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___exp__h420824 :
		  _theResult___fst_exp__h420357) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5333 =
	     (guard__h390793 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___snd__h400025[56:34] :
	       _theResult___sfd__h400517 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5335 =
	     (guard__h390793 == 2'b0) ?
	       _theResult___snd__h400025[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___sfd__h400517 :
		  _theResult___snd__h400025[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5379 =
	     (guard__h411047 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68]) ?
	       _theResult___snd__h420303[56:34] :
	       _theResult___sfd__h420825 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5381 =
	     (guard__h411047 == 2'b0) ?
	       _theResult___snd__h420303[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		  _theResult___sfd__h420825 :
		  _theResult___snd__h420303[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6281 =
	     (guard__h442506 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___fst_exp__h451787 :
	       _theResult___exp__h452229 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6283 =
	     (guard__h442506 == 2'b0) ?
	       _theResult___fst_exp__h451787 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___exp__h452229 :
		  _theResult___fst_exp__h451787) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6675 =
	     (guard__h462760 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___fst_exp__h472070 :
	       _theResult___exp__h472537 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6677 =
	     (guard__h462760 == 2'b0) ?
	       _theResult___fst_exp__h472070 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___exp__h472537 :
		  _theResult___fst_exp__h472070) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6725 =
	     (guard__h442506 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___snd__h451738[56:34] :
	       _theResult___sfd__h452230 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6727 =
	     (guard__h442506 == 2'b0) ?
	       _theResult___snd__h451738[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___sfd__h452230 :
		  _theResult___snd__h451738[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6771 =
	     (guard__h462760 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68]) ?
	       _theResult___snd__h472016[56:34] :
	       _theResult___sfd__h472538 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6773 =
	     (guard__h462760 == 2'b0) ?
	       _theResult___snd__h472016[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		  _theResult___sfd__h472538 :
		  _theResult___snd__h472016[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7673 =
	     (guard__h494217 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___fst_exp__h503498 :
	       _theResult___exp__h503940 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7675 =
	     (guard__h494217 == 2'b0) ?
	       _theResult___fst_exp__h503498 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___exp__h503940 :
		  _theResult___fst_exp__h503498) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8067 =
	     (guard__h514471 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___fst_exp__h523781 :
	       _theResult___exp__h524248 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8069 =
	     (guard__h514471 == 2'b0) ?
	       _theResult___fst_exp__h523781 :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___exp__h524248 :
		  _theResult___fst_exp__h523781) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8117 =
	     (guard__h494217 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___snd__h503449[56:34] :
	       _theResult___sfd__h503941 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8119 =
	     (guard__h494217 == 2'b0) ?
	       _theResult___snd__h503449[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___sfd__h503941 :
		  _theResult___snd__h503449[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8163 =
	     (guard__h514471 == 2'b0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68]) ?
	       _theResult___snd__h523727[56:34] :
	       _theResult___sfd__h524249 ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8165 =
	     (guard__h514471 == 2'b0) ?
	       _theResult___snd__h523727[56:34] :
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		  _theResult___sfd__h524249 :
		  _theResult___snd__h523727[56:34]) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10005 =
	     (_theResult___fst_exp__h664604 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard55381_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q154 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q155) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10212 =
	     (_theResult___fst_exp__h643706 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard34512_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q160 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q161) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10239 =
	     (_theResult___fst_exp__h664604 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard55381_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q158 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q159) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10774 =
	     (_theResult___fst_exp__h621102 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard11879_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q183 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q184) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10980 =
	     (_theResult___fst_exp__h600204 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard91010_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q191 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q192) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d11007 =
	     (_theResult___fst_exp__h621102 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard11879_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q189 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q190) ;
  assign IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9290 =
	     (_theResult___fst_exp__h578021 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard68798_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q137 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q138) ;
  assign IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502 =
	     (_theResult____h715239 == 12'd0 &&
	      (csrf_prv_reg == 2'd0 ||
	       csrf_prv_reg == 2'd1 && csrf_ie_vec_1)) ?
	       enabled_ints__h715698 :
	       _theResult____h715239 ;
  assign IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12603 =
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[8] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[9] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[10] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[11] ||
	     checkForException___d12547[4] ||
	     csrf_fs_reg_read__1649_EQ_0_2536_AND_fetchStag_ETC___d12596 ||
	     fetchStage$pipelines_0_first[231:200] == 32'h10500073 &&
	     csrf_tw_reg &&
	     csrf_prv_reg != 2'd3 ;
  assign IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d13003 =
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[8] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[9] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[10] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[11] ||
	     checkForException___d12547[4] ||
	     csrf_fs_reg_read__1649_EQ_0_2536_AND_fetchStag_ETC___d12884 ;
  assign IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d13039 =
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[8] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[9] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[10] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[11] ||
	     checkForException___d12943[4] ||
	     csrf_fs_reg_read__1649_EQ_0_2536_AND_fetchStag_ETC___d13037 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10009 =
	     (f3_exp__h622719 == 8'd255 && f3_sfd__h622720 != 23'd0 ||
	      (f3_exp__h622719 == 8'd255 || f3_exp__h622719 == 8'd0) &&
	      f3_sfd__h622720 == 23'd0) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
	       ((f3_exp__h622719 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d9664 :
		  IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10007) ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10186 =
	     (f3_exp__h622719 == 8'd255 && f3_sfd__h622720 != 23'd0) ?
	       _theResult___snd_fst_sfd__h623035 :
	       _theResult___fst_sfd__h665403 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10187 =
	     { (f3_exp__h622719 == 8'd255) ?
		 11'd2047 :
		 _theResult___fst_exp__h665399,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10186 } ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10214 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	     !coreFix_fpuMulDivExe_0_regToExeQ$first[43] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10242 =
	     (f3_exp__h622719 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9545 ?
		  (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9547 ?
		     coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		     32'hFFFFFFFF ||
		     !coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
		     IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10212) :
		  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10214) :
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10241 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10243 =
	     (f3_exp__h622719 == 8'd255 && f3_sfd__h622720 != 23'd0 ||
	      (f3_exp__h622719 == 8'd255 || f3_exp__h622719 == 8'd0) &&
	      f3_sfd__h622720 == 23'd0) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10242 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10387 =
	     ((f2_exp__h579217 == 8'd0) ?
		(f2_sfd__h579218[22] ?
		   6'd2 :
		   (f2_sfd__h579218[21] ?
		      6'd3 :
		      (f2_sfd__h579218[20] ?
			 6'd4 :
			 (f2_sfd__h579218[19] ?
			    6'd5 :
			    (f2_sfd__h579218[18] ?
			       6'd6 :
			       (f2_sfd__h579218[17] ?
				  6'd7 :
				  (f2_sfd__h579218[16] ?
				     6'd8 :
				     (f2_sfd__h579218[15] ?
					6'd9 :
					(f2_sfd__h579218[14] ?
					   6'd10 :
					   (f2_sfd__h579218[13] ?
					      6'd11 :
					      (f2_sfd__h579218[12] ?
						 6'd12 :
						 (f2_sfd__h579218[11] ?
						    6'd13 :
						    (f2_sfd__h579218[10] ?
						       6'd14 :
						       (f2_sfd__h579218[9] ?
							  6'd15 :
							  (f2_sfd__h579218[8] ?
							     6'd16 :
							     (f2_sfd__h579218[7] ?
								6'd17 :
								(f2_sfd__h579218[6] ?
								   6'd18 :
								   (f2_sfd__h579218[5] ?
								      6'd19 :
								      (f2_sfd__h579218[4] ?
									 6'd20 :
									 (f2_sfd__h579218[3] ?
									    6'd21 :
									    (f2_sfd__h579218[2] ?
									       6'd22 :
									       (f2_sfd__h579218[1] ?
										  6'd23 :
										  (f2_sfd__h579218[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10778 =
	     (f2_exp__h579217 == 8'd255 && f2_sfd__h579218 != 23'd0 ||
	      (f2_exp__h579217 == 8'd255 || f2_exp__h579217 == 8'd0) &&
	      f2_sfd__h579218 == 23'd0) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
	       ((f2_exp__h579217 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d10433 :
		  IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10776) ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10955 =
	     (f2_exp__h579217 == 8'd255 && f2_sfd__h579218 != 23'd0) ?
	       _theResult___snd_fst_sfd__h579533 :
	       _theResult___fst_sfd__h621901 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10956 =
	     { (f2_exp__h579217 == 8'd255) ?
		 11'd2047 :
		 _theResult___fst_exp__h621897,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10955 } ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10982 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	     32'hFFFFFFFF ||
	     !coreFix_fpuMulDivExe_0_regToExeQ$first[107] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11010 =
	     (f2_exp__h579217 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10314 ?
		  (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10316 ?
		     coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		     32'hFFFFFFFF ||
		     !coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
		     IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10980) :
		  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10982) :
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11009 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11011 =
	     (f2_exp__h579217 == 8'd255 && f2_sfd__h579218 != 23'd0 ||
	      (f2_exp__h579217 == 8'd255 || f2_exp__h579217 == 8'd0) &&
	      f2_sfd__h579218 == 23'd0) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	       32'hFFFFFFFF ||
	       !coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11010 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11066 =
	     (f1_exp__h536047 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8814 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8816 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11045[4] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8952 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8953 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11062[4] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11107 =
	     (f2_exp__h579217 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10314 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10316 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11086[4] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10436 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10437 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11103[4] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11151 =
	     (f3_exp__h622719 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9545 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9547 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11130[4] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9667 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9668 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11147[4] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11166 =
	     (f1_exp__h536047 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8814 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8816 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11045[3] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8952 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8953 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11062[3] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11176 =
	     (f2_exp__h579217 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10314 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10316 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11086[3] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10436 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10437 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11103[3] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11187 =
	     (f3_exp__h622719 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9545 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9547 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11130[3] :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9667 &&
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9668 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11147[3] ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11206 =
	     (f1_exp__h536047 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8814 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8816 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11045[2] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8952 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11204 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11220 =
	     (f2_exp__h579217 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10314 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10316 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11086[2] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10436 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11218 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11235 =
	     (f3_exp__h622719 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9545 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9547 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11130[2] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9667 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11233 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11252 =
	     (f1_exp__h536047 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8814 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8816 ||
		_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11045[1]) :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8952 &&
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11250 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11264 =
	     (f2_exp__h579217 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10314 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10316 ||
		_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11086[1]) :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10436 &&
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11262 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11277 =
	     (f3_exp__h622719 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9545 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9547 ||
		_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11130[1]) :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9667 &&
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11275 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11294 =
	     (f1_exp__h536047 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8814 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8816 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11045[0] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8952 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11292 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11306 =
	     (f2_exp__h579217 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10314 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10316 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11086[0] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10436 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11304 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11319 =
	     (f3_exp__h622719 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9545 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9547 &&
	       _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11130[0] :
	       !SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9667 ||
	       IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11317 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8887 =
	     ((f1_exp__h536047 == 8'd0) ?
		(f1_sfd__h536048[22] ?
		   6'd2 :
		   (f1_sfd__h536048[21] ?
		      6'd3 :
		      (f1_sfd__h536048[20] ?
			 6'd4 :
			 (f1_sfd__h536048[19] ?
			    6'd5 :
			    (f1_sfd__h536048[18] ?
			       6'd6 :
			       (f1_sfd__h536048[17] ?
				  6'd7 :
				  (f1_sfd__h536048[16] ?
				     6'd8 :
				     (f1_sfd__h536048[15] ?
					6'd9 :
					(f1_sfd__h536048[14] ?
					   6'd10 :
					   (f1_sfd__h536048[13] ?
					      6'd11 :
					      (f1_sfd__h536048[12] ?
						 6'd12 :
						 (f1_sfd__h536048[11] ?
						    6'd13 :
						    (f1_sfd__h536048[10] ?
						       6'd14 :
						       (f1_sfd__h536048[9] ?
							  6'd15 :
							  (f1_sfd__h536048[8] ?
							     6'd16 :
							     (f1_sfd__h536048[7] ?
								6'd17 :
								(f1_sfd__h536048[6] ?
								   6'd18 :
								   (f1_sfd__h536048[5] ?
								      6'd19 :
								      (f1_sfd__h536048[4] ?
									 6'd20 :
									 (f1_sfd__h536048[3] ?
									    6'd21 :
									    (f1_sfd__h536048[2] ?
									       6'd22 :
									       (f1_sfd__h536048[1] ?
										  6'd23 :
										  (f1_sfd__h536048[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9294 =
	     (f1_exp__h536047 == 8'd255 && f1_sfd__h536048 != 23'd0 ||
	      (f1_exp__h536047 == 8'd255 || f1_exp__h536047 == 8'd0) &&
	      f1_sfd__h536048 == 23'd0) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171] :
	       ((f1_exp__h536047 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d8949 :
		  IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9292) ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9477 =
	     (f1_exp__h536047 == 8'd255 && f1_sfd__h536048 != 23'd0) ?
	       _theResult___snd_fst_sfd__h536363 :
	       _theResult___fst_sfd__h578820 ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9478 =
	     { IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9294,
	       (f1_exp__h536047 == 8'd255) ?
		 11'd2047 :
		 _theResult___fst_exp__h578816,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9477 } ;
  assign IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9618 =
	     ((f3_exp__h622719 == 8'd0) ?
		(f3_sfd__h622720[22] ?
		   6'd2 :
		   (f3_sfd__h622720[21] ?
		      6'd3 :
		      (f3_sfd__h622720[20] ?
			 6'd4 :
			 (f3_sfd__h622720[19] ?
			    6'd5 :
			    (f3_sfd__h622720[18] ?
			       6'd6 :
			       (f3_sfd__h622720[17] ?
				  6'd7 :
				  (f3_sfd__h622720[16] ?
				     6'd8 :
				     (f3_sfd__h622720[15] ?
					6'd9 :
					(f3_sfd__h622720[14] ?
					   6'd10 :
					   (f3_sfd__h622720[13] ?
					      6'd11 :
					      (f3_sfd__h622720[12] ?
						 6'd12 :
						 (f3_sfd__h622720[11] ?
						    6'd13 :
						    (f3_sfd__h622720[10] ?
						       6'd14 :
						       (f3_sfd__h622720[9] ?
							  6'd15 :
							  (f3_sfd__h622720[8] ?
							     6'd16 :
							     (f3_sfd__h622720[7] ?
								6'd17 :
								(f3_sfd__h622720[6] ?
								   6'd18 :
								   (f3_sfd__h622720[5] ?
								      6'd19 :
								      (f3_sfd__h622720[4] ?
									 6'd20 :
									 (f3_sfd__h622720[3] ?
									    6'd21 :
									    (f3_sfd__h622720[2] ?
									       6'd22 :
									       (f3_sfd__h622720[1] ?
										  6'd23 :
										  (f3_sfd__h622720[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_coreFix_memExe_dMem_cache_m_banks_0_latT_ETC___d2938 =
	     { (coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT ==
		3'd7) ?
		 10'd1 :
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2917,
	       (coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT ==
		3'd6) ?
		 10'd1 :
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2923,
	       (coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT ==
		3'd5) ?
		 10'd1 :
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2930,
	       (coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT ==
		3'd4) ?
		 10'd1 :
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2936 } ;
  assign IF_IF_coreFix_memExe_dMem_cache_m_banks_0_latT_ETC___d2951 =
	     { IF_IF_coreFix_memExe_dMem_cache_m_banks_0_latT_ETC___d2938,
	       (coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT ==
		3'd3) ?
		 10'd1 :
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2943,
	       (coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT ==
		3'd2) ?
		 10'd1 :
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2949 } ;
  assign IF_IF_coreFix_memExe_dMem_cache_m_banks_0_latT_ETC___d2964 =
	     { IF_IF_coreFix_memExe_dMem_cache_m_banks_0_latT_ETC___d2951,
	       (coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT ==
		3'd1) ?
		 10'd1 :
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2956,
	       (coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT ==
		3'd0) ?
		 10'd1 :
		 IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2962 } ;
  assign IF_IF_coreFix_memExe_dMem_cache_m_banks_0_pipe_ETC___d1972 =
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 ?
	       ((!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
		 !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) ?
		  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc :
		  4'd2) :
	       4'd2 ;
  assign IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3926 =
	     { (i__h365971 == 5'd23) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3905,
	       (i__h365971 == 5'd22) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3911,
	       (i__h365971 == 5'd21) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3918,
	       (i__h365971 == 5'd20) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3924 } ;
  assign IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3939 =
	     { IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3926,
	       (i__h365971 == 5'd19) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3931,
	       (i__h365971 == 5'd18) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3937 } ;
  assign IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3952 =
	     { IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3939,
	       (i__h365971 == 5'd17) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3944,
	       (i__h365971 == 5'd16) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3950 } ;
  assign IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3965 =
	     { IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3952,
	       (i__h365971 == 5'd15) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3957,
	       (i__h365971 == 5'd14) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3963 } ;
  assign IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3978 =
	     { IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3965,
	       (i__h365971 == 5'd13) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3970,
	       (i__h365971 == 5'd12) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3976 } ;
  assign IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3991 =
	     { IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3978,
	       (i__h365971 == 5'd11) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3983,
	       (i__h365971 == 5'd10) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3989 } ;
  assign IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d4004 =
	     { IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d3991,
	       (i__h365971 == 5'd9) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3996,
	       (i__h365971 == 5'd8) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4002 } ;
  assign IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d4017 =
	     { IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d4004,
	       (i__h365971 == 5'd7) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4009,
	       (i__h365971 == 5'd6) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4015 } ;
  assign IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d4030 =
	     { IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d4017,
	       (i__h365971 == 5'd5) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4022,
	       (i__h365971 == 5'd4) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4028 } ;
  assign IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d4043 =
	     { IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d4030,
	       (i__h365971 == 5'd3) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4035,
	       (i__h365971 == 5'd2) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4041 } ;
  assign IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d4056 =
	     { IF_IF_coreFix_memExe_ldMemLatTimer_startEn_wha_ETC___d4043,
	       (i__h365971 == 5'd1) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4048,
	       (i__h365971 == 5'd0) ?
		 10'd1 :
		 IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4054 } ;
  assign IF_IF_coreFix_memExe_stMemLatTimer_startEn_wha_ETC___d3808 =
	     { (coreFix_memExe_stb$issue[635:634] == 2'd3) ?
		 10'd1 :
		 IF_coreFix_memExe_stMemLatTimer_timer_783_BITS_ETC___d3787,
	       (coreFix_memExe_stb$issue[635:634] == 2'd2) ?
		 10'd1 :
		 IF_coreFix_memExe_stMemLatTimer_timer_783_BITS_ETC___d3793,
	       (coreFix_memExe_stb$issue[635:634] == 2'd1) ?
		 10'd1 :
		 IF_coreFix_memExe_stMemLatTimer_timer_783_BITS_ETC___d3800,
	       (coreFix_memExe_stb$issue[635:634] == 2'd0) ?
		 10'd1 :
		 IF_coreFix_memExe_stMemLatTimer_timer_783_BITS_ETC___d3806 } ;
  assign IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13383 =
	     { IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13366,
	       IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13369 ?
		 IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13374 :
		 DONTCARE_CONCAT_IF_IF_fetchStage_pipelines_0_f_ETC___d13380 } ;
  assign IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13424 =
	     { IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13366,
	       (fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		coreFix_memExe_rsMem$canEnq &&
		IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 &&
		IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13369) ?
		 IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13374 :
		 DONTCARE_CONCAT_IF_IF_fetchStage_pipelines_0_f_ETC___d13380 } ;
  assign IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13513 =
	     { IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13506,
	       IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13507 ?
		 IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13508 :
		 DONTCARE_CONCAT_IF_IF_fetchStage_pipelines_1_f_ETC___d13510 } ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d10433 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10314 ||
	      _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10316 ||
	      _theResult___fst_exp__h600204 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard91010_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q181 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q182) ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d8949 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8814 ||
	      _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8816 ||
	      _theResult___fst_exp__h557123 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard47929_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q133 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q134) ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMu_ETC___d9664 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9545 ||
	      _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9547 ||
	      _theResult___fst_exp__h643706 == 11'd2047) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
	       ((coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
		 coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
		  CASE_guard34512_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q150 :
		  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q151) ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12095 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__2059_BITS__ETC___d12063) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_aluExe_0_bypassWire_1_wget__2074_BITS__ETC___d12076 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12096 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_0_bypassWire_0_wget__2059_BITS__ETC___d12063) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_0_bypassWire_1_wget__2074_BITS__ETC___d12076)) ?
	       coreFix_aluExe_0_bypassWire_2$whas &&
	       coreFix_aluExe_0_bypassWire_2_wget__2082_BITS__ETC___d12084 :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12095 ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12097 =
	     NOT_coreFix_aluExe_0_bypassWire_0_whas__2058_2_ETC___d12087 ?
	       coreFix_aluExe_0_bypassWire_3$whas &&
	       coreFix_aluExe_0_bypassWire_3_wget__2089_BITS__ETC___d12091 :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12096 ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12125 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__2059_BITS__ETC___d12107) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_aluExe_0_bypassWire_1_wget__2074_BITS__ETC___d12113 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12126 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_0_bypassWire_0_wget__2059_BITS__ETC___d12107) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_0_bypassWire_1_wget__2074_BITS__ETC___d12113)) ?
	       coreFix_aluExe_0_bypassWire_2$whas &&
	       coreFix_aluExe_0_bypassWire_2_wget__2082_BITS__ETC___d12117 :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12125 ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12127 =
	     NOT_coreFix_aluExe_0_bypassWire_0_whas__2058_2_ETC___d12120 ?
	       coreFix_aluExe_0_bypassWire_3$whas &&
	       coreFix_aluExe_0_bypassWire_3_wget__2089_BITS__ETC___d12121 :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12126 ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12141 =
	     IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12097 &&
	     NOT_coreFix_aluExe_0_bypassWire_0_whas__2058_2_ETC___d12087 &&
	     (!coreFix_aluExe_0_bypassWire_3$whas ||
	      !coreFix_aluExe_0_bypassWire_3_wget__2089_BITS__ETC___d12091) ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12149 =
	     IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12127 &&
	     NOT_coreFix_aluExe_0_bypassWire_0_whas__2058_2_ETC___d12120 &&
	     (!coreFix_aluExe_0_bypassWire_3$whas ||
	      !coreFix_aluExe_0_bypassWire_3_wget__2089_BITS__ETC___d12121) ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12245 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__2059_BITS__ETC___d12063) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12246 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_0_bypassWire_0_wget__2059_BITS__ETC___d12063) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_0_bypassWire_1_wget__2074_BITS__ETC___d12076)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12245 ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12258 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__2059_BITS__ETC___d12107) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12259 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_0_bypassWire_0_wget__2059_BITS__ETC___d12107) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_0_bypassWire_1_wget__2074_BITS__ETC___d12113)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12258 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11567 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1531_BITS__ETC___d11535) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_aluExe_1_bypassWire_1_wget__1546_BITS__ETC___d11548 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11568 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_1_bypassWire_0_wget__1531_BITS__ETC___d11535) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_1_bypassWire_1_wget__1546_BITS__ETC___d11548)) ?
	       coreFix_aluExe_1_bypassWire_2$whas &&
	       coreFix_aluExe_1_bypassWire_2_wget__1554_BITS__ETC___d11556 :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11567 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11569 =
	     NOT_coreFix_aluExe_1_bypassWire_0_whas__1530_1_ETC___d11559 ?
	       coreFix_aluExe_1_bypassWire_3$whas &&
	       coreFix_aluExe_1_bypassWire_3_wget__1561_BITS__ETC___d11563 :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11568 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11597 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1531_BITS__ETC___d11579) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_aluExe_1_bypassWire_1_wget__1546_BITS__ETC___d11585 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11598 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_1_bypassWire_0_wget__1531_BITS__ETC___d11579) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_1_bypassWire_1_wget__1546_BITS__ETC___d11585)) ?
	       coreFix_aluExe_1_bypassWire_2$whas &&
	       coreFix_aluExe_1_bypassWire_2_wget__1554_BITS__ETC___d11589 :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11597 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11599 =
	     NOT_coreFix_aluExe_1_bypassWire_0_whas__1530_1_ETC___d11592 ?
	       coreFix_aluExe_1_bypassWire_3$whas &&
	       coreFix_aluExe_1_bypassWire_3_wget__1561_BITS__ETC___d11593 :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11598 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11613 =
	     IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11569 &&
	     NOT_coreFix_aluExe_1_bypassWire_0_whas__1530_1_ETC___d11559 &&
	     (!coreFix_aluExe_1_bypassWire_3$whas ||
	      !coreFix_aluExe_1_bypassWire_3_wget__1561_BITS__ETC___d11563) ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11621 =
	     IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11599 &&
	     NOT_coreFix_aluExe_1_bypassWire_0_whas__1530_1_ETC___d11592 &&
	     (!coreFix_aluExe_1_bypassWire_3$whas ||
	      !coreFix_aluExe_1_bypassWire_3_wget__1561_BITS__ETC___d11593) ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11899 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1531_BITS__ETC___d11535) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11900 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_1_bypassWire_0_wget__1531_BITS__ETC___d11535) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_1_bypassWire_1_wget__1546_BITS__ETC___d11548)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11899 ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11912 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1531_BITS__ETC___d11579) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11913 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_aluExe_1_bypassWire_0_wget__1531_BITS__ETC___d11579) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_aluExe_1_bypassWire_1_wget__1546_BITS__ETC___d11585)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11912 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8537 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8505) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8518 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8538 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8505) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8518)) ?
	       coreFix_fpuMulDivExe_0_bypassWire_2$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_2_wget__524__ETC___d8526 :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8537 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8539 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8529 ?
	       coreFix_fpuMulDivExe_0_bypassWire_3$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_3_wget__531__ETC___d8533 :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8538 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8566 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8548) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8554 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8567 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8548) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8554)) ?
	       coreFix_fpuMulDivExe_0_bypassWire_2$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_2_wget__524__ETC___d8558 :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8566 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8568 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8561 ?
	       coreFix_fpuMulDivExe_0_bypassWire_3$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_3_wget__531__ETC___d8562 :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8567 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8595 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8577) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8583 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8596 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8577) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8583)) ?
	       coreFix_fpuMulDivExe_0_bypassWire_2$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_2_wget__524__ETC___d8587 :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8595 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8597 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8590 ?
	       coreFix_fpuMulDivExe_0_bypassWire_3$whas &&
	       coreFix_fpuMulDivExe_0_bypassWire_3_wget__531__ETC___d8591 :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8596 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8611 =
	     IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8539 &&
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8529 &&
	     (!coreFix_fpuMulDivExe_0_bypassWire_3$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_3_wget__531__ETC___d8533) ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8618 =
	     IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8568 &&
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8561 &&
	     (!coreFix_fpuMulDivExe_0_bypassWire_3$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_3_wget__531__ETC___d8562) ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8625 =
	     IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8597 &&
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8590 &&
	     (!coreFix_fpuMulDivExe_0_bypassWire_3$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_3_wget__531__ETC___d8591) ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8639 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8505) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8640 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8505) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8518)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8639 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8650 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8548) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8651 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8548) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8554)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8650 ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8661 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8577) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8662 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8577) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8583)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8661 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1513 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__477_BITS_70__ETC___d1481) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_memExe_bypassWire_1_wget__492_BITS_70__ETC___d1494 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1514 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_memExe_bypassWire_0_wget__477_BITS_70__ETC___d1481) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_memExe_bypassWire_1_wget__492_BITS_70__ETC___d1494)) ?
	       coreFix_memExe_bypassWire_2$whas &&
	       coreFix_memExe_bypassWire_2_wget__500_BITS_70__ETC___d1502 :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1513 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1515 =
	     NOT_coreFix_memExe_bypassWire_0_whas__476_484__ETC___d1505 ?
	       coreFix_memExe_bypassWire_3$whas &&
	       coreFix_memExe_bypassWire_3_wget__507_BITS_70__ETC___d1509 :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1514 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1542 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__477_BITS_70__ETC___d1524) ?
	       coreFix_aluExe_0_bypassWire_1$whas &&
	       coreFix_memExe_bypassWire_1_wget__492_BITS_70__ETC___d1530 :
	       coreFix_aluExe_0_bypassWire_0$whas ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1543 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_memExe_bypassWire_0_wget__477_BITS_70__ETC___d1524) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_memExe_bypassWire_1_wget__492_BITS_70__ETC___d1530)) ?
	       coreFix_memExe_bypassWire_2$whas &&
	       coreFix_memExe_bypassWire_2_wget__500_BITS_70__ETC___d1534 :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1542 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1544 =
	     NOT_coreFix_memExe_bypassWire_0_whas__476_484__ETC___d1537 ?
	       coreFix_memExe_bypassWire_3$whas &&
	       coreFix_memExe_bypassWire_3_wget__507_BITS_70__ETC___d1538 :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1543 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1557 =
	     IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1515 &&
	     NOT_coreFix_memExe_bypassWire_0_whas__476_484__ETC___d1505 &&
	     (!coreFix_memExe_bypassWire_3$whas ||
	      !coreFix_memExe_bypassWire_3_wget__507_BITS_70__ETC___d1509) ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1564 =
	     IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1544 &&
	     NOT_coreFix_memExe_bypassWire_0_whas__476_484__ETC___d1537 &&
	     (!coreFix_memExe_bypassWire_3$whas ||
	      !coreFix_memExe_bypassWire_3_wget__507_BITS_70__ETC___d1538) ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1578 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__477_BITS_70__ETC___d1481) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1579 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_memExe_bypassWire_0_wget__477_BITS_70__ETC___d1481) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_memExe_bypassWire_1_wget__492_BITS_70__ETC___d1494)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1578 ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1589 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__477_BITS_70__ETC___d1524) ?
	       coreFix_aluExe_0_bypassWire_1$wget[63:0] :
	       coreFix_aluExe_0_bypassWire_0$wget[63:0] ;
  assign IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1590 =
	     ((!coreFix_aluExe_0_bypassWire_0$whas ||
	       !coreFix_memExe_bypassWire_0_wget__477_BITS_70__ETC___d1524) &&
	      (!coreFix_aluExe_0_bypassWire_1$whas ||
	       !coreFix_memExe_bypassWire_1_wget__492_BITS_70__ETC___d1530)) ?
	       coreFix_aluExe_0_bypassWire_2$wget[63:0] :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1589 ;
  assign IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d1931 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) ?
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1900 :
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1929 ;
  assign IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d1948 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
	      2'd0 &&
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941) ?
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$FULL_N :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$FULL_N ;
  assign IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d2342 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) ?
	       { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:96],
		 IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1978,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2333 } :
	       { (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
		  3'd3 &&
		  NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d1917) ?
		   { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:516],
		     4'd2 } :
		   { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:96],
		     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516],
		     1'd1,
		     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] },
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } ;
  assign IF_NOT_fetchStage_pipelines_0_canDeq__2436_243_ETC___d13150 =
	     ((!fetchStage$pipelines_0_canDeq ||
	       NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12849) &&
	      fetchStage$pipelines_1_canDeq) ?
	       fetchStage$RDY_pipelines_1_first &&
	       (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
		!fetchStage$pipelines_0_canDeq ||
		fetchStage$RDY_pipelines_0_first) &&
	       IF_fetchStage_RDY_pipelines_1_first__2446_AND__ETC___d13147 :
	       !fetchStage$pipelines_0_canDeq ||
	       fetchStage$RDY_pipelines_0_first ;
  assign IF_NOT_fetchStage_pipelines_0_canDeq__2436_243_ETC___d13158 =
	     ((!fetchStage$pipelines_0_canDeq ||
	       NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12849) &&
	      fetchStage$pipelines_1_canDeq) ?
	       IF_NOT_fetchStage_pipelines_1_first__2447_BITS_ETC___d13157 :
	       fetchStage$pipelines_0_canDeq &&
	       NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d13155 ;
  assign IF_NOT_fetchStage_pipelines_1_first__2447_BITS_ETC___d13080 =
	     (fetchStage$pipelines_1_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_1_first[194:192] == 3'd4) ?
	       NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13061 :
	       ((fetchStage$pipelines_1_first[194:192] == 3'd2) ?
		  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13074 :
		  (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
		   !fetchStage$pipelines_0_canDeq ||
		   fetchStage$RDY_pipelines_0_first) &&
		  _0_OR_fetchStage_RDY_pipelines_0_first__2435_30_ETC___d13077) ;
  assign IF_NOT_fetchStage_pipelines_1_first__2447_BITS_ETC___d13157 =
	     NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d12985 ?
	       IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13144 ||
	       fetchStage$pipelines_0_canDeq &&
	       (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
		specTagManager$canClaim) &&
	       regRenamingTable_rename_0_canRename__2787_AND__ETC___d12862 &&
	       IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872 :
	       fetchStage$pipelines_0_canDeq &&
	       NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d13155 ;
  assign IF_NOT_rob_deqPort_1_deq_data__3981_BIT_25_398_ETC___d14186 =
	     (!rob$deqPort_1_deq_data[25] || rob$deqPort_1_deq_data[18] ||
	      rob$deqPort_1_deq_data[167] ||
	      rob$deqPort_1_deq_data[257:253] == 5'd0 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd21 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd17 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd18 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd13 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd16 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd15 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd19 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd20) ?
	       rob$deqPort_0_canDeq && rob$deqPort_0_deq_data[26] :
	       rob$deqPort_0_canDeq && rob$deqPort_0_deq_data[26] ||
	       rob$deqPort_1_deq_data[26] ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10007 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9667 ?
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9668 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9959 :
		  IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10005) :
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43] ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10241 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9667 ?
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9668 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10227 :
		  IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10239) :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10214 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10735 =
	     ((SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q165[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q168[10],
		  SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q168 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10776 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10436 ?
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10437 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10728 :
		  IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d10774) :
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107] ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11009 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10436 ?
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10437 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d10995 :
		  IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d11007) :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10982 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11204 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8953 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11062[2] :
	       _theResult___fst_exp__h578804 == 11'd2047 &&
	       _theResult___fst_sfd__h578805 == 52'd0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11218 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10437 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11103[2] :
	       _theResult___fst_exp__h621885 == 11'd2047 &&
	       _theResult___fst_sfd__h621886 == 52'd0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11233 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9668 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11147[2] :
	       _theResult___fst_exp__h665387 == 11'd2047 &&
	       _theResult___fst_sfd__h665388 == 52'd0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11250 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8953 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11062[1] :
	       _theResult___fst_exp__h578021 == 11'd0 &&
	       guard__h568798 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11262 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10437 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11103[1] :
	       _theResult___fst_exp__h621102 == 11'd0 &&
	       guard__h611879 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11275 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9668 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11147[1] :
	       _theResult___fst_exp__h664604 == 11'd0 &&
	       guard__h655381 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11292 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8953 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11062[0] :
	       _theResult___fst_exp__h578021 != 11'd2047 &&
	       guard__h568798 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11304 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10437 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11103[0] :
	       _theResult___fst_exp__h621102 != 11'd2047 &&
	       guard__h611879 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d11317 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9668 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11147[0] :
	       _theResult___fst_exp__h664604 != 11'd2047 &&
	       guard__h655381 != 2'b0 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9251 =
	     ((SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q125[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q128[10],
		  SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q128 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9292 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8952 ?
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8953 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivE_ETC___d9244 :
		  IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_firs_ETC___d9290) :
	       coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171] ;
  assign IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9966 =
	     ((SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q142[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q145[10],
		  SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q145 }) -
	     12'd3074 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5229 =
	     ((SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q26[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q31[7],
		  SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q31 }) -
	     9'd386 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5456 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4910 ?
	       ((_theResult___fst_exp__h410439 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5441) :
	       ((_theResult___fst_exp__h420357 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5454) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5493 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4910 ?
	       ((_theResult___fst_exp__h410439 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5484) :
	       ((_theResult___fst_exp__h420357 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5491) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5584 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4910 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5555[2] :
	       _theResult___fst_exp__h420905 == 8'd255 &&
	       _theResult___fst_sfd__h420906 == 23'd0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5597 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4910 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5555[1] :
	       _theResult___fst_exp__h420357 == 8'd0 &&
	       guard__h411047 != 2'b0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5610 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4910 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5555[0] :
	       _theResult___fst_exp__h420357 != 8'd255 &&
	       guard__h411047 != 2'b0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6621 =
	     ((SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q61[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q66[7],
		  SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q66 }) -
	     9'd386 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6848 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6302 ?
	       ((_theResult___fst_exp__h462152 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6833) :
	       ((_theResult___fst_exp__h472070 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6846) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6885 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6302 ?
	       ((_theResult___fst_exp__h462152 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6876) :
	       ((_theResult___fst_exp__h472070 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6883) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6976 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6302 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6947[2] :
	       _theResult___fst_exp__h472618 == 8'd255 &&
	       _theResult___fst_sfd__h472619 == 23'd0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6989 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6302 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6947[1] :
	       _theResult___fst_exp__h472070 == 8'd0 &&
	       guard__h462760 != 2'b0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7002 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6302 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6947[0] :
	       _theResult___fst_exp__h472070 != 8'd255 &&
	       guard__h462760 != 2'b0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8013 =
	     ((SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q96[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q101[7],
		  SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q101 }) -
	     9'd386 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8240 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7694 ?
	       ((_theResult___fst_exp__h513863 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8225) :
	       ((_theResult___fst_exp__h523781 == 8'd255) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8238) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8277 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7694 ?
	       ((_theResult___fst_exp__h513863 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8268) :
	       ((_theResult___fst_exp__h523781 == 8'd255) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8275) ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8368 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7694 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d8339[2] :
	       _theResult___fst_exp__h524329 == 8'd255 &&
	       _theResult___fst_sfd__h524330 == 23'd0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8381 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7694 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d8339[1] :
	       _theResult___fst_exp__h523781 == 8'd0 &&
	       guard__h514471 != 2'b0 ;
  assign IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8394 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7694 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d8339[0] :
	       _theResult___fst_exp__h523781 != 8'd255 &&
	       guard__h514471 != 2'b0 ;
  assign IF_coreFix_aluExe_0_dispToRegQ_RDY_first__2050_ETC___d12071 =
	     (coreFix_aluExe_0_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_aluExe_0_bypassWire_0_wget__2059_BITS__ETC___d12063) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_aluExe_0_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_aluExe_0_dispToRegQ$RDY_first ;
  assign IF_coreFix_aluExe_0_dispToRegQ_RDY_first__2050_ETC___d12110 =
	     (coreFix_aluExe_0_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_aluExe_0_bypassWire_0_wget__2059_BITS__ETC___d12107) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_aluExe_0_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_aluExe_0_dispToRegQ$RDY_first ;
  assign IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1522_ETC___d11543 =
	     (coreFix_aluExe_1_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_aluExe_1_bypassWire_0_wget__1531_BITS__ETC___d11535) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_aluExe_1_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_aluExe_1_dispToRegQ$RDY_first ;
  assign IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1522_ETC___d11582 =
	     (coreFix_aluExe_1_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_aluExe_1_bypassWire_0_wget__1531_BITS__ETC___d11579) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_aluExe_1_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_aluExe_1_dispToRegQ$RDY_first ;
  assign IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8513 =
	     (coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8505) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first ;
  assign IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8551 =
	     (coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8548) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first ;
  assign IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8580 =
	     (coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8577) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6889 =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[33] ?
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		 52'd0) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6850) :
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		 52'd0) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6887) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6227 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	       11'd0) ?
		(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56] ?
		   6'd2 :
		   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[55] ?
		      6'd3 :
		      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[54] ?
			 6'd4 :
			 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[53] ?
			    6'd5 :
			    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[52] ?
			       6'd6 :
			       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[51] ?
				  6'd7 :
				  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[50] ?
				     6'd8 :
				     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[49] ?
					6'd9 :
					(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[48] ?
					   6'd10 :
					   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[47] ?
					      6'd11 :
					      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[46] ?
						 6'd12 :
						 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[45] ?
						    6'd13 :
						    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[44] ?
						       6'd14 :
						       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[43] ?
							  6'd15 :
							  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[42] ?
							     6'd16 :
							     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[41] ?
								6'd17 :
								(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[40] ?
								   6'd18 :
								   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[39] ?
								      6'd19 :
								      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[38] ?
									 6'd20 :
									 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[37] ?
									    6'd21 :
									    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[36] ?
									       6'd22 :
									       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[35] ?
										  6'd23 :
										  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[34] ?
										     6'd24 :
										     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[33] ?
											6'd25 :
											(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[32] ?
											   6'd26 :
											   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[31] ?
											      6'd27 :
											      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[30] ?
												 6'd28 :
												 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[29] ?
												    6'd29 :
												    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[28] ?
												       6'd30 :
												       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[27] ?
													  6'd31 :
													  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[26] ?
													     6'd32 :
													     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[25] ?
														6'd33 :
														(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[24] ?
														   6'd34 :
														   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[23] ?
														      6'd35 :
														      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[22] ?
															 6'd36 :
															 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[21] ?
															    6'd37 :
															    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[20] ?
															       6'd38 :
															       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[19] ?
																  6'd39 :
																  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[18] ?
																     6'd40 :
																     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[17] ?
																	6'd41 :
																	(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[16] ?
																	   6'd42 :
																	   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[15] ?
																	      6'd43 :
																	      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[14] ?
																		 6'd44 :
																		 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[13] ?
																		    6'd45 :
																		    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[12] ?
																		       6'd46 :
																		       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[11] ?
																			  6'd47 :
																			  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[10] ?
																			     6'd48 :
																			     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[9] ?
																				6'd49 :
																				(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[8] ?
																				   6'd50 :
																				   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[7] ?
																				      6'd51 :
																				      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[6] ?
																					 6'd52 :
																					 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[5] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6850 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5761 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6818 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6820) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6301 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6848 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6820) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6887 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5761 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d6868 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6869) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6301 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6885 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6869) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6951 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6933 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6301 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6302 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6947[4] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6962 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6958 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6301 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6302 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6947[3] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6978 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6970 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6301 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6976 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6991 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6985 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6301 &&
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6989 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d7004 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6998 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6301 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d7002 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4835 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	       11'd0) ?
		(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56] ?
		   6'd2 :
		   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[55] ?
		      6'd3 :
		      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[54] ?
			 6'd4 :
			 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[53] ?
			    6'd5 :
			    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[52] ?
			       6'd6 :
			       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[51] ?
				  6'd7 :
				  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[50] ?
				     6'd8 :
				     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[49] ?
					6'd9 :
					(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[48] ?
					   6'd10 :
					   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[47] ?
					      6'd11 :
					      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[46] ?
						 6'd12 :
						 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[45] ?
						    6'd13 :
						    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[44] ?
						       6'd14 :
						       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[43] ?
							  6'd15 :
							  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[42] ?
							     6'd16 :
							     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[41] ?
								6'd17 :
								(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[40] ?
								   6'd18 :
								   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[39] ?
								      6'd19 :
								      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[38] ?
									 6'd20 :
									 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[37] ?
									    6'd21 :
									    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[36] ?
									       6'd22 :
									       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[35] ?
										  6'd23 :
										  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[34] ?
										     6'd24 :
										     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[33] ?
											6'd25 :
											(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[32] ?
											   6'd26 :
											   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[31] ?
											      6'd27 :
											      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[30] ?
												 6'd28 :
												 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[29] ?
												    6'd29 :
												    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[28] ?
												       6'd30 :
												       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[27] ?
													  6'd31 :
													  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[26] ?
													     6'd32 :
													     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[25] ?
														6'd33 :
														(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[24] ?
														   6'd34 :
														   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[23] ?
														      6'd35 :
														      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[22] ?
															 6'd36 :
															 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[21] ?
															    6'd37 :
															    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[20] ?
															       6'd38 :
															       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[19] ?
																  6'd39 :
																  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[18] ?
																     6'd40 :
																     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[17] ?
																	6'd41 :
																	(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[16] ?
																	   6'd42 :
																	   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[15] ?
																	      6'd43 :
																	      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[14] ?
																		 6'd44 :
																		 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[13] ?
																		    6'd45 :
																		    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[12] ?
																		       6'd46 :
																		       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[11] ?
																			  6'd47 :
																			  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[10] ?
																			     6'd48 :
																			     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[9] ?
																				6'd49 :
																				(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[8] ?
																				   6'd50 :
																				   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[7] ?
																				      6'd51 :
																				      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[6] ?
																					 6'd52 :
																					 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[5] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5458 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4369 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d5426 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5428) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4909 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5456 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5428) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5495 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4369 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d5476 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5477) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4909 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5493 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5477) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5559 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5541 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4909 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4910 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5555[4] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5570 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5566 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4909 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4910 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5555[3] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5586 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d5578 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4909 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5584 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5599 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5593 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4909 &&
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5597 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5612 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d5606 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4909 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5610 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7619 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	       11'd0) ?
		(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56] ?
		   6'd2 :
		   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[55] ?
		      6'd3 :
		      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[54] ?
			 6'd4 :
			 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[53] ?
			    6'd5 :
			    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[52] ?
			       6'd6 :
			       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[51] ?
				  6'd7 :
				  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[50] ?
				     6'd8 :
				     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[49] ?
					6'd9 :
					(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[48] ?
					   6'd10 :
					   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[47] ?
					      6'd11 :
					      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[46] ?
						 6'd12 :
						 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[45] ?
						    6'd13 :
						    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[44] ?
						       6'd14 :
						       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[43] ?
							  6'd15 :
							  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[42] ?
							     6'd16 :
							     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[41] ?
								6'd17 :
								(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[40] ?
								   6'd18 :
								   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[39] ?
								      6'd19 :
								      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[38] ?
									 6'd20 :
									 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[37] ?
									    6'd21 :
									    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[36] ?
									       6'd22 :
									       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[35] ?
										  6'd23 :
										  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[34] ?
										     6'd24 :
										     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[33] ?
											6'd25 :
											(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[32] ?
											   6'd26 :
											   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[31] ?
											      6'd27 :
											      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[30] ?
												 6'd28 :
												 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[29] ?
												    6'd29 :
												    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[28] ?
												       6'd30 :
												       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[27] ?
													  6'd31 :
													  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[26] ?
													     6'd32 :
													     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[25] ?
														6'd33 :
														(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[24] ?
														   6'd34 :
														   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[23] ?
														      6'd35 :
														      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[22] ?
															 6'd36 :
															 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[21] ?
															    6'd37 :
															    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[20] ?
															       6'd38 :
															       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[19] ?
																  6'd39 :
																  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[18] ?
																     6'd40 :
																     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[17] ?
																	6'd41 :
																	(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[16] ?
																	   6'd42 :
																	   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[15] ?
																	      6'd43 :
																	      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[14] ?
																		 6'd44 :
																		 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[13] ?
																		    6'd45 :
																		    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[12] ?
																		       6'd46 :
																		       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[11] ?
																			  6'd47 :
																			  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[10] ?
																			     6'd48 :
																			     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[9] ?
																				6'd49 :
																				(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[8] ?
																				   6'd50 :
																				   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[7] ?
																				      6'd51 :
																				      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[6] ?
																					 6'd52 :
																					 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[5] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8242 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7153 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d8210 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8212) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7693 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8240 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8212) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8279 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7153 ?
		  IF_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_ETC___d8260 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8261) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7693 ?
		  IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8277 :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8261) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8343 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8325 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7693 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7694 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d8339[4] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8354 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8350 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7693 &&
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7694 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d8339[3] ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8370 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d8362 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7693 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8368 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8383 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8377 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7693 &&
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8381 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8396 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d8390 :
	       !SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7693 ||
	       IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8394 ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5497 =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[33] ?
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		 52'd0) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5458) :
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		 52'd0) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5495) ;
  assign IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8281 =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[33] ?
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		 52'd0) ?
		  !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8242) :
	       ((coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		 11'd2047 &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		 52'd0 ||
		 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		  11'd2047 ||
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		  11'd0) &&
		 coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		 52'd0) ?
		  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		  IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8279) ;
  assign IF_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_d_ETC___d11440 =
	     (coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$D_OUT ==
	      64'd0) ?
	       64'd1 :
	       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$D_OUT ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10189 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[225] ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[75:12] :
	       { IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10009,
		 IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10187 } ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10245 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[225] ?
	       { !coreFix_fpuMulDivExe_0_regToExeQ$first[75],
		 coreFix_fpuMulDivExe_0_regToExeQ$first[74:12] } :
	       { IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10243,
		 IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10187 } ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10391 =
	     f2_exp__h579217 == 8'd0 && !f2_sfd__h579218[22] &&
	     !f2_sfd__h579218[21] &&
	     !f2_sfd__h579218[20] &&
	     !f2_sfd__h579218[19] &&
	     !f2_sfd__h579218[18] &&
	     !f2_sfd__h579218[17] &&
	     !f2_sfd__h579218[16] &&
	     !f2_sfd__h579218[15] &&
	     !f2_sfd__h579218[14] &&
	     !f2_sfd__h579218[13] &&
	     !f2_sfd__h579218[12] &&
	     !f2_sfd__h579218[11] &&
	     !f2_sfd__h579218[10] &&
	     !f2_sfd__h579218[9] &&
	     !f2_sfd__h579218[8] &&
	     !f2_sfd__h579218[7] &&
	     !f2_sfd__h579218[6] &&
	     !f2_sfd__h579218[5] &&
	     !f2_sfd__h579218[4] &&
	     !f2_sfd__h579218[3] &&
	     !f2_sfd__h579218[2] &&
	     !f2_sfd__h579218[1] &&
	     !f2_sfd__h579218[0] ||
	     !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10389 ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10738 =
	     f2_exp__h579217 == 8'd0 && !f2_sfd__h579218[22] &&
	     !f2_sfd__h579218[21] &&
	     !f2_sfd__h579218[20] &&
	     !f2_sfd__h579218[19] &&
	     !f2_sfd__h579218[18] &&
	     !f2_sfd__h579218[17] &&
	     !f2_sfd__h579218[16] &&
	     !f2_sfd__h579218[15] &&
	     !f2_sfd__h579218[14] &&
	     !f2_sfd__h579218[13] &&
	     !f2_sfd__h579218[12] &&
	     !f2_sfd__h579218[11] &&
	     !f2_sfd__h579218[10] &&
	     !f2_sfd__h579218[9] &&
	     !f2_sfd__h579218[8] &&
	     !f2_sfd__h579218[7] &&
	     !f2_sfd__h579218[6] &&
	     !f2_sfd__h579218[5] &&
	     !f2_sfd__h579218[4] &&
	     !f2_sfd__h579218[3] &&
	     !f2_sfd__h579218[2] &&
	     !f2_sfd__h579218[1] &&
	     !f2_sfd__h579218[0] ||
	     !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10736 ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10958 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[225] ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:76] :
	       { IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10778,
		 IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10956 } ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11156 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd28) &&
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11111 |
	     ((f3_exp__h622719 != 8'd255 || f3_sfd__h622720 == 23'd0) &&
	      (f3_exp__h622719 != 8'd255 || f3_sfd__h622720 != 23'd0) &&
	      (f3_exp__h622719 != 8'd0 || f3_sfd__h622720 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11151) ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11192 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd28) &&
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11180 |
	     ((f3_exp__h622719 != 8'd255 || f3_sfd__h622720 == 23'd0) &&
	      (f3_exp__h622719 != 8'd255 || f3_sfd__h622720 != 23'd0) &&
	      (f3_exp__h622719 != 8'd0 || f3_sfd__h622720 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11187) ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11240 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd28) &&
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11224 |
	     ((f3_exp__h622719 != 8'd255 || f3_sfd__h622720 == 23'd0) &&
	      (f3_exp__h622719 != 8'd255 || f3_sfd__h622720 != 23'd0) &&
	      (f3_exp__h622719 != 8'd0 || f3_sfd__h622720 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11235) ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11282 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd28) &&
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11268 |
	     ((f3_exp__h622719 != 8'd255 || f3_sfd__h622720 == 23'd0) &&
	      (f3_exp__h622719 != 8'd255 || f3_sfd__h622720 != 23'd0) &&
	      (f3_exp__h622719 != 8'd0 || f3_sfd__h622720 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11277) ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11324 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd25 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd26 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd27 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] == 5'd28) &&
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11310 |
	     ((f3_exp__h622719 != 8'd255 || f3_sfd__h622720 == 23'd0) &&
	      (f3_exp__h622719 != 8'd255 || f3_sfd__h622720 != 23'd0) &&
	      (f3_exp__h622719 != 8'd0 || f3_sfd__h622720 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11319) ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d8734 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] == 3'd4) ?
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8699 &&
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8712 :
	       NOT_coreFix_fpuMulDivExe_0_regToExeQ_first__67_ETC___d8733 ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d8891 =
	     f1_exp__h536047 == 8'd0 && !f1_sfd__h536048[22] &&
	     !f1_sfd__h536048[21] &&
	     !f1_sfd__h536048[20] &&
	     !f1_sfd__h536048[19] &&
	     !f1_sfd__h536048[18] &&
	     !f1_sfd__h536048[17] &&
	     !f1_sfd__h536048[16] &&
	     !f1_sfd__h536048[15] &&
	     !f1_sfd__h536048[14] &&
	     !f1_sfd__h536048[13] &&
	     !f1_sfd__h536048[12] &&
	     !f1_sfd__h536048[11] &&
	     !f1_sfd__h536048[10] &&
	     !f1_sfd__h536048[9] &&
	     !f1_sfd__h536048[8] &&
	     !f1_sfd__h536048[7] &&
	     !f1_sfd__h536048[6] &&
	     !f1_sfd__h536048[5] &&
	     !f1_sfd__h536048[4] &&
	     !f1_sfd__h536048[3] &&
	     !f1_sfd__h536048[2] &&
	     !f1_sfd__h536048[1] &&
	     !f1_sfd__h536048[0] ||
	     !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8889 ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9254 =
	     f1_exp__h536047 == 8'd0 && !f1_sfd__h536048[22] &&
	     !f1_sfd__h536048[21] &&
	     !f1_sfd__h536048[20] &&
	     !f1_sfd__h536048[19] &&
	     !f1_sfd__h536048[18] &&
	     !f1_sfd__h536048[17] &&
	     !f1_sfd__h536048[16] &&
	     !f1_sfd__h536048[15] &&
	     !f1_sfd__h536048[14] &&
	     !f1_sfd__h536048[13] &&
	     !f1_sfd__h536048[12] &&
	     !f1_sfd__h536048[11] &&
	     !f1_sfd__h536048[10] &&
	     !f1_sfd__h536048[9] &&
	     !f1_sfd__h536048[8] &&
	     !f1_sfd__h536048[7] &&
	     !f1_sfd__h536048[6] &&
	     !f1_sfd__h536048[5] &&
	     !f1_sfd__h536048[4] &&
	     !f1_sfd__h536048[3] &&
	     !f1_sfd__h536048[2] &&
	     !f1_sfd__h536048[1] &&
	     !f1_sfd__h536048[0] ||
	     !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9252 ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9479 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[225] ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[203:140] :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9478 ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9622 =
	     f3_exp__h622719 == 8'd0 && !f3_sfd__h622720[22] &&
	     !f3_sfd__h622720[21] &&
	     !f3_sfd__h622720[20] &&
	     !f3_sfd__h622720[19] &&
	     !f3_sfd__h622720[18] &&
	     !f3_sfd__h622720[17] &&
	     !f3_sfd__h622720[16] &&
	     !f3_sfd__h622720[15] &&
	     !f3_sfd__h622720[14] &&
	     !f3_sfd__h622720[13] &&
	     !f3_sfd__h622720[12] &&
	     !f3_sfd__h622720[11] &&
	     !f3_sfd__h622720[10] &&
	     !f3_sfd__h622720[9] &&
	     !f3_sfd__h622720[8] &&
	     !f3_sfd__h622720[7] &&
	     !f3_sfd__h622720[6] &&
	     !f3_sfd__h622720[5] &&
	     !f3_sfd__h622720[4] &&
	     !f3_sfd__h622720[3] &&
	     !f3_sfd__h622720[2] &&
	     !f3_sfd__h622720[1] &&
	     !f3_sfd__h622720[0] ||
	     !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9620 ;
  assign IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9969 =
	     f3_exp__h622719 == 8'd0 && !f3_sfd__h622720[22] &&
	     !f3_sfd__h622720[21] &&
	     !f3_sfd__h622720[20] &&
	     !f3_sfd__h622720[19] &&
	     !f3_sfd__h622720[18] &&
	     !f3_sfd__h622720[17] &&
	     !f3_sfd__h622720[16] &&
	     !f3_sfd__h622720[15] &&
	     !f3_sfd__h622720[14] &&
	     !f3_sfd__h622720[13] &&
	     !f3_sfd__h622720[12] &&
	     !f3_sfd__h622720[11] &&
	     !f3_sfd__h622720[10] &&
	     !f3_sfd__h622720[9] &&
	     !f3_sfd__h622720[8] &&
	     !f3_sfd__h622720[7] &&
	     !f3_sfd__h622720[6] &&
	     !f3_sfd__h622720[5] &&
	     !f3_sfd__h622720[4] &&
	     !f3_sfd__h622720[3] &&
	     !f3_sfd__h622720[2] &&
	     !f3_sfd__h622720[1] &&
	     !f3_sfd__h622720[0] ||
	     !_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9967 ;
  assign IF_coreFix_globalSpecUpdate_correctSpecTag_0_w_ETC___d12374 =
	     coreFix_globalSpecUpdate_correctSpecTag_0$whas ?
	       result__h711533 :
	       12'd4095 ;
  assign IF_coreFix_globalSpecUpdate_correctSpecTag_1_w_ETC___d12380 =
	     coreFix_globalSpecUpdate_correctSpecTag_1$whas ?
	       result__h711482 :
	       IF_coreFix_globalSpecUpdate_correctSpecTag_0_w_ETC___d12374 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1929 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3 &&
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d1917) ?
	       NOT_coreFix_memExe_respLrScAmoQ_full_792_793_A_ETC___d1927 :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ_pipelineResp$FULL_N ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1949 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3 &&
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d1917) ?
	       NOT_coreFix_memExe_respLrScAmoQ_full_792_793_A_ETC___d1927 :
	       IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d1948 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1952 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1) ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1951 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2031 =
	     { (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd7) ?
		 n___1__h216741 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:448],
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd6) ?
		 n___1__h216741 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[447:384],
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd5) ?
		 n___1__h216741 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[383:320],
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd4) ?
		 n___1__h216741 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[319:256] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2036 =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2031,
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd3) ?
		 n___1__h216741 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[255:192],
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd2) ?
		 n___1__h216741 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[191:128] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2041 =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2036,
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd1) ?
		 n___1__h216741 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[127:64],
	       (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87] ==
		3'd0) ?
		 n___1__h216741 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[63:0] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2348 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3 &&
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d1917) ?
	       { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:516],
		 4'd2 } :
	       { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:96],
		 (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
		  2'd0 &&
		  !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941) ?
		   { 3'd1,
		     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] } :
		   { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516],
		     1'd1,
		     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] } } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2351 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1) ?
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:0] :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2350 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2370 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1) ?
	       3'd5 :
	       ((coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
		 2'd0 &&
		 !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941) ?
		  3'd2 :
		  3'd3) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2381 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1) ?
	       58'h155555555555554 :
	       ((coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
		 2'd0 &&
		 !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941) ?
		  { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[573:571],
		    2'd0,
		    coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:518],
		    1'd0 } :
		  { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[573:571],
		    coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516],
		    53'h15555555555555 }) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2398 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2) ?
	       x__h214333 :
	       (coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1983 ?
		  64'd0 :
		  64'd1) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3042 =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$wget[3] :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl[3] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3057 =
	     WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry ||
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3069 =
	     _theResult_____2__h319525 == v__h318858 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3148 =
	     EN_dCacheToParent_fromP_enq ?
	       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[583] :
	       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[583] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3163 =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_lat_0$whas ||
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3170 =
	     _theResult_____2__h328530 == v__h322304 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3223 =
	     (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3148 &&
	      (EN_dCacheToParent_fromP_enq ?
		 !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[582] :
		 !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[582])) ?
	       { 516'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,
		 EN_dCacheToParent_fromP_enq ?
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[65:0] :
		   coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[65:0] } :
	       (EN_dCacheToParent_fromP_enq ?
		  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[581:0] :
		  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[581:0]) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2917 =
	     (coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[79:70] ==
	      10'd1023) ?
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[79:70] :
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[79:70] +
	       10'd1 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2923 =
	     (coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[69:60] ==
	      10'd1023) ?
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[69:60] :
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[69:60] +
	       10'd1 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2930 =
	     (coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[59:50] ==
	      10'd1023) ?
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[59:50] :
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[59:50] +
	       10'd1 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2936 =
	     (coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[49:40] ==
	      10'd1023) ?
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[49:40] :
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[49:40] +
	       10'd1 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2943 =
	     (coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[39:30] ==
	      10'd1023) ?
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[39:30] :
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[39:30] +
	       10'd1 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2949 =
	     (coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[29:20] ==
	      10'd1023) ?
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[29:20] :
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[29:20] +
	       10'd1 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2956 =
	     (coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[19:10] ==
	      10'd1023) ?
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[19:10] :
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[19:10] +
	       10'd1 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2962 =
	     (coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[9:0] ==
	      10'd1023) ?
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[9:0] :
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer[9:0] +
	       10'd1 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2974 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT == 3'd7 ||
	     (coreFix_memExe_dMem_cache_m_banks_0_latTimer_doneEn$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] !=
		3'd7 &&
		coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[7] :
		coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[7]) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2979 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT == 3'd6 ||
	     (coreFix_memExe_dMem_cache_m_banks_0_latTimer_doneEn$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] !=
		3'd6 &&
		coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[6] :
		coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[6]) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2985 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT == 3'd5 ||
	     (coreFix_memExe_dMem_cache_m_banks_0_latTimer_doneEn$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] !=
		3'd5 &&
		coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[5] :
		coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[5]) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2990 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT == 3'd4 ||
	     (coreFix_memExe_dMem_cache_m_banks_0_latTimer_doneEn$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] !=
		3'd4 &&
		coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[4] :
		coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[4]) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d2996 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT == 3'd3 ||
	     (coreFix_memExe_dMem_cache_m_banks_0_latTimer_doneEn$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] !=
		3'd3 &&
		coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[3] :
		coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[3]) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d3001 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT == 3'd2 ||
	     (coreFix_memExe_dMem_cache_m_banks_0_latTimer_doneEn$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] !=
		3'd2 &&
		coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[2] :
		coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[2]) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d3007 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT == 3'd1 ||
	     (coreFix_memExe_dMem_cache_m_banks_0_latTimer_doneEn$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] !=
		3'd1 &&
		coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[1] :
		coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[1]) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d3012 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPIndexQ$D_OUT == 3'd0 ||
	     (coreFix_memExe_dMem_cache_m_banks_0_latTimer_doneEn$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] !=
		3'd0 &&
		coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[0] :
		coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[0]) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_latTime_ETC___d3018 =
	     coreFix_memExe_dMem_cache_m_banks_0_latTimer_doneEn$whas ?
	       { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] !=
		 3'd7 &&
		 coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[7],
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] !=
		 3'd6 &&
		 coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[6],
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] !=
		 3'd5 &&
		 coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[5],
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] !=
		 3'd4 &&
		 coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[4],
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] !=
		 3'd3 &&
		 coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[3],
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] !=
		 3'd2 &&
		 coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[2],
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] !=
		 3'd1 &&
		 coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[1],
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] !=
		 3'd0 &&
		 coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[0] } :
	       coreFix_memExe_dMem_cache_m_banks_0_latTimer_started ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d1915 =
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[57:0] ==
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:90] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512] ==
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[576:574] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1889 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ?
	       !coreFix_memExe_respLrScAmoQ_full :
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first ||
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	       3'd1 ||
	       coreFix_memExe_stb$RDY_deq ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1891 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2) ?
	       !coreFix_memExe_respLrScAmoQ_full :
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	       3'd4 ||
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1889 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1892 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_first &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd0) ?
	       !coreFix_memExe_memRespLdQ_full :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1891 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1900 =
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1892 &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd4 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	      (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	       3'd1 ||
	       coreFix_memExe_stb$RDY_deq)) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1951 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869)) ?
	       IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1900 :
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1949 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1953 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       (IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 ?
		  IF_NOT_coreFix_memExe_dMem_cache_m_banks_0_pip_ETC___d1931 :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite) :
	       IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d1952 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1973 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869)) ?
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc :
	       4'd2 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1978 =
	     { (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] <=
		coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[83:82]) ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[83:82] :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2350 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869)) ?
	       { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:96],
		 IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1978,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2333 } :
	       { IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2348,
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2401 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869)) ?
	       { 1'd1,
		 IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2398 } :
	       65'h10000000000000001 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2416 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ?
	       (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
		!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	       3'd2 :
	       coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 &&
	       (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
		!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	       3'd2 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2479 =
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869 &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1983) ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2502 =
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2578 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570] ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2571 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2574) ?
	       coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$RDY_pipelineResp_releaseEntry :
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPIndexQ$FULL_N ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1835 =
	     { (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd7) ?
		 n__h210716 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:448],
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd6) ?
		 n__h210716 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[447:384],
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd5) ?
		 n__h210716 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[383:320] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1840 =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1835,
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd4) ?
		 n__h210716 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[319:256],
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd3) ?
		 n__h210716 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[255:192] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1845 =
	     { IF_coreFix_memExe_dMem_cache_m_banks_0_process_ETC___d1840,
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd2) ?
		 n__h210716 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[191:128],
	       (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91] ==
		3'd1) ?
		 n__h210716 :
		 coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[127:64] } ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2681 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[83:82] :
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[83:82]) :
	       2'd0 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2685 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[81:79] :
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[81:79]) :
	       3'd0 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rqFromC_ETC___d2728 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[6:3] :
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[6:3]) :
	       4'd0 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3269 =
	     CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ?
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget[72] :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl[72] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3284 =
	     EN_dCacheToParent_rqToP_deq ||
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3292 =
	     _theResult_____2__h335052 == v__h333902 ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3360 =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas ?
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget[579] :
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl[579] ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3375 =
	     EN_dCacheToParent_rsToP_deq ||
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl ;
  assign IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3383 =
	     _theResult_____2__h343858 == v__h338230 ;
  assign IF_coreFix_memExe_dTlb_procResp__644_BIT_110_6_ETC___d1672 =
	     (!coreFix_memExe_dTlb$procResp[12] &&
	      !coreFix_memExe_dTlb$procResp[110] &&
	      coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1663) ?
	       coreFix_memExe_dTlb$procResp[105:103] != 3'd2 &&
	       coreFix_memExe_dTlb$procResp[105:103] != 3'd3 &&
	       !coreFix_memExe_dTlb$procResp[12] :
	       !coreFix_memExe_dTlb$procResp[12] &&
	       !coreFix_memExe_dTlb$procResp[110] ;
  assign IF_coreFix_memExe_dispToRegQ_RDY_first__469_AN_ETC___d1489 =
	     (coreFix_memExe_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_memExe_bypassWire_0_wget__477_BITS_70__ETC___d1481) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_memExe_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_memExe_dispToRegQ$RDY_first ;
  assign IF_coreFix_memExe_dispToRegQ_RDY_first__469_AN_ETC___d1527 =
	     (coreFix_memExe_dispToRegQ$RDY_first &&
	      coreFix_aluExe_0_bypassWire_0$whas &&
	      coreFix_memExe_bypassWire_0_wget__477_BITS_70__ETC___d1524) ?
	       !coreFix_aluExe_0_bypassWire_0$whas ||
	       coreFix_memExe_dispToRegQ$RDY_first :
	       !coreFix_aluExe_0_bypassWire_1$whas ||
	       coreFix_memExe_dispToRegQ$RDY_first ;
  assign IF_coreFix_memExe_forwardQ_deqReq_dummy2_2_rea_ETC___d3655 =
	     _theResult_____2__h357785 == v__h357200 ;
  assign IF_coreFix_memExe_forwardQ_deqReq_lat_1_whas___ETC___d3648 =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdForward ||
	     coreFix_memExe_forwardQ_deqReq_rl ;
  assign IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3633 =
	     coreFix_memExe_forwardQ_enqReq_lat_0$whas ?
	       coreFix_memExe_forwardQ_enqReq_lat_0$wget[69] :
	       coreFix_memExe_forwardQ_enqReq_rl[69] ;
  assign IF_coreFix_memExe_ldMemLatTimer_doneEn_whas__8_ETC___d4214 =
	     coreFix_memExe_ldMemLatTimer_doneEn$whas ?
	       { i__h363648 != 5'd23 &&
		 coreFix_memExe_ldMemLatTimer_started[23],
		 i__h363648 != 5'd22 &&
		 coreFix_memExe_ldMemLatTimer_started[22],
		 i__h363648 != 5'd21 &&
		 coreFix_memExe_ldMemLatTimer_started[21],
		 i__h363648 != 5'd20 &&
		 coreFix_memExe_ldMemLatTimer_started[20],
		 i__h363648 != 5'd19 &&
		 coreFix_memExe_ldMemLatTimer_started[19],
		 i__h363648 != 5'd18 &&
		 coreFix_memExe_ldMemLatTimer_started[18],
		 i__h363648 != 5'd17 &&
		 coreFix_memExe_ldMemLatTimer_started[17],
		 i__h363648 != 5'd16 &&
		 coreFix_memExe_ldMemLatTimer_started[16],
		 i__h363648 != 5'd15 &&
		 coreFix_memExe_ldMemLatTimer_started[15],
		 i__h363648 != 5'd14 &&
		 coreFix_memExe_ldMemLatTimer_started[14],
		 i__h363648 != 5'd13 &&
		 coreFix_memExe_ldMemLatTimer_started[13],
		 i__h363648 != 5'd12 &&
		 coreFix_memExe_ldMemLatTimer_started[12],
		 i__h363648 != 5'd11 &&
		 coreFix_memExe_ldMemLatTimer_started[11],
		 i__h363648 != 5'd10 &&
		 coreFix_memExe_ldMemLatTimer_started[10],
		 i__h363648 != 5'd9 &&
		 coreFix_memExe_ldMemLatTimer_started[9],
		 i__h363648 != 5'd8 &&
		 coreFix_memExe_ldMemLatTimer_started[8],
		 i__h363648 != 5'd7 &&
		 coreFix_memExe_ldMemLatTimer_started[7],
		 i__h363648 != 5'd6 &&
		 coreFix_memExe_ldMemLatTimer_started[6],
		 i__h363648 != 5'd5 &&
		 coreFix_memExe_ldMemLatTimer_started[5],
		 i__h363648 != 5'd4 &&
		 coreFix_memExe_ldMemLatTimer_started[4],
		 i__h363648 != 5'd3 &&
		 coreFix_memExe_ldMemLatTimer_started[3],
		 i__h363648 != 5'd2 &&
		 coreFix_memExe_ldMemLatTimer_started[2],
		 i__h363648 != 5'd1 &&
		 coreFix_memExe_ldMemLatTimer_started[1],
		 i__h363648 != 5'd0 &&
		 coreFix_memExe_ldMemLatTimer_started[0] } :
	       coreFix_memExe_ldMemLatTimer_started ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4074 =
	     i__h365971 == 5'd23 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd23 &&
		coreFix_memExe_ldMemLatTimer_started[23] :
		coreFix_memExe_ldMemLatTimer_started[23]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4079 =
	     i__h365971 == 5'd22 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd22 &&
		coreFix_memExe_ldMemLatTimer_started[22] :
		coreFix_memExe_ldMemLatTimer_started[22]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4085 =
	     i__h365971 == 5'd21 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd21 &&
		coreFix_memExe_ldMemLatTimer_started[21] :
		coreFix_memExe_ldMemLatTimer_started[21]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4090 =
	     i__h365971 == 5'd20 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd20 &&
		coreFix_memExe_ldMemLatTimer_started[20] :
		coreFix_memExe_ldMemLatTimer_started[20]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4096 =
	     i__h365971 == 5'd19 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd19 &&
		coreFix_memExe_ldMemLatTimer_started[19] :
		coreFix_memExe_ldMemLatTimer_started[19]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4101 =
	     i__h365971 == 5'd18 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd18 &&
		coreFix_memExe_ldMemLatTimer_started[18] :
		coreFix_memExe_ldMemLatTimer_started[18]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4107 =
	     i__h365971 == 5'd17 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd17 &&
		coreFix_memExe_ldMemLatTimer_started[17] :
		coreFix_memExe_ldMemLatTimer_started[17]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4112 =
	     i__h365971 == 5'd16 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd16 &&
		coreFix_memExe_ldMemLatTimer_started[16] :
		coreFix_memExe_ldMemLatTimer_started[16]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4118 =
	     i__h365971 == 5'd15 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd15 &&
		coreFix_memExe_ldMemLatTimer_started[15] :
		coreFix_memExe_ldMemLatTimer_started[15]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4123 =
	     i__h365971 == 5'd14 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd14 &&
		coreFix_memExe_ldMemLatTimer_started[14] :
		coreFix_memExe_ldMemLatTimer_started[14]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4129 =
	     i__h365971 == 5'd13 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd13 &&
		coreFix_memExe_ldMemLatTimer_started[13] :
		coreFix_memExe_ldMemLatTimer_started[13]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4134 =
	     i__h365971 == 5'd12 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd12 &&
		coreFix_memExe_ldMemLatTimer_started[12] :
		coreFix_memExe_ldMemLatTimer_started[12]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4140 =
	     i__h365971 == 5'd11 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd11 &&
		coreFix_memExe_ldMemLatTimer_started[11] :
		coreFix_memExe_ldMemLatTimer_started[11]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4145 =
	     i__h365971 == 5'd10 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd10 &&
		coreFix_memExe_ldMemLatTimer_started[10] :
		coreFix_memExe_ldMemLatTimer_started[10]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4151 =
	     i__h365971 == 5'd9 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd9 &&
		coreFix_memExe_ldMemLatTimer_started[9] :
		coreFix_memExe_ldMemLatTimer_started[9]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4156 =
	     i__h365971 == 5'd8 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd8 &&
		coreFix_memExe_ldMemLatTimer_started[8] :
		coreFix_memExe_ldMemLatTimer_started[8]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4162 =
	     i__h365971 == 5'd7 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd7 &&
		coreFix_memExe_ldMemLatTimer_started[7] :
		coreFix_memExe_ldMemLatTimer_started[7]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4167 =
	     i__h365971 == 5'd6 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd6 &&
		coreFix_memExe_ldMemLatTimer_started[6] :
		coreFix_memExe_ldMemLatTimer_started[6]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4173 =
	     i__h365971 == 5'd5 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd5 &&
		coreFix_memExe_ldMemLatTimer_started[5] :
		coreFix_memExe_ldMemLatTimer_started[5]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4178 =
	     i__h365971 == 5'd4 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd4 &&
		coreFix_memExe_ldMemLatTimer_started[4] :
		coreFix_memExe_ldMemLatTimer_started[4]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4184 =
	     i__h365971 == 5'd3 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd3 &&
		coreFix_memExe_ldMemLatTimer_started[3] :
		coreFix_memExe_ldMemLatTimer_started[3]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4189 =
	     i__h365971 == 5'd2 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd2 &&
		coreFix_memExe_ldMemLatTimer_started[2] :
		coreFix_memExe_ldMemLatTimer_started[2]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4195 =
	     i__h365971 == 5'd1 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd1 &&
		coreFix_memExe_ldMemLatTimer_started[1] :
		coreFix_memExe_ldMemLatTimer_started[1]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_startEn_whas___ETC___d4200 =
	     i__h365971 == 5'd0 ||
	     (coreFix_memExe_ldMemLatTimer_doneEn$whas ?
		i__h363648 != 5'd0 &&
		coreFix_memExe_ldMemLatTimer_started[0] :
		coreFix_memExe_ldMemLatTimer_started[0]) ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3905 =
	     (coreFix_memExe_ldMemLatTimer_timer[239:230] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[239:230] :
	       coreFix_memExe_ldMemLatTimer_timer[239:230] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3911 =
	     (coreFix_memExe_ldMemLatTimer_timer[229:220] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[229:220] :
	       coreFix_memExe_ldMemLatTimer_timer[229:220] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3918 =
	     (coreFix_memExe_ldMemLatTimer_timer[219:210] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[219:210] :
	       coreFix_memExe_ldMemLatTimer_timer[219:210] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3924 =
	     (coreFix_memExe_ldMemLatTimer_timer[209:200] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[209:200] :
	       coreFix_memExe_ldMemLatTimer_timer[209:200] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3931 =
	     (coreFix_memExe_ldMemLatTimer_timer[199:190] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[199:190] :
	       coreFix_memExe_ldMemLatTimer_timer[199:190] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3937 =
	     (coreFix_memExe_ldMemLatTimer_timer[189:180] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[189:180] :
	       coreFix_memExe_ldMemLatTimer_timer[189:180] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3944 =
	     (coreFix_memExe_ldMemLatTimer_timer[179:170] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[179:170] :
	       coreFix_memExe_ldMemLatTimer_timer[179:170] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3950 =
	     (coreFix_memExe_ldMemLatTimer_timer[169:160] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[169:160] :
	       coreFix_memExe_ldMemLatTimer_timer[169:160] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3957 =
	     (coreFix_memExe_ldMemLatTimer_timer[159:150] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[159:150] :
	       coreFix_memExe_ldMemLatTimer_timer[159:150] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3963 =
	     (coreFix_memExe_ldMemLatTimer_timer[149:140] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[149:140] :
	       coreFix_memExe_ldMemLatTimer_timer[149:140] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3970 =
	     (coreFix_memExe_ldMemLatTimer_timer[139:130] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[139:130] :
	       coreFix_memExe_ldMemLatTimer_timer[139:130] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3976 =
	     (coreFix_memExe_ldMemLatTimer_timer[129:120] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[129:120] :
	       coreFix_memExe_ldMemLatTimer_timer[129:120] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3983 =
	     (coreFix_memExe_ldMemLatTimer_timer[119:110] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[119:110] :
	       coreFix_memExe_ldMemLatTimer_timer[119:110] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3989 =
	     (coreFix_memExe_ldMemLatTimer_timer[109:100] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[109:100] :
	       coreFix_memExe_ldMemLatTimer_timer[109:100] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d3996 =
	     (coreFix_memExe_ldMemLatTimer_timer[99:90] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[99:90] :
	       coreFix_memExe_ldMemLatTimer_timer[99:90] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4002 =
	     (coreFix_memExe_ldMemLatTimer_timer[89:80] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[89:80] :
	       coreFix_memExe_ldMemLatTimer_timer[89:80] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4009 =
	     (coreFix_memExe_ldMemLatTimer_timer[79:70] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[79:70] :
	       coreFix_memExe_ldMemLatTimer_timer[79:70] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4015 =
	     (coreFix_memExe_ldMemLatTimer_timer[69:60] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[69:60] :
	       coreFix_memExe_ldMemLatTimer_timer[69:60] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4022 =
	     (coreFix_memExe_ldMemLatTimer_timer[59:50] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[59:50] :
	       coreFix_memExe_ldMemLatTimer_timer[59:50] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4028 =
	     (coreFix_memExe_ldMemLatTimer_timer[49:40] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[49:40] :
	       coreFix_memExe_ldMemLatTimer_timer[49:40] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4035 =
	     (coreFix_memExe_ldMemLatTimer_timer[39:30] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[39:30] :
	       coreFix_memExe_ldMemLatTimer_timer[39:30] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4041 =
	     (coreFix_memExe_ldMemLatTimer_timer[29:20] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[29:20] :
	       coreFix_memExe_ldMemLatTimer_timer[29:20] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4048 =
	     (coreFix_memExe_ldMemLatTimer_timer[19:10] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[19:10] :
	       coreFix_memExe_ldMemLatTimer_timer[19:10] + 10'd1 ;
  assign IF_coreFix_memExe_ldMemLatTimer_timer_901_BITS_ETC___d4054 =
	     (coreFix_memExe_ldMemLatTimer_timer[9:0] == 10'd1023) ?
	       coreFix_memExe_ldMemLatTimer_timer[9:0] :
	       coreFix_memExe_ldMemLatTimer_timer[9:0] + 10'd1 ;
  assign IF_coreFix_memExe_lsq_firstLd__244_BIT_94_291__ETC___d1316 =
	     coreFix_memExe_lsq$firstLd[94] ?
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 48'd0,
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1298 } :
		  { {48{SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1298[15]}},
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1298 }) :
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 56'd0,
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1312 } :
		  { {56{SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1312[7]}},
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1312 }) ;
  assign IF_coreFix_memExe_lsq_firstLd__244_BIT_94_291__ETC___d1365 =
	     coreFix_memExe_lsq$firstLd[94] ?
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 48'd0,
		    SEL_ARR_mmio_dataRespQ_data_0_068_BITS_15_TO_0_ETC___d1348 } :
		  { {48{SEL_ARR_mmio_dataRespQ_data_0_068_BITS_15_TO_0_ETC___d1348[15]}},
		    SEL_ARR_mmio_dataRespQ_data_0_068_BITS_15_TO_0_ETC___d1348 }) :
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 56'd0,
		    SEL_ARR_mmio_dataRespQ_data_0_068_BITS_7_TO_0__ETC___d1361 } :
		  { {56{SEL_ARR_mmio_dataRespQ_data_0_068_BITS_7_TO_0__ETC___d1361[7]}},
		    SEL_ARR_mmio_dataRespQ_data_0_068_BITS_7_TO_0__ETC___d1361 }) ;
  assign IF_coreFix_memExe_lsq_firstLd__244_BIT_96_281__ETC___d1317 =
	     coreFix_memExe_lsq$firstLd[96] ?
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 32'd0,
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1287 } :
		  { {32{SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1287[31]}},
		    SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1287 }) :
	       IF_coreFix_memExe_lsq_firstLd__244_BIT_94_291__ETC___d1316 ;
  assign IF_coreFix_memExe_lsq_firstLd__244_BIT_96_281__ETC___d1366 =
	     coreFix_memExe_lsq$firstLd[96] ?
	       (coreFix_memExe_lsq$firstLd[92] ?
		  { 32'd0,
		    SEL_ARR_mmio_dataRespQ_data_0_068_BITS_31_TO_0_ETC___d1339 } :
		  { {32{SEL_ARR_mmio_dataRespQ_data_0_068_BITS_31_TO_0_ETC___d1339[31]}},
		    SEL_ARR_mmio_dataRespQ_data_0_068_BITS_31_TO_0_ETC___d1339 }) :
	       IF_coreFix_memExe_lsq_firstLd__244_BIT_94_291__ETC___d1365 ;
  assign IF_coreFix_memExe_memRespLdQ_deqReq_dummy2_2_r_ETC___d3566 =
	     _theResult_____2__h354394 == v__h353809 ;
  assign IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_whas_ETC___d3559 =
	     WILL_FIRE_RL_coreFix_memExe_doRespLdMem ||
	     coreFix_memExe_memRespLdQ_deqReq_rl ;
  assign IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3544 =
	     coreFix_memExe_memRespLdQ_enqReq_lat_0$whas ?
	       coreFix_memExe_memRespLdQ_enqReq_lat_0$wget[69] :
	       coreFix_memExe_memRespLdQ_enqReq_rl[69] ;
  assign IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1175 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		  coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[83:82] :
		  coreFix_memExe_reqLrScAmoQ_data_0_rl[83:82]) :
	       2'd0 ;
  assign IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1179 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		  coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[81:79] :
		  coreFix_memExe_reqLrScAmoQ_data_0_rl[81:79]) :
	       3'd0 ;
  assign IF_coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1__ETC___d1222 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		  coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[6:3] :
		  coreFix_memExe_reqLrScAmoQ_data_0_rl[6:3]) :
	       4'd0 ;
  assign IF_coreFix_memExe_respLrScAmoQ_enqReq_lat_1_wh_ETC___d3469 =
	     coreFix_memExe_respLrScAmoQ_enqReq_lat_0$whas ?
	       coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget[64] :
	       coreFix_memExe_respLrScAmoQ_enqReq_rl[64] ;
  assign IF_coreFix_memExe_stMemLatTimer_doneEn_whas__7_ETC___d3836 =
	     coreFix_memExe_stMemLatTimer_doneEn$whas ?
	       { i__h362270 != 2'd3 &&
		 coreFix_memExe_stMemLatTimer_started[3],
		 i__h362270 != 2'd2 &&
		 coreFix_memExe_stMemLatTimer_started[2],
		 i__h362270 != 2'd1 &&
		 coreFix_memExe_stMemLatTimer_started[1],
		 i__h362270 != 2'd0 &&
		 coreFix_memExe_stMemLatTimer_started[0] } :
	       coreFix_memExe_stMemLatTimer_started ;
  assign IF_coreFix_memExe_stMemLatTimer_startEn_whas___ETC___d3816 =
	     coreFix_memExe_stb$issue[635:634] == 2'd3 ||
	     (coreFix_memExe_stMemLatTimer_doneEn$whas ?
		i__h362270 != 2'd3 &&
		coreFix_memExe_stMemLatTimer_started[3] :
		coreFix_memExe_stMemLatTimer_started[3]) ;
  assign IF_coreFix_memExe_stMemLatTimer_startEn_whas___ETC___d3821 =
	     coreFix_memExe_stb$issue[635:634] == 2'd2 ||
	     (coreFix_memExe_stMemLatTimer_doneEn$whas ?
		i__h362270 != 2'd2 &&
		coreFix_memExe_stMemLatTimer_started[2] :
		coreFix_memExe_stMemLatTimer_started[2]) ;
  assign IF_coreFix_memExe_stMemLatTimer_startEn_whas___ETC___d3827 =
	     coreFix_memExe_stb$issue[635:634] == 2'd1 ||
	     (coreFix_memExe_stMemLatTimer_doneEn$whas ?
		i__h362270 != 2'd1 &&
		coreFix_memExe_stMemLatTimer_started[1] :
		coreFix_memExe_stMemLatTimer_started[1]) ;
  assign IF_coreFix_memExe_stMemLatTimer_startEn_whas___ETC___d3832 =
	     coreFix_memExe_stb$issue[635:634] == 2'd0 ||
	     (coreFix_memExe_stMemLatTimer_doneEn$whas ?
		i__h362270 != 2'd0 &&
		coreFix_memExe_stMemLatTimer_started[0] :
		coreFix_memExe_stMemLatTimer_started[0]) ;
  assign IF_coreFix_memExe_stMemLatTimer_timer_783_BITS_ETC___d3787 =
	     (coreFix_memExe_stMemLatTimer_timer[39:30] == 10'd1023) ?
	       coreFix_memExe_stMemLatTimer_timer[39:30] :
	       coreFix_memExe_stMemLatTimer_timer[39:30] + 10'd1 ;
  assign IF_coreFix_memExe_stMemLatTimer_timer_783_BITS_ETC___d3793 =
	     (coreFix_memExe_stMemLatTimer_timer[29:20] == 10'd1023) ?
	       coreFix_memExe_stMemLatTimer_timer[29:20] :
	       coreFix_memExe_stMemLatTimer_timer[29:20] + 10'd1 ;
  assign IF_coreFix_memExe_stMemLatTimer_timer_783_BITS_ETC___d3800 =
	     (coreFix_memExe_stMemLatTimer_timer[19:10] == 10'd1023) ?
	       coreFix_memExe_stMemLatTimer_timer[19:10] :
	       coreFix_memExe_stMemLatTimer_timer[19:10] + 10'd1 ;
  assign IF_coreFix_memExe_stMemLatTimer_timer_783_BITS_ETC___d3806 =
	     (coreFix_memExe_stMemLatTimer_timer[9:0] == 10'd1023) ?
	       coreFix_memExe_stMemLatTimer_timer[9:0] :
	       coreFix_memExe_stMemLatTimer_timer[9:0] + 10'd1 ;
  assign IF_csrf_minstret_ehr_data_lat_0_whas_THEN_IF_c_ETC___d10 =
	     csrf_minstret_ehr_data_lat_0$whas ?
	       rob$deqPort_0_deq_data[95:32] :
	       csrf_minstret_ehr_data_rl ;
  assign IF_fetchStage_RDY_pipelines_0_first__2435_AND__ETC___d12814 =
	     fetchStage_RDY_pipelines_0_first__2435_AND_NOT_ETC___d12810 ?
	       fetchStage$RDY_pipelines_0_first :
	       !regRenamingTable$rename_0_canRename ||
	       fetchStage$RDY_pipelines_0_first ;
  assign IF_fetchStage_RDY_pipelines_1_first__2446_AND__ETC___d13082 =
	     (fetchStage$RDY_pipelines_1_first &&
	      (fetchStage$pipelines_1_first[194:192] == 3'd0 ||
	       fetchStage$pipelines_1_first[194:192] == 3'd1)) ?
	       (!fetchStage$pipelines_0_canDeq ||
		fetchStage$RDY_pipelines_0_first) &&
	       SEL_ARR_fetchStage_pipelines_0_canDeq__2436_AN_ETC___d13048 :
	       fetchStage$RDY_pipelines_1_first &&
	       IF_NOT_fetchStage_pipelines_1_first__2447_BITS_ETC___d13080 ;
  assign IF_fetchStage_RDY_pipelines_1_first__2446_AND__ETC___d13147 =
	     (fetchStage$RDY_pipelines_1_first &&
	      (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	       !fetchStage$pipelines_0_canDeq ||
	       fetchStage$RDY_pipelines_0_first) &&
	      fetchStage_RDY_pipelines_0_first__2435_AND_fet_ETC___d12881 &&
	      NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d12985) ?
	       IF_fetchStage_RDY_pipelines_1_first__2446_AND__ETC___d13082 &&
	       (IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13144 ||
		!fetchStage$pipelines_0_canDeq ||
		fetchStage$RDY_pipelines_0_first) :
	       !fetchStage$pipelines_0_canDeq ||
	       fetchStage$RDY_pipelines_0_first ;
  assign IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13197 =
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13190 ||
	     rob$RDY_enqPort_0_enq &&
	     regRenamingTable$RDY_rename_0_claimRename &&
	     regRenamingTable$RDY_rename_0_getRename &&
	     fetchStage$RDY_pipelines_0_deq &&
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$RDY_claimSpecTag) ;
  assign IF_fetchStage_pipelines_0_first__2438_BIT_68_2_ETC___d12656 =
	     (fetchStage$pipelines_0_first[68] ||
	      !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[8] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[9] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[10] &&
	      !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[11]) ?
	       (fetchStage$pipelines_0_first[68] ?
		  fetchStage$pipelines_0_first[67:64] :
		  (checkForException___d12547[4] ?
		     checkForException___d12547[3:0] :
		     4'd2)) :
	       ((!IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] &&
		 !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] &&
		 !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] &&
		 !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] &&
		 !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] &&
		 !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] &&
		 !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] &&
		 !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7] &&
		 !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[8] &&
		 !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[9] &&
		 !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[10]) ?
		  4'd11 :
		  ((!IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] &&
		    !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] &&
		    !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] &&
		    !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] &&
		    !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] &&
		    !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] &&
		    !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] &&
		    !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7] &&
		    !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[8] &&
		    !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[9]) ?
		     4'd10 :
		     ((!IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] &&
		       !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] &&
		       !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] &&
		       !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] &&
		       !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] &&
		       !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] &&
		       !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] &&
		       !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7] &&
		       !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[8]) ?
			4'd9 :
			((!IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] &&
			  !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] &&
			  !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] &&
			  !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] &&
			  !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] &&
			  !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] &&
			  !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] &&
			  !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7]) ?
			   4'd8 :
			   ((!IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] &&
			     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] &&
			     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] &&
			     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] &&
			     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] &&
			     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] &&
			     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6]) ?
			      4'd7 :
			      ((!IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] &&
				!IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] &&
				!IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] &&
				!IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] &&
				!IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] &&
				!IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5]) ?
				 4'd6 :
				 ((!IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] &&
				   !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4]) ?
				    4'd5 :
				    ((!IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] &&
				      !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] &&
				      !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] &&
				      !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3]) ?
				       4'd4 :
				       ((!IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] &&
					 !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] &&
					 !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2]) ?
					  4'd3 :
					  ((!IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] &&
					    !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1]) ?
					     4'd2 :
					     (IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] ?
						4'd0 :
						4'd1))))))))))) ;
  assign IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13311 =
	     IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13270 &&
	     IF_fetchStage_RDY_pipelines_1_first__2446_AND__ETC___d13082 &&
	     (IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13295 ||
	      rob$RDY_enqPort_1_enq &&
	      regRenamingTable$RDY_rename_1_claimRename &&
	      regRenamingTable$RDY_rename_1_getRename &&
	      fetchStage_RDY_pipelines_1_deq__2450_AND_NOT_f_ETC___d13305) ;
  assign IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13564 =
	     (fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	      NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13498 &&
	      IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13507) ?
	       IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13508 :
	       DONTCARE_CONCAT_IF_IF_fetchStage_pipelines_1_f_ETC___d13510 ;
  assign IF_mmio_cRqQ_enqReq_lat_1_whas__42_THEN_IF_mmi_ETC___d504 =
	     { mmio_cRqQ_enqReq_lat_0$whas ?
		 mmio_cRqQ_enqReq_lat_0$wget[77:76] :
		 mmio_cRqQ_enqReq_rl[77:76],
	       (mmio_cRqQ_enqReq_lat_0$whas ?
		  mmio_cRqQ_enqReq_lat_0$wget[77:76] == 2'd0 :
		  mmio_cRqQ_enqReq_rl[77:76] == 2'd0) ?
		 { 2'h2,
		   mmio_cRqQ_enqReq_lat_0$whas ?
		     mmio_cRqQ_enqReq_lat_0$wget[73:72] :
		     mmio_cRqQ_enqReq_rl[73:72] } :
		 (mmio_cRqQ_enqReq_lat_0$whas ?
		    mmio_cRqQ_enqReq_lat_0$wget[75:72] :
		    mmio_cRqQ_enqReq_rl[75:72]) } ;
  assign IF_mmio_cRqQ_enqReq_lat_1_whas__42_THEN_mmio_c_ETC___d351 =
	     mmio_cRqQ_enqReq_lat_0$whas ?
	       mmio_cRqQ_enqReq_lat_0$wget[142] :
	       mmio_cRqQ_enqReq_rl[142] ;
  assign IF_mmio_cRsQ_enqReq_lat_1_whas__78_THEN_mmio_c_ETC___d814 =
	     CAN_FIRE_RL_mmio_handlePRq ?
	       mmio_cRsQ_enqReq_lat_0$wget[1] :
	       mmio_cRsQ_enqReq_rl[1] ;
  assign IF_mmio_dataReqQ_enqReq_lat_1_whas__1_THEN_IF__ETC___d203 =
	     { mmio_dataReqQ_enqReq_lat_0$whas ?
		 mmio_dataReqQ_enqReq_lat_0$wget[77:76] :
		 mmio_dataReqQ_enqReq_rl[77:76],
	       (mmio_dataReqQ_enqReq_lat_0$whas ?
		  mmio_dataReqQ_enqReq_lat_0$wget[77:76] == 2'd0 :
		  mmio_dataReqQ_enqReq_rl[77:76] == 2'd0) ?
		 { 2'h2,
		   mmio_dataReqQ_enqReq_lat_0$whas ?
		     mmio_dataReqQ_enqReq_lat_0$wget[73:72] :
		     mmio_dataReqQ_enqReq_rl[73:72] } :
		 (mmio_dataReqQ_enqReq_lat_0$whas ?
		    mmio_dataReqQ_enqReq_lat_0$wget[75:72] :
		    mmio_dataReqQ_enqReq_rl[75:72]) } ;
  assign IF_mmio_dataReqQ_enqReq_lat_1_whas__1_THEN_mmi_ETC___d50 =
	     mmio_dataReqQ_enqReq_lat_0$whas ?
	       mmio_dataReqQ_enqReq_lat_0$wget[142] :
	       mmio_dataReqQ_enqReq_rl[142] ;
  assign IF_mmio_dataRespQ_enqReq_lat_1_whas__08_THEN_m_ETC___d244 =
	     CAN_FIRE_RL_mmio_sendDataResp ?
	       mmio_dataRespQ_enqReq_lat_0$wget[65] :
	       mmio_dataRespQ_enqReq_rl[65] ;
  assign IF_mmio_pRqQ_enqReq_lat_1_whas__11_THEN_IF_mmi_ETC___d773 =
	     { EN_mmioToPlatform_pRq_enq ?
		 mmio_pRqQ_enqReq_lat_0$wget[37:36] :
		 mmio_pRqQ_enqReq_rl[37:36],
	       (EN_mmioToPlatform_pRq_enq ?
		  mmio_pRqQ_enqReq_lat_0$wget[37:36] == 2'd0 :
		  mmio_pRqQ_enqReq_rl[37:36] == 2'd0) ?
		 { 2'h2,
		   EN_mmioToPlatform_pRq_enq ?
		     mmio_pRqQ_enqReq_lat_0$wget[33:32] :
		     mmio_pRqQ_enqReq_rl[33:32] } :
		 (EN_mmioToPlatform_pRq_enq ?
		    mmio_pRqQ_enqReq_lat_0$wget[35:32] :
		    mmio_pRqQ_enqReq_rl[35:32]) } ;
  assign IF_mmio_pRqQ_enqReq_lat_1_whas__11_THEN_mmio_p_ETC___d620 =
	     EN_mmioToPlatform_pRq_enq ?
	       mmio_pRqQ_enqReq_lat_0$wget[39] :
	       mmio_pRqQ_enqReq_rl[39] ;
  assign IF_mmio_pRsQ_enqReq_lat_1_whas__09_THEN_mmio_p_ETC___d518 =
	     EN_mmioToPlatform_pRs_enq ?
	       mmio_pRsQ_enqReq_lat_0$wget[69] :
	       mmio_pRsQ_enqReq_rl[69] ;
  assign IF_rob_deqPort_0_canDeq__3974_THEN_IF_NOT_rob__ETC___d14083 =
	     rob$deqPort_0_canDeq ?
	       y_avValue_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd__h781499 :
	       64'd0 ;
  assign IF_rob_deqPort_0_canDeq__3974_THEN_IF_NOT_rob__ETC___d14173 =
	     rob$deqPort_0_canDeq ? y_avValue_fst__h780904 : 5'd0 ;
  assign IF_rob_deqPort_0_canDeq__3974_THEN_IF_NOT_rob__ETC___d14195 =
	     rob$deqPort_0_canDeq ?
	       y_avValue_snd_snd_snd_fst__h781428 :
	       2'd0 ;
  assign IF_rob_deqPort_1_canDeq__3978_THEN_IF_NOT_rob__ETC___d14187 =
	     rob$deqPort_1_canDeq ?
	       IF_NOT_rob_deqPort_1_deq_data__3981_BIT_25_398_ETC___d14186 :
	       rob$deqPort_0_canDeq && rob$deqPort_0_deq_data[26] ;
  assign IF_sfdin10433_BIT_33_THEN_2_ELSE_0__q28 =
	     sfdin__h410433[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin11030_BIT_4_THEN_2_ELSE_0__q167 =
	     sfdin__h611030[4] ? 2'd2 : 2'd0 ;
  assign IF_sfdin13857_BIT_33_THEN_2_ELSE_0__q98 =
	     sfdin__h513857[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin41892_BIT_33_THEN_2_ELSE_0__q53 =
	     sfdin__h441892[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin54532_BIT_4_THEN_2_ELSE_0__q144 =
	     sfdin__h654532[4] ? 2'd2 : 2'd0 ;
  assign IF_sfdin62146_BIT_33_THEN_2_ELSE_0__q63 =
	     sfdin__h462146[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin67949_BIT_4_THEN_2_ELSE_0__q127 =
	     sfdin__h567949[4] ? 2'd2 : 2'd0 ;
  assign IF_sfdin90179_BIT_33_THEN_2_ELSE_0__q18 =
	     sfdin__h390179[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin93603_BIT_33_THEN_2_ELSE_0__q88 =
	     sfdin__h493603[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd00025_BIT_33_THEN_2_ELSE_0__q20 =
	     _theResult___snd__h400025[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd00155_BIT_4_THEN_2_ELSE_0__q163 =
	     _theResult___snd__h600155[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd03449_BIT_33_THEN_2_ELSE_0__q90 =
	     _theResult___snd__h503449[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd20303_BIT_33_THEN_2_ELSE_0__q33 =
	     _theResult___snd__h420303[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd21048_BIT_4_THEN_2_ELSE_0__q170 =
	     _theResult___snd__h621048[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd23727_BIT_33_THEN_2_ELSE_0__q103 =
	     _theResult___snd__h523727[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd43657_BIT_4_THEN_2_ELSE_0__q140 =
	     _theResult___snd__h643657[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd51738_BIT_33_THEN_2_ELSE_0__q55 =
	     _theResult___snd__h451738[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd57074_BIT_4_THEN_2_ELSE_0__q123 =
	     _theResult___snd__h557074[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd64550_BIT_4_THEN_2_ELSE_0__q147 =
	     _theResult___snd__h664550[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd72016_BIT_33_THEN_2_ELSE_0__q68 =
	     _theResult___snd__h472016[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd77967_BIT_4_THEN_2_ELSE_0__q130 =
	     _theResult___snd__h577967[4] ? 2'd2 : 2'd0 ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d5578 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4369 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4370 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5526[2] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5538[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d5606 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4369 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4370 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5526[0] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5538[0]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6970 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5761 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5762 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6918[2] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6930[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d6998 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5761 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5762 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6918[0] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6930[0]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d8362 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7153 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7154 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d8310[2] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8322[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivEx_ETC___d8390 =
	     !_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7153 ||
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7154 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d8310[0] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8322[0]) ;
  assign NOT_IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_246_ETC___d12713 =
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[8] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[9] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[10] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[11] &&
	     !checkForException___d12547[4] &&
	     NOT_csrf_fs_reg_read__1649_EQ_0_2536_2537_OR_N_ETC___d12706 &&
	     (fetchStage$pipelines_0_first[231:200] != 32'h10500073 ||
	      !csrf_tw_reg ||
	      csrf_prv_reg == 2'd3) ;
  assign NOT_IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_246_ETC___d12802 =
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[8] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[9] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[10] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[11] &&
	     !checkForException___d12547[4] &&
	     NOT_csrf_fs_reg_read__1649_EQ_0_2536_2537_OR_N_ETC___d12800 ;
  assign NOT_IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_246_ETC___d12974 =
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[8] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[9] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[10] &&
	     !IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[11] &&
	     !checkForException___d12943[4] &&
	     NOT_csrf_fs_reg_read__1649_EQ_0_2536_2537_OR_N_ETC___d12972 ;
  assign NOT_IF_NOT_rob_deqPort_0_canDeq__3974_3975_OR__ETC___d14192 =
	     (fflags__h782275 & csrf_fflags_reg) != fflags__h782275 ||
	     !r__h678679 &&
	     (IF_rob_deqPort_1_canDeq__3978_THEN_IF_NOT_rob__ETC___d14187 ||
	      fflags__h782275 != 5'd0) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11069 =
	     (f1_exp__h536047 != 8'd255 || f1_sfd__h536048 == 23'd0) &&
	     (f1_exp__h536047 != 8'd255 || f1_sfd__h536048 != 23'd0) &&
	     (f1_exp__h536047 != 8'd0 || f1_sfd__h536048 != 23'd0) &&
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11066 ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11111 =
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11069 |
	     ((f2_exp__h579217 != 8'd255 || f2_sfd__h579218 == 23'd0) &&
	      (f2_exp__h579217 != 8'd255 || f2_sfd__h579218 != 23'd0) &&
	      (f2_exp__h579217 != 8'd0 || f2_sfd__h579218 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11107) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11169 =
	     (f1_exp__h536047 != 8'd255 || f1_sfd__h536048 == 23'd0) &&
	     (f1_exp__h536047 != 8'd255 || f1_sfd__h536048 != 23'd0) &&
	     (f1_exp__h536047 != 8'd0 || f1_sfd__h536048 != 23'd0) &&
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11166 ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11180 =
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11169 |
	     ((f2_exp__h579217 != 8'd255 || f2_sfd__h579218 == 23'd0) &&
	      (f2_exp__h579217 != 8'd255 || f2_sfd__h579218 != 23'd0) &&
	      (f2_exp__h579217 != 8'd0 || f2_sfd__h579218 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11176) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11209 =
	     (f1_exp__h536047 != 8'd255 || f1_sfd__h536048 == 23'd0) &&
	     (f1_exp__h536047 != 8'd255 || f1_sfd__h536048 != 23'd0) &&
	     (f1_exp__h536047 != 8'd0 || f1_sfd__h536048 != 23'd0) &&
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11206 ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11224 =
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11209 |
	     ((f2_exp__h579217 != 8'd255 || f2_sfd__h579218 == 23'd0) &&
	      (f2_exp__h579217 != 8'd255 || f2_sfd__h579218 != 23'd0) &&
	      (f2_exp__h579217 != 8'd0 || f2_sfd__h579218 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11220) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11255 =
	     (f1_exp__h536047 != 8'd255 || f1_sfd__h536048 == 23'd0) &&
	     (f1_exp__h536047 != 8'd255 || f1_sfd__h536048 != 23'd0) &&
	     (f1_exp__h536047 != 8'd0 || f1_sfd__h536048 != 23'd0) &&
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11252 ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11268 =
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11255 |
	     ((f2_exp__h579217 != 8'd255 || f2_sfd__h579218 == 23'd0) &&
	      (f2_exp__h579217 != 8'd255 || f2_sfd__h579218 != 23'd0) &&
	      (f2_exp__h579217 != 8'd0 || f2_sfd__h579218 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11264) ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11297 =
	     (f1_exp__h536047 != 8'd255 || f1_sfd__h536048 == 23'd0) &&
	     (f1_exp__h536047 != 8'd255 || f1_sfd__h536048 != 23'd0) &&
	     (f1_exp__h536047 != 8'd0 || f1_sfd__h536048 != 23'd0) &&
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11294 ;
  assign NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11310 =
	     NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11297 |
	     ((f2_exp__h579217 != 8'd255 || f2_sfd__h579218 == 23'd0) &&
	      (f2_exp__h579217 != 8'd255 || f2_sfd__h579218 != 23'd0) &&
	      (f2_exp__h579217 != 8'd0 || f2_sfd__h579218 != 23'd0) &&
	      IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11306) ;
  assign NOT_IF_rob_deqPort_0_deq_data__3579_BITS_97_TO_ETC___d13950 =
	     next_pc__h777816 !=
	     rob_deqPort_0_deq_data__3579_BITS_353_TO_290_3_ETC___d13947 ;
  assign NOT_SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__ETC___d12867 =
	     !SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__281_ETC___d12865 &&
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_0_canRename &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12807 ;
  assign NOT_coreFix_aluExe_0_bypassWire_0_whas__2058_2_ETC___d12087 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__2059_BITS__ETC___d12063) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_aluExe_0_bypassWire_1_wget__2074_BITS__ETC___d12076) &&
	     (!coreFix_aluExe_0_bypassWire_2$whas ||
	      !coreFix_aluExe_0_bypassWire_2_wget__2082_BITS__ETC___d12084) ;
  assign NOT_coreFix_aluExe_0_bypassWire_0_whas__2058_2_ETC___d12120 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_0_bypassWire_0_wget__2059_BITS__ETC___d12107) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_aluExe_0_bypassWire_1_wget__2074_BITS__ETC___d12113) &&
	     (!coreFix_aluExe_0_bypassWire_2$whas ||
	      !coreFix_aluExe_0_bypassWire_2_wget__2082_BITS__ETC___d12117) ;
  assign NOT_coreFix_aluExe_1_bypassWire_0_whas__1530_1_ETC___d11559 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1531_BITS__ETC___d11535) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_aluExe_1_bypassWire_1_wget__1546_BITS__ETC___d11548) &&
	     (!coreFix_aluExe_1_bypassWire_2$whas ||
	      !coreFix_aluExe_1_bypassWire_2_wget__1554_BITS__ETC___d11556) ;
  assign NOT_coreFix_aluExe_1_bypassWire_0_whas__1530_1_ETC___d11592 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_aluExe_1_bypassWire_0_wget__1531_BITS__ETC___d11579) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_aluExe_1_bypassWire_1_wget__1546_BITS__ETC___d11585) &&
	     (!coreFix_aluExe_1_bypassWire_2$whas ||
	      !coreFix_aluExe_1_bypassWire_2_wget__1554_BITS__ETC___d11589) ;
  assign NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8529 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8505) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8518) &&
	     (!coreFix_fpuMulDivExe_0_bypassWire_2$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_2_wget__524__ETC___d8526) ;
  assign NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8561 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8548) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8554) &&
	     (!coreFix_fpuMulDivExe_0_bypassWire_2$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_2_wget__524__ETC___d8558) ;
  assign NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8590 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8577) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8583) &&
	     (!coreFix_fpuMulDivExe_0_bypassWire_2$whas ||
	      !coreFix_fpuMulDivExe_0_bypassWire_2_wget__524__ETC___d8587) ;
  assign NOT_coreFix_fpuMulDivExe_0_regToExeQ_first__67_ETC___d8733 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] != 3'd3 ||
	     CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q235 ;
  assign NOT_coreFix_fpuMulDivExe_0_rsFpuMulDiv_canEnq__ETC___d13091 =
	     !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ||
	     fetchStage$pipelines_0_first[68] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[8] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[9] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[10] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[11] ;
  assign NOT_coreFix_memExe_bypassWire_0_whas__476_484__ETC___d1505 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__477_BITS_70__ETC___d1481) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_memExe_bypassWire_1_wget__492_BITS_70__ETC___d1494) &&
	     (!coreFix_memExe_bypassWire_2$whas ||
	      !coreFix_memExe_bypassWire_2_wget__500_BITS_70__ETC___d1502) ;
  assign NOT_coreFix_memExe_bypassWire_0_whas__476_484__ETC___d1537 =
	     (!coreFix_aluExe_0_bypassWire_0$whas ||
	      !coreFix_memExe_bypassWire_0_wget__477_BITS_70__ETC___d1524) &&
	     (!coreFix_aluExe_0_bypassWire_1$whas ||
	      !coreFix_memExe_bypassWire_1_wget__492_BITS_70__ETC___d1530) &&
	     (!coreFix_memExe_bypassWire_2$whas ||
	      !coreFix_memExe_bypassWire_2_wget__500_BITS_70__ETC___d1534) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2357 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqMsh_ETC___d2531 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1983) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
	     2'd0 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3068 =
	     !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_dummy2_1$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_cRqRet_ETC___d3089 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT ||
	      (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$whas ?
		 !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_lat_0$wget[3] :
		 !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl[3])) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3057 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3137 =
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_dummy2_1$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_fromPQ_ETC___d3193 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT ||
	      (EN_dCacheToParent_fromP_enq ?
		 !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_lat_0$wget[583] :
		 !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl[583])) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3163 ||
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d1917 =
	     !coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] ||
	     !IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d1915 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d1968 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd4 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2364 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1983) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2366 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState ==
	      3'd1 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2364) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2388 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ||
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd3 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d1917 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2392 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd3 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d1917 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2395 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2391 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2392) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2409 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_pi_ETC___d2408 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2412 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2391 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2409) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2419 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd4 ||
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd3 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d1917 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2425 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 &&
	      (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	       !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd4 ||
	      NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2392) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2432 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2457 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd1 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2465 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd4 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2473 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd3 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d1917 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[3] ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2483 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1983) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	      2'd0 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2509 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd0 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd2 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd4 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd3 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd1 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2526 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	     2'd0 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2529 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2527 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2539 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1983) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2537 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2541 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2539 ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2547 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] ||
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1892 &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd4 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$RDY_deqWrite &&
	      (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	       3'd1 ||
	       coreFix_memExe_stb$RDY_deq)) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2614 =
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570] &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2571 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2574 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
	      2'd1 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[83:82] <=
	      2'd1 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[1:0] !=
	      2'd0 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd3 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot[0]) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_rqFrom_ETC___d1100 =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_0$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_1$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_dummy2_2$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3258 =
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_dummy2_1$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_ETC___d3315 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$Q_OUT ||
	      (CAN_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRqToP ?
		 !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_lat_0$wget[72] :
		 !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl[72])) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3284 ||
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty) ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3349 =
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_dummy2_1$Q_OUT ||
	     !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl ;
  assign NOT_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_ETC___d3406 =
	     (!coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$Q_OUT ||
	      (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$whas ?
		 !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_lat_0$wget[579] :
		 !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl[579])) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3375 ||
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty) ;
  assign NOT_coreFix_memExe_dMem_perfReqQ_clearReq_dumm_ETC___d1725 =
	     !coreFix_memExe_dMem_perfReqQ_clearReq_dummy2_1$Q_OUT ||
	     !coreFix_memExe_dMem_perfReqQ_clearReq_rl ;
  assign NOT_coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_ETC___d1769 =
	     (!coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$Q_OUT ||
	      !coreFix_memExe_dMem_perfReqQ_enqReq_rl[4]) &&
	     (coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$Q_OUT &&
	      coreFix_memExe_dMem_perfReqQ_deqReq_rl ||
	      coreFix_memExe_dMem_perfReqQ_empty) ;
  assign NOT_coreFix_memExe_dTlb_procResp__644_BITS_174_ETC___d1683 =
	     !coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1654 &&
	     coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1655 &&
	     !coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1659 &&
	     !coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1662 ;
  assign NOT_coreFix_memExe_forwardQ_clearReq_dummy2_1__ETC___d3622 =
	     !coreFix_memExe_forwardQ_clearReq_dummy2_1$Q_OUT ||
	     !coreFix_memExe_forwardQ_clearReq_rl ;
  assign NOT_coreFix_memExe_forwardQ_enqReq_dummy2_2_re_ETC___d3677 =
	     (!coreFix_memExe_forwardQ_enqReq_dummy2_2$Q_OUT ||
	      (coreFix_memExe_forwardQ_enqReq_lat_0$whas ?
		 !coreFix_memExe_forwardQ_enqReq_lat_0$wget[69] :
		 !coreFix_memExe_forwardQ_enqReq_rl[69])) &&
	     (coreFix_memExe_forwardQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_forwardQ_deqReq_lat_1_whas___ETC___d3648 ||
	      coreFix_memExe_forwardQ_empty) ;
  assign NOT_coreFix_memExe_memRespLdQ_clearReq_dummy2__ETC___d3533 =
	     !coreFix_memExe_memRespLdQ_clearReq_dummy2_1$Q_OUT ||
	     !coreFix_memExe_memRespLdQ_clearReq_rl ;
  assign NOT_coreFix_memExe_memRespLdQ_enqReq_dummy2_2__ETC___d3588 =
	     (!coreFix_memExe_memRespLdQ_enqReq_dummy2_2$Q_OUT ||
	      (coreFix_memExe_memRespLdQ_enqReq_lat_0$whas ?
		 !coreFix_memExe_memRespLdQ_enqReq_lat_0$wget[69] :
		 !coreFix_memExe_memRespLdQ_enqReq_rl[69])) &&
	     (coreFix_memExe_memRespLdQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_whas_ETC___d3559 ||
	      coreFix_memExe_memRespLdQ_empty) ;
  assign NOT_coreFix_memExe_reqLdQ_full_dummy2_0_read___ETC___d1417 =
	     !coreFix_memExe_reqLdQ_full_dummy2_0$Q_OUT ||
	     !coreFix_memExe_reqLdQ_full_dummy2_1$Q_OUT ||
	     !coreFix_memExe_reqLdQ_full_dummy2_2$Q_OUT ||
	     !coreFix_memExe_reqLdQ_full_rl ;
  assign NOT_coreFix_memExe_reqLrScAmoQ_full_dummy2_0_r_ETC___d990 =
	     !coreFix_memExe_reqLrScAmoQ_full_dummy2_0$Q_OUT ||
	     !coreFix_memExe_reqLrScAmoQ_full_dummy2_1$Q_OUT ||
	     !coreFix_memExe_reqLrScAmoQ_full_dummy2_2$Q_OUT ||
	     !coreFix_memExe_reqLrScAmoQ_full_rl ;
  assign NOT_coreFix_memExe_respLrScAmoQ_clearReq_dummy_ETC___d3458 =
	     !coreFix_memExe_respLrScAmoQ_clearReq_dummy2_1$Q_OUT ||
	     !coreFix_memExe_respLrScAmoQ_clearReq_rl ;
  assign NOT_coreFix_memExe_respLrScAmoQ_enqReq_dummy2__ETC___d3500 =
	     (!coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$Q_OUT ||
	      (coreFix_memExe_respLrScAmoQ_enqReq_lat_0$whas ?
		 !coreFix_memExe_respLrScAmoQ_enqReq_lat_0$wget[64] :
		 !coreFix_memExe_respLrScAmoQ_enqReq_rl[64])) &&
	     (coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$Q_OUT &&
	      (coreFix_memExe_respLrScAmoQ_deqReq_lat_0$whas ||
	       coreFix_memExe_respLrScAmoQ_deqReq_rl) ||
	      coreFix_memExe_respLrScAmoQ_empty) ;
  assign NOT_coreFix_memExe_respLrScAmoQ_full_792_793_A_ETC___d1927 =
	     !coreFix_memExe_respLrScAmoQ_full &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$RDY_pipelineResp_releaseEntry &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[3] ||
	      !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full) ;
  assign NOT_coreFix_memExe_rsMem_canEnq__2834_2897_OR__ETC___d13092 =
	     !coreFix_memExe_rsMem$canEnq ||
	     IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900 ||
	     fetchStage$pipelines_0_first[68] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[8] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[9] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[10] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[11] ;
  assign NOT_csrf_fs_reg_read__1649_EQ_0_2536_2537_OR_N_ETC___d12706 =
	     (csrf_fs_reg != 2'd0 ||
	      (!fetchStage$pipelines_0_first[95] ||
	       !fetchStage$pipelines_0_first[94]) &&
	      (!fetchStage$pipelines_0_first[88] ||
	       !fetchStage$pipelines_0_first[87]) &&
	      !fetchStage$pipelines_0_first[81] &&
	      (!fetchStage$pipelines_0_first[75] ||
	       !fetchStage$pipelines_0_first[74])) &&
	     (fetchStage$pipelines_0_first[199:195] != 5'd13 ||
	      NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12700 &&
	      !csrf_prv_reg_read__2466_ULT_IF_fetchStage_pipe_ETC___d12591 &&
	      csr_addr__h719478 != 12'h8FF) ;
  assign NOT_csrf_fs_reg_read__1649_EQ_0_2536_2537_OR_N_ETC___d12800 =
	     (csrf_fs_reg != 2'd0 ||
	      (!fetchStage$pipelines_0_first[95] ||
	       !fetchStage$pipelines_0_first[94]) &&
	      (!fetchStage$pipelines_0_first[88] ||
	       !fetchStage$pipelines_0_first[87]) &&
	      !fetchStage$pipelines_0_first[81] &&
	      (!fetchStage$pipelines_0_first[75] ||
	       !fetchStage$pipelines_0_first[74])) &&
	     (fetchStage$pipelines_0_first[231:200] != 32'h10500073 ||
	      !csrf_tw_reg ||
	      csrf_prv_reg == 2'd3) ;
  assign NOT_csrf_fs_reg_read__1649_EQ_0_2536_2537_OR_N_ETC___d12972 =
	     (csrf_fs_reg != 2'd0 ||
	      (!fetchStage$pipelines_1_first[95] ||
	       !fetchStage$pipelines_1_first[94]) &&
	      (!fetchStage$pipelines_1_first[88] ||
	       !fetchStage$pipelines_1_first[87]) &&
	      !fetchStage$pipelines_1_first[81] &&
	      (!fetchStage$pipelines_1_first[75] ||
	       !fetchStage$pipelines_1_first[74])) &&
	     (fetchStage$pipelines_1_first[231:200] != 32'h10500073 ||
	      !csrf_tw_reg ||
	      csrf_prv_reg == 2'd3) ;
  assign NOT_csrf_prv_reg_read__2466_ULE_1_3692_3730_OR_ETC___d13734 =
	     !csrf_prv_reg_read__2466_ULE_1___d13692 ||
	     (commitStage_commitTrap[36] ?
		!_0b0_CONCAT_csrf_mideleg_11_reg_read__1769_1770_ETC___d13695 :
		!_0b0_CONCAT_csrf_medeleg_15_reg_read__1760_1761_ETC___d13697) ;
  assign NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13061 =
	     (!fetchStage$pipelines_0_canDeq ||
	      fetchStage$RDY_pipelines_0_first) &&
	     (regRenamingTable_rename_0_canRename__2787_AND__ETC___d12862 &&
	      (fetchStage$pipelines_0_first[194:192] == 3'd3 ||
	       fetchStage$pipelines_0_first[194:192] == 3'd4) ||
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ||
	      !regRenamingTable$rename_1_canRename ||
	      fetchStage_pipelines_1_first__2447_BITS_199_TO_ETC___d13045) ;
  assign NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13074 =
	     (!fetchStage$pipelines_0_canDeq ||
	      fetchStage$RDY_pipelines_0_first) &&
	     (regRenamingTable_rename_0_canRename__2787_AND__ETC___d13072 ||
	      !regRenamingTable$rename_1_canRename ||
	      fetchStage_pipelines_1_first__2447_BITS_199_TO_ETC___d13045) ;
  assign NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13113 =
	     !fetchStage$pipelines_0_canDeq ||
	     NOT_regRenamingTable_rename_0_canRename__2787__ETC___d13107 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd3 &&
	     fetchStage$pipelines_0_first[194:192] != 3'd4 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13130 =
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_regRenamingTable_rename_0_canRename__2787__ETC___d12891 ||
	      fetchStage$pipelines_0_first[194:192] != 3'd2 ||
	      IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900) &&
	     coreFix_memExe_rsMem$canEnq &&
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q216 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13265 =
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_specTagManager_canClaim__2785_2875_OR_NOT__ETC___d13244) &&
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q220 &&
	     (fetchStage$pipelines_1_first[199:195] == 5'd14 ||
	      coreFix_memExe_rsMem$RDY_enq) ;
  assign NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13317 =
	     (!fetchStage$pipelines_0_canDeq ||
	      fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13199 &&
	      IF_fetchStage_RDY_pipelines_0_first__2435_AND__ETC___d12814) &&
	     fetchStage$RDY_pipelines_0_first &&
	     fetchStage_pipelines_0_canDeq__2436_AND_fetchS_ETC___d13315 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 =
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d13323 &&
	      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12848) &&
	     fetchStage$pipelines_1_canDeq ;
  assign NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13437 =
	     !fetchStage$pipelines_0_canDeq ||
	     NOT_regRenamingTable_rename_0_canRename__2787__ETC___d13162 ||
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12905 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13448 =
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	     NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13445 &&
	     (fetchStage$pipelines_1_first[194:192] == 3'd0 ||
	      fetchStage$pipelines_1_first[194:192] == 3'd1) &&
	     SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__243_ETC___d13238 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13468 =
	     !fetchStage$pipelines_0_canDeq ||
	     NOT_regRenamingTable_rename_0_canRename__2787__ETC___d13162 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd3 &&
	     fetchStage$pipelines_0_first[194:192] != 3'd4 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13489 =
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	     regRenamingTable_rename_1_canRename__2911_AND__ETC___d13444 &&
	     (fetchStage$pipelines_1_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_1_first[194:192] == 3'd4) &&
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13468 &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq &&
	     NOT_fetchStage_pipelines_1_first__2447_BITS_32_ETC___d13484 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13498 =
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_regRenamingTable_rename_0_canRename__2787__ETC___d13162 ||
	      fetchStage$pipelines_0_first[194:192] != 3'd2 ||
	      IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900) &&
	     coreFix_memExe_rsMem$canEnq &&
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q216 ;
  assign NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13522 =
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	     regRenamingTable_rename_1_canRename__2911_AND__ETC___d13444 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13498 &&
	     fetchStage$pipelines_1_first[173] ;
  assign NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13547 =
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13437 &&
	     specTagManager$canClaim &&
	     regRenamingTable_rename_1_canRename__2911_AND__ETC___d13444 &&
	     IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13144 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd1 ;
  assign NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12700 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd0 ||
	      fetchStage$pipelines_0_first[178:174] != 5'd15) &&
	     rs1__h719479 == 5'd0 &&
	     imm__h719480 == 32'd0 ||
	     csr_addr__h719478[11:10] != 2'b11 ;
  assign NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12807 =
	     fetchStage$pipelines_0_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd20 &&
	     !fetchStage$pipelines_0_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_246_ETC___d12802 &&
	     rob$enqPort_0_canEnq &&
	     epochManager$checkEpoch_0_check ;
  assign NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12849 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_0_canRename &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12807 &&
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12848 ;
  assign NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12993 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_0_canRename &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12807 &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd0 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd1) &&
	     SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827 &&
	     (!coreFix_aluExe_1_rsAlu$canEnq ||
	      coreFix_aluExe_0_rsAlu_approximateCount__2821__ETC___d12823) ;
  assign NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12999 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_0_canRename &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12807 &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd0 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd1) &&
	     SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827 &&
	     (!coreFix_aluExe_0_rsAlu$canEnq ||
	      !coreFix_aluExe_0_rsAlu_approximateCount__2821__ETC___d12823) ;
  assign NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d13155 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_0_canRename &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12807 &&
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872 ;
  assign NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d13323 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12547[4] &&
	     rob$enqPort_0_canEnq ;
  assign NOT_fetchStage_pipelines_0_first__2438_BITS_32_ETC___d13347 =
	     fetchStage$pipelines_0_first[323:260] !=
	     fallthrough_pc__h727582 ;
  assign NOT_fetchStage_pipelines_0_first__2438_BIT_68__ETC___d12860 =
	     !fetchStage$pipelines_0_first[68] &&
	     !checkForException___d12547[4] &&
	     NOT_csrf_fs_reg_read__1649_EQ_0_2536_2537_OR_N_ETC___d12800 &&
	     rob$enqPort_0_canEnq &&
	     epochManager$checkEpoch_0_check ;
  assign NOT_fetchStage_pipelines_1_canDeq__2444_2445_O_ETC___d12453 =
	     !fetchStage$pipelines_1_canDeq ||
	     fetchStage$RDY_pipelines_1_first &&
	     (epochManager$checkEpoch_1_check ||
	      fetchStage$RDY_pipelines_1_deq) ;
  assign NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d12983 =
	     fetchStage$pipelines_1_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd20 &&
	     !fetchStage$pipelines_1_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_246_ETC___d12974 &&
	     rob_enqPort_1_canEnq__2976_AND_epochManager_ch_ETC___d12981 ;
  assign NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d12985 =
	     (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	      (!fetchStage$pipelines_0_canDeq ||
	       NOT_regRenamingTable_rename_0_canRename__2787__ETC___d12891 ||
	       IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12905 ||
	       fetchStage$pipelines_0_first[194:192] != 3'd1) &&
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_1_canRename &&
	     NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d12983 ;
  assign NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13101 =
	     (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	      (!fetchStage$pipelines_0_canDeq ||
	       NOT_regRenamingTable_rename_0_canRename__2787__ETC___d12891 ||
	       IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13095 ||
	       fetchStage$pipelines_0_first[194:192] != 3'd1) &&
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_1_canRename &&
	     NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d12983 ;
  assign NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13122 =
	     fetchStage$pipelines_1_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd20 &&
	     !fetchStage$pipelines_1_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_246_ETC___d12974 &&
	     rob_enqPort_1_canEnq__2976_AND_epochManager_ch_ETC___d13120 ;
  assign NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13139 =
	     fetchStage$pipelines_1_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd20 &&
	     !fetchStage$pipelines_1_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_246_ETC___d12974 &&
	     rob_enqPort_1_canEnq__2976_AND_epochManager_ch_ETC___d13137 ;
  assign NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13445 =
	     (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	      NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13437 &&
	      specTagManager$canClaim) &&
	     regRenamingTable_rename_1_canRename__2911_AND__ETC___d13444 ;
  assign NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13493 =
	     (fetchStage$pipelines_1_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_1_first[194:192] == 3'd4) &&
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13468 &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq &&
	     fetchStage$pipelines_1_first[173] ;
  assign NOT_fetchStage_pipelines_1_first__2447_BITS_32_ETC___d13484 =
	     fetchStage$pipelines_1_first[323:260] !=
	     fallthrough_pc__h745455 ;
  assign NOT_fetchStage_pipelines_1_first__2447_BIT_68__ETC___d13442 =
	     !fetchStage$pipelines_1_first[68] &&
	     !checkForException___d12943[4] &&
	     NOT_csrf_fs_reg_read__1649_EQ_0_2536_2537_OR_N_ETC___d12972 &&
	     rob$enqPort_1_canEnq &&
	     epochManager$checkEpoch_1_check ;
  assign NOT_mmio_cRqQ_clearReq_dummy2_1_read__64_65_OR_ETC___d469 =
	     !mmio_cRqQ_clearReq_dummy2_1$Q_OUT || !mmio_cRqQ_clearReq_rl ;
  assign NOT_mmio_cRqQ_enqReq_dummy2_2_read__70_85_OR_I_ETC___d495 =
	     (!mmio_cRqQ_enqReq_dummy2_2$Q_OUT ||
	      (mmio_cRqQ_enqReq_lat_0$whas ?
		 !mmio_cRqQ_enqReq_lat_0$wget[142] :
		 !mmio_cRqQ_enqReq_rl[142])) &&
	     (mmio_cRqQ_deqReq_dummy2_2$Q_OUT &&
	      (EN_mmioToPlatform_cRq_deq || mmio_cRqQ_deqReq_rl) ||
	      mmio_cRqQ_empty) ;
  assign NOT_mmio_cRsQ_clearReq_dummy2_1_read__03_04_OR_ETC___d808 =
	     !mmio_cRsQ_clearReq_dummy2_1$Q_OUT || !mmio_cRsQ_clearReq_rl ;
  assign NOT_mmio_cRsQ_enqReq_dummy2_2_read__09_29_OR_I_ETC___d839 =
	     (!mmio_cRsQ_enqReq_dummy2_2$Q_OUT ||
	      (CAN_FIRE_RL_mmio_handlePRq ?
		 !mmio_cRsQ_enqReq_lat_0$wget[1] :
		 !mmio_cRsQ_enqReq_rl[1])) &&
	     (mmio_cRsQ_deqReq_dummy2_2$Q_OUT &&
	      (EN_mmioToPlatform_cRs_deq || mmio_cRsQ_deqReq_rl) ||
	      mmio_cRsQ_empty) ;
  assign NOT_mmio_dataPendQ_empty_35_062_AND_rob_RDY_se_ETC___d1063 =
	     !mmio_dataPendQ_empty && rob$RDY_setExecuted_deqLSQ &&
	     coreFix_memExe_lsq$RDY_deqSt &&
	     coreFix_memExe_lsq$RDY_firstSt ;
  assign NOT_mmio_dataPendQ_empty_35_062_AND_rob_RDY_se_ETC___d1331 =
	     !mmio_dataPendQ_empty && rob$RDY_setExecuted_deqLSQ &&
	     coreFix_memExe_lsq$RDY_deqLd &&
	     coreFix_memExe_lsq$RDY_firstLd ;
  assign NOT_mmio_dataPendQ_enqReq_dummy2_2_read__12_27_ETC___d337 =
	     (!mmio_dataPendQ_enqReq_dummy2_2$Q_OUT ||
	      !mmio_dataPendQ_enqReq_lat_0$whas &&
	      !mmio_dataPendQ_enqReq_rl) &&
	     (mmio_dataPendQ_deqReq_dummy2_2$Q_OUT &&
	      (mmio_dataRespQ_deqReq_lat_0$whas ||
	       mmio_dataPendQ_deqReq_rl) ||
	      mmio_dataPendQ_empty) ;
  assign NOT_mmio_dataReqQ_clearReq_dummy2_1_read__63_6_ETC___d168 =
	     !mmio_dataReqQ_clearReq_dummy2_1$Q_OUT ||
	     !mmio_dataReqQ_clearReq_rl ;
  assign NOT_mmio_dataReqQ_enqReq_dummy2_2_read__69_84__ETC___d194 =
	     (!mmio_dataReqQ_enqReq_dummy2_2$Q_OUT ||
	      (mmio_dataReqQ_enqReq_lat_0$whas ?
		 !mmio_dataReqQ_enqReq_lat_0$wget[142] :
		 !mmio_dataReqQ_enqReq_rl[142])) &&
	     (mmio_dataReqQ_deqReq_dummy2_2$Q_OUT &&
	      (CAN_FIRE_RL_mmio_sendDataReq || mmio_dataReqQ_deqReq_rl) ||
	      mmio_dataReqQ_empty) ;
  assign NOT_mmio_dataRespQ_clearReq_dummy2_1_read__33__ETC___d238 =
	     !mmio_dataRespQ_clearReq_dummy2_1$Q_OUT ||
	     !mmio_dataRespQ_clearReq_rl ;
  assign NOT_mmio_dataRespQ_enqReq_dummy2_2_read__39_59_ETC___d269 =
	     (!mmio_dataRespQ_enqReq_dummy2_2$Q_OUT ||
	      (CAN_FIRE_RL_mmio_sendDataResp ?
		 !mmio_dataRespQ_enqReq_lat_0$wget[65] :
		 !mmio_dataRespQ_enqReq_rl[65])) &&
	     (mmio_dataRespQ_deqReq_dummy2_2$Q_OUT &&
	      (mmio_dataRespQ_deqReq_lat_0$whas ||
	       mmio_dataRespQ_deqReq_rl) ||
	      mmio_dataRespQ_empty) ;
  assign NOT_mmio_pRqQ_clearReq_dummy2_1_read__33_34_OR_ETC___d738 =
	     !mmio_pRqQ_clearReq_dummy2_1$Q_OUT || !mmio_pRqQ_clearReq_rl ;
  assign NOT_mmio_pRqQ_enqReq_dummy2_2_read__39_54_OR_I_ETC___d764 =
	     (!mmio_pRqQ_enqReq_dummy2_2$Q_OUT ||
	      (EN_mmioToPlatform_pRq_enq ?
		 !mmio_pRqQ_enqReq_lat_0$wget[39] :
		 !mmio_pRqQ_enqReq_rl[39])) &&
	     (mmio_pRqQ_deqReq_dummy2_2$Q_OUT &&
	      (CAN_FIRE_RL_mmio_handlePRq || mmio_pRqQ_deqReq_rl) ||
	      mmio_pRqQ_empty) ;
  assign NOT_mmio_pRsQ_clearReq_dummy2_1_read__69_70_OR_ETC___d574 =
	     !mmio_pRsQ_clearReq_dummy2_1$Q_OUT || !mmio_pRsQ_clearReq_rl ;
  assign NOT_mmio_pRsQ_enqReq_dummy2_2_read__75_90_OR_I_ETC___d600 =
	     (!mmio_pRsQ_enqReq_dummy2_2$Q_OUT ||
	      (EN_mmioToPlatform_pRs_enq ?
		 !mmio_pRsQ_enqReq_lat_0$wget[69] :
		 !mmio_pRsQ_enqReq_rl[69])) &&
	     (mmio_pRsQ_deqReq_dummy2_2$Q_OUT &&
	      (mmio_pRsQ_deqReq_lat_0$whas || mmio_pRsQ_deqReq_rl) ||
	      mmio_pRsQ_empty) ;
  assign NOT_regRenamingTable_rename_0_canRename__2787__ETC___d12891 =
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage$pipelines_0_first[199:195] == 5'd0 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd21 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd17 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd18 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd13 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd16 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd15 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd19 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd20 ||
	     fetchStage_pipelines_0_first__2438_BIT_68_2465_ETC___d12889 ;
  assign NOT_regRenamingTable_rename_0_canRename__2787__ETC___d13107 =
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage$pipelines_0_first[199:195] == 5'd0 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd21 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd17 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd18 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd13 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd16 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd15 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd19 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd20 ||
	     fetchStage_pipelines_0_first__2438_BIT_68_2465_ETC___d12889 ;
  assign NOT_regRenamingTable_rename_0_canRename__2787__ETC___d13162 =
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage$pipelines_0_first[68] ||
	     checkForException___d12547[4] ||
	     !rob$enqPort_0_canEnq ;
  assign NOT_regRenamingTable_rename_1_canRename__2911__ETC___d13222 =
	     !regRenamingTable$rename_1_canRename ||
	     fetchStage$pipelines_1_first[199:195] == 5'd0 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd21 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd17 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd18 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd13 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd16 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd15 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd19 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd20 ||
	     fetchStage_pipelines_1_first__2447_BIT_68_2939_ETC___d13220 ;
  assign NOT_rob_deqPort_0_canDeq__3974_3975_OR_rob_RDY_ETC___d14013 =
	     (!rob$deqPort_0_canDeq ||
	      rob$RDY_deqPort_0_deq &&
	      regRenamingTable$RDY_commit_0_commit) &&
	     (!rob$deqPort_1_canDeq ||
	      rob$RDY_deqPort_1_deq_data &&
	      NOT_rob_deqPort_1_deq_data__3981_BIT_25_3982_3_ETC___d14010) ;
  assign NOT_rob_deqPort_0_canDeq__3974_3975_OR_rob_deq_ETC___d14166 =
	     (!rob$deqPort_0_canDeq ||
	      rob$deqPort_0_deq_data[25] && !rob$deqPort_0_deq_data[18] &&
	      !rob$deqPort_0_deq_data[167] &&
	      rob$deqPort_0_deq_data[257:253] != 5'd0 &&
	      rob$deqPort_0_deq_data[257:253] != 5'd21 &&
	      rob$deqPort_0_deq_data[257:253] != 5'd17 &&
	      rob$deqPort_0_deq_data[257:253] != 5'd18 &&
	      rob$deqPort_0_deq_data[257:253] != 5'd13 &&
	      rob$deqPort_0_deq_data[257:253] != 5'd16 &&
	      rob$deqPort_0_deq_data[257:253] != 5'd15 &&
	      rob$deqPort_0_deq_data[257:253] != 5'd19 &&
	      rob$deqPort_0_deq_data[257:253] != 5'd20) &&
	     rob$deqPort_1_canDeq ;
  assign NOT_rob_deqPort_0_deq_data__3579_BITS_257_TO_2_ETC___d13960 =
	     (rob$deqPort_0_deq_data[257:253] == 5'd13) !=
	     rob$deqPort_0_deq_data[181] ;
  assign NOT_rob_deqPort_1_deq_data__3981_BIT_25_3982_3_ETC___d14010 =
	     !rob$deqPort_1_deq_data[25] || rob$deqPort_1_deq_data[18] ||
	     rob$deqPort_1_deq_data[167] ||
	     rob$deqPort_1_deq_data[257:253] == 5'd0 ||
	     rob$deqPort_1_deq_data[257:253] == 5'd21 ||
	     rob$deqPort_1_deq_data[257:253] == 5'd17 ||
	     rob$deqPort_1_deq_data[257:253] == 5'd18 ||
	     rob$deqPort_1_deq_data[257:253] == 5'd13 ||
	     rob$deqPort_1_deq_data[257:253] == 5'd16 ||
	     rob$deqPort_1_deq_data[257:253] == 5'd15 ||
	     rob$deqPort_1_deq_data[257:253] == 5'd19 ||
	     rob$deqPort_1_deq_data[257:253] == 5'd20 ||
	     rob$RDY_deqPort_1_deq && regRenamingTable$RDY_commit_1_commit ;
  assign NOT_specTagManager_canClaim__2785_2875_OR_NOT__ETC___d13244 =
	     !specTagManager$canClaim ||
	     NOT_regRenamingTable_rename_0_canRename__2787__ETC___d13107 ||
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13190 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	     specTagManager$RDY_nextSpecTag ;
  assign NOT_specTagManager_canClaim__2785_2875_OR_NOT__ETC___d13301 =
	     !specTagManager$canClaim ||
	     NOT_regRenamingTable_rename_0_canRename__2787__ETC___d13162 ||
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13190 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	     specTagManager$RDY_nextSpecTag ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2804 =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q12,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q13,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q14 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2813 =
	     { SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2804,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q15,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q16 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2822 =
	     { SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2813,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q228,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q229 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2827 =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q232,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2822,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q233 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2832 =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q234,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2827,
	       x__h311936 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rq_ETC___d14309 =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q240,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q241,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q242 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14262 =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q223,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q224,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q225 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14271 =
	     { SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14262,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q226,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q227 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14280 =
	     { SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14271,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q230,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q231 } ;
  assign SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14285 =
	     { CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q236,
	       SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_rs_ETC___d14280,
	       CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q237 } ;
  assign SEL_ARR_fetchStage_pipelines_0_canDeq__2436_AN_ETC___d13048 =
	     SEL_ARR_fetchStage_pipelines_0_canDeq__2436_AN_ETC___d13018 ||
	     fetchStage$pipelines_1_first[194:192] == 3'd1 &&
	     regRenamingTable_rename_0_canRename__2787_AND__ETC___d12876 ||
	     !regRenamingTable$rename_1_canRename ||
	     fetchStage_pipelines_1_first__2447_BITS_199_TO_ETC___d13045 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10435 =
	     { {4{f2_exp79217_MINUS_127__q164[7]}},
	       f2_exp79217_MINUS_127__q164 } ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10436 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10435 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10437 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10435 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d11372 =
	     b__h669725 * b__h669814 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d11385 =
	     b__h669725 * b__h669926 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8951 =
	     { {4{f1_exp36047_MINUS_127__q124[7]}},
	       f1_exp36047_MINUS_127__q124 } ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8952 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8951 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8953 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8951 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9666 =
	     { {4{f3_exp22719_MINUS_127__q141[7]}},
	       f3_exp22719_MINUS_127__q141 } ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9667 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9666 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9668 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9666 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q125 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8951 +
	     12'd1023 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q128 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q125[10:0] -
	     11'd1023 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q142 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9666 +
	     12'd1023 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q145 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q142[10:0] -
	     11'd1023 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q165 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10435 +
	     12'd1023 ;
  assign SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q168 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q165[10:0] -
	     11'd1023 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6300 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_divresp_ETC__q60[10],
	       coreFix_fpuMulDivExe_0_fpuExec_double_divresp_ETC__q60 } ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6301 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6300 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6302 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6300 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q61 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6300 +
	     12'd127 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q66 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q61[7:0] -
	     8'd127 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4908 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_fmaresp_ETC__q25[10],
	       coreFix_fpuMulDivExe_0_fpuExec_double_fmaresp_ETC__q25 } ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4909 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4908 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4910 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4908 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q26 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4908 +
	     12'd127 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q31 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q26[7:0] -
	     8'd127 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7692 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_sqrtres_ETC__q95[10],
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrtres_ETC__q95 } ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7693 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7692 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7694 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7692 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q101 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q96[7:0] -
	     8'd127 ;
  assign SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q96 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7692 +
	     12'd127 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d4606 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d4604 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5526 =
	     { 3'd0,
	       _theResult___fst_exp__h390185 == 8'd0 &&
	       (sfdin__h390179[56:34] == 23'd0 || guard__h380829 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h390782 == 8'd255 &&
	       _theResult___fst_sfd__h390783 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h390185 != 8'd255 &&
	       guard__h380829 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5998 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d5996 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6918 =
	     { 3'd0,
	       _theResult___fst_exp__h441898 == 8'd0 &&
	       (sfdin__h441892[56:34] == 23'd0 || guard__h432544 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h442495 == 8'd255 &&
	       _theResult___fst_sfd__h442496 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h441898 != 8'd255 &&
	       guard__h432544 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d7390 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d7388 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d8310 =
	     { 3'd0,
	       _theResult___fst_exp__h493609 == 8'd0 &&
	       (sfdin__h493603[56:34] == 23'd0 || guard__h484255 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h494206 == 8'd255 &&
	       _theResult___fst_sfd__h494207 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h493609 != 8'd255 &&
	       guard__h484255 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10686 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d10684 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11062 =
	     { 3'd0,
	       _theResult___fst_exp__h567955 == 11'd0 &&
	       (sfdin__h567949[56:5] == 52'd0 || guard__h558474 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h568787 == 11'd2047 &&
	       _theResult___fst_sfd__h568788 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h567955 != 11'd2047 &&
	       guard__h558474 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11103 =
	     { 3'd0,
	       _theResult___fst_exp__h611036 == 11'd0 &&
	       (sfdin__h611030[56:5] == 52'd0 || guard__h601555 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h611868 == 11'd2047 &&
	       _theResult___fst_sfd__h611869 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h611036 != 11'd2047 &&
	       guard__h601555 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d11147 =
	     { 3'd0,
	       _theResult___fst_exp__h654538 == 11'd0 &&
	       (sfdin__h654532[56:5] == 52'd0 || guard__h645057 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h655370 == 11'd2047 &&
	       _theResult___fst_sfd__h655371 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h654538 != 11'd2047 &&
	       guard__h645057 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d9202 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9200 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d9917 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9915 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5157 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d5155 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5555 =
	     { 3'd0,
	       _theResult___fst_exp__h410439 == 8'd0 &&
	       (sfdin__h410433[56:34] == 23'd0 || guard__h400956 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h411036 == 8'd255 &&
	       _theResult___fst_sfd__h411037 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h410439 != 8'd255 &&
	       guard__h400956 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6549 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d6547 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6947 =
	     { 3'd0,
	       _theResult___fst_exp__h462152 == 8'd0 &&
	       (sfdin__h462146[56:34] == 23'd0 || guard__h452669 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h462749 == 8'd255 &&
	       _theResult___fst_sfd__h462750 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h462152 != 8'd255 &&
	       guard__h452669 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7941 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d7939 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d8339 =
	     { 3'd0,
	       _theResult___fst_exp__h513863 == 8'd0 &&
	       (sfdin__h513857[56:34] == 23'd0 || guard__h504380 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h514460 == 8'd255 &&
	       _theResult___fst_sfd__h514461 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h513863 != 8'd255 &&
	       guard__h504380 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10389 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10387 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d10736 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10387 } ^
	      12'h800) <=
	     (IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10735 ^
	      12'h800) ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11045 =
	     { 3'd0,
	       _theResult___fst_exp__h557123 == 11'd0 &&
	       guard__h547929 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h557881 == 11'd2047 &&
	       _theResult___fst_sfd__h557882 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h557123 != 11'd2047 &&
	       guard__h547929 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11086 =
	     { 3'd0,
	       _theResult___fst_exp__h600204 == 11'd0 &&
	       guard__h591010 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h600962 == 11'd2047 &&
	       _theResult___fst_sfd__h600963 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h600204 != 11'd2047 &&
	       guard__h591010 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d11130 =
	     { 3'd0,
	       _theResult___fst_exp__h643706 == 11'd0 &&
	       guard__h634512 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h644464 == 11'd2047 &&
	       _theResult___fst_sfd__h644465 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h643706 != 11'd2047 &&
	       guard__h634512 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d8889 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8887 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9252 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8887 } ^
	      12'h800) <=
	     (IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9251 ^
	      12'h800) ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9620 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9618 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regToExe_ETC___d9967 =
	     ({ 6'd0,
		IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9618 } ^
	      12'h800) <=
	     (IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9966 ^
	      12'h800) ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4837 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4835 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5230 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4835 } ^
	      9'h100) <=
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5229 ^
	      9'h100) ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5538 =
	     { 3'd0,
	       _theResult___fst_exp__h400074 == 8'd0 &&
	       guard__h390793 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h400597 == 8'd255 &&
	       _theResult___fst_sfd__h400598 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h400074 != 8'd255 &&
	       guard__h390793 != 2'b0 } ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6229 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6227 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6622 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6227 } ^
	      9'h100) <=
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6621 ^
	      9'h100) ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6930 =
	     { 3'd0,
	       _theResult___fst_exp__h451787 == 8'd0 &&
	       guard__h442506 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h452310 == 8'd255 &&
	       _theResult___fst_sfd__h452311 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h451787 != 8'd255 &&
	       guard__h442506 != 2'b0 } ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7621 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7619 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8014 =
	     ({ 3'd0,
		IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7619 } ^
	      9'h100) <=
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8013 ^
	      9'h100) ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8322 =
	     { 3'd0,
	       _theResult___fst_exp__h503498 == 8'd0 &&
	       guard__h494217 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h504021 == 8'd255 &&
	       _theResult___fst_sfd__h504022 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h503498 != 8'd255 &&
	       guard__h494217 != 2'b0 } ;
  assign _0_CONCAT_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d11378 =
	     b__h669914 * b__h669926 ;
  assign _0_OR_NOT_fetchStage_pipelines_0_first__2438_BI_ETC___d13171 =
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$RDY_nextSpecTag) &&
	     CASE_k31393_0_coreFix_aluExe_0_rsAluRDY_enq_1_ETC__q217 ;
  assign _0_OR_NOT_fetchStage_pipelines_1_first__2447_BI_ETC___d13249 =
	     (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	      specTagManager$RDY_nextSpecTag) &&
	     CASE_k49572_0_coreFix_aluExe_0_rsAluRDY_enq_1_ETC__q219 ;
  assign _0_OR_fetchStage_RDY_pipelines_0_first__2435_30_ETC___d13077 =
	     fetchStage$RDY_pipelines_0_first &&
	     fetchStage$pipelines_1_first[194:192] == 3'd1 &&
	     regRenamingTable_rename_0_canRename__2787_AND__ETC___d12876 ||
	     !regRenamingTable$rename_1_canRename ||
	     fetchStage_pipelines_1_first__2447_BITS_199_TO_ETC___d13045 ;
  assign _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d10442 =
	     sfd__h579579 >>
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d10438 ;
  assign _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d8958 =
	     sfd__h536409 >>
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d8954 ;
  assign _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d9673 =
	     sfd__h623081 >>
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9669 ;
  assign _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d4915 =
	     sfd__h372069 >>
	     (_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4911[11] ?
		12'hAAA :
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4911) ;
  assign _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d6307 =
	     sfd__h423787 >>
	     (_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6303[11] ?
		12'hAAA :
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6303) ;
  assign _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d7699 =
	     sfd__h475498 >>
	     (_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d7695[11] ?
		12'hAAA :
		_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d7695) ;
  assign _0b0_CONCAT_csrf_medeleg_15_reg_read__1760_1761_ETC___d13697 =
	     medeleg_csr__read__h677962[commitStage_commitTrap[35:32]] ;
  assign _0b0_CONCAT_csrf_mideleg_11_reg_read__1769_1770_ETC___d13695 =
	     mideleg_csr__read__h678000[commitStage_commitTrap[35:32]] ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4368 =
	     12'd3074 -
	     { 6'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56] ?
		 6'd0 :
		 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[55] ?
		    6'd1 :
		    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[54] ?
		       6'd2 :
		       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[53] ?
			  6'd3 :
			  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[52] ?
			     6'd4 :
			     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[51] ?
				6'd5 :
				(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[50] ?
				   6'd6 :
				   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[49] ?
				      6'd7 :
				      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[48] ?
					 6'd8 :
					 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[47] ?
					    6'd9 :
					    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[46] ?
					       6'd10 :
					       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[45] ?
						  6'd11 :
						  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[44] ?
						     6'd12 :
						     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[43] ?
							6'd13 :
							(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[42] ?
							   6'd14 :
							   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[41] ?
							      6'd15 :
							      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[40] ?
								 6'd16 :
								 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[39] ?
								    6'd17 :
								    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[38] ?
								       6'd18 :
								       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[37] ?
									  6'd19 :
									  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[36] ?
									     6'd20 :
									     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[35] ?
										6'd21 :
										(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[34] ?
										   6'd22 :
										   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[33] ?
										      6'd23 :
										      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[32] ?
											 6'd24 :
											 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[31] ?
											    6'd25 :
											    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[30] ?
											       6'd26 :
											       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[29] ?
												  6'd27 :
												  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[28] ?
												     6'd28 :
												     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[27] ?
													6'd29 :
													(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[26] ?
													   6'd30 :
													   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[25] ?
													      6'd31 :
													      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[24] ?
														 6'd32 :
														 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[23] ?
														    6'd33 :
														    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[22] ?
														       6'd34 :
														       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[21] ?
															  6'd35 :
															  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[20] ?
															     6'd36 :
															     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[19] ?
																6'd37 :
																(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[18] ?
																   6'd38 :
																   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[17] ?
																      6'd39 :
																      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[16] ?
																	 6'd40 :
																	 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[15] ?
																	    6'd41 :
																	    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[14] ?
																	       6'd42 :
																	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[13] ?
																		  6'd43 :
																		  (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[12] ?
																		     6'd44 :
																		     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[11] ?
																			6'd45 :
																			(coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[10] ?
																			   6'd46 :
																			   (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[9] ?
																			      6'd47 :
																			      (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[8] ?
																				 6'd48 :
																				 (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[7] ?
																				    6'd49 :
																				    (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[6] ?
																				       6'd50 :
																				       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[5] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4369 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4368 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4370 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4368 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5541 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4369 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4370 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5526[4] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5538[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5566 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4369 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4370 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5526[3] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5538[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5593 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4369 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4370 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5526[1] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5538[1]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5760 =
	     12'd3074 -
	     { 6'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56] ?
		 6'd0 :
		 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[55] ?
		    6'd1 :
		    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[54] ?
		       6'd2 :
		       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[53] ?
			  6'd3 :
			  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[52] ?
			     6'd4 :
			     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[51] ?
				6'd5 :
				(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[50] ?
				   6'd6 :
				   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[49] ?
				      6'd7 :
				      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[48] ?
					 6'd8 :
					 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[47] ?
					    6'd9 :
					    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[46] ?
					       6'd10 :
					       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[45] ?
						  6'd11 :
						  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[44] ?
						     6'd12 :
						     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[43] ?
							6'd13 :
							(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[42] ?
							   6'd14 :
							   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[41] ?
							      6'd15 :
							      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[40] ?
								 6'd16 :
								 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[39] ?
								    6'd17 :
								    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[38] ?
								       6'd18 :
								       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[37] ?
									  6'd19 :
									  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[36] ?
									     6'd20 :
									     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[35] ?
										6'd21 :
										(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[34] ?
										   6'd22 :
										   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[33] ?
										      6'd23 :
										      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[32] ?
											 6'd24 :
											 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[31] ?
											    6'd25 :
											    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[30] ?
											       6'd26 :
											       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[29] ?
												  6'd27 :
												  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[28] ?
												     6'd28 :
												     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[27] ?
													6'd29 :
													(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[26] ?
													   6'd30 :
													   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[25] ?
													      6'd31 :
													      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[24] ?
														 6'd32 :
														 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[23] ?
														    6'd33 :
														    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[22] ?
														       6'd34 :
														       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[21] ?
															  6'd35 :
															  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[20] ?
															     6'd36 :
															     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[19] ?
																6'd37 :
																(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[18] ?
																   6'd38 :
																   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[17] ?
																      6'd39 :
																      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[16] ?
																	 6'd40 :
																	 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[15] ?
																	    6'd41 :
																	    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[14] ?
																	       6'd42 :
																	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[13] ?
																		  6'd43 :
																		  (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[12] ?
																		     6'd44 :
																		     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[11] ?
																			6'd45 :
																			(coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[10] ?
																			   6'd46 :
																			   (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[9] ?
																			      6'd47 :
																			      (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[8] ?
																				 6'd48 :
																				 (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[7] ?
																				    6'd49 :
																				    (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[6] ?
																				       6'd50 :
																				       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[5] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5761 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5760 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5762 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5760 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6933 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5761 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5762 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6918[4] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6930[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6958 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5761 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5762 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6918[3] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6930[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d6985 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5761 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5762 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d6918[1] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6930[1]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7152 =
	     12'd3074 -
	     { 6'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56] ?
		 6'd0 :
		 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[55] ?
		    6'd1 :
		    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[54] ?
		       6'd2 :
		       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[53] ?
			  6'd3 :
			  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[52] ?
			     6'd4 :
			     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[51] ?
				6'd5 :
				(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[50] ?
				   6'd6 :
				   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[49] ?
				      6'd7 :
				      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[48] ?
					 6'd8 :
					 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[47] ?
					    6'd9 :
					    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[46] ?
					       6'd10 :
					       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[45] ?
						  6'd11 :
						  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[44] ?
						     6'd12 :
						     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[43] ?
							6'd13 :
							(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[42] ?
							   6'd14 :
							   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[41] ?
							      6'd15 :
							      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[40] ?
								 6'd16 :
								 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[39] ?
								    6'd17 :
								    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[38] ?
								       6'd18 :
								       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[37] ?
									  6'd19 :
									  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[36] ?
									     6'd20 :
									     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[35] ?
										6'd21 :
										(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[34] ?
										   6'd22 :
										   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[33] ?
										      6'd23 :
										      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[32] ?
											 6'd24 :
											 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[31] ?
											    6'd25 :
											    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[30] ?
											       6'd26 :
											       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[29] ?
												  6'd27 :
												  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[28] ?
												     6'd28 :
												     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[27] ?
													6'd29 :
													(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[26] ?
													   6'd30 :
													   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[25] ?
													      6'd31 :
													      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[24] ?
														 6'd32 :
														 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[23] ?
														    6'd33 :
														    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[22] ?
														       6'd34 :
														       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[21] ?
															  6'd35 :
															  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[20] ?
															     6'd36 :
															     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[19] ?
																6'd37 :
																(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[18] ?
																   6'd38 :
																   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[17] ?
																      6'd39 :
																      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[16] ?
																	 6'd40 :
																	 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[15] ?
																	    6'd41 :
																	    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[14] ?
																	       6'd42 :
																	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[13] ?
																		  6'd43 :
																		  (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[12] ?
																		     6'd44 :
																		     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[11] ?
																			6'd45 :
																			(coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[10] ?
																			   6'd46 :
																			   (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[9] ?
																			      6'd47 :
																			      (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[8] ?
																				 6'd48 :
																				 (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[7] ?
																				    6'd49 :
																				    (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[6] ?
																				       6'd50 :
																				       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[5] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7153 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7152 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7154 =
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7152 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8325 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7153 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7154 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d8310[4] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8322[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8350 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7153 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7154 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d8310[3] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8322[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d8377 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7153 &&
	     (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7154 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d8310[1] :
		_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8322[1]) ;
  assign _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d10438 =
	     12'd3074 -
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10435 ;
  assign _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d8954 =
	     12'd3074 -
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8951 ;
  assign _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9669 =
	     12'd3074 -
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9666 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10313 =
	     12'd3970 -
	     { 7'd0,
	       f2_sfd__h579218[22] ?
		 5'd0 :
		 (f2_sfd__h579218[21] ?
		    5'd1 :
		    (f2_sfd__h579218[20] ?
		       5'd2 :
		       (f2_sfd__h579218[19] ?
			  5'd3 :
			  (f2_sfd__h579218[18] ?
			     5'd4 :
			     (f2_sfd__h579218[17] ?
				5'd5 :
				(f2_sfd__h579218[16] ?
				   5'd6 :
				   (f2_sfd__h579218[15] ?
				      5'd7 :
				      (f2_sfd__h579218[14] ?
					 5'd8 :
					 (f2_sfd__h579218[13] ?
					    5'd9 :
					    (f2_sfd__h579218[12] ?
					       5'd10 :
					       (f2_sfd__h579218[11] ?
						  5'd11 :
						  (f2_sfd__h579218[10] ?
						     5'd12 :
						     (f2_sfd__h579218[9] ?
							5'd13 :
							(f2_sfd__h579218[8] ?
							   5'd14 :
							   (f2_sfd__h579218[7] ?
							      5'd15 :
							      (f2_sfd__h579218[6] ?
								 5'd16 :
								 (f2_sfd__h579218[5] ?
								    5'd17 :
								    (f2_sfd__h579218[4] ?
								       5'd18 :
								       (f2_sfd__h579218[3] ?
									  5'd19 :
									  (f2_sfd__h579218[2] ?
									     5'd20 :
									     (f2_sfd__h579218[1] ?
										5'd21 :
										(f2_sfd__h579218[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10314 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10313 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10316 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10313 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8813 =
	     12'd3970 -
	     { 7'd0,
	       f1_sfd__h536048[22] ?
		 5'd0 :
		 (f1_sfd__h536048[21] ?
		    5'd1 :
		    (f1_sfd__h536048[20] ?
		       5'd2 :
		       (f1_sfd__h536048[19] ?
			  5'd3 :
			  (f1_sfd__h536048[18] ?
			     5'd4 :
			     (f1_sfd__h536048[17] ?
				5'd5 :
				(f1_sfd__h536048[16] ?
				   5'd6 :
				   (f1_sfd__h536048[15] ?
				      5'd7 :
				      (f1_sfd__h536048[14] ?
					 5'd8 :
					 (f1_sfd__h536048[13] ?
					    5'd9 :
					    (f1_sfd__h536048[12] ?
					       5'd10 :
					       (f1_sfd__h536048[11] ?
						  5'd11 :
						  (f1_sfd__h536048[10] ?
						     5'd12 :
						     (f1_sfd__h536048[9] ?
							5'd13 :
							(f1_sfd__h536048[8] ?
							   5'd14 :
							   (f1_sfd__h536048[7] ?
							      5'd15 :
							      (f1_sfd__h536048[6] ?
								 5'd16 :
								 (f1_sfd__h536048[5] ?
								    5'd17 :
								    (f1_sfd__h536048[4] ?
								       5'd18 :
								       (f1_sfd__h536048[3] ?
									  5'd19 :
									  (f1_sfd__h536048[2] ?
									     5'd20 :
									     (f1_sfd__h536048[1] ?
										5'd21 :
										(f1_sfd__h536048[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8814 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8813 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8816 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8813 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9544 =
	     12'd3970 -
	     { 7'd0,
	       f3_sfd__h622720[22] ?
		 5'd0 :
		 (f3_sfd__h622720[21] ?
		    5'd1 :
		    (f3_sfd__h622720[20] ?
		       5'd2 :
		       (f3_sfd__h622720[19] ?
			  5'd3 :
			  (f3_sfd__h622720[18] ?
			     5'd4 :
			     (f3_sfd__h622720[17] ?
				5'd5 :
				(f3_sfd__h622720[16] ?
				   5'd6 :
				   (f3_sfd__h622720[15] ?
				      5'd7 :
				      (f3_sfd__h622720[14] ?
					 5'd8 :
					 (f3_sfd__h622720[13] ?
					    5'd9 :
					    (f3_sfd__h622720[12] ?
					       5'd10 :
					       (f3_sfd__h622720[11] ?
						  5'd11 :
						  (f3_sfd__h622720[10] ?
						     5'd12 :
						     (f3_sfd__h622720[9] ?
							5'd13 :
							(f3_sfd__h622720[8] ?
							   5'd14 :
							   (f3_sfd__h622720[7] ?
							      5'd15 :
							      (f3_sfd__h622720[6] ?
								 5'd16 :
								 (f3_sfd__h622720[5] ?
								    5'd17 :
								    (f3_sfd__h622720[4] ?
								       5'd18 :
								       (f3_sfd__h622720[3] ?
									  5'd19 :
									  (f3_sfd__h622720[2] ?
									     5'd20 :
									     (f3_sfd__h622720[1] ?
										5'd21 :
										(f3_sfd__h622720[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9545 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9544 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9547 =
	     (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9544 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4911 =
	     12'd3970 -
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4908 ;
  assign _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6303 =
	     12'd3970 -
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6300 ;
  assign _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d7695 =
	     12'd3970 -
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7692 ;
  assign _dfoo12 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__2787_AND__ETC___d13361 ||
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	     regRenamingTable_rename_1_canRename__2911_AND__ETC___d13444 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13498 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd14 ;
  assign _dfoo18 =
	     k__h731393 == 1'd0 &&
	     fetchStage_pipelines_0_canDeq__2436_AND_NOT_fe_ETC___d13326 ||
	     k__h749572 == 1'd0 &&
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13448 ;
  assign _dfoo2 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__2787_AND__ETC___d13409 ||
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	     regRenamingTable_rename_1_canRename__2911_AND__ETC___d13444 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13498 &&
	     fetchStage$pipelines_1_first[191:189] != 3'd0 &&
	     fetchStage$pipelines_1_first[191:189] != 3'd2 ;
  assign _dfoo20 =
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     rob$deqPort_0_deq_data[180:169] == 12'd768 ||
	     rob$deqPort_0_deq_data[257:253] == 5'd20 ;
  assign _dfoo26 =
	     rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	     (rob$deqPort_0_deq_data[180:169] == 12'd256 ||
	      rob$deqPort_0_deq_data[180:169] == 12'd768) ||
	     rob$deqPort_0_deq_data[257:253] == 5'd19 ;
  assign _dfoo7 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__2787_AND__ETC___d13401 ||
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	     regRenamingTable_rename_1_canRename__2911_AND__ETC___d13444 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13498 &&
	     (fetchStage$pipelines_1_first[191:189] == 3'd0 ||
	      fetchStage$pipelines_1_first[191:189] == 3'd2) ;
  assign _dor1coreFix_aluExe_0_bypassWire_2$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1coreFix_aluExe_0_bypassWire_3$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _dor1coreFix_aluExe_0_rsAlu$EN_setRegReady_3_put =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_aluExe_1_bypassWire_2$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1coreFix_aluExe_1_bypassWire_3$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _dor1coreFix_aluExe_1_rsAlu$EN_setRegReady_3_put =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_fpuMulDivExe_0_bypassWire_2$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1coreFix_fpuMulDivExe_0_bypassWire_3$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _dor1coreFix_fpuMulDivExe_0_rsFpuMulDiv$EN_setRegReady_3_put =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_bypassWire_2$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1coreFix_memExe_bypassWire_3$EN_wset =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _dor1coreFix_memExe_forwardQ_enqReq_dummy2_0$EN_write =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_reqLdQ_data_0_dummy2_0$EN_write =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_reqLdQ_empty_dummy2_0$EN_write =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_reqLdQ_empty_lat_0$EN_wset =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_reqLdQ_enqP_dummy2_0$EN_write =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_reqLdQ_full_dummy2_0$EN_write =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_reqLdQ_full_lat_0$EN_wset =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1coreFix_memExe_rsMem$EN_setRegReady_3_put =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1rf$EN_write_0_wr =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1rf$EN_write_1_wr =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _dor1sbAggr$EN_setReady_3_put =
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ ||
	     WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate ;
  assign _dor1sbCons$EN_setReady_0_put =
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T ;
  assign _dor1sbCons$EN_setReady_1_put =
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_F ||
	     WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T ;
  assign _theResult_____2__h319525 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3057) ?
	       next_deqP___1__h319822 :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP ;
  assign _theResult_____2__h328530 =
	     (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3163) ?
	       next_deqP___1__h328827 :
	       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP ;
  assign _theResult_____2__h335052 =
	     (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3284) ?
	       next_deqP___1__h335636 :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP ;
  assign _theResult_____2__h343858 =
	     (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3375) ?
	       next_deqP___1__h344442 :
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP ;
  assign _theResult_____2__h354394 =
	     (coreFix_memExe_memRespLdQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_memRespLdQ_deqReq_lat_1_whas_ETC___d3559) ?
	       next_deqP___1__h354691 :
	       coreFix_memExe_memRespLdQ_deqP ;
  assign _theResult_____2__h357785 =
	     (coreFix_memExe_forwardQ_deqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_forwardQ_deqReq_lat_1_whas___ETC___d3648) ?
	       next_deqP___1__h358082 :
	       coreFix_memExe_forwardQ_deqP ;
  assign _theResult____h380819 =
	     (value__h381441 == 54'd0) ? sfd__h372069 : 57'd1 ;
  assign _theResult____h400946 =
	     ((_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4911 ^
	       12'h800) <
	      12'd2105) ?
	       result__h401559 :
	       _theResult____h380819 ;
  assign _theResult____h432534 =
	     (value__h433154 == 54'd0) ? sfd__h423787 : 57'd1 ;
  assign _theResult____h452659 =
	     ((_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6303 ^
	       12'h800) <
	      12'd2105) ?
	       result__h453272 :
	       _theResult____h432534 ;
  assign _theResult____h484245 =
	     (value__h484865 == 54'd0) ? sfd__h475498 : 57'd1 ;
  assign _theResult____h504370 =
	     ((_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d7695 ^
	       12'h800) <
	      12'd2105) ?
	       result__h504983 :
	       _theResult____h484245 ;
  assign _theResult____h558464 =
	     ((_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d8954 ^
	       12'h800) <
	      12'd2105) ?
	       result__h559077 :
	       ((value__h541447 == 25'd0) ? sfd__h536409 : 57'd1) ;
  assign _theResult____h601545 =
	     ((_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d10438 ^
	       12'h800) <
	      12'd2105) ?
	       result__h602158 :
	       ((value__h584528 == 25'd0) ? sfd__h579579 : 57'd1) ;
  assign _theResult____h645047 =
	     ((_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9669 ^
	       12'h800) <
	      12'd2105) ?
	       result__h645660 :
	       ((value__h628030 == 25'd0) ? sfd__h623081 : 57'd1) ;
  assign _theResult____h715239 =
	     (csrf_prv_reg != 2'd3 || csrf_ie_vec_3) ?
	       enabled_ints___1__h715652 :
	       12'd0 ;
  assign _theResult___exp__h390701 =
	     sfd__h390277[24] ?
	       ((_theResult___fst_exp__h390185 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h420939) :
	       ((_theResult___fst_exp__h390185 == 8'd0 &&
		 sfd__h390277[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h390185) ;
  assign _theResult___exp__h400516 =
	     sfd__h400092[24] ?
	       ((_theResult___fst_exp__h400074 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h420963) :
	       ((_theResult___fst_exp__h400074 == 8'd0 &&
		 sfd__h400092[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h400074) ;
  assign _theResult___exp__h410955 =
	     sfd__h410531[24] ?
	       ((_theResult___fst_exp__h410439 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h420993) :
	       ((_theResult___fst_exp__h410439 == 8'd0 &&
		 sfd__h410531[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h410439) ;
  assign _theResult___exp__h420824 =
	     sfd__h420376[24] ?
	       ((_theResult___fst_exp__h420357 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h421017) :
	       ((_theResult___fst_exp__h420357 == 8'd0 &&
		 sfd__h420376[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h420357) ;
  assign _theResult___exp__h420926 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h420917 ;
  assign _theResult___exp__h442414 =
	     sfd__h441990[24] ?
	       ((_theResult___fst_exp__h441898 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h472652) :
	       ((_theResult___fst_exp__h441898 == 8'd0 &&
		 sfd__h441990[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h441898) ;
  assign _theResult___exp__h452229 =
	     sfd__h451805[24] ?
	       ((_theResult___fst_exp__h451787 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h472676) :
	       ((_theResult___fst_exp__h451787 == 8'd0 &&
		 sfd__h451805[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h451787) ;
  assign _theResult___exp__h462668 =
	     sfd__h462244[24] ?
	       ((_theResult___fst_exp__h462152 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h472706) :
	       ((_theResult___fst_exp__h462152 == 8'd0 &&
		 sfd__h462244[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h462152) ;
  assign _theResult___exp__h472537 =
	     sfd__h472089[24] ?
	       ((_theResult___fst_exp__h472070 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h472730) :
	       ((_theResult___fst_exp__h472070 == 8'd0 &&
		 sfd__h472089[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h472070) ;
  assign _theResult___exp__h472639 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h472630 ;
  assign _theResult___exp__h494125 =
	     sfd__h493701[24] ?
	       ((_theResult___fst_exp__h493609 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h524363) :
	       ((_theResult___fst_exp__h493609 == 8'd0 &&
		 sfd__h493701[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h493609) ;
  assign _theResult___exp__h503940 =
	     sfd__h503516[24] ?
	       ((_theResult___fst_exp__h503498 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h524387) :
	       ((_theResult___fst_exp__h503498 == 8'd0 &&
		 sfd__h503516[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h503498) ;
  assign _theResult___exp__h514379 =
	     sfd__h513955[24] ?
	       ((_theResult___fst_exp__h513863 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h524417) :
	       ((_theResult___fst_exp__h513863 == 8'd0 &&
		 sfd__h513955[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h513863) ;
  assign _theResult___exp__h524248 =
	     sfd__h523800[24] ?
	       ((_theResult___fst_exp__h523781 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h524441) :
	       ((_theResult___fst_exp__h523781 == 8'd0 &&
		 sfd__h523800[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h523781) ;
  assign _theResult___exp__h524350 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h524341 ;
  assign _theResult___exp__h557778 =
	     sfd__h557141[53] ?
	       ((_theResult___fst_exp__h557123 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h578861) :
	       ((_theResult___fst_exp__h557123 == 11'd0 &&
		 sfd__h557141[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h557123) ;
  assign _theResult___exp__h568684 =
	     sfd__h568047[53] ?
	       ((_theResult___fst_exp__h567955 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h578896) :
	       ((_theResult___fst_exp__h567955 == 11'd0 &&
		 sfd__h568047[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h567955) ;
  assign _theResult___exp__h578701 =
	     sfd__h578040[53] ?
	       ((_theResult___fst_exp__h578021 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h578922) :
	       ((_theResult___fst_exp__h578021 == 11'd0 &&
		 sfd__h578040[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h578021) ;
  assign _theResult___exp__h600859 =
	     sfd__h600222[53] ?
	       ((_theResult___fst_exp__h600204 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h621942) :
	       ((_theResult___fst_exp__h600204 == 11'd0 &&
		 sfd__h600222[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h600204) ;
  assign _theResult___exp__h611765 =
	     sfd__h611128[53] ?
	       ((_theResult___fst_exp__h611036 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h621977) :
	       ((_theResult___fst_exp__h611036 == 11'd0 &&
		 sfd__h611128[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h611036) ;
  assign _theResult___exp__h621782 =
	     sfd__h621121[53] ?
	       ((_theResult___fst_exp__h621102 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h622003) :
	       ((_theResult___fst_exp__h621102 == 11'd0 &&
		 sfd__h621121[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h621102) ;
  assign _theResult___exp__h644361 =
	     sfd__h643724[53] ?
	       ((_theResult___fst_exp__h643706 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h665444) :
	       ((_theResult___fst_exp__h643706 == 11'd0 &&
		 sfd__h643724[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h643706) ;
  assign _theResult___exp__h655267 =
	     sfd__h654630[53] ?
	       ((_theResult___fst_exp__h654538 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h665479) :
	       ((_theResult___fst_exp__h654538 == 11'd0 &&
		 sfd__h654630[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h654538) ;
  assign _theResult___exp__h665284 =
	     sfd__h664623[53] ?
	       ((_theResult___fst_exp__h664604 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h665505) :
	       ((_theResult___fst_exp__h664604 == 11'd0 &&
		 sfd__h664623[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h664604) ;
  assign _theResult___fst__h670097 =
	     a__h669503[63] ? a___1__h670102 : a__h669503 ;
  assign _theResult___fst_exp__h390185 =
	     _theResult____h380819[56] ?
	       8'd2 :
	       _theResult___fst_exp__h390259 ;
  assign _theResult___fst_exp__h390250 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d4604 } ;
  assign _theResult___fst_exp__h390256 =
	     (!_theResult____h380819[56] && !_theResult____h380819[55] &&
	      !_theResult____h380819[54] &&
	      !_theResult____h380819[53] &&
	      !_theResult____h380819[52] &&
	      !_theResult____h380819[51] &&
	      !_theResult____h380819[50] &&
	      !_theResult____h380819[49] &&
	      !_theResult____h380819[48] &&
	      !_theResult____h380819[47] &&
	      !_theResult____h380819[46] &&
	      !_theResult____h380819[45] &&
	      !_theResult____h380819[44] &&
	      !_theResult____h380819[43] &&
	      !_theResult____h380819[42] &&
	      !_theResult____h380819[41] &&
	      !_theResult____h380819[40] &&
	      !_theResult____h380819[39] &&
	      !_theResult____h380819[38] &&
	      !_theResult____h380819[37] &&
	      !_theResult____h380819[36] &&
	      !_theResult____h380819[35] &&
	      !_theResult____h380819[34] &&
	      !_theResult____h380819[33] &&
	      !_theResult____h380819[32] &&
	      !_theResult____h380819[31] &&
	      !_theResult____h380819[30] &&
	      !_theResult____h380819[29] &&
	      !_theResult____h380819[28] &&
	      !_theResult____h380819[27] &&
	      !_theResult____h380819[26] &&
	      !_theResult____h380819[25] &&
	      !_theResult____h380819[24] &&
	      !_theResult____h380819[23] &&
	      !_theResult____h380819[22] &&
	      !_theResult____h380819[21] &&
	      !_theResult____h380819[20] &&
	      !_theResult____h380819[19] &&
	      !_theResult____h380819[18] &&
	      !_theResult____h380819[17] &&
	      !_theResult____h380819[16] &&
	      !_theResult____h380819[15] &&
	      !_theResult____h380819[14] &&
	      !_theResult____h380819[13] &&
	      !_theResult____h380819[12] &&
	      !_theResult____h380819[11] &&
	      !_theResult____h380819[10] &&
	      !_theResult____h380819[9] &&
	      !_theResult____h380819[8] &&
	      !_theResult____h380819[7] &&
	      !_theResult____h380819[6] &&
	      !_theResult____h380819[5] &&
	      !_theResult____h380819[4] &&
	      !_theResult____h380819[3] &&
	      !_theResult____h380819[2] &&
	      !_theResult____h380819[1] &&
	      !_theResult____h380819[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d4606) ?
	       8'd0 :
	       _theResult___fst_exp__h390250 ;
  assign _theResult___fst_exp__h390259 =
	     (!_theResult____h380819[56] && _theResult____h380819[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h390256 ;
  assign _theResult___fst_exp__h390782 =
	     (_theResult___fst_exp__h390185 == 8'd255) ?
	       _theResult___fst_exp__h390185 :
	       _theResult___fst_exp__h390779 ;
  assign _theResult___fst_exp__h400065 =
	     8'd129 -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4835 } ;
  assign _theResult___fst_exp__h400071 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0 &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[55] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[54] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[53] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[52] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[51] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[50] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[49] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[48] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[47] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[46] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[45] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[44] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[43] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[42] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[41] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[40] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[39] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[38] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[37] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[36] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[35] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[34] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[33] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[32] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[31] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[30] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[29] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[28] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[27] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[26] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[25] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[24] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[23] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[22] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[21] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[20] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[19] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[18] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[17] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[16] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[15] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[14] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[13] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[12] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[11] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[10] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[9] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[8] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[7] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[6] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[5] ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d4837) ?
	       8'd0 :
	       _theResult___fst_exp__h400065 ;
  assign _theResult___fst_exp__h400074 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h400071 :
	       8'd129 ;
  assign _theResult___fst_exp__h400597 =
	     (_theResult___fst_exp__h400074 == 8'd255) ?
	       _theResult___fst_exp__h400074 :
	       _theResult___fst_exp__h400594 ;
  assign _theResult___fst_exp__h410439 =
	     _theResult____h400946[56] ?
	       8'd2 :
	       _theResult___fst_exp__h410513 ;
  assign _theResult___fst_exp__h410504 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d5155 } ;
  assign _theResult___fst_exp__h410510 =
	     (!_theResult____h400946[56] && !_theResult____h400946[55] &&
	      !_theResult____h400946[54] &&
	      !_theResult____h400946[53] &&
	      !_theResult____h400946[52] &&
	      !_theResult____h400946[51] &&
	      !_theResult____h400946[50] &&
	      !_theResult____h400946[49] &&
	      !_theResult____h400946[48] &&
	      !_theResult____h400946[47] &&
	      !_theResult____h400946[46] &&
	      !_theResult____h400946[45] &&
	      !_theResult____h400946[44] &&
	      !_theResult____h400946[43] &&
	      !_theResult____h400946[42] &&
	      !_theResult____h400946[41] &&
	      !_theResult____h400946[40] &&
	      !_theResult____h400946[39] &&
	      !_theResult____h400946[38] &&
	      !_theResult____h400946[37] &&
	      !_theResult____h400946[36] &&
	      !_theResult____h400946[35] &&
	      !_theResult____h400946[34] &&
	      !_theResult____h400946[33] &&
	      !_theResult____h400946[32] &&
	      !_theResult____h400946[31] &&
	      !_theResult____h400946[30] &&
	      !_theResult____h400946[29] &&
	      !_theResult____h400946[28] &&
	      !_theResult____h400946[27] &&
	      !_theResult____h400946[26] &&
	      !_theResult____h400946[25] &&
	      !_theResult____h400946[24] &&
	      !_theResult____h400946[23] &&
	      !_theResult____h400946[22] &&
	      !_theResult____h400946[21] &&
	      !_theResult____h400946[20] &&
	      !_theResult____h400946[19] &&
	      !_theResult____h400946[18] &&
	      !_theResult____h400946[17] &&
	      !_theResult____h400946[16] &&
	      !_theResult____h400946[15] &&
	      !_theResult____h400946[14] &&
	      !_theResult____h400946[13] &&
	      !_theResult____h400946[12] &&
	      !_theResult____h400946[11] &&
	      !_theResult____h400946[10] &&
	      !_theResult____h400946[9] &&
	      !_theResult____h400946[8] &&
	      !_theResult____h400946[7] &&
	      !_theResult____h400946[6] &&
	      !_theResult____h400946[5] &&
	      !_theResult____h400946[4] &&
	      !_theResult____h400946[3] &&
	      !_theResult____h400946[2] &&
	      !_theResult____h400946[1] &&
	      !_theResult____h400946[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d5157) ?
	       8'd0 :
	       _theResult___fst_exp__h410504 ;
  assign _theResult___fst_exp__h410513 =
	     (!_theResult____h400946[56] && _theResult____h400946[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h410510 ;
  assign _theResult___fst_exp__h411036 =
	     (_theResult___fst_exp__h410439 == 8'd255) ?
	       _theResult___fst_exp__h410439 :
	       _theResult___fst_exp__h411033 ;
  assign _theResult___fst_exp__h420309 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q26[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q26[7:0] ;
  assign _theResult___fst_exp__h420348 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC__q26[7:0] -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4835 } ;
  assign _theResult___fst_exp__h420354 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0 &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[55] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[54] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[53] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[52] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[51] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[50] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[49] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[48] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[47] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[46] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[45] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[44] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[43] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[42] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[41] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[40] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[39] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[38] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[37] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[36] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[35] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[34] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[33] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[32] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[31] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[30] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[29] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[28] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[27] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[26] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[25] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[24] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[23] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[22] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[21] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[20] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[19] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[18] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[17] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[16] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[15] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[14] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[13] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[12] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[11] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[10] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[9] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[8] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[7] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[6] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[5] ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d5230) ?
	       8'd0 :
	       _theResult___fst_exp__h420348 ;
  assign _theResult___fst_exp__h420357 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h420354 :
	       _theResult___fst_exp__h420309 ;
  assign _theResult___fst_exp__h420905 =
	     (_theResult___fst_exp__h420357 == 8'd255) ?
	       _theResult___fst_exp__h420357 :
	       _theResult___fst_exp__h420902 ;
  assign _theResult___fst_exp__h420914 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4369 ?
		  _theResult___snd_fst_exp__h400600 :
		  _theResult___fst_exp__h380801) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4909 ?
		  _theResult___snd_fst_exp__h420908 :
		  _theResult___fst_exp__h380801) ;
  assign _theResult___fst_exp__h420917 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
	      52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h420914 ;
  assign _theResult___fst_exp__h441898 =
	     _theResult____h432534[56] ?
	       8'd2 :
	       _theResult___fst_exp__h441972 ;
  assign _theResult___fst_exp__h441963 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d5996 } ;
  assign _theResult___fst_exp__h441969 =
	     (!_theResult____h432534[56] && !_theResult____h432534[55] &&
	      !_theResult____h432534[54] &&
	      !_theResult____h432534[53] &&
	      !_theResult____h432534[52] &&
	      !_theResult____h432534[51] &&
	      !_theResult____h432534[50] &&
	      !_theResult____h432534[49] &&
	      !_theResult____h432534[48] &&
	      !_theResult____h432534[47] &&
	      !_theResult____h432534[46] &&
	      !_theResult____h432534[45] &&
	      !_theResult____h432534[44] &&
	      !_theResult____h432534[43] &&
	      !_theResult____h432534[42] &&
	      !_theResult____h432534[41] &&
	      !_theResult____h432534[40] &&
	      !_theResult____h432534[39] &&
	      !_theResult____h432534[38] &&
	      !_theResult____h432534[37] &&
	      !_theResult____h432534[36] &&
	      !_theResult____h432534[35] &&
	      !_theResult____h432534[34] &&
	      !_theResult____h432534[33] &&
	      !_theResult____h432534[32] &&
	      !_theResult____h432534[31] &&
	      !_theResult____h432534[30] &&
	      !_theResult____h432534[29] &&
	      !_theResult____h432534[28] &&
	      !_theResult____h432534[27] &&
	      !_theResult____h432534[26] &&
	      !_theResult____h432534[25] &&
	      !_theResult____h432534[24] &&
	      !_theResult____h432534[23] &&
	      !_theResult____h432534[22] &&
	      !_theResult____h432534[21] &&
	      !_theResult____h432534[20] &&
	      !_theResult____h432534[19] &&
	      !_theResult____h432534[18] &&
	      !_theResult____h432534[17] &&
	      !_theResult____h432534[16] &&
	      !_theResult____h432534[15] &&
	      !_theResult____h432534[14] &&
	      !_theResult____h432534[13] &&
	      !_theResult____h432534[12] &&
	      !_theResult____h432534[11] &&
	      !_theResult____h432534[10] &&
	      !_theResult____h432534[9] &&
	      !_theResult____h432534[8] &&
	      !_theResult____h432534[7] &&
	      !_theResult____h432534[6] &&
	      !_theResult____h432534[5] &&
	      !_theResult____h432534[4] &&
	      !_theResult____h432534[3] &&
	      !_theResult____h432534[2] &&
	      !_theResult____h432534[1] &&
	      !_theResult____h432534[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d5998) ?
	       8'd0 :
	       _theResult___fst_exp__h441963 ;
  assign _theResult___fst_exp__h441972 =
	     (!_theResult____h432534[56] && _theResult____h432534[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h441969 ;
  assign _theResult___fst_exp__h442495 =
	     (_theResult___fst_exp__h441898 == 8'd255) ?
	       _theResult___fst_exp__h441898 :
	       _theResult___fst_exp__h442492 ;
  assign _theResult___fst_exp__h451778 =
	     8'd129 -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6227 } ;
  assign _theResult___fst_exp__h451784 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0 &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[55] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[54] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[53] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[52] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[51] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[50] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[49] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[48] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[47] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[46] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[45] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[44] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[43] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[42] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[41] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[40] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[39] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[38] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[37] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[36] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[35] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[34] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[33] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[32] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[31] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[30] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[29] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[28] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[27] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[26] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[25] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[24] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[23] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[22] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[21] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[20] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[19] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[18] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[17] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[16] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[15] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[14] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[13] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[12] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[11] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[10] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[9] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[8] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[7] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[6] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[5] ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6229) ?
	       8'd0 :
	       _theResult___fst_exp__h451778 ;
  assign _theResult___fst_exp__h451787 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h451784 :
	       8'd129 ;
  assign _theResult___fst_exp__h452310 =
	     (_theResult___fst_exp__h451787 == 8'd255) ?
	       _theResult___fst_exp__h451787 :
	       _theResult___fst_exp__h452307 ;
  assign _theResult___fst_exp__h462152 =
	     _theResult____h452659[56] ?
	       8'd2 :
	       _theResult___fst_exp__h462226 ;
  assign _theResult___fst_exp__h462217 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d6547 } ;
  assign _theResult___fst_exp__h462223 =
	     (!_theResult____h452659[56] && !_theResult____h452659[55] &&
	      !_theResult____h452659[54] &&
	      !_theResult____h452659[53] &&
	      !_theResult____h452659[52] &&
	      !_theResult____h452659[51] &&
	      !_theResult____h452659[50] &&
	      !_theResult____h452659[49] &&
	      !_theResult____h452659[48] &&
	      !_theResult____h452659[47] &&
	      !_theResult____h452659[46] &&
	      !_theResult____h452659[45] &&
	      !_theResult____h452659[44] &&
	      !_theResult____h452659[43] &&
	      !_theResult____h452659[42] &&
	      !_theResult____h452659[41] &&
	      !_theResult____h452659[40] &&
	      !_theResult____h452659[39] &&
	      !_theResult____h452659[38] &&
	      !_theResult____h452659[37] &&
	      !_theResult____h452659[36] &&
	      !_theResult____h452659[35] &&
	      !_theResult____h452659[34] &&
	      !_theResult____h452659[33] &&
	      !_theResult____h452659[32] &&
	      !_theResult____h452659[31] &&
	      !_theResult____h452659[30] &&
	      !_theResult____h452659[29] &&
	      !_theResult____h452659[28] &&
	      !_theResult____h452659[27] &&
	      !_theResult____h452659[26] &&
	      !_theResult____h452659[25] &&
	      !_theResult____h452659[24] &&
	      !_theResult____h452659[23] &&
	      !_theResult____h452659[22] &&
	      !_theResult____h452659[21] &&
	      !_theResult____h452659[20] &&
	      !_theResult____h452659[19] &&
	      !_theResult____h452659[18] &&
	      !_theResult____h452659[17] &&
	      !_theResult____h452659[16] &&
	      !_theResult____h452659[15] &&
	      !_theResult____h452659[14] &&
	      !_theResult____h452659[13] &&
	      !_theResult____h452659[12] &&
	      !_theResult____h452659[11] &&
	      !_theResult____h452659[10] &&
	      !_theResult____h452659[9] &&
	      !_theResult____h452659[8] &&
	      !_theResult____h452659[7] &&
	      !_theResult____h452659[6] &&
	      !_theResult____h452659[5] &&
	      !_theResult____h452659[4] &&
	      !_theResult____h452659[3] &&
	      !_theResult____h452659[2] &&
	      !_theResult____h452659[1] &&
	      !_theResult____h452659[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d6549) ?
	       8'd0 :
	       _theResult___fst_exp__h462217 ;
  assign _theResult___fst_exp__h462226 =
	     (!_theResult____h452659[56] && _theResult____h452659[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h462223 ;
  assign _theResult___fst_exp__h462749 =
	     (_theResult___fst_exp__h462152 == 8'd255) ?
	       _theResult___fst_exp__h462152 :
	       _theResult___fst_exp__h462746 ;
  assign _theResult___fst_exp__h472022 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q61[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q61[7:0] ;
  assign _theResult___fst_exp__h472061 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC__q61[7:0] -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6227 } ;
  assign _theResult___fst_exp__h472067 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0 &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[55] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[54] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[53] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[52] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[51] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[50] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[49] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[48] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[47] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[46] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[45] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[44] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[43] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[42] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[41] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[40] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[39] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[38] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[37] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[36] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[35] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[34] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[33] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[32] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[31] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[30] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[29] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[28] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[27] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[26] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[25] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[24] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[23] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[22] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[21] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[20] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[19] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[18] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[17] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[16] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[15] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[14] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[13] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[12] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[11] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[10] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[9] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[8] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[7] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[6] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[5] ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d6622) ?
	       8'd0 :
	       _theResult___fst_exp__h472061 ;
  assign _theResult___fst_exp__h472070 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h472067 :
	       _theResult___fst_exp__h472022 ;
  assign _theResult___fst_exp__h472618 =
	     (_theResult___fst_exp__h472070 == 8'd255) ?
	       _theResult___fst_exp__h472070 :
	       _theResult___fst_exp__h472615 ;
  assign _theResult___fst_exp__h472627 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5761 ?
		  _theResult___snd_fst_exp__h452313 :
		  _theResult___fst_exp__h432516) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6301 ?
		  _theResult___snd_fst_exp__h472621 :
		  _theResult___fst_exp__h432516) ;
  assign _theResult___fst_exp__h472630 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
	      52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h472627 ;
  assign _theResult___fst_exp__h493609 =
	     _theResult____h484245[56] ?
	       8'd2 :
	       _theResult___fst_exp__h493683 ;
  assign _theResult___fst_exp__h493674 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d7388 } ;
  assign _theResult___fst_exp__h493680 =
	     (!_theResult____h484245[56] && !_theResult____h484245[55] &&
	      !_theResult____h484245[54] &&
	      !_theResult____h484245[53] &&
	      !_theResult____h484245[52] &&
	      !_theResult____h484245[51] &&
	      !_theResult____h484245[50] &&
	      !_theResult____h484245[49] &&
	      !_theResult____h484245[48] &&
	      !_theResult____h484245[47] &&
	      !_theResult____h484245[46] &&
	      !_theResult____h484245[45] &&
	      !_theResult____h484245[44] &&
	      !_theResult____h484245[43] &&
	      !_theResult____h484245[42] &&
	      !_theResult____h484245[41] &&
	      !_theResult____h484245[40] &&
	      !_theResult____h484245[39] &&
	      !_theResult____h484245[38] &&
	      !_theResult____h484245[37] &&
	      !_theResult____h484245[36] &&
	      !_theResult____h484245[35] &&
	      !_theResult____h484245[34] &&
	      !_theResult____h484245[33] &&
	      !_theResult____h484245[32] &&
	      !_theResult____h484245[31] &&
	      !_theResult____h484245[30] &&
	      !_theResult____h484245[29] &&
	      !_theResult____h484245[28] &&
	      !_theResult____h484245[27] &&
	      !_theResult____h484245[26] &&
	      !_theResult____h484245[25] &&
	      !_theResult____h484245[24] &&
	      !_theResult____h484245[23] &&
	      !_theResult____h484245[22] &&
	      !_theResult____h484245[21] &&
	      !_theResult____h484245[20] &&
	      !_theResult____h484245[19] &&
	      !_theResult____h484245[18] &&
	      !_theResult____h484245[17] &&
	      !_theResult____h484245[16] &&
	      !_theResult____h484245[15] &&
	      !_theResult____h484245[14] &&
	      !_theResult____h484245[13] &&
	      !_theResult____h484245[12] &&
	      !_theResult____h484245[11] &&
	      !_theResult____h484245[10] &&
	      !_theResult____h484245[9] &&
	      !_theResult____h484245[8] &&
	      !_theResult____h484245[7] &&
	      !_theResult____h484245[6] &&
	      !_theResult____h484245[5] &&
	      !_theResult____h484245[4] &&
	      !_theResult____h484245[3] &&
	      !_theResult____h484245[2] &&
	      !_theResult____h484245[1] &&
	      !_theResult____h484245[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDi_ETC___d7390) ?
	       8'd0 :
	       _theResult___fst_exp__h493674 ;
  assign _theResult___fst_exp__h493683 =
	     (!_theResult____h484245[56] && _theResult____h484245[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h493680 ;
  assign _theResult___fst_exp__h494206 =
	     (_theResult___fst_exp__h493609 == 8'd255) ?
	       _theResult___fst_exp__h493609 :
	       _theResult___fst_exp__h494203 ;
  assign _theResult___fst_exp__h503489 =
	     8'd129 -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7619 } ;
  assign _theResult___fst_exp__h503495 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0 &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[55] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[54] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[53] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[52] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[51] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[50] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[49] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[48] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[47] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[46] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[45] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[44] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[43] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[42] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[41] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[40] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[39] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[38] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[37] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[36] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[35] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[34] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[33] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[32] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[31] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[30] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[29] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[28] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[27] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[26] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[25] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[24] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[23] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[22] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[21] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[20] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[19] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[18] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[17] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[16] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[15] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[14] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[13] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[12] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[11] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[10] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[9] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[8] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[7] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[6] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[5] ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d7621) ?
	       8'd0 :
	       _theResult___fst_exp__h503489 ;
  assign _theResult___fst_exp__h503498 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h503495 :
	       8'd129 ;
  assign _theResult___fst_exp__h504021 =
	     (_theResult___fst_exp__h503498 == 8'd255) ?
	       _theResult___fst_exp__h503498 :
	       _theResult___fst_exp__h504018 ;
  assign _theResult___fst_exp__h513863 =
	     _theResult____h504370[56] ?
	       8'd2 :
	       _theResult___fst_exp__h513937 ;
  assign _theResult___fst_exp__h513928 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d7939 } ;
  assign _theResult___fst_exp__h513934 =
	     (!_theResult____h504370[56] && !_theResult____h504370[55] &&
	      !_theResult____h504370[54] &&
	      !_theResult____h504370[53] &&
	      !_theResult____h504370[52] &&
	      !_theResult____h504370[51] &&
	      !_theResult____h504370[50] &&
	      !_theResult____h504370[49] &&
	      !_theResult____h504370[48] &&
	      !_theResult____h504370[47] &&
	      !_theResult____h504370[46] &&
	      !_theResult____h504370[45] &&
	      !_theResult____h504370[44] &&
	      !_theResult____h504370[43] &&
	      !_theResult____h504370[42] &&
	      !_theResult____h504370[41] &&
	      !_theResult____h504370[40] &&
	      !_theResult____h504370[39] &&
	      !_theResult____h504370[38] &&
	      !_theResult____h504370[37] &&
	      !_theResult____h504370[36] &&
	      !_theResult____h504370[35] &&
	      !_theResult____h504370[34] &&
	      !_theResult____h504370[33] &&
	      !_theResult____h504370[32] &&
	      !_theResult____h504370[31] &&
	      !_theResult____h504370[30] &&
	      !_theResult____h504370[29] &&
	      !_theResult____h504370[28] &&
	      !_theResult____h504370[27] &&
	      !_theResult____h504370[26] &&
	      !_theResult____h504370[25] &&
	      !_theResult____h504370[24] &&
	      !_theResult____h504370[23] &&
	      !_theResult____h504370[22] &&
	      !_theResult____h504370[21] &&
	      !_theResult____h504370[20] &&
	      !_theResult____h504370[19] &&
	      !_theResult____h504370[18] &&
	      !_theResult____h504370[17] &&
	      !_theResult____h504370[16] &&
	      !_theResult____h504370[15] &&
	      !_theResult____h504370[14] &&
	      !_theResult____h504370[13] &&
	      !_theResult____h504370[12] &&
	      !_theResult____h504370[11] &&
	      !_theResult____h504370[10] &&
	      !_theResult____h504370[9] &&
	      !_theResult____h504370[8] &&
	      !_theResult____h504370[7] &&
	      !_theResult____h504370[6] &&
	      !_theResult____h504370[5] &&
	      !_theResult____h504370[4] &&
	      !_theResult____h504370[3] &&
	      !_theResult____h504370[2] &&
	      !_theResult____h504370[1] &&
	      !_theResult____h504370[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulD_ETC___d7941) ?
	       8'd0 :
	       _theResult___fst_exp__h513928 ;
  assign _theResult___fst_exp__h513937 =
	     (!_theResult____h504370[56] && _theResult____h504370[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h513934 ;
  assign _theResult___fst_exp__h514460 =
	     (_theResult___fst_exp__h513863 == 8'd255) ?
	       _theResult___fst_exp__h513863 :
	       _theResult___fst_exp__h514457 ;
  assign _theResult___fst_exp__h523733 =
	     (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q96[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q96[7:0] ;
  assign _theResult___fst_exp__h523772 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC__q96[7:0] -
	     { 2'd0,
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7619 } ;
  assign _theResult___fst_exp__h523778 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0 &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[55] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[54] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[53] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[52] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[51] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[50] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[49] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[48] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[47] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[46] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[45] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[44] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[43] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[42] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[41] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[40] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[39] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[38] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[37] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[36] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[35] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[34] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[33] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[32] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[31] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[30] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[29] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[28] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[27] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[26] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[25] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[24] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[23] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[22] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[21] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[20] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[19] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[18] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[17] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[16] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[15] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[14] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[13] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[12] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[11] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[10] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[9] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[8] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[7] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[6] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[5] ||
	      !_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec_dou_ETC___d8014) ?
	       8'd0 :
	       _theResult___fst_exp__h523772 ;
  assign _theResult___fst_exp__h523781 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _theResult___fst_exp__h523778 :
	       _theResult___fst_exp__h523733 ;
  assign _theResult___fst_exp__h524329 =
	     (_theResult___fst_exp__h523781 == 8'd255) ?
	       _theResult___fst_exp__h523781 :
	       _theResult___fst_exp__h524326 ;
  assign _theResult___fst_exp__h524338 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7153 ?
		  _theResult___snd_fst_exp__h504024 :
		  _theResult___fst_exp__h484227) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7693 ?
		  _theResult___snd_fst_exp__h524332 :
		  _theResult___fst_exp__h484227) ;
  assign _theResult___fst_exp__h524341 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
	      52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h524338 ;
  assign _theResult___fst_exp__h540817 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3) ?
	       11'd2047 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q6 ;
  assign _theResult___fst_exp__h557114 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8887 } ;
  assign _theResult___fst_exp__h557120 =
	     IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d8891 ?
	       11'd0 :
	       _theResult___fst_exp__h557114 ;
  assign _theResult___fst_exp__h557123 =
	     (f1_exp__h536047 == 8'd0) ?
	       _theResult___fst_exp__h557120 :
	       11'd897 ;
  assign _theResult___fst_exp__h557878 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard47929_0b0_theResult___fst_exp57123_0_ETC__q132 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9324 ;
  assign _theResult___fst_exp__h557881 =
	     (_theResult___fst_exp__h557123 == 11'd2047) ?
	       _theResult___fst_exp__h557123 :
	       _theResult___fst_exp__h557878 ;
  assign _theResult___fst_exp__h567955 =
	     _theResult____h558464[56] ?
	       11'd2 :
	       _theResult___fst_exp__h568029 ;
  assign _theResult___fst_exp__h568020 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9200 } ;
  assign _theResult___fst_exp__h568026 =
	     (!_theResult____h558464[56] && !_theResult____h558464[55] &&
	      !_theResult____h558464[54] &&
	      !_theResult____h558464[53] &&
	      !_theResult____h558464[52] &&
	      !_theResult____h558464[51] &&
	      !_theResult____h558464[50] &&
	      !_theResult____h558464[49] &&
	      !_theResult____h558464[48] &&
	      !_theResult____h558464[47] &&
	      !_theResult____h558464[46] &&
	      !_theResult____h558464[45] &&
	      !_theResult____h558464[44] &&
	      !_theResult____h558464[43] &&
	      !_theResult____h558464[42] &&
	      !_theResult____h558464[41] &&
	      !_theResult____h558464[40] &&
	      !_theResult____h558464[39] &&
	      !_theResult____h558464[38] &&
	      !_theResult____h558464[37] &&
	      !_theResult____h558464[36] &&
	      !_theResult____h558464[35] &&
	      !_theResult____h558464[34] &&
	      !_theResult____h558464[33] &&
	      !_theResult____h558464[32] &&
	      !_theResult____h558464[31] &&
	      !_theResult____h558464[30] &&
	      !_theResult____h558464[29] &&
	      !_theResult____h558464[28] &&
	      !_theResult____h558464[27] &&
	      !_theResult____h558464[26] &&
	      !_theResult____h558464[25] &&
	      !_theResult____h558464[24] &&
	      !_theResult____h558464[23] &&
	      !_theResult____h558464[22] &&
	      !_theResult____h558464[21] &&
	      !_theResult____h558464[20] &&
	      !_theResult____h558464[19] &&
	      !_theResult____h558464[18] &&
	      !_theResult____h558464[17] &&
	      !_theResult____h558464[16] &&
	      !_theResult____h558464[15] &&
	      !_theResult____h558464[14] &&
	      !_theResult____h558464[13] &&
	      !_theResult____h558464[12] &&
	      !_theResult____h558464[11] &&
	      !_theResult____h558464[10] &&
	      !_theResult____h558464[9] &&
	      !_theResult____h558464[8] &&
	      !_theResult____h558464[7] &&
	      !_theResult____h558464[6] &&
	      !_theResult____h558464[5] &&
	      !_theResult____h558464[4] &&
	      !_theResult____h558464[3] &&
	      !_theResult____h558464[2] &&
	      !_theResult____h558464[1] &&
	      !_theResult____h558464[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d9202) ?
	       11'd0 :
	       _theResult___fst_exp__h568020 ;
  assign _theResult___fst_exp__h568029 =
	     (!_theResult____h558464[56] && _theResult____h558464[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h568026 ;
  assign _theResult___fst_exp__h568784 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard58474_0b0_theResult___fst_exp67955_0_ETC__q200 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9367 ;
  assign _theResult___fst_exp__h568787 =
	     (_theResult___fst_exp__h567955 == 11'd2047) ?
	       _theResult___fst_exp__h567955 :
	       _theResult___fst_exp__h568784 ;
  assign _theResult___fst_exp__h577973 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q125[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q125[10:0] ;
  assign _theResult___fst_exp__h578012 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q125[10:0] -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8887 } ;
  assign _theResult___fst_exp__h578018 =
	     IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9254 ?
	       11'd0 :
	       _theResult___fst_exp__h578012 ;
  assign _theResult___fst_exp__h578021 =
	     (f1_exp__h536047 == 8'd0) ?
	       _theResult___fst_exp__h578018 :
	       _theResult___fst_exp__h577973 ;
  assign _theResult___fst_exp__h578801 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard68798_0b0_theResult___fst_exp78021_0_ETC__q202 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9398 ;
  assign _theResult___fst_exp__h578804 =
	     (_theResult___fst_exp__h578021 == 11'd2047) ?
	       _theResult___fst_exp__h578021 :
	       _theResult___fst_exp__h578801 ;
  assign _theResult___fst_exp__h578813 =
	     (f1_exp__h536047 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8814 ?
		  _theResult___snd_fst_exp__h557884 :
		  _theResult___fst_exp__h540817) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8952 ?
		  _theResult___snd_fst_exp__h578807 :
		  _theResult___fst_exp__h540817) ;
  assign _theResult___fst_exp__h578816 =
	     (f1_exp__h536047 == 8'd0 && f1_sfd__h536048 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h578813 ;
  assign _theResult___fst_exp__h583898 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3) ?
	       11'd2047 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8 ;
  assign _theResult___fst_exp__h600195 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10387 } ;
  assign _theResult___fst_exp__h600201 =
	     IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10391 ?
	       11'd0 :
	       _theResult___fst_exp__h600195 ;
  assign _theResult___fst_exp__h600204 =
	     (f2_exp__h579217 == 8'd0) ?
	       _theResult___fst_exp__h600201 :
	       11'd897 ;
  assign _theResult___fst_exp__h600959 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard91010_0b0_theResult___fst_exp00204_0_ETC__q172 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10808 ;
  assign _theResult___fst_exp__h600962 =
	     (_theResult___fst_exp__h600204 == 11'd2047) ?
	       _theResult___fst_exp__h600204 :
	       _theResult___fst_exp__h600959 ;
  assign _theResult___fst_exp__h611036 =
	     _theResult____h601545[56] ?
	       11'd2 :
	       _theResult___fst_exp__h611110 ;
  assign _theResult___fst_exp__h611101 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d10684 } ;
  assign _theResult___fst_exp__h611107 =
	     (!_theResult____h601545[56] && !_theResult____h601545[55] &&
	      !_theResult____h601545[54] &&
	      !_theResult____h601545[53] &&
	      !_theResult____h601545[52] &&
	      !_theResult____h601545[51] &&
	      !_theResult____h601545[50] &&
	      !_theResult____h601545[49] &&
	      !_theResult____h601545[48] &&
	      !_theResult____h601545[47] &&
	      !_theResult____h601545[46] &&
	      !_theResult____h601545[45] &&
	      !_theResult____h601545[44] &&
	      !_theResult____h601545[43] &&
	      !_theResult____h601545[42] &&
	      !_theResult____h601545[41] &&
	      !_theResult____h601545[40] &&
	      !_theResult____h601545[39] &&
	      !_theResult____h601545[38] &&
	      !_theResult____h601545[37] &&
	      !_theResult____h601545[36] &&
	      !_theResult____h601545[35] &&
	      !_theResult____h601545[34] &&
	      !_theResult____h601545[33] &&
	      !_theResult____h601545[32] &&
	      !_theResult____h601545[31] &&
	      !_theResult____h601545[30] &&
	      !_theResult____h601545[29] &&
	      !_theResult____h601545[28] &&
	      !_theResult____h601545[27] &&
	      !_theResult____h601545[26] &&
	      !_theResult____h601545[25] &&
	      !_theResult____h601545[24] &&
	      !_theResult____h601545[23] &&
	      !_theResult____h601545[22] &&
	      !_theResult____h601545[21] &&
	      !_theResult____h601545[20] &&
	      !_theResult____h601545[19] &&
	      !_theResult____h601545[18] &&
	      !_theResult____h601545[17] &&
	      !_theResult____h601545[16] &&
	      !_theResult____h601545[15] &&
	      !_theResult____h601545[14] &&
	      !_theResult____h601545[13] &&
	      !_theResult____h601545[12] &&
	      !_theResult____h601545[11] &&
	      !_theResult____h601545[10] &&
	      !_theResult____h601545[9] &&
	      !_theResult____h601545[8] &&
	      !_theResult____h601545[7] &&
	      !_theResult____h601545[6] &&
	      !_theResult____h601545[5] &&
	      !_theResult____h601545[4] &&
	      !_theResult____h601545[3] &&
	      !_theResult____h601545[2] &&
	      !_theResult____h601545[1] &&
	      !_theResult____h601545[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d10686) ?
	       11'd0 :
	       _theResult___fst_exp__h611101 ;
  assign _theResult___fst_exp__h611110 =
	     (!_theResult____h601545[56] && _theResult____h601545[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h611107 ;
  assign _theResult___fst_exp__h611865 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard01555_0b0_theResult___fst_exp11036_0_ETC__q174 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10846 ;
  assign _theResult___fst_exp__h611868 =
	     (_theResult___fst_exp__h611036 == 11'd2047) ?
	       _theResult___fst_exp__h611036 :
	       _theResult___fst_exp__h611865 ;
  assign _theResult___fst_exp__h621054 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q165[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q165[10:0] ;
  assign _theResult___fst_exp__h621093 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q165[10:0] -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10387 } ;
  assign _theResult___fst_exp__h621099 =
	     IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10738 ?
	       11'd0 :
	       _theResult___fst_exp__h621093 ;
  assign _theResult___fst_exp__h621102 =
	     (f2_exp__h579217 == 8'd0) ?
	       _theResult___fst_exp__h621099 :
	       _theResult___fst_exp__h621054 ;
  assign _theResult___fst_exp__h621882 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard11879_0b0_theResult___fst_exp21102_0_ETC__q176 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10877 ;
  assign _theResult___fst_exp__h621885 =
	     (_theResult___fst_exp__h621102 == 11'd2047) ?
	       _theResult___fst_exp__h621102 :
	       _theResult___fst_exp__h621882 ;
  assign _theResult___fst_exp__h621894 =
	     (f2_exp__h579217 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10314 ?
		  _theResult___snd_fst_exp__h600965 :
		  _theResult___fst_exp__h583898) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10436 ?
		  _theResult___snd_fst_exp__h621888 :
		  _theResult___fst_exp__h583898) ;
  assign _theResult___fst_exp__h621897 =
	     (f2_exp__h579217 == 8'd0 && f2_sfd__h579218 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h621894 ;
  assign _theResult___fst_exp__h627400 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3) ?
	       11'd2047 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10 ;
  assign _theResult___fst_exp__h643697 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9618 } ;
  assign _theResult___fst_exp__h643703 =
	     IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9622 ?
	       11'd0 :
	       _theResult___fst_exp__h643697 ;
  assign _theResult___fst_exp__h643706 =
	     (f3_exp__h622719 == 8'd0) ?
	       _theResult___fst_exp__h643703 :
	       11'd897 ;
  assign _theResult___fst_exp__h644461 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard34512_0b0_theResult___fst_exp43706_0_ETC__q149 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10039 ;
  assign _theResult___fst_exp__h644464 =
	     (_theResult___fst_exp__h643706 == 11'd2047) ?
	       _theResult___fst_exp__h643706 :
	       _theResult___fst_exp__h644461 ;
  assign _theResult___fst_exp__h654538 =
	     _theResult____h645047[56] ?
	       11'd2 :
	       _theResult___fst_exp__h654612 ;
  assign _theResult___fst_exp__h654603 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9915 } ;
  assign _theResult___fst_exp__h654609 =
	     (!_theResult____h645047[56] && !_theResult____h645047[55] &&
	      !_theResult____h645047[54] &&
	      !_theResult____h645047[53] &&
	      !_theResult____h645047[52] &&
	      !_theResult____h645047[51] &&
	      !_theResult____h645047[50] &&
	      !_theResult____h645047[49] &&
	      !_theResult____h645047[48] &&
	      !_theResult____h645047[47] &&
	      !_theResult____h645047[46] &&
	      !_theResult____h645047[45] &&
	      !_theResult____h645047[44] &&
	      !_theResult____h645047[43] &&
	      !_theResult____h645047[42] &&
	      !_theResult____h645047[41] &&
	      !_theResult____h645047[40] &&
	      !_theResult____h645047[39] &&
	      !_theResult____h645047[38] &&
	      !_theResult____h645047[37] &&
	      !_theResult____h645047[36] &&
	      !_theResult____h645047[35] &&
	      !_theResult____h645047[34] &&
	      !_theResult____h645047[33] &&
	      !_theResult____h645047[32] &&
	      !_theResult____h645047[31] &&
	      !_theResult____h645047[30] &&
	      !_theResult____h645047[29] &&
	      !_theResult____h645047[28] &&
	      !_theResult____h645047[27] &&
	      !_theResult____h645047[26] &&
	      !_theResult____h645047[25] &&
	      !_theResult____h645047[24] &&
	      !_theResult____h645047[23] &&
	      !_theResult____h645047[22] &&
	      !_theResult____h645047[21] &&
	      !_theResult____h645047[20] &&
	      !_theResult____h645047[19] &&
	      !_theResult____h645047[18] &&
	      !_theResult____h645047[17] &&
	      !_theResult____h645047[16] &&
	      !_theResult____h645047[15] &&
	      !_theResult____h645047[14] &&
	      !_theResult____h645047[13] &&
	      !_theResult____h645047[12] &&
	      !_theResult____h645047[11] &&
	      !_theResult____h645047[10] &&
	      !_theResult____h645047[9] &&
	      !_theResult____h645047[8] &&
	      !_theResult____h645047[7] &&
	      !_theResult____h645047[6] &&
	      !_theResult____h645047[5] &&
	      !_theResult____h645047[4] &&
	      !_theResult____h645047[3] &&
	      !_theResult____h645047[2] &&
	      !_theResult____h645047[1] &&
	      !_theResult____h645047[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuM_ETC___d9917) ?
	       11'd0 :
	       _theResult___fst_exp__h654603 ;
  assign _theResult___fst_exp__h654612 =
	     (!_theResult____h645047[56] && _theResult____h645047[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h654609 ;
  assign _theResult___fst_exp__h655367 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard45057_0b0_theResult___fst_exp54538_0_ETC__q178 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10077 ;
  assign _theResult___fst_exp__h655370 =
	     (_theResult___fst_exp__h654538 == 11'd2047) ?
	       _theResult___fst_exp__h654538 :
	       _theResult___fst_exp__h655367 ;
  assign _theResult___fst_exp__h664556 =
	     (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q142[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q142[10:0] ;
  assign _theResult___fst_exp__h664595 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC__q142[10:0] -
	     { 5'd0,
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9618 } ;
  assign _theResult___fst_exp__h664601 =
	     IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9969 ?
	       11'd0 :
	       _theResult___fst_exp__h664595 ;
  assign _theResult___fst_exp__h664604 =
	     (f3_exp__h622719 == 8'd0) ?
	       _theResult___fst_exp__h664601 :
	       _theResult___fst_exp__h664556 ;
  assign _theResult___fst_exp__h665384 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard55381_0b0_theResult___fst_exp64604_0_ETC__q180 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10108 ;
  assign _theResult___fst_exp__h665387 =
	     (_theResult___fst_exp__h664604 == 11'd2047) ?
	       _theResult___fst_exp__h664604 :
	       _theResult___fst_exp__h665384 ;
  assign _theResult___fst_exp__h665396 =
	     (f3_exp__h622719 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9545 ?
		  _theResult___snd_fst_exp__h644467 :
		  _theResult___fst_exp__h627400) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9667 ?
		  _theResult___snd_fst_exp__h665390 :
		  _theResult___fst_exp__h627400) ;
  assign _theResult___fst_exp__h665399 =
	     (f3_exp__h622719 == 8'd0 && f3_sfd__h622720 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h665396 ;
  assign _theResult___fst_sfd__h390783 =
	     (_theResult___fst_exp__h390185 == 8'd255) ?
	       sfdin__h390179[56:34] :
	       _theResult___fst_sfd__h390780 ;
  assign _theResult___fst_sfd__h400598 =
	     (_theResult___fst_exp__h400074 == 8'd255) ?
	       _theResult___snd__h400025[56:34] :
	       _theResult___fst_sfd__h400595 ;
  assign _theResult___fst_sfd__h411037 =
	     (_theResult___fst_exp__h410439 == 8'd255) ?
	       sfdin__h410433[56:34] :
	       _theResult___fst_sfd__h411034 ;
  assign _theResult___fst_sfd__h420906 =
	     (_theResult___fst_exp__h420357 == 8'd255) ?
	       _theResult___snd__h420303[56:34] :
	       _theResult___fst_sfd__h420903 ;
  assign _theResult___fst_sfd__h420915 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4369 ?
		  _theResult___snd_fst_sfd__h400601 :
		  _theResult___fst_sfd__h380802) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4909 ?
		  _theResult___snd_fst_sfd__h420909 :
		  _theResult___fst_sfd__h380802) ;
  assign _theResult___fst_sfd__h420921 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	       11'd2047 ||
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	       11'd0) &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
	      52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h420915 ;
  assign _theResult___fst_sfd__h442496 =
	     (_theResult___fst_exp__h441898 == 8'd255) ?
	       sfdin__h441892[56:34] :
	       _theResult___fst_sfd__h442493 ;
  assign _theResult___fst_sfd__h452311 =
	     (_theResult___fst_exp__h451787 == 8'd255) ?
	       _theResult___snd__h451738[56:34] :
	       _theResult___fst_sfd__h452308 ;
  assign _theResult___fst_sfd__h462750 =
	     (_theResult___fst_exp__h462152 == 8'd255) ?
	       sfdin__h462146[56:34] :
	       _theResult___fst_sfd__h462747 ;
  assign _theResult___fst_sfd__h472619 =
	     (_theResult___fst_exp__h472070 == 8'd255) ?
	       _theResult___snd__h472016[56:34] :
	       _theResult___fst_sfd__h472616 ;
  assign _theResult___fst_sfd__h472628 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5761 ?
		  _theResult___snd_fst_sfd__h452314 :
		  _theResult___fst_sfd__h432517) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6301 ?
		  _theResult___snd_fst_sfd__h472622 :
		  _theResult___fst_sfd__h432517) ;
  assign _theResult___fst_sfd__h472634 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	       11'd2047 ||
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	       11'd0) &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
	      52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h472628 ;
  assign _theResult___fst_sfd__h494207 =
	     (_theResult___fst_exp__h493609 == 8'd255) ?
	       sfdin__h493603[56:34] :
	       _theResult___fst_sfd__h494204 ;
  assign _theResult___fst_sfd__h504022 =
	     (_theResult___fst_exp__h503498 == 8'd255) ?
	       _theResult___snd__h503449[56:34] :
	       _theResult___fst_sfd__h504019 ;
  assign _theResult___fst_sfd__h514461 =
	     (_theResult___fst_exp__h513863 == 8'd255) ?
	       sfdin__h513857[56:34] :
	       _theResult___fst_sfd__h514458 ;
  assign _theResult___fst_sfd__h524330 =
	     (_theResult___fst_exp__h523781 == 8'd255) ?
	       _theResult___snd__h523727[56:34] :
	       _theResult___fst_sfd__h524327 ;
  assign _theResult___fst_sfd__h524339 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7153 ?
		  _theResult___snd_fst_sfd__h504025 :
		  _theResult___fst_sfd__h484228) :
	       (SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7693 ?
		  _theResult___snd_fst_sfd__h524333 :
		  _theResult___fst_sfd__h484228) ;
  assign _theResult___fst_sfd__h524345 =
	     ((coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	       11'd2047 ||
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	       11'd0) &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
	      52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h524339 ;
  assign _theResult___fst_sfd__h540818 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3) ?
	       52'd0 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7 ;
  assign _theResult___fst_sfd__h557879 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard47929_0b0_theResult___snd57074_BITS__ETC__q204 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9424 ;
  assign _theResult___fst_sfd__h557882 =
	     (_theResult___fst_exp__h557123 == 11'd2047) ?
	       _theResult___snd__h557074[56:5] :
	       _theResult___fst_sfd__h557879 ;
  assign _theResult___fst_sfd__h568785 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard58474_0b0_sfdin67949_BITS_56_TO_5_0b_ETC__q208 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9451 ;
  assign _theResult___fst_sfd__h568788 =
	     (_theResult___fst_exp__h567955 == 11'd2047) ?
	       sfdin__h567949[56:5] :
	       _theResult___fst_sfd__h568785 ;
  assign _theResult___fst_sfd__h578802 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard68798_0b0_theResult___snd77967_BITS__ETC__q206 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9470 ;
  assign _theResult___fst_sfd__h578805 =
	     (_theResult___fst_exp__h578021 == 11'd2047) ?
	       _theResult___snd__h577967[56:5] :
	       _theResult___fst_sfd__h578802 ;
  assign _theResult___fst_sfd__h578814 =
	     (f1_exp__h536047 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8814 ?
		  _theResult___snd_fst_sfd__h557885 :
		  _theResult___fst_sfd__h540818) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8952 ?
		  _theResult___snd_fst_sfd__h578808 :
		  _theResult___fst_sfd__h540818) ;
  assign _theResult___fst_sfd__h578820 =
	     ((f1_exp__h536047 == 8'd255 || f1_exp__h536047 == 8'd0) &&
	      f1_sfd__h536048 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h578814 ;
  assign _theResult___fst_sfd__h583899 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3) ?
	       52'd0 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9 ;
  assign _theResult___fst_sfd__h600960 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard91010_0b0_theResult___snd00155_BITS__ETC__q194 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10903 ;
  assign _theResult___fst_sfd__h600963 =
	     (_theResult___fst_exp__h600204 == 11'd2047) ?
	       _theResult___snd__h600155[56:5] :
	       _theResult___fst_sfd__h600960 ;
  assign _theResult___fst_sfd__h611866 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard01555_0b0_sfdin11030_BITS_56_TO_5_0b_ETC__q196 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10929 ;
  assign _theResult___fst_sfd__h611869 =
	     (_theResult___fst_exp__h611036 == 11'd2047) ?
	       sfdin__h611030[56:5] :
	       _theResult___fst_sfd__h611866 ;
  assign _theResult___fst_sfd__h621883 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard11879_0b0_theResult___snd21048_BITS__ETC__q198 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10948 ;
  assign _theResult___fst_sfd__h621886 =
	     (_theResult___fst_exp__h621102 == 11'd2047) ?
	       _theResult___snd__h621048[56:5] :
	       _theResult___fst_sfd__h621883 ;
  assign _theResult___fst_sfd__h621895 =
	     (f2_exp__h579217 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10314 ?
		  _theResult___snd_fst_sfd__h600966 :
		  _theResult___fst_sfd__h583899) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10436 ?
		  _theResult___snd_fst_sfd__h621889 :
		  _theResult___fst_sfd__h583899) ;
  assign _theResult___fst_sfd__h621901 =
	     ((f2_exp__h579217 == 8'd255 || f2_exp__h579217 == 8'd0) &&
	      f2_sfd__h579218 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h621895 ;
  assign _theResult___fst_sfd__h627401 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3) ?
	       52'd0 :
	       CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11 ;
  assign _theResult___fst_sfd__h644462 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard34512_0b0_theResult___snd43657_BITS__ETC__q210 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10134 ;
  assign _theResult___fst_sfd__h644465 =
	     (_theResult___fst_exp__h643706 == 11'd2047) ?
	       _theResult___snd__h643657[56:5] :
	       _theResult___fst_sfd__h644462 ;
  assign _theResult___fst_sfd__h655368 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard45057_0b0_sfdin54532_BITS_56_TO_5_0b_ETC__q212 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10160 ;
  assign _theResult___fst_sfd__h655371 =
	     (_theResult___fst_exp__h654538 == 11'd2047) ?
	       sfdin__h654532[56:5] :
	       _theResult___fst_sfd__h655368 ;
  assign _theResult___fst_sfd__h665385 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd2 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd3 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd4) ?
	       CASE_guard55381_0b0_theResult___snd64550_BITS__ETC__q214 :
	       IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10179 ;
  assign _theResult___fst_sfd__h665388 =
	     (_theResult___fst_exp__h664604 == 11'd2047) ?
	       _theResult___snd__h664550[56:5] :
	       _theResult___fst_sfd__h665385 ;
  assign _theResult___fst_sfd__h665397 =
	     (f3_exp__h622719 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9545 ?
		  _theResult___snd_fst_sfd__h644468 :
		  _theResult___fst_sfd__h627401) :
	       (SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9667 ?
		  _theResult___snd_fst_sfd__h665391 :
		  _theResult___fst_sfd__h627401) ;
  assign _theResult___fst_sfd__h665403 =
	     ((f3_exp__h622719 == 8'd255 || f3_exp__h622719 == 8'd0) &&
	      f3_sfd__h622720 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h665397 ;
  assign _theResult___sfd__h390702 =
	     sfd__h390277[24] ?
	       ((_theResult___fst_exp__h390185 == 8'd254) ?
		  23'd0 :
		  sfd__h390277[23:1]) :
	       sfd__h390277[22:0] ;
  assign _theResult___sfd__h400517 =
	     sfd__h400092[24] ?
	       ((_theResult___fst_exp__h400074 == 8'd254) ?
		  23'd0 :
		  sfd__h400092[23:1]) :
	       sfd__h400092[22:0] ;
  assign _theResult___sfd__h410956 =
	     sfd__h410531[24] ?
	       ((_theResult___fst_exp__h410439 == 8'd254) ?
		  23'd0 :
		  sfd__h410531[23:1]) :
	       sfd__h410531[22:0] ;
  assign _theResult___sfd__h420825 =
	     sfd__h420376[24] ?
	       ((_theResult___fst_exp__h420357 == 8'd254) ?
		  23'd0 :
		  sfd__h420376[23:1]) :
	       sfd__h420376[22:0] ;
  assign _theResult___sfd__h420927 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd2047 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
	      52'd0) ?
	       _theResult___snd_fst_sfd__h372019 :
	       _theResult___fst_sfd__h420921 ;
  assign _theResult___sfd__h442415 =
	     sfd__h441990[24] ?
	       ((_theResult___fst_exp__h441898 == 8'd254) ?
		  23'd0 :
		  sfd__h441990[23:1]) :
	       sfd__h441990[22:0] ;
  assign _theResult___sfd__h452230 =
	     sfd__h451805[24] ?
	       ((_theResult___fst_exp__h451787 == 8'd254) ?
		  23'd0 :
		  sfd__h451805[23:1]) :
	       sfd__h451805[22:0] ;
  assign _theResult___sfd__h462669 =
	     sfd__h462244[24] ?
	       ((_theResult___fst_exp__h462152 == 8'd254) ?
		  23'd0 :
		  sfd__h462244[23:1]) :
	       sfd__h462244[22:0] ;
  assign _theResult___sfd__h472538 =
	     sfd__h472089[24] ?
	       ((_theResult___fst_exp__h472070 == 8'd254) ?
		  23'd0 :
		  sfd__h472089[23:1]) :
	       sfd__h472089[22:0] ;
  assign _theResult___sfd__h472640 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd2047 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
	      52'd0) ?
	       _theResult___snd_fst_sfd__h423737 :
	       _theResult___fst_sfd__h472634 ;
  assign _theResult___sfd__h494126 =
	     sfd__h493701[24] ?
	       ((_theResult___fst_exp__h493609 == 8'd254) ?
		  23'd0 :
		  sfd__h493701[23:1]) :
	       sfd__h493701[22:0] ;
  assign _theResult___sfd__h503941 =
	     sfd__h503516[24] ?
	       ((_theResult___fst_exp__h503498 == 8'd254) ?
		  23'd0 :
		  sfd__h503516[23:1]) :
	       sfd__h503516[22:0] ;
  assign _theResult___sfd__h514380 =
	     sfd__h513955[24] ?
	       ((_theResult___fst_exp__h513863 == 8'd254) ?
		  23'd0 :
		  sfd__h513955[23:1]) :
	       sfd__h513955[22:0] ;
  assign _theResult___sfd__h524249 =
	     sfd__h523800[24] ?
	       ((_theResult___fst_exp__h523781 == 8'd254) ?
		  23'd0 :
		  sfd__h523800[23:1]) :
	       sfd__h523800[22:0] ;
  assign _theResult___sfd__h524351 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd2047 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
	      52'd0) ?
	       _theResult___snd_fst_sfd__h475448 :
	       _theResult___fst_sfd__h524345 ;
  assign _theResult___sfd__h557779 =
	     sfd__h557141[53] ?
	       ((_theResult___fst_exp__h557123 == 11'd2046) ?
		  52'd0 :
		  sfd__h557141[52:1]) :
	       sfd__h557141[51:0] ;
  assign _theResult___sfd__h568685 =
	     sfd__h568047[53] ?
	       ((_theResult___fst_exp__h567955 == 11'd2046) ?
		  52'd0 :
		  sfd__h568047[52:1]) :
	       sfd__h568047[51:0] ;
  assign _theResult___sfd__h578702 =
	     sfd__h578040[53] ?
	       ((_theResult___fst_exp__h578021 == 11'd2046) ?
		  52'd0 :
		  sfd__h578040[52:1]) :
	       sfd__h578040[51:0] ;
  assign _theResult___sfd__h600860 =
	     sfd__h600222[53] ?
	       ((_theResult___fst_exp__h600204 == 11'd2046) ?
		  52'd0 :
		  sfd__h600222[52:1]) :
	       sfd__h600222[51:0] ;
  assign _theResult___sfd__h611766 =
	     sfd__h611128[53] ?
	       ((_theResult___fst_exp__h611036 == 11'd2046) ?
		  52'd0 :
		  sfd__h611128[52:1]) :
	       sfd__h611128[51:0] ;
  assign _theResult___sfd__h621783 =
	     sfd__h621121[53] ?
	       ((_theResult___fst_exp__h621102 == 11'd2046) ?
		  52'd0 :
		  sfd__h621121[52:1]) :
	       sfd__h621121[51:0] ;
  assign _theResult___sfd__h644362 =
	     sfd__h643724[53] ?
	       ((_theResult___fst_exp__h643706 == 11'd2046) ?
		  52'd0 :
		  sfd__h643724[52:1]) :
	       sfd__h643724[51:0] ;
  assign _theResult___sfd__h655268 =
	     sfd__h654630[53] ?
	       ((_theResult___fst_exp__h654538 == 11'd2046) ?
		  52'd0 :
		  sfd__h654630[52:1]) :
	       sfd__h654630[51:0] ;
  assign _theResult___sfd__h665285 =
	     sfd__h664623[53] ?
	       ((_theResult___fst_exp__h664604 == 11'd2046) ?
		  52'd0 :
		  sfd__h664623[52:1]) :
	       sfd__h664623[51:0] ;
  assign _theResult___snd__h390196 = { _theResult____h380819[55:0], 1'd0 } ;
  assign _theResult___snd__h390207 =
	     (!_theResult____h380819[56] && _theResult____h380819[55]) ?
	       _theResult___snd__h390209 :
	       _theResult___snd__h390219 ;
  assign _theResult___snd__h390209 = { _theResult____h380819[54:0], 2'd0 } ;
  assign _theResult___snd__h390219 =
	     (!_theResult____h380819[56] && !_theResult____h380819[55] &&
	      !_theResult____h380819[54] &&
	      !_theResult____h380819[53] &&
	      !_theResult____h380819[52] &&
	      !_theResult____h380819[51] &&
	      !_theResult____h380819[50] &&
	      !_theResult____h380819[49] &&
	      !_theResult____h380819[48] &&
	      !_theResult____h380819[47] &&
	      !_theResult____h380819[46] &&
	      !_theResult____h380819[45] &&
	      !_theResult____h380819[44] &&
	      !_theResult____h380819[43] &&
	      !_theResult____h380819[42] &&
	      !_theResult____h380819[41] &&
	      !_theResult____h380819[40] &&
	      !_theResult____h380819[39] &&
	      !_theResult____h380819[38] &&
	      !_theResult____h380819[37] &&
	      !_theResult____h380819[36] &&
	      !_theResult____h380819[35] &&
	      !_theResult____h380819[34] &&
	      !_theResult____h380819[33] &&
	      !_theResult____h380819[32] &&
	      !_theResult____h380819[31] &&
	      !_theResult____h380819[30] &&
	      !_theResult____h380819[29] &&
	      !_theResult____h380819[28] &&
	      !_theResult____h380819[27] &&
	      !_theResult____h380819[26] &&
	      !_theResult____h380819[25] &&
	      !_theResult____h380819[24] &&
	      !_theResult____h380819[23] &&
	      !_theResult____h380819[22] &&
	      !_theResult____h380819[21] &&
	      !_theResult____h380819[20] &&
	      !_theResult____h380819[19] &&
	      !_theResult____h380819[18] &&
	      !_theResult____h380819[17] &&
	      !_theResult____h380819[16] &&
	      !_theResult____h380819[15] &&
	      !_theResult____h380819[14] &&
	      !_theResult____h380819[13] &&
	      !_theResult____h380819[12] &&
	      !_theResult____h380819[11] &&
	      !_theResult____h380819[10] &&
	      !_theResult____h380819[9] &&
	      !_theResult____h380819[8] &&
	      !_theResult____h380819[7] &&
	      !_theResult____h380819[6] &&
	      !_theResult____h380819[5] &&
	      !_theResult____h380819[4] &&
	      !_theResult____h380819[3] &&
	      !_theResult____h380819[2] &&
	      !_theResult____h380819[1] &&
	      !_theResult____h380819[0]) ?
	       _theResult____h380819 :
	       _theResult___snd__h390225 ;
  assign _theResult___snd__h390225 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q17[54:0],
	       2'd0 } ;
  assign _theResult___snd__h390248 =
	     _theResult____h380819 <<
	     IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d4604 ;
  assign _theResult___snd__h400025 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h400034 :
	       _theResult___snd__h400027 ;
  assign _theResult___snd__h400027 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5],
	       5'd0 } ;
  assign _theResult___snd__h400034 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0 &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[55] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[54] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[53] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[52] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[51] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[50] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[49] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[48] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[47] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[46] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[45] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[44] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[43] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[42] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[41] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[40] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[39] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[38] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[37] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[36] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[35] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[34] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[33] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[32] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[31] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[30] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[29] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[28] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[27] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[26] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[25] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[24] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[23] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[22] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[21] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[20] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[19] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[18] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[17] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[16] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[15] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[14] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[13] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[12] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[11] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[10] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[9] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[8] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[7] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[6] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[5]) ?
	       sfd__h372069 :
	       _theResult___snd__h400040 ;
  assign _theResult___snd__h400040 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q19[54:0],
	       2'd0 } ;
  assign _theResult___snd__h400063 =
	     sfd__h372069 <<
	     IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d4835 ;
  assign _theResult___snd__h410450 = { _theResult____h400946[55:0], 1'd0 } ;
  assign _theResult___snd__h410461 =
	     (!_theResult____h400946[56] && _theResult____h400946[55]) ?
	       _theResult___snd__h410463 :
	       _theResult___snd__h410473 ;
  assign _theResult___snd__h410463 = { _theResult____h400946[54:0], 2'd0 } ;
  assign _theResult___snd__h410473 =
	     (!_theResult____h400946[56] && !_theResult____h400946[55] &&
	      !_theResult____h400946[54] &&
	      !_theResult____h400946[53] &&
	      !_theResult____h400946[52] &&
	      !_theResult____h400946[51] &&
	      !_theResult____h400946[50] &&
	      !_theResult____h400946[49] &&
	      !_theResult____h400946[48] &&
	      !_theResult____h400946[47] &&
	      !_theResult____h400946[46] &&
	      !_theResult____h400946[45] &&
	      !_theResult____h400946[44] &&
	      !_theResult____h400946[43] &&
	      !_theResult____h400946[42] &&
	      !_theResult____h400946[41] &&
	      !_theResult____h400946[40] &&
	      !_theResult____h400946[39] &&
	      !_theResult____h400946[38] &&
	      !_theResult____h400946[37] &&
	      !_theResult____h400946[36] &&
	      !_theResult____h400946[35] &&
	      !_theResult____h400946[34] &&
	      !_theResult____h400946[33] &&
	      !_theResult____h400946[32] &&
	      !_theResult____h400946[31] &&
	      !_theResult____h400946[30] &&
	      !_theResult____h400946[29] &&
	      !_theResult____h400946[28] &&
	      !_theResult____h400946[27] &&
	      !_theResult____h400946[26] &&
	      !_theResult____h400946[25] &&
	      !_theResult____h400946[24] &&
	      !_theResult____h400946[23] &&
	      !_theResult____h400946[22] &&
	      !_theResult____h400946[21] &&
	      !_theResult____h400946[20] &&
	      !_theResult____h400946[19] &&
	      !_theResult____h400946[18] &&
	      !_theResult____h400946[17] &&
	      !_theResult____h400946[16] &&
	      !_theResult____h400946[15] &&
	      !_theResult____h400946[14] &&
	      !_theResult____h400946[13] &&
	      !_theResult____h400946[12] &&
	      !_theResult____h400946[11] &&
	      !_theResult____h400946[10] &&
	      !_theResult____h400946[9] &&
	      !_theResult____h400946[8] &&
	      !_theResult____h400946[7] &&
	      !_theResult____h400946[6] &&
	      !_theResult____h400946[5] &&
	      !_theResult____h400946[4] &&
	      !_theResult____h400946[3] &&
	      !_theResult____h400946[2] &&
	      !_theResult____h400946[1] &&
	      !_theResult____h400946[0]) ?
	       _theResult____h400946 :
	       _theResult___snd__h410479 ;
  assign _theResult___snd__h410479 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q27[54:0],
	       2'd0 } ;
  assign _theResult___snd__h410502 =
	     _theResult____h400946 <<
	     IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d5155 ;
  assign _theResult___snd__h420303 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h420317 :
	       _theResult___snd__h400027 ;
  assign _theResult___snd__h420317 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd0 &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[55] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[54] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[53] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[52] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[51] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[50] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[49] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[48] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[47] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[46] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[45] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[44] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[43] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[42] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[41] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[40] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[39] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[38] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[37] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[36] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[35] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[34] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[33] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[32] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[31] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[30] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[29] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[28] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[27] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[26] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[25] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[24] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[23] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[22] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[21] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[20] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[19] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[18] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[17] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[16] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[15] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[14] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[13] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[12] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[11] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[10] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[9] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[8] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[7] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[6] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[5]) ?
	       sfd__h372069 :
	       _theResult___snd__h420323 ;
  assign _theResult___snd__h420323 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q32[54:0],
	       2'd0 } ;
  assign _theResult___snd__h420341 =
	     sfd__h372069 <<
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5229[8] ?
		9'h0AA :
		IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d5229) ;
  assign _theResult___snd__h441909 = { _theResult____h432534[55:0], 1'd0 } ;
  assign _theResult___snd__h441920 =
	     (!_theResult____h432534[56] && _theResult____h432534[55]) ?
	       _theResult___snd__h441922 :
	       _theResult___snd__h441932 ;
  assign _theResult___snd__h441922 = { _theResult____h432534[54:0], 2'd0 } ;
  assign _theResult___snd__h441932 =
	     (!_theResult____h432534[56] && !_theResult____h432534[55] &&
	      !_theResult____h432534[54] &&
	      !_theResult____h432534[53] &&
	      !_theResult____h432534[52] &&
	      !_theResult____h432534[51] &&
	      !_theResult____h432534[50] &&
	      !_theResult____h432534[49] &&
	      !_theResult____h432534[48] &&
	      !_theResult____h432534[47] &&
	      !_theResult____h432534[46] &&
	      !_theResult____h432534[45] &&
	      !_theResult____h432534[44] &&
	      !_theResult____h432534[43] &&
	      !_theResult____h432534[42] &&
	      !_theResult____h432534[41] &&
	      !_theResult____h432534[40] &&
	      !_theResult____h432534[39] &&
	      !_theResult____h432534[38] &&
	      !_theResult____h432534[37] &&
	      !_theResult____h432534[36] &&
	      !_theResult____h432534[35] &&
	      !_theResult____h432534[34] &&
	      !_theResult____h432534[33] &&
	      !_theResult____h432534[32] &&
	      !_theResult____h432534[31] &&
	      !_theResult____h432534[30] &&
	      !_theResult____h432534[29] &&
	      !_theResult____h432534[28] &&
	      !_theResult____h432534[27] &&
	      !_theResult____h432534[26] &&
	      !_theResult____h432534[25] &&
	      !_theResult____h432534[24] &&
	      !_theResult____h432534[23] &&
	      !_theResult____h432534[22] &&
	      !_theResult____h432534[21] &&
	      !_theResult____h432534[20] &&
	      !_theResult____h432534[19] &&
	      !_theResult____h432534[18] &&
	      !_theResult____h432534[17] &&
	      !_theResult____h432534[16] &&
	      !_theResult____h432534[15] &&
	      !_theResult____h432534[14] &&
	      !_theResult____h432534[13] &&
	      !_theResult____h432534[12] &&
	      !_theResult____h432534[11] &&
	      !_theResult____h432534[10] &&
	      !_theResult____h432534[9] &&
	      !_theResult____h432534[8] &&
	      !_theResult____h432534[7] &&
	      !_theResult____h432534[6] &&
	      !_theResult____h432534[5] &&
	      !_theResult____h432534[4] &&
	      !_theResult____h432534[3] &&
	      !_theResult____h432534[2] &&
	      !_theResult____h432534[1] &&
	      !_theResult____h432534[0]) ?
	       _theResult____h432534 :
	       _theResult___snd__h441938 ;
  assign _theResult___snd__h441938 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q52[54:0],
	       2'd0 } ;
  assign _theResult___snd__h441961 =
	     _theResult____h432534 <<
	     IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d5996 ;
  assign _theResult___snd__h451738 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h451747 :
	       _theResult___snd__h451740 ;
  assign _theResult___snd__h451740 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5],
	       5'd0 } ;
  assign _theResult___snd__h451747 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0 &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[55] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[54] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[53] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[52] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[51] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[50] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[49] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[48] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[47] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[46] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[45] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[44] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[43] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[42] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[41] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[40] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[39] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[38] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[37] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[36] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[35] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[34] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[33] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[32] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[31] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[30] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[29] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[28] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[27] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[26] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[25] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[24] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[23] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[22] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[21] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[20] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[19] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[18] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[17] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[16] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[15] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[14] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[13] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[12] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[11] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[10] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[9] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[8] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[7] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[6] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[5]) ?
	       sfd__h423787 :
	       _theResult___snd__h451753 ;
  assign _theResult___snd__h451753 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q54[54:0],
	       2'd0 } ;
  assign _theResult___snd__h451776 =
	     sfd__h423787 <<
	     IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6227 ;
  assign _theResult___snd__h462163 = { _theResult____h452659[55:0], 1'd0 } ;
  assign _theResult___snd__h462174 =
	     (!_theResult____h452659[56] && _theResult____h452659[55]) ?
	       _theResult___snd__h462176 :
	       _theResult___snd__h462186 ;
  assign _theResult___snd__h462176 = { _theResult____h452659[54:0], 2'd0 } ;
  assign _theResult___snd__h462186 =
	     (!_theResult____h452659[56] && !_theResult____h452659[55] &&
	      !_theResult____h452659[54] &&
	      !_theResult____h452659[53] &&
	      !_theResult____h452659[52] &&
	      !_theResult____h452659[51] &&
	      !_theResult____h452659[50] &&
	      !_theResult____h452659[49] &&
	      !_theResult____h452659[48] &&
	      !_theResult____h452659[47] &&
	      !_theResult____h452659[46] &&
	      !_theResult____h452659[45] &&
	      !_theResult____h452659[44] &&
	      !_theResult____h452659[43] &&
	      !_theResult____h452659[42] &&
	      !_theResult____h452659[41] &&
	      !_theResult____h452659[40] &&
	      !_theResult____h452659[39] &&
	      !_theResult____h452659[38] &&
	      !_theResult____h452659[37] &&
	      !_theResult____h452659[36] &&
	      !_theResult____h452659[35] &&
	      !_theResult____h452659[34] &&
	      !_theResult____h452659[33] &&
	      !_theResult____h452659[32] &&
	      !_theResult____h452659[31] &&
	      !_theResult____h452659[30] &&
	      !_theResult____h452659[29] &&
	      !_theResult____h452659[28] &&
	      !_theResult____h452659[27] &&
	      !_theResult____h452659[26] &&
	      !_theResult____h452659[25] &&
	      !_theResult____h452659[24] &&
	      !_theResult____h452659[23] &&
	      !_theResult____h452659[22] &&
	      !_theResult____h452659[21] &&
	      !_theResult____h452659[20] &&
	      !_theResult____h452659[19] &&
	      !_theResult____h452659[18] &&
	      !_theResult____h452659[17] &&
	      !_theResult____h452659[16] &&
	      !_theResult____h452659[15] &&
	      !_theResult____h452659[14] &&
	      !_theResult____h452659[13] &&
	      !_theResult____h452659[12] &&
	      !_theResult____h452659[11] &&
	      !_theResult____h452659[10] &&
	      !_theResult____h452659[9] &&
	      !_theResult____h452659[8] &&
	      !_theResult____h452659[7] &&
	      !_theResult____h452659[6] &&
	      !_theResult____h452659[5] &&
	      !_theResult____h452659[4] &&
	      !_theResult____h452659[3] &&
	      !_theResult____h452659[2] &&
	      !_theResult____h452659[1] &&
	      !_theResult____h452659[0]) ?
	       _theResult____h452659 :
	       _theResult___snd__h462192 ;
  assign _theResult___snd__h462192 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q62[54:0],
	       2'd0 } ;
  assign _theResult___snd__h462215 =
	     _theResult____h452659 <<
	     IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d6547 ;
  assign _theResult___snd__h472016 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h472030 :
	       _theResult___snd__h451740 ;
  assign _theResult___snd__h472030 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd0 &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[55] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[54] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[53] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[52] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[51] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[50] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[49] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[48] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[47] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[46] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[45] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[44] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[43] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[42] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[41] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[40] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[39] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[38] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[37] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[36] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[35] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[34] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[33] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[32] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[31] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[30] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[29] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[28] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[27] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[26] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[25] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[24] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[23] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[22] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[21] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[20] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[19] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[18] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[17] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[16] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[15] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[14] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[13] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[12] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[11] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[10] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[9] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[8] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[7] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[6] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[5]) ?
	       sfd__h423787 :
	       _theResult___snd__h472036 ;
  assign _theResult___snd__h472036 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q67[54:0],
	       2'd0 } ;
  assign _theResult___snd__h472054 =
	     sfd__h423787 <<
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6621[8] ?
		9'h0AA :
		IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d6621) ;
  assign _theResult___snd__h493620 = { _theResult____h484245[55:0], 1'd0 } ;
  assign _theResult___snd__h493631 =
	     (!_theResult____h484245[56] && _theResult____h484245[55]) ?
	       _theResult___snd__h493633 :
	       _theResult___snd__h493643 ;
  assign _theResult___snd__h493633 = { _theResult____h484245[54:0], 2'd0 } ;
  assign _theResult___snd__h493643 =
	     (!_theResult____h484245[56] && !_theResult____h484245[55] &&
	      !_theResult____h484245[54] &&
	      !_theResult____h484245[53] &&
	      !_theResult____h484245[52] &&
	      !_theResult____h484245[51] &&
	      !_theResult____h484245[50] &&
	      !_theResult____h484245[49] &&
	      !_theResult____h484245[48] &&
	      !_theResult____h484245[47] &&
	      !_theResult____h484245[46] &&
	      !_theResult____h484245[45] &&
	      !_theResult____h484245[44] &&
	      !_theResult____h484245[43] &&
	      !_theResult____h484245[42] &&
	      !_theResult____h484245[41] &&
	      !_theResult____h484245[40] &&
	      !_theResult____h484245[39] &&
	      !_theResult____h484245[38] &&
	      !_theResult____h484245[37] &&
	      !_theResult____h484245[36] &&
	      !_theResult____h484245[35] &&
	      !_theResult____h484245[34] &&
	      !_theResult____h484245[33] &&
	      !_theResult____h484245[32] &&
	      !_theResult____h484245[31] &&
	      !_theResult____h484245[30] &&
	      !_theResult____h484245[29] &&
	      !_theResult____h484245[28] &&
	      !_theResult____h484245[27] &&
	      !_theResult____h484245[26] &&
	      !_theResult____h484245[25] &&
	      !_theResult____h484245[24] &&
	      !_theResult____h484245[23] &&
	      !_theResult____h484245[22] &&
	      !_theResult____h484245[21] &&
	      !_theResult____h484245[20] &&
	      !_theResult____h484245[19] &&
	      !_theResult____h484245[18] &&
	      !_theResult____h484245[17] &&
	      !_theResult____h484245[16] &&
	      !_theResult____h484245[15] &&
	      !_theResult____h484245[14] &&
	      !_theResult____h484245[13] &&
	      !_theResult____h484245[12] &&
	      !_theResult____h484245[11] &&
	      !_theResult____h484245[10] &&
	      !_theResult____h484245[9] &&
	      !_theResult____h484245[8] &&
	      !_theResult____h484245[7] &&
	      !_theResult____h484245[6] &&
	      !_theResult____h484245[5] &&
	      !_theResult____h484245[4] &&
	      !_theResult____h484245[3] &&
	      !_theResult____h484245[2] &&
	      !_theResult____h484245[1] &&
	      !_theResult____h484245[0]) ?
	       _theResult____h484245 :
	       _theResult___snd__h493649 ;
  assign _theResult___snd__h493649 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMu_ETC__q87[54:0],
	       2'd0 } ;
  assign _theResult___snd__h493672 =
	     _theResult____h484245 <<
	     IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fp_ETC___d7388 ;
  assign _theResult___snd__h503449 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h503458 :
	       _theResult___snd__h503451 ;
  assign _theResult___snd__h503451 =
	     { coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5],
	       5'd0 } ;
  assign _theResult___snd__h503458 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0 &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[55] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[54] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[53] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[52] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[51] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[50] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[49] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[48] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[47] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[46] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[45] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[44] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[43] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[42] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[41] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[40] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[39] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[38] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[37] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[36] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[35] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[34] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[33] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[32] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[31] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[30] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[29] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[28] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[27] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[26] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[25] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[24] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[23] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[22] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[21] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[20] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[19] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[18] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[17] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[16] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[15] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[14] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[13] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[12] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[11] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[10] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[9] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[8] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[7] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[6] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[5]) ?
	       sfd__h475498 :
	       _theResult___snd__h503464 ;
  assign _theResult___snd__h503464 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q89[54:0],
	       2'd0 } ;
  assign _theResult___snd__h503487 =
	     sfd__h475498 <<
	     IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d7619 ;
  assign _theResult___snd__h513874 = { _theResult____h504370[55:0], 1'd0 } ;
  assign _theResult___snd__h513885 =
	     (!_theResult____h504370[56] && _theResult____h504370[55]) ?
	       _theResult___snd__h513887 :
	       _theResult___snd__h513897 ;
  assign _theResult___snd__h513887 = { _theResult____h504370[54:0], 2'd0 } ;
  assign _theResult___snd__h513897 =
	     (!_theResult____h504370[56] && !_theResult____h504370[55] &&
	      !_theResult____h504370[54] &&
	      !_theResult____h504370[53] &&
	      !_theResult____h504370[52] &&
	      !_theResult____h504370[51] &&
	      !_theResult____h504370[50] &&
	      !_theResult____h504370[49] &&
	      !_theResult____h504370[48] &&
	      !_theResult____h504370[47] &&
	      !_theResult____h504370[46] &&
	      !_theResult____h504370[45] &&
	      !_theResult____h504370[44] &&
	      !_theResult____h504370[43] &&
	      !_theResult____h504370[42] &&
	      !_theResult____h504370[41] &&
	      !_theResult____h504370[40] &&
	      !_theResult____h504370[39] &&
	      !_theResult____h504370[38] &&
	      !_theResult____h504370[37] &&
	      !_theResult____h504370[36] &&
	      !_theResult____h504370[35] &&
	      !_theResult____h504370[34] &&
	      !_theResult____h504370[33] &&
	      !_theResult____h504370[32] &&
	      !_theResult____h504370[31] &&
	      !_theResult____h504370[30] &&
	      !_theResult____h504370[29] &&
	      !_theResult____h504370[28] &&
	      !_theResult____h504370[27] &&
	      !_theResult____h504370[26] &&
	      !_theResult____h504370[25] &&
	      !_theResult____h504370[24] &&
	      !_theResult____h504370[23] &&
	      !_theResult____h504370[22] &&
	      !_theResult____h504370[21] &&
	      !_theResult____h504370[20] &&
	      !_theResult____h504370[19] &&
	      !_theResult____h504370[18] &&
	      !_theResult____h504370[17] &&
	      !_theResult____h504370[16] &&
	      !_theResult____h504370[15] &&
	      !_theResult____h504370[14] &&
	      !_theResult____h504370[13] &&
	      !_theResult____h504370[12] &&
	      !_theResult____h504370[11] &&
	      !_theResult____h504370[10] &&
	      !_theResult____h504370[9] &&
	      !_theResult____h504370[8] &&
	      !_theResult____h504370[7] &&
	      !_theResult____h504370[6] &&
	      !_theResult____h504370[5] &&
	      !_theResult____h504370[4] &&
	      !_theResult____h504370[3] &&
	      !_theResult____h504370[2] &&
	      !_theResult____h504370[1] &&
	      !_theResult____h504370[0]) ?
	       _theResult____h504370 :
	       _theResult___snd__h513903 ;
  assign _theResult___snd__h513903 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_coreFix_fpuM_ETC__q97[54:0],
	       2'd0 } ;
  assign _theResult___snd__h513926 =
	     _theResult____h504370 <<
	     IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_f_ETC___d7939 ;
  assign _theResult___snd__h523727 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0) ?
	       _theResult___snd__h523741 :
	       _theResult___snd__h503451 ;
  assign _theResult___snd__h523741 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd0 &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[55] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[54] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[53] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[52] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[51] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[50] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[49] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[48] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[47] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[46] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[45] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[44] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[43] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[42] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[41] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[40] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[39] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[38] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[37] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[36] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[35] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[34] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[33] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[32] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[31] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[30] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[29] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[28] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[27] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[26] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[25] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[24] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[23] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[22] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[21] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[20] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[19] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[18] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[17] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[16] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[15] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[14] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[13] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[12] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[11] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[10] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[9] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[8] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[7] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[6] &&
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[5]) ?
	       sfd__h475498 :
	       _theResult___snd__h523747 ;
  assign _theResult___snd__h523747 =
	     { IF_0_CONCAT_IF_coreFix_fpuMulDivExe_0_fpuExec__ETC__q102[54:0],
	       2'd0 } ;
  assign _theResult___snd__h523765 =
	     sfd__h475498 <<
	     (IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8013[8] ?
		9'h0AA :
		IF_SEXT_coreFix_fpuMulDivExe_0_fpuExec_double__ETC___d8013) ;
  assign _theResult___snd__h557074 =
	     (f1_exp__h536047 == 8'd0) ?
	       _theResult___snd__h557083 :
	       _theResult___snd__h557076 ;
  assign _theResult___snd__h557076 = { f1_sfd__h536048, 34'd0 } ;
  assign _theResult___snd__h557083 =
	     (f1_exp__h536047 == 8'd0 && !f1_sfd__h536048[22] &&
	      !f1_sfd__h536048[21] &&
	      !f1_sfd__h536048[20] &&
	      !f1_sfd__h536048[19] &&
	      !f1_sfd__h536048[18] &&
	      !f1_sfd__h536048[17] &&
	      !f1_sfd__h536048[16] &&
	      !f1_sfd__h536048[15] &&
	      !f1_sfd__h536048[14] &&
	      !f1_sfd__h536048[13] &&
	      !f1_sfd__h536048[12] &&
	      !f1_sfd__h536048[11] &&
	      !f1_sfd__h536048[10] &&
	      !f1_sfd__h536048[9] &&
	      !f1_sfd__h536048[8] &&
	      !f1_sfd__h536048[7] &&
	      !f1_sfd__h536048[6] &&
	      !f1_sfd__h536048[5] &&
	      !f1_sfd__h536048[4] &&
	      !f1_sfd__h536048[3] &&
	      !f1_sfd__h536048[2] &&
	      !f1_sfd__h536048[1] &&
	      !f1_sfd__h536048[0]) ?
	       sfd__h536409 :
	       _theResult___snd__h557089 ;
  assign _theResult___snd__h557089 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q122[54:0],
	       2'd0 } ;
  assign _theResult___snd__h557112 =
	     sfd__h536409 <<
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8887 ;
  assign _theResult___snd__h567966 = { _theResult____h558464[55:0], 1'd0 } ;
  assign _theResult___snd__h567977 =
	     (!_theResult____h558464[56] && _theResult____h558464[55]) ?
	       _theResult___snd__h567979 :
	       _theResult___snd__h567989 ;
  assign _theResult___snd__h567979 = { _theResult____h558464[54:0], 2'd0 } ;
  assign _theResult___snd__h567989 =
	     (!_theResult____h558464[56] && !_theResult____h558464[55] &&
	      !_theResult____h558464[54] &&
	      !_theResult____h558464[53] &&
	      !_theResult____h558464[52] &&
	      !_theResult____h558464[51] &&
	      !_theResult____h558464[50] &&
	      !_theResult____h558464[49] &&
	      !_theResult____h558464[48] &&
	      !_theResult____h558464[47] &&
	      !_theResult____h558464[46] &&
	      !_theResult____h558464[45] &&
	      !_theResult____h558464[44] &&
	      !_theResult____h558464[43] &&
	      !_theResult____h558464[42] &&
	      !_theResult____h558464[41] &&
	      !_theResult____h558464[40] &&
	      !_theResult____h558464[39] &&
	      !_theResult____h558464[38] &&
	      !_theResult____h558464[37] &&
	      !_theResult____h558464[36] &&
	      !_theResult____h558464[35] &&
	      !_theResult____h558464[34] &&
	      !_theResult____h558464[33] &&
	      !_theResult____h558464[32] &&
	      !_theResult____h558464[31] &&
	      !_theResult____h558464[30] &&
	      !_theResult____h558464[29] &&
	      !_theResult____h558464[28] &&
	      !_theResult____h558464[27] &&
	      !_theResult____h558464[26] &&
	      !_theResult____h558464[25] &&
	      !_theResult____h558464[24] &&
	      !_theResult____h558464[23] &&
	      !_theResult____h558464[22] &&
	      !_theResult____h558464[21] &&
	      !_theResult____h558464[20] &&
	      !_theResult____h558464[19] &&
	      !_theResult____h558464[18] &&
	      !_theResult____h558464[17] &&
	      !_theResult____h558464[16] &&
	      !_theResult____h558464[15] &&
	      !_theResult____h558464[14] &&
	      !_theResult____h558464[13] &&
	      !_theResult____h558464[12] &&
	      !_theResult____h558464[11] &&
	      !_theResult____h558464[10] &&
	      !_theResult____h558464[9] &&
	      !_theResult____h558464[8] &&
	      !_theResult____h558464[7] &&
	      !_theResult____h558464[6] &&
	      !_theResult____h558464[5] &&
	      !_theResult____h558464[4] &&
	      !_theResult____h558464[3] &&
	      !_theResult____h558464[2] &&
	      !_theResult____h558464[1] &&
	      !_theResult____h558464[0]) ?
	       _theResult____h558464 :
	       _theResult___snd__h567995 ;
  assign _theResult___snd__h567995 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q126[54:0],
	       2'd0 } ;
  assign _theResult___snd__h568018 =
	     _theResult____h558464 <<
	     IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9200 ;
  assign _theResult___snd__h577967 =
	     (f1_exp__h536047 == 8'd0) ?
	       _theResult___snd__h577981 :
	       _theResult___snd__h557076 ;
  assign _theResult___snd__h577981 =
	     (f1_exp__h536047 == 8'd0 && !f1_sfd__h536048[22] &&
	      !f1_sfd__h536048[21] &&
	      !f1_sfd__h536048[20] &&
	      !f1_sfd__h536048[19] &&
	      !f1_sfd__h536048[18] &&
	      !f1_sfd__h536048[17] &&
	      !f1_sfd__h536048[16] &&
	      !f1_sfd__h536048[15] &&
	      !f1_sfd__h536048[14] &&
	      !f1_sfd__h536048[13] &&
	      !f1_sfd__h536048[12] &&
	      !f1_sfd__h536048[11] &&
	      !f1_sfd__h536048[10] &&
	      !f1_sfd__h536048[9] &&
	      !f1_sfd__h536048[8] &&
	      !f1_sfd__h536048[7] &&
	      !f1_sfd__h536048[6] &&
	      !f1_sfd__h536048[5] &&
	      !f1_sfd__h536048[4] &&
	      !f1_sfd__h536048[3] &&
	      !f1_sfd__h536048[2] &&
	      !f1_sfd__h536048[1] &&
	      !f1_sfd__h536048[0]) ?
	       sfd__h536409 :
	       _theResult___snd__h577987 ;
  assign _theResult___snd__h577987 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q129[54:0],
	       2'd0 } ;
  assign _theResult___snd__h578005 =
	     sfd__h536409 <<
	     IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9251 ;
  assign _theResult___snd__h600155 =
	     (f2_exp__h579217 == 8'd0) ?
	       _theResult___snd__h600164 :
	       _theResult___snd__h600157 ;
  assign _theResult___snd__h600157 = { f2_sfd__h579218, 34'd0 } ;
  assign _theResult___snd__h600164 =
	     (f2_exp__h579217 == 8'd0 && !f2_sfd__h579218[22] &&
	      !f2_sfd__h579218[21] &&
	      !f2_sfd__h579218[20] &&
	      !f2_sfd__h579218[19] &&
	      !f2_sfd__h579218[18] &&
	      !f2_sfd__h579218[17] &&
	      !f2_sfd__h579218[16] &&
	      !f2_sfd__h579218[15] &&
	      !f2_sfd__h579218[14] &&
	      !f2_sfd__h579218[13] &&
	      !f2_sfd__h579218[12] &&
	      !f2_sfd__h579218[11] &&
	      !f2_sfd__h579218[10] &&
	      !f2_sfd__h579218[9] &&
	      !f2_sfd__h579218[8] &&
	      !f2_sfd__h579218[7] &&
	      !f2_sfd__h579218[6] &&
	      !f2_sfd__h579218[5] &&
	      !f2_sfd__h579218[4] &&
	      !f2_sfd__h579218[3] &&
	      !f2_sfd__h579218[2] &&
	      !f2_sfd__h579218[1] &&
	      !f2_sfd__h579218[0]) ?
	       sfd__h579579 :
	       _theResult___snd__h600170 ;
  assign _theResult___snd__h600170 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q162[54:0],
	       2'd0 } ;
  assign _theResult___snd__h600193 =
	     sfd__h579579 <<
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10387 ;
  assign _theResult___snd__h611047 = { _theResult____h601545[55:0], 1'd0 } ;
  assign _theResult___snd__h611058 =
	     (!_theResult____h601545[56] && _theResult____h601545[55]) ?
	       _theResult___snd__h611060 :
	       _theResult___snd__h611070 ;
  assign _theResult___snd__h611060 = { _theResult____h601545[54:0], 2'd0 } ;
  assign _theResult___snd__h611070 =
	     (!_theResult____h601545[56] && !_theResult____h601545[55] &&
	      !_theResult____h601545[54] &&
	      !_theResult____h601545[53] &&
	      !_theResult____h601545[52] &&
	      !_theResult____h601545[51] &&
	      !_theResult____h601545[50] &&
	      !_theResult____h601545[49] &&
	      !_theResult____h601545[48] &&
	      !_theResult____h601545[47] &&
	      !_theResult____h601545[46] &&
	      !_theResult____h601545[45] &&
	      !_theResult____h601545[44] &&
	      !_theResult____h601545[43] &&
	      !_theResult____h601545[42] &&
	      !_theResult____h601545[41] &&
	      !_theResult____h601545[40] &&
	      !_theResult____h601545[39] &&
	      !_theResult____h601545[38] &&
	      !_theResult____h601545[37] &&
	      !_theResult____h601545[36] &&
	      !_theResult____h601545[35] &&
	      !_theResult____h601545[34] &&
	      !_theResult____h601545[33] &&
	      !_theResult____h601545[32] &&
	      !_theResult____h601545[31] &&
	      !_theResult____h601545[30] &&
	      !_theResult____h601545[29] &&
	      !_theResult____h601545[28] &&
	      !_theResult____h601545[27] &&
	      !_theResult____h601545[26] &&
	      !_theResult____h601545[25] &&
	      !_theResult____h601545[24] &&
	      !_theResult____h601545[23] &&
	      !_theResult____h601545[22] &&
	      !_theResult____h601545[21] &&
	      !_theResult____h601545[20] &&
	      !_theResult____h601545[19] &&
	      !_theResult____h601545[18] &&
	      !_theResult____h601545[17] &&
	      !_theResult____h601545[16] &&
	      !_theResult____h601545[15] &&
	      !_theResult____h601545[14] &&
	      !_theResult____h601545[13] &&
	      !_theResult____h601545[12] &&
	      !_theResult____h601545[11] &&
	      !_theResult____h601545[10] &&
	      !_theResult____h601545[9] &&
	      !_theResult____h601545[8] &&
	      !_theResult____h601545[7] &&
	      !_theResult____h601545[6] &&
	      !_theResult____h601545[5] &&
	      !_theResult____h601545[4] &&
	      !_theResult____h601545[3] &&
	      !_theResult____h601545[2] &&
	      !_theResult____h601545[1] &&
	      !_theResult____h601545[0]) ?
	       _theResult____h601545 :
	       _theResult___snd__h611076 ;
  assign _theResult___snd__h611076 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q166[54:0],
	       2'd0 } ;
  assign _theResult___snd__h611099 =
	     _theResult____h601545 <<
	     IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d10684 ;
  assign _theResult___snd__h621048 =
	     (f2_exp__h579217 == 8'd0) ?
	       _theResult___snd__h621062 :
	       _theResult___snd__h600157 ;
  assign _theResult___snd__h621062 =
	     (f2_exp__h579217 == 8'd0 && !f2_sfd__h579218[22] &&
	      !f2_sfd__h579218[21] &&
	      !f2_sfd__h579218[20] &&
	      !f2_sfd__h579218[19] &&
	      !f2_sfd__h579218[18] &&
	      !f2_sfd__h579218[17] &&
	      !f2_sfd__h579218[16] &&
	      !f2_sfd__h579218[15] &&
	      !f2_sfd__h579218[14] &&
	      !f2_sfd__h579218[13] &&
	      !f2_sfd__h579218[12] &&
	      !f2_sfd__h579218[11] &&
	      !f2_sfd__h579218[10] &&
	      !f2_sfd__h579218[9] &&
	      !f2_sfd__h579218[8] &&
	      !f2_sfd__h579218[7] &&
	      !f2_sfd__h579218[6] &&
	      !f2_sfd__h579218[5] &&
	      !f2_sfd__h579218[4] &&
	      !f2_sfd__h579218[3] &&
	      !f2_sfd__h579218[2] &&
	      !f2_sfd__h579218[1] &&
	      !f2_sfd__h579218[0]) ?
	       sfd__h579579 :
	       _theResult___snd__h621068 ;
  assign _theResult___snd__h621068 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q169[54:0],
	       2'd0 } ;
  assign _theResult___snd__h621086 =
	     sfd__h579579 <<
	     IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d10735 ;
  assign _theResult___snd__h643657 =
	     (f3_exp__h622719 == 8'd0) ?
	       _theResult___snd__h643666 :
	       _theResult___snd__h643659 ;
  assign _theResult___snd__h643659 = { f3_sfd__h622720, 34'd0 } ;
  assign _theResult___snd__h643666 =
	     (f3_exp__h622719 == 8'd0 && !f3_sfd__h622720[22] &&
	      !f3_sfd__h622720[21] &&
	      !f3_sfd__h622720[20] &&
	      !f3_sfd__h622720[19] &&
	      !f3_sfd__h622720[18] &&
	      !f3_sfd__h622720[17] &&
	      !f3_sfd__h622720[16] &&
	      !f3_sfd__h622720[15] &&
	      !f3_sfd__h622720[14] &&
	      !f3_sfd__h622720[13] &&
	      !f3_sfd__h622720[12] &&
	      !f3_sfd__h622720[11] &&
	      !f3_sfd__h622720[10] &&
	      !f3_sfd__h622720[9] &&
	      !f3_sfd__h622720[8] &&
	      !f3_sfd__h622720[7] &&
	      !f3_sfd__h622720[6] &&
	      !f3_sfd__h622720[5] &&
	      !f3_sfd__h622720[4] &&
	      !f3_sfd__h622720[3] &&
	      !f3_sfd__h622720[2] &&
	      !f3_sfd__h622720[1] &&
	      !f3_sfd__h622720[0]) ?
	       sfd__h623081 :
	       _theResult___snd__h643672 ;
  assign _theResult___snd__h643672 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q139[54:0],
	       2'd0 } ;
  assign _theResult___snd__h643695 =
	     sfd__h623081 <<
	     IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9618 ;
  assign _theResult___snd__h654549 = { _theResult____h645047[55:0], 1'd0 } ;
  assign _theResult___snd__h654560 =
	     (!_theResult____h645047[56] && _theResult____h645047[55]) ?
	       _theResult___snd__h654562 :
	       _theResult___snd__h654572 ;
  assign _theResult___snd__h654562 = { _theResult____h645047[54:0], 2'd0 } ;
  assign _theResult___snd__h654572 =
	     (!_theResult____h645047[56] && !_theResult____h645047[55] &&
	      !_theResult____h645047[54] &&
	      !_theResult____h645047[53] &&
	      !_theResult____h645047[52] &&
	      !_theResult____h645047[51] &&
	      !_theResult____h645047[50] &&
	      !_theResult____h645047[49] &&
	      !_theResult____h645047[48] &&
	      !_theResult____h645047[47] &&
	      !_theResult____h645047[46] &&
	      !_theResult____h645047[45] &&
	      !_theResult____h645047[44] &&
	      !_theResult____h645047[43] &&
	      !_theResult____h645047[42] &&
	      !_theResult____h645047[41] &&
	      !_theResult____h645047[40] &&
	      !_theResult____h645047[39] &&
	      !_theResult____h645047[38] &&
	      !_theResult____h645047[37] &&
	      !_theResult____h645047[36] &&
	      !_theResult____h645047[35] &&
	      !_theResult____h645047[34] &&
	      !_theResult____h645047[33] &&
	      !_theResult____h645047[32] &&
	      !_theResult____h645047[31] &&
	      !_theResult____h645047[30] &&
	      !_theResult____h645047[29] &&
	      !_theResult____h645047[28] &&
	      !_theResult____h645047[27] &&
	      !_theResult____h645047[26] &&
	      !_theResult____h645047[25] &&
	      !_theResult____h645047[24] &&
	      !_theResult____h645047[23] &&
	      !_theResult____h645047[22] &&
	      !_theResult____h645047[21] &&
	      !_theResult____h645047[20] &&
	      !_theResult____h645047[19] &&
	      !_theResult____h645047[18] &&
	      !_theResult____h645047[17] &&
	      !_theResult____h645047[16] &&
	      !_theResult____h645047[15] &&
	      !_theResult____h645047[14] &&
	      !_theResult____h645047[13] &&
	      !_theResult____h645047[12] &&
	      !_theResult____h645047[11] &&
	      !_theResult____h645047[10] &&
	      !_theResult____h645047[9] &&
	      !_theResult____h645047[8] &&
	      !_theResult____h645047[7] &&
	      !_theResult____h645047[6] &&
	      !_theResult____h645047[5] &&
	      !_theResult____h645047[4] &&
	      !_theResult____h645047[3] &&
	      !_theResult____h645047[2] &&
	      !_theResult____h645047[1] &&
	      !_theResult____h645047[0]) ?
	       _theResult____h645047 :
	       _theResult___snd__h654578 ;
  assign _theResult___snd__h654578 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_coreFix_f_ETC__q143[54:0],
	       2'd0 } ;
  assign _theResult___snd__h654601 =
	     _theResult____h645047 <<
	     IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe__ETC___d9915 ;
  assign _theResult___snd__h664550 =
	     (f3_exp__h622719 == 8'd0) ?
	       _theResult___snd__h664564 :
	       _theResult___snd__h643659 ;
  assign _theResult___snd__h664564 =
	     (f3_exp__h622719 == 8'd0 && !f3_sfd__h622720[22] &&
	      !f3_sfd__h622720[21] &&
	      !f3_sfd__h622720[20] &&
	      !f3_sfd__h622720[19] &&
	      !f3_sfd__h622720[18] &&
	      !f3_sfd__h622720[17] &&
	      !f3_sfd__h622720[16] &&
	      !f3_sfd__h622720[15] &&
	      !f3_sfd__h622720[14] &&
	      !f3_sfd__h622720[13] &&
	      !f3_sfd__h622720[12] &&
	      !f3_sfd__h622720[11] &&
	      !f3_sfd__h622720[10] &&
	      !f3_sfd__h622720[9] &&
	      !f3_sfd__h622720[8] &&
	      !f3_sfd__h622720[7] &&
	      !f3_sfd__h622720[6] &&
	      !f3_sfd__h622720[5] &&
	      !f3_sfd__h622720[4] &&
	      !f3_sfd__h622720[3] &&
	      !f3_sfd__h622720[2] &&
	      !f3_sfd__h622720[1] &&
	      !f3_sfd__h622720[0]) ?
	       sfd__h623081 :
	       _theResult___snd__h664570 ;
  assign _theResult___snd__h664570 =
	     { IF_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_0_regTo_ETC__q146[54:0],
	       2'd0 } ;
  assign _theResult___snd__h664588 =
	     sfd__h623081 <<
	     IF_SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_fi_ETC___d9966 ;
  assign _theResult___snd__h670098 =
	     b__h669504[63] ? b___1__h670157 : b__h669504 ;
  assign _theResult___snd_fst_exp__h400600 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4370 ?
	       _theResult___fst_exp__h390782 :
	       _theResult___fst_exp__h400597 ;
  assign _theResult___snd_fst_exp__h420908 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4910 ?
	       _theResult___fst_exp__h411036 :
	       _theResult___fst_exp__h420905 ;
  assign _theResult___snd_fst_exp__h452313 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5762 ?
	       _theResult___fst_exp__h442495 :
	       _theResult___fst_exp__h452310 ;
  assign _theResult___snd_fst_exp__h472621 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6302 ?
	       _theResult___fst_exp__h462749 :
	       _theResult___fst_exp__h472618 ;
  assign _theResult___snd_fst_exp__h504024 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7154 ?
	       _theResult___fst_exp__h494206 :
	       _theResult___fst_exp__h504021 ;
  assign _theResult___snd_fst_exp__h524332 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7694 ?
	       _theResult___fst_exp__h514460 :
	       _theResult___fst_exp__h524329 ;
  assign _theResult___snd_fst_exp__h557884 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8816 ?
	       11'd0 :
	       _theResult___fst_exp__h557881 ;
  assign _theResult___snd_fst_exp__h578807 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8953 ?
	       _theResult___fst_exp__h568787 :
	       _theResult___fst_exp__h578804 ;
  assign _theResult___snd_fst_exp__h600965 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10316 ?
	       11'd0 :
	       _theResult___fst_exp__h600962 ;
  assign _theResult___snd_fst_exp__h621888 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10437 ?
	       _theResult___fst_exp__h611868 :
	       _theResult___fst_exp__h621885 ;
  assign _theResult___snd_fst_exp__h644467 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9547 ?
	       11'd0 :
	       _theResult___fst_exp__h644464 ;
  assign _theResult___snd_fst_exp__h665390 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9668 ?
	       _theResult___fst_exp__h655370 :
	       _theResult___fst_exp__h665387 ;
  assign _theResult___snd_fst_sfd__h372019 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:34] ==
	      23'd0) ?
	       23'd2097152 :
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:34] ;
  assign _theResult___snd_fst_sfd__h400601 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d4370 ?
	       _theResult___fst_sfd__h390783 :
	       _theResult___fst_sfd__h400598 ;
  assign _theResult___snd_fst_sfd__h420909 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_fma_ETC___d4910 ?
	       _theResult___fst_sfd__h411037 :
	       _theResult___fst_sfd__h420906 ;
  assign _theResult___snd_fst_sfd__h423737 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:34] ==
	      23'd0) ?
	       23'd2097152 :
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:34] ;
  assign _theResult___snd_fst_sfd__h452314 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d5762 ?
	       _theResult___fst_sfd__h442496 :
	       _theResult___fst_sfd__h452311 ;
  assign _theResult___snd_fst_sfd__h472622 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_div_ETC___d6302 ?
	       _theResult___fst_sfd__h462750 :
	       _theResult___fst_sfd__h472619 ;
  assign _theResult___snd_fst_sfd__h475448 =
	     (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:34] ==
	      23'd0) ?
	       23'd2097152 :
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:34] ;
  assign _theResult___snd_fst_sfd__h504025 =
	     _3074_MINUS_0_CONCAT_IF_coreFix_fpuMulDivExe_0__ETC___d7154 ?
	       _theResult___fst_sfd__h494207 :
	       _theResult___fst_sfd__h504022 ;
  assign _theResult___snd_fst_sfd__h524333 =
	     SEXT_coreFix_fpuMulDivExe_0_fpuExec_double_sqr_ETC___d7694 ?
	       _theResult___fst_sfd__h514461 :
	       _theResult___fst_sfd__h524330 ;
  assign _theResult___snd_fst_sfd__h536363 =
	     (f1_sfd__h536048 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h536111 ;
  assign _theResult___snd_fst_sfd__h557885 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d8816 ?
	       52'd0 :
	       _theResult___fst_sfd__h557882 ;
  assign _theResult___snd_fst_sfd__h578808 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d8953 ?
	       _theResult___fst_sfd__h568788 :
	       _theResult___fst_sfd__h578805 ;
  assign _theResult___snd_fst_sfd__h579533 =
	     (f2_sfd__h579218 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h579281 ;
  assign _theResult___snd_fst_sfd__h600966 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d10316 ?
	       52'd0 :
	       _theResult___fst_sfd__h600963 ;
  assign _theResult___snd_fst_sfd__h621889 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d10437 ?
	       _theResult___fst_sfd__h611869 :
	       _theResult___fst_sfd__h621886 ;
  assign _theResult___snd_fst_sfd__h623035 =
	     (f3_sfd__h622720 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h622783 ;
  assign _theResult___snd_fst_sfd__h644468 =
	     _3970_MINUS_0_CONCAT_IF_IF_coreFix_fpuMulDivExe_ETC___d9547 ?
	       52'd0 :
	       _theResult___fst_sfd__h644465 ;
  assign _theResult___snd_fst_sfd__h665391 =
	     SEXT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first_ETC___d9668 ?
	       _theResult___fst_sfd__h655371 :
	       _theResult___fst_sfd__h665388 ;
  assign a___1__h669747 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] == 2'd1) ?
	       { 32'd0, coreFix_fpuMulDivExe_0_regToExeQ$first[171:140] } :
	       { {32{coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_17_ETC__q2[31]}},
		 coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_17_ETC__q2 } ;
  assign a___1__h670102 = 64'd0 - a__h669503 ;
  assign a__h669503 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[227] ?
	       a___1__h669747 :
	       coreFix_fpuMulDivExe_0_regToExeQ$first[203:140] ;
  assign b___1__h669748 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] == 2'd0) ?
	       { {32{coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_10_ETC__q3[31]}},
		 coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_10_ETC__q3 } :
	       { 32'd0, coreFix_fpuMulDivExe_0_regToExeQ$first[107:76] } ;
  assign b___1__h670157 = 64'd0 - b__h669504 ;
  assign b__h669504 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[227] ?
	       b___1__h669748 :
	       coreFix_fpuMulDivExe_0_regToExeQ$first[139:76] ;
  assign b__h669725 = { {64{a__h669503[63]}}, a__h669503 } ;
  assign b__h669814 = { {64{b__h669504[63]}}, b__h669504 } ;
  assign b__h669914 = { 64'd0, a__h669503 } ;
  assign b__h669926 = { 64'd0, b__h669504 } ;
  assign base__h769125 = { csrf_stvec_base_hi_reg, 2'b0 } ;
  assign base__h769145 = { csrf_mtvec_base_hi_reg, 2'b0 } ;
  assign coreFix_aluExe_0_bypassWire_0_wget__2059_BITS__ETC___d12063 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[84:78] ;
  assign coreFix_aluExe_0_bypassWire_0_wget__2059_BITS__ETC___d12107 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[76:70] ;
  assign coreFix_aluExe_0_bypassWire_1_wget__2074_BITS__ETC___d12076 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[84:78] ;
  assign coreFix_aluExe_0_bypassWire_1_wget__2074_BITS__ETC___d12113 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[76:70] ;
  assign coreFix_aluExe_0_bypassWire_2_wget__2082_BITS__ETC___d12084 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[84:78] ;
  assign coreFix_aluExe_0_bypassWire_2_wget__2082_BITS__ETC___d12117 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[76:70] ;
  assign coreFix_aluExe_0_bypassWire_3_wget__2089_BITS__ETC___d12091 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[84:78] ;
  assign coreFix_aluExe_0_bypassWire_3_wget__2089_BITS__ETC___d12121 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_aluExe_0_dispToRegQ$first[76:70] ;
  assign coreFix_aluExe_0_dispToRegQ_RDY_first__2050_AN_ETC___d12132 =
	     coreFix_aluExe_0_dispToRegQ$RDY_first &&
	     (coreFix_aluExe_0_dispToRegQ$first[131] ||
	      !coreFix_aluExe_0_dispToRegQ$first[85] ||
	      sbCons$lazyLookup_0_get[3] ||
	      IF_coreFix_aluExe_0_dispToRegQ_RDY_first__2050_ETC___d12071 &&
	      IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12097) &&
	     (!coreFix_aluExe_0_dispToRegQ$first[77] ||
	      sbCons$lazyLookup_0_get[2] ||
	      IF_coreFix_aluExe_0_dispToRegQ_RDY_first__2050_ETC___d12110 &&
	      IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12127) ;
  assign coreFix_aluExe_0_exeToFinQ_RDY_first__2322_AND_ETC___d12360 =
	     coreFix_aluExe_0_exeToFinQ$RDY_first &&
	     rob$RDY_setExecuted_doFinishAlu_0_set &&
	     (coreFix_aluExe_0_exeToFinQ$first[326:322] != 5'd9 &&
	      coreFix_aluExe_0_exeToFinQ$first[326:322] != 5'd10 ||
	      coreFix_trainBPQ_0$FULL_N) ;
  assign coreFix_aluExe_0_rsAlu_approximateCount__2821__ETC___d12823 =
	     coreFix_aluExe_0_rsAlu$approximateCount <
	     coreFix_aluExe_1_rsAlu$approximateCount ;
  assign coreFix_aluExe_1_bypassWire_0_wget__1531_BITS__ETC___d11535 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[84:78] ;
  assign coreFix_aluExe_1_bypassWire_0_wget__1531_BITS__ETC___d11579 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[76:70] ;
  assign coreFix_aluExe_1_bypassWire_1_wget__1546_BITS__ETC___d11548 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[84:78] ;
  assign coreFix_aluExe_1_bypassWire_1_wget__1546_BITS__ETC___d11585 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[76:70] ;
  assign coreFix_aluExe_1_bypassWire_2_wget__1554_BITS__ETC___d11556 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[84:78] ;
  assign coreFix_aluExe_1_bypassWire_2_wget__1554_BITS__ETC___d11589 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[76:70] ;
  assign coreFix_aluExe_1_bypassWire_3_wget__1561_BITS__ETC___d11563 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[84:78] ;
  assign coreFix_aluExe_1_bypassWire_3_wget__1561_BITS__ETC___d11593 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_aluExe_1_dispToRegQ$first[76:70] ;
  assign coreFix_aluExe_1_dispToRegQ_RDY_first__1522_AN_ETC___d11604 =
	     coreFix_aluExe_1_dispToRegQ$RDY_first &&
	     (coreFix_aluExe_1_dispToRegQ$first[131] ||
	      !coreFix_aluExe_1_dispToRegQ$first[85] ||
	      sbCons$lazyLookup_1_get[3] ||
	      IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1522_ETC___d11543 &&
	      IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11569) &&
	     (!coreFix_aluExe_1_dispToRegQ$first[77] ||
	      sbCons$lazyLookup_1_get[2] ||
	      IF_coreFix_aluExe_1_dispToRegQ_RDY_first__1522_ETC___d11582 &&
	      IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11599) ;
  assign coreFix_aluExe_1_exeToFinQ_RDY_first__1976_AND_ETC___d12015 =
	     coreFix_aluExe_1_exeToFinQ$RDY_first &&
	     rob$RDY_setExecuted_doFinishAlu_1_set &&
	     (coreFix_aluExe_1_exeToFinQ$first[326:322] != 5'd9 &&
	      coreFix_aluExe_1_exeToFinQ$first[326:322] != 5'd10 ||
	      coreFix_trainBPQ_1$FULL_N) ;
  assign coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8505 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[55:49] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8548 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[47:41] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_0_wget__501__ETC___d8577 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[39:33] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8518 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[55:49] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8554 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[47:41] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_1_wget__516__ETC___d8583 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[39:33] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_2_wget__524__ETC___d8526 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[55:49] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_2_wget__524__ETC___d8558 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[47:41] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_2_wget__524__ETC___d8587 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[39:33] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_3_wget__531__ETC___d8533 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[55:49] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_3_wget__531__ETC___d8562 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[47:41] ;
  assign coreFix_fpuMulDivExe_0_bypassWire_3_wget__531__ETC___d8591 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_fpuMulDivExe_0_dispToRegQ$first[39:33] ;
  assign coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first__4_ETC___d8603 =
	     coreFix_fpuMulDivExe_0_dispToRegQ$RDY_first &&
	     (!coreFix_fpuMulDivExe_0_dispToRegQ$first[56] ||
	      sbCons$lazyLookup_2_get[3] ||
	      IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8513 &&
	      IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8539) &&
	     (!coreFix_fpuMulDivExe_0_dispToRegQ$first[48] ||
	      sbCons$lazyLookup_2_get[2] ||
	      IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8551 &&
	      IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8568) &&
	     (!coreFix_fpuMulDivExe_0_dispToRegQ$first[40] ||
	      sbCons$lazyLookup_2_get[1] ||
	      IF_coreFix_fpuMulDivExe_0_dispToRegQ_RDY_first_ETC___d8580 &&
	      IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8597) ;
  assign coreFix_fpuMulDivExe_0_fpuExec_divQ_RDY_first__ETC___d5629 =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_poisoned &&
	     !coreFix_fpuMulDivExe_0_fpuExec_divQ$first_poisoned &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_first_data ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_divresp_ETC__q60 =
	     coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] -
	     11'd1023 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_fmaresp_ETC__q25 =
	     coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] -
	     11'd1023 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_double_sqrtres_ETC__q95 =
	     coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] -
	     11'd1023 ;
  assign coreFix_fpuMulDivExe_0_fpuExec_fmaQ_RDY_first__ETC___d4237 =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_poisoned &&
	     !coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_poisoned &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_first_data ;
  assign coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_RDY_first_ETC___d7021 =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_poisoned &&
	     !coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_poisoned &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set &&
	     coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_response_get &&
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_first_data ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divQ_RDY_enq_ETC___d8731 =
	     coreFix_fpuMulDivExe_0_mulDivExec_divQ$RDY_enq &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$FULL_N &&
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$FULL_N ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divI_ETC___d11441 =
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_OUT[139:76] /
	     IF_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_d_ETC___d11440 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divI_ETC___d11442 =
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_OUT[139:76] %
	     IF_coreFix_fpuMulDivExe_0_mulDivExec_divUnit_d_ETC___d11440 ;
  assign coreFix_fpuMulDivExe_0_mulDivExec_mulQ_RDY_fir_ETC___d8413 =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_poisoned &&
	     !coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_poisoned &&
	     rob$RDY_setExecuted_doFinishFpuMulDiv_0_set &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_first_data &&
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$EMPTY_N ;
  assign coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_10_ETC__q3 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[107:76] ;
  assign coreFix_fpuMulDivExe_0_regToExeQfirst_BITS_17_ETC__q2 =
	     coreFix_fpuMulDivExe_0_regToExeQ$first[171:140] ;
  assign coreFix_fpuMulDivExe_0_rsFpuMulDiv_RDY_enq__31_ETC___d13256 =
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_enq &&
	     regRenamingTable$RDY_rename_1_getRename &&
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_specTagManager_canClaim__2785_2875_OR_NOT__ETC___d13244) ;
  assign coreFix_memExe_bypassWire_0_wget__477_BITS_70__ETC___d1481 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[61:55] ;
  assign coreFix_memExe_bypassWire_0_wget__477_BITS_70__ETC___d1524 =
	     coreFix_aluExe_0_bypassWire_0$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[53:47] ;
  assign coreFix_memExe_bypassWire_1_wget__492_BITS_70__ETC___d1494 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[61:55] ;
  assign coreFix_memExe_bypassWire_1_wget__492_BITS_70__ETC___d1530 =
	     coreFix_aluExe_0_bypassWire_1$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[53:47] ;
  assign coreFix_memExe_bypassWire_2_wget__500_BITS_70__ETC___d1502 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[61:55] ;
  assign coreFix_memExe_bypassWire_2_wget__500_BITS_70__ETC___d1534 =
	     coreFix_aluExe_0_bypassWire_2$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[53:47] ;
  assign coreFix_memExe_bypassWire_3_wget__507_BITS_70__ETC___d1509 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[61:55] ;
  assign coreFix_memExe_bypassWire_3_wget__507_BITS_70__ETC___d1538 =
	     coreFix_aluExe_0_bypassWire_3$wget[70:64] ==
	     coreFix_memExe_dispToRegQ$first[53:47] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_pi_ETC___d2408 =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd3 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d1917 ||
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
	     2'd0 &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[57:0] ==
	     y__h273792 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIn_ETC___d3078 =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3042 ||
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_dummy2_2$Q_OUT ||
	      !WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_cRqTransfer_retry &&
	      !coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full ;
  assign coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enq_ETC___d3180 =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3148 ||
	     (!coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_dummy2_2$Q_OUT ||
	      !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_lat_0$whas &&
	      !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl) &&
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full ;
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1983 =
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_linkAdd_ETC___d1915 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d2620 =
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_0$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_dummy2_1$Q_OUT &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[58] &&
	     coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl[57:0] ==
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[65:8] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] <
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[83:82] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] <
	     2'd2 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:518] ==
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[147:96] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2362 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869 &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1983) ||
	     !IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2391 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd2 ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	      3'd3) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2396 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2388 ||
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2395 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2413 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2388 ||
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2412 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2426 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2419 ||
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2425 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2446 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2449 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd0 &&
	     coreFix_memExe_lsq$getHit[8] &&
	     !coreFix_memExe_lsq$getHit[9] ||
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2446 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2470 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] ==
	     3'd3 &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_linkAd_ETC___d1917 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSucc[3] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2476 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2470 ||
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3] ||
	      coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	      3'd1) &&
	     NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2473 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2515 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 &&
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869 &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	      3'd3 ||
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1983) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot[0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2527 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd0 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd2 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd4 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd3 &&
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	     3'd1 ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2537 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	      2'd0 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941) &&
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getSlot[0] ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2554 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	     (!coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 &&
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1869) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2571 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] <=
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[1:0] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2574 =
	     coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:518] ==
	     coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[65:14] ;
  assign coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2597 =
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2571 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2574) &&
	     !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[570] &&
	     (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] !=
	      2'd1 ||
	      coreFix_memExe_dMem_cache_m_banks_0_pRqMshr$pipelineResp_getRq[1:0] !=
	      2'd1 ||
	      !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2574) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2689 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[78] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[78]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2693 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[77] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[77]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2697 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[76] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[76]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2702 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[75] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[75]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2706 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[74] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[74]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2711 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[73] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[73]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2715 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[72] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[72]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2720 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[71] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[71]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2732 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[2] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[2]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2736 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[1] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[1]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_d_ETC___d2740 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[0] :
		coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[0]) ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enq_ETC___d3301 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3269 ||
	     (!coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_dummy2_2$Q_OUT ||
	      !EN_dCacheToParent_rqToP_deq &&
	      !coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl) &&
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full ;
  assign coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enq_ETC___d3392 =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3360 ||
	     (!coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_dummy2_2$Q_OUT ||
	      !EN_dCacheToParent_rsToP_deq &&
	      !coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl) &&
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full ;
  assign coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2_r_ETC___d1753 =
	     coreFix_memExe_dMem_perfReqQ_enqReq_dummy2_2$Q_OUT &&
	     coreFix_memExe_dMem_perfReqQ_enqReq_rl[4] ||
	     (!coreFix_memExe_dMem_perfReqQ_deqReq_dummy2_2$Q_OUT ||
	      !coreFix_memExe_dMem_perfReqQ_deqReq_rl) &&
	     coreFix_memExe_dMem_perfReqQ_full ;
  assign coreFix_memExe_dTlb_procResp__644_BITS_105_TO__ETC___d1712 =
	     coreFix_memExe_dTlb$procResp[105:103] == 3'd0 &&
	     NOT_coreFix_memExe_dTlb_procResp__644_BITS_174_ETC___d1683 &&
	     IF_coreFix_memExe_dTlb_procResp__644_BIT_110_6_ETC___d1672 &&
	     !coreFix_memExe_lsq$updateAddr ;
  assign coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1654 =
	     coreFix_memExe_dTlb$procResp[174:114] < 61'd268435456 ;
  assign coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1655 =
	     coreFix_memExe_dTlb$procResp[174:114] < 61'd301989888 ;
  assign coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1659 =
	     coreFix_memExe_dTlb$procResp[174:114] == mmio_toHostAddr ;
  assign coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1662 =
	     coreFix_memExe_dTlb$procResp[174:114] == mmio_fromHostAddr ;
  assign coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1663 =
	     coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1654 ||
	     !coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1655 ||
	     coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1659 ||
	     coreFix_memExe_dTlb_procResp__644_BITS_174_TO__ETC___d1662 ;
  assign coreFix_memExe_forwardQ_enqReq_dummy2_2_read___ETC___d3664 =
	     coreFix_memExe_forwardQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3633 ||
	     (!coreFix_memExe_forwardQ_deqReq_dummy2_2$Q_OUT ||
	      !WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	      !coreFix_memExe_forwardQ_deqReq_rl) &&
	     coreFix_memExe_forwardQ_full ;
  assign coreFix_memExe_memRespLdQ_enqReq_dummy2_2_read_ETC___d3575 =
	     coreFix_memExe_memRespLdQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3544 ||
	     (!coreFix_memExe_memRespLdQ_deqReq_dummy2_2$Q_OUT ||
	      !WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	      !coreFix_memExe_memRespLdQ_deqReq_rl) &&
	     coreFix_memExe_memRespLdQ_full ;
  assign coreFix_memExe_regToExeQ_RDY_enq__468_AND_core_ETC___d1550 =
	     coreFix_memExe_regToExeQ$RDY_enq &&
	     coreFix_memExe_dispToRegQ$RDY_first &&
	     (!coreFix_memExe_dispToRegQ$first[62] ||
	      sbCons$lazyLookup_3_get[3] ||
	      IF_coreFix_memExe_dispToRegQ_RDY_first__469_AN_ETC___d1489 &&
	      IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1515) &&
	     (!coreFix_memExe_dispToRegQ$first[54] ||
	      sbCons$lazyLookup_3_get[2] ||
	      IF_coreFix_memExe_dispToRegQ_RDY_first__469_AN_ETC___d1527 &&
	      IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1544) ;
  assign coreFix_memExe_regToExeQfirst_BITS_189_TO_158__q4 =
	     coreFix_memExe_regToExeQ$first[189:158] ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1183 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[78] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[78]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1187 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[77] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[77]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1191 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[76] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[76]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1196 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[75] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[75]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1200 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[74] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[74]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1205 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[73] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[73]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1209 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[72] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[72]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1214 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[71] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[71]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1226 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[2] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[2]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1230 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[1] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[1]) ;
  assign coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1_rea_ETC___d1234 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT &&
	     (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[0] :
		coreFix_memExe_reqLrScAmoQ_data_0_rl[0]) ;
  assign coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2_re_ETC___d3485 =
	     coreFix_memExe_respLrScAmoQ_enqReq_dummy2_2$Q_OUT &&
	     IF_coreFix_memExe_respLrScAmoQ_enqReq_lat_1_wh_ETC___d3469 ||
	     (!coreFix_memExe_respLrScAmoQ_deqReq_dummy2_2$Q_OUT ||
	      !coreFix_memExe_respLrScAmoQ_deqReq_lat_0$whas &&
	      !coreFix_memExe_respLrScAmoQ_deqReq_rl) &&
	     coreFix_memExe_respLrScAmoQ_full ;
  assign csr_addr__h719478 =
	     fetchStage$pipelines_0_first[173] ?
	       fetchStage$pipelines_0_first[172:161] :
	       12'hCFF ;
  assign csrf_external_int_en_vec_3_read__1781_AND_csrf_ETC___d12477 =
	     { csrf_external_int_en_vec_3 & csrf_external_int_pend_vec_3,
	       1'd0,
	       csrf_external_int_en_vec_1 & csrf_external_int_pend_vec_1,
	       1'd0,
	       csrf_timer_int_en_vec_3 & csrf_timer_int_pend_vec_3,
	       1'd0,
	       csrf_timer_int_en_vec_1 & csrf_timer_int_pend_vec_1,
	       1'd0 } ;
  assign csrf_fs_reg_read__1649_EQ_0_2536_AND_fetchStag_ETC___d12596 =
	     csrf_fs_reg == 2'd0 &&
	     (fetchStage$pipelines_0_first[95] &&
	      fetchStage$pipelines_0_first[94] ||
	      fetchStage$pipelines_0_first[88] &&
	      fetchStage$pipelines_0_first[87] ||
	      fetchStage$pipelines_0_first[81] ||
	      fetchStage$pipelines_0_first[75] &&
	      fetchStage$pipelines_0_first[74]) ||
	     fetchStage$pipelines_0_first[199:195] == 5'd13 &&
	     (fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d12589 ||
	      csrf_prv_reg_read__2466_ULT_IF_fetchStage_pipe_ETC___d12591 ||
	      csr_addr__h719478 == 12'h8FF) ;
  assign csrf_fs_reg_read__1649_EQ_0_2536_AND_fetchStag_ETC___d12884 =
	     csrf_fs_reg == 2'd0 &&
	     (fetchStage$pipelines_0_first[95] &&
	      fetchStage$pipelines_0_first[94] ||
	      fetchStage$pipelines_0_first[88] &&
	      fetchStage$pipelines_0_first[87] ||
	      fetchStage$pipelines_0_first[81] ||
	      fetchStage$pipelines_0_first[75] &&
	      fetchStage$pipelines_0_first[74]) ||
	     fetchStage$pipelines_0_first[231:200] == 32'h10500073 &&
	     csrf_tw_reg &&
	     csrf_prv_reg != 2'd3 ;
  assign csrf_fs_reg_read__1649_EQ_0_2536_AND_fetchStag_ETC___d13037 =
	     csrf_fs_reg == 2'd0 &&
	     (fetchStage$pipelines_1_first[95] &&
	      fetchStage$pipelines_1_first[94] ||
	      fetchStage$pipelines_1_first[88] &&
	      fetchStage$pipelines_1_first[87] ||
	      fetchStage$pipelines_1_first[81] ||
	      fetchStage$pipelines_1_first[75] &&
	      fetchStage$pipelines_1_first[74]) ||
	     fetchStage$pipelines_1_first[231:200] == 32'h10500073 &&
	     csrf_tw_reg &&
	     csrf_prv_reg != 2'd3 ;
  assign csrf_prv_reg_read__2466_ULE_1_3692_AND_IF_comm_ETC___d13699 =
	     csrf_prv_reg_read__2466_ULE_1___d13692 &&
	     (commitStage_commitTrap[36] ?
		_0b0_CONCAT_csrf_mideleg_11_reg_read__1769_1770_ETC___d13695 :
		_0b0_CONCAT_csrf_medeleg_15_reg_read__1760_1761_ETC___d13697) ;
  assign csrf_prv_reg_read__2466_ULE_1___d13692 = csrf_prv_reg <= 2'd1 ;
  assign csrf_prv_reg_read__2466_ULT_IF_fetchStage_pipe_ETC___d12591 =
	     csrf_prv_reg < csr_addr__h719478[9:8] ;
  assign data26332_BITS_31_TO_0__q1 = data__h526332[31:0] ;
  assign data27176_BITS_31_TO_0__q5 = data__h527176[31:0] ;
  assign data___1__h526771 =
	     { {32{data26332_BITS_31_TO_0__q1[31]}},
	       data26332_BITS_31_TO_0__q1 } ;
  assign data___1__h527615 =
	     { {32{data27176_BITS_31_TO_0__q5[31]}},
	       data27176_BITS_31_TO_0__q5 } ;
  assign data__h526332 =
	     (coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[35:34] ==
	      2'd0) ?
	       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_OUT[63:0] :
	       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_respQ$D_OUT[127:64] ;
  assign data__h527176 =
	     (coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[35:34] ==
	      2'd2) ?
	       x_quotient__h526929 :
	       x_remainder__h526930 ;
  assign din_inc___2_exp__h420939 = _theResult___fst_exp__h390185 + 8'd1 ;
  assign din_inc___2_exp__h420963 = _theResult___fst_exp__h400074 + 8'd1 ;
  assign din_inc___2_exp__h420993 = _theResult___fst_exp__h410439 + 8'd1 ;
  assign din_inc___2_exp__h421017 = _theResult___fst_exp__h420357 + 8'd1 ;
  assign din_inc___2_exp__h472652 = _theResult___fst_exp__h441898 + 8'd1 ;
  assign din_inc___2_exp__h472676 = _theResult___fst_exp__h451787 + 8'd1 ;
  assign din_inc___2_exp__h472706 = _theResult___fst_exp__h462152 + 8'd1 ;
  assign din_inc___2_exp__h472730 = _theResult___fst_exp__h472070 + 8'd1 ;
  assign din_inc___2_exp__h524363 = _theResult___fst_exp__h493609 + 8'd1 ;
  assign din_inc___2_exp__h524387 = _theResult___fst_exp__h503498 + 8'd1 ;
  assign din_inc___2_exp__h524417 = _theResult___fst_exp__h513863 + 8'd1 ;
  assign din_inc___2_exp__h524441 = _theResult___fst_exp__h523781 + 8'd1 ;
  assign din_inc___2_exp__h578861 = _theResult___fst_exp__h557123 + 11'd1 ;
  assign din_inc___2_exp__h578896 = _theResult___fst_exp__h567955 + 11'd1 ;
  assign din_inc___2_exp__h578922 = _theResult___fst_exp__h578021 + 11'd1 ;
  assign din_inc___2_exp__h621942 = _theResult___fst_exp__h600204 + 11'd1 ;
  assign din_inc___2_exp__h621977 = _theResult___fst_exp__h611036 + 11'd1 ;
  assign din_inc___2_exp__h622003 = _theResult___fst_exp__h621102 + 11'd1 ;
  assign din_inc___2_exp__h665444 = _theResult___fst_exp__h643706 + 11'd1 ;
  assign din_inc___2_exp__h665479 = _theResult___fst_exp__h654538 + 11'd1 ;
  assign din_inc___2_exp__h665505 = _theResult___fst_exp__h664604 + 11'd1 ;
  assign enabled_ints___1__h715652 = pend_ints__h715237 & y__h715664 ;
  assign enabled_ints__h715698 =
	     pend_ints__h715237 &
	     { r1__read_BITS_9_TO_0___h715674, csrf_mideleg_1_0_reg } ;
  assign f1_exp36047_MINUS_127__q124 = f1_exp__h536047 - 8'd127 ;
  assign f1_exp__h536047 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[170:163] :
	       8'd255 ;
  assign f1_sfd__h536048 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[162:140] :
	       23'd4194304 ;
  assign f2_exp79217_MINUS_127__q164 = f2_exp__h579217 - 8'd127 ;
  assign f2_exp__h579217 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[106:99] :
	       8'd255 ;
  assign f2_sfd__h579218 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[98:76] :
	       23'd4194304 ;
  assign f3_exp22719_MINUS_127__q141 = f3_exp__h622719 - 8'd127 ;
  assign f3_exp__h622719 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[42:35] :
	       8'd255 ;
  assign f3_sfd__h622720 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF) ?
	       coreFix_fpuMulDivExe_0_regToExeQ$first[34:12] :
	       23'd4194304 ;
  assign fallthrough_pc__h727582 =
	     (fetchStage$pipelines_0_first[97:96] == 2'b11) ?
	       fetchStage$pipelines_0_first[387:324] + 64'd4 :
	       fetchStage$pipelines_0_first[387:324] + 64'd2 ;
  assign fallthrough_pc__h745455 =
	     (fetchStage$pipelines_1_first[97:96] == 2'b11) ?
	       fetchStage$pipelines_1_first[387:324] + 64'd4 :
	       fetchStage$pipelines_1_first[387:324] + 64'd2 ;
  assign fcsr_csr__read__h677481 = { 56'd0, x__h678632 } ;
  assign fetchStage_RDY_pipelines_0_first__2435_AND_NOT_ETC___d12810 =
	     fetchStage$RDY_pipelines_0_first &&
	     (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	      specTagManager$canClaim) &&
	     regRenamingTable$rename_0_canRename &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12807 ;
  assign fetchStage_RDY_pipelines_0_first__2435_AND_fet_ETC___d12881 =
	     fetchStage$RDY_pipelines_0_first &&
	     fetchStage$pipelines_1_first[194:192] == 3'd1 &&
	     regRenamingTable_rename_0_canRename__2787_AND__ETC___d12876 ||
	     !fetchStage$pipelines_0_canDeq ||
	     fetchStage$RDY_pipelines_0_first &&
	     IF_fetchStage_RDY_pipelines_0_first__2435_AND__ETC___d12814 ;
  assign fetchStage_RDY_pipelines_1_deq__2450_AND_NOT_f_ETC___d13305 =
	     fetchStage$RDY_pipelines_1_deq &&
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_specTagManager_canClaim__2785_2875_OR_NOT__ETC___d13301) &&
	     (fetchStage$pipelines_1_first[194:192] != 3'd1 ||
	      specTagManager$RDY_claimSpecTag) ;
  assign fetchStage_iTlbIfc_noPendingReq__3685_AND_core_ETC___d13768 =
	     fetchStage$iTlbIfc_noPendingReq &&
	     coreFix_memExe_dTlb$noPendingReq &&
	     (rob$deqPort_0_deq_data[257:253] != 5'd13 ||
	      (rob$deqPort_0_deq_data[180:169] != 12'd2049 ||
	       csrf_stats_module_writeQ$FULL_N) &&
	      (rob$deqPort_0_deq_data[180:169] != 12'd2048 ||
	       csrf_terminate_module_terminateQ$FULL_N)) ;
  assign fetchStage_pipelines_0_canDeq__2436_AND_NOT_fe_ETC___d13326 =
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d13323 &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd0 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd1) &&
	     SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827 ;
  assign fetchStage_pipelines_0_canDeq__2436_AND_fetchS_ETC___d13315 =
	     fetchStage$pipelines_0_canDeq &&
	     fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13205 ||
	     !fetchStage$pipelines_1_canDeq ||
	     fetchStage$RDY_pipelines_1_first &&
	     (fetchStage_pipelines_1_first__2447_BITS_194_TO_ETC___d13216 ||
	      NOT_regRenamingTable_rename_1_canRename__2911__ETC___d13222 ||
	      IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13311) &&
	     IF_fetchStage_RDY_pipelines_1_first__2446_AND__ETC___d13147 ;
  assign fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13253 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__2787_AND__ETC___d12862 &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd4) ;
  assign fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13260 =
	     fetchStage$pipelines_0_canDeq &&
	     regRenamingTable_rename_0_canRename__2787_AND__ETC___d12862 &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 ||
	     !coreFix_memExe_rsMem$canEnq ||
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q215 ;
  assign fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13281 =
	     fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13253 ||
	     !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ||
	     fetchStage$pipelines_0_canDeq &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	      !specTagManager$canClaim ||
	      NOT_regRenamingTable_rename_0_canRename__2787__ETC___d12891 ||
	      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13273) ;
  assign fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13292 =
	     fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13260 ||
	     fetchStage$pipelines_0_canDeq &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	      !specTagManager$canClaim ||
	      NOT_regRenamingTable_rename_0_canRename__2787__ETC___d12891 ||
	      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13284) ;
  assign fetchStage_pipelines_0_canDeq__2436_AND_specTa_ETC___d13415 =
	     fetchStage$pipelines_0_canDeq && specTagManager$canClaim &&
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12547[4] &&
	     rob$enqPort_0_canEnq &&
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872 &&
	     fetchStage$pipelines_0_first[194:192] == 3'd1 ;
  assign fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d12589 =
	     (fetchStage$pipelines_0_first[194:192] == 3'd0 &&
	      fetchStage$pipelines_0_first[178:174] == 5'd15 ||
	      rs1__h719479 != 5'd0 ||
	      imm__h719480 != 32'd0) &&
	     csr_addr__h719478[11:10] == 2'b11 ;
  assign fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13013 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage_pipelines_0_first__2438_BITS_199_TO_ETC___d13006 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	     !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827 ;
  assign fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13089 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     fetchStage$pipelines_0_first[68] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[8] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[9] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[10] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[11] ;
  assign fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13199 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     NOT_regRenamingTable_rename_0_canRename__2787__ETC___d13162 ||
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13188 &&
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13197 ;
  assign fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13205 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     NOT_regRenamingTable_rename_0_canRename__2787__ETC___d13162 ||
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13204 ;
  assign fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13227 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage_pipelines_0_first__2438_BITS_199_TO_ETC___d13006 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	     !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827 ||
	     coreFix_aluExe_1_rsAlu$canEnq &&
	     !coreFix_aluExe_0_rsAlu_approximateCount__2821__ETC___d12823 ;
  assign fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13234 =
	     fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	     !specTagManager$canClaim ||
	     !regRenamingTable$rename_0_canRename ||
	     fetchStage_pipelines_0_first__2438_BITS_199_TO_ETC___d13006 ||
	     fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	     fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	     !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827 ||
	     coreFix_aluExe_0_rsAlu$canEnq &&
	     coreFix_aluExe_0_rsAlu_approximateCount__2821__ETC___d12823 ;
  assign fetchStage_pipelines_0_first__2438_BITS_199_TO_ETC___d13006 =
	     fetchStage$pipelines_0_first[199:195] == 5'd0 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd21 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd17 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd18 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd13 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd16 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd15 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd19 ||
	     fetchStage$pipelines_0_first[199:195] == 5'd20 ||
	     fetchStage$pipelines_0_first[68] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d13003 ||
	     !rob$enqPort_0_canEnq ||
	     !epochManager$checkEpoch_0_check ;
  assign fetchStage_pipelines_0_first__2438_BIT_68_2465_ETC___d12889 =
	     fetchStage$pipelines_0_first[68] ||
	     checkForException___d12547[4] ||
	     csrf_fs_reg_read__1649_EQ_0_2536_AND_fetchStag_ETC___d12884 ||
	     !rob$enqPort_0_canEnq ||
	     !epochManager$checkEpoch_0_check ;
  assign fetchStage_pipelines_1_first__2447_BITS_194_TO_ETC___d13216 =
	     fetchStage$pipelines_1_first[194:192] == 3'd1 &&
	     (fetchStage$pipelines_0_canDeq &&
	      regRenamingTable_rename_0_canRename__2787_AND__ETC___d13213 ||
	      !specTagManager$canClaim) ;
  assign fetchStage_pipelines_1_first__2447_BITS_199_TO_ETC___d13045 =
	     fetchStage$pipelines_1_first[199:195] == 5'd0 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd21 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd17 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd18 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd13 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd16 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd15 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd19 ||
	     fetchStage$pipelines_1_first[199:195] == 5'd20 ||
	     fetchStage$pipelines_1_first[68] ||
	     IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d13039 ||
	     !rob$enqPort_1_canEnq ||
	     !epochManager$checkEpoch_1_check ||
	     !fetchStage$pipelines_0_canDeq ||
	     fetchStage$RDY_pipelines_0_first &&
	     IF_fetchStage_RDY_pipelines_0_first__2435_AND__ETC___d12814 ;
  assign fetchStage_pipelines_1_first__2447_BIT_68_2939_ETC___d13220 =
	     fetchStage$pipelines_1_first[68] ||
	     checkForException___d12943[4] ||
	     csrf_fs_reg_read__1649_EQ_0_2536_AND_fetchStag_ETC___d13037 ||
	     !rob$enqPort_1_canEnq ||
	     !epochManager$checkEpoch_1_check ||
	     fetchStage$pipelines_0_canDeq &&
	     fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13205 ;
  assign fflags__h782275 =
	     NOT_rob_deqPort_0_canDeq__3974_3975_OR_rob_deq_ETC___d14166 ?
	       y_avValue_fst__h782183 :
	       IF_rob_deqPort_0_canDeq__3974_THEN_IF_NOT_rob__ETC___d14173 ;
  assign fflags_csr__read__h677453 = { 59'd0, csrf_fflags_reg } ;
  assign frm_csr__read__h677467 = { 61'd0, csrf_frm_reg } ;
  assign guard__h380829 =
	     { IF_sfdin90179_BIT_33_THEN_2_ELSE_0__q18[1],
	       { sfdin__h390179[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h390793 =
	     { IF_theResult___snd00025_BIT_33_THEN_2_ELSE_0__q20[1],
	       { _theResult___snd__h400025[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h400956 =
	     { IF_sfdin10433_BIT_33_THEN_2_ELSE_0__q28[1],
	       { sfdin__h410433[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h401554 = x__h401656 != 57'd0 ;
  assign guard__h411047 =
	     { IF_theResult___snd20303_BIT_33_THEN_2_ELSE_0__q33[1],
	       { _theResult___snd__h420303[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h432544 =
	     { IF_sfdin41892_BIT_33_THEN_2_ELSE_0__q53[1],
	       { sfdin__h441892[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h442506 =
	     { IF_theResult___snd51738_BIT_33_THEN_2_ELSE_0__q55[1],
	       { _theResult___snd__h451738[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h452669 =
	     { IF_sfdin62146_BIT_33_THEN_2_ELSE_0__q63[1],
	       { sfdin__h462146[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h453267 = x__h453369 != 57'd0 ;
  assign guard__h462760 =
	     { IF_theResult___snd72016_BIT_33_THEN_2_ELSE_0__q68[1],
	       { _theResult___snd__h472016[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h484255 =
	     { IF_sfdin93603_BIT_33_THEN_2_ELSE_0__q88[1],
	       { sfdin__h493603[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h494217 =
	     { IF_theResult___snd03449_BIT_33_THEN_2_ELSE_0__q90[1],
	       { _theResult___snd__h503449[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h504380 =
	     { IF_sfdin13857_BIT_33_THEN_2_ELSE_0__q98[1],
	       { sfdin__h513857[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h504978 = x__h505080 != 57'd0 ;
  assign guard__h514471 =
	     { IF_theResult___snd23727_BIT_33_THEN_2_ELSE_0__q103[1],
	       { _theResult___snd__h523727[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h547929 =
	     { IF_theResult___snd57074_BIT_4_THEN_2_ELSE_0__q123[1],
	       { _theResult___snd__h557074[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h558474 =
	     { IF_sfdin67949_BIT_4_THEN_2_ELSE_0__q127[1],
	       { sfdin__h567949[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h559072 = x__h559172 != 57'd0 ;
  assign guard__h568798 =
	     { IF_theResult___snd77967_BIT_4_THEN_2_ELSE_0__q130[1],
	       { _theResult___snd__h577967[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h591010 =
	     { IF_theResult___snd00155_BIT_4_THEN_2_ELSE_0__q163[1],
	       { _theResult___snd__h600155[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h601555 =
	     { IF_sfdin11030_BIT_4_THEN_2_ELSE_0__q167[1],
	       { sfdin__h611030[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h602153 = x__h602253 != 57'd0 ;
  assign guard__h611879 =
	     { IF_theResult___snd21048_BIT_4_THEN_2_ELSE_0__q170[1],
	       { _theResult___snd__h621048[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h634512 =
	     { IF_theResult___snd43657_BIT_4_THEN_2_ELSE_0__q140[1],
	       { _theResult___snd__h643657[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h645057 =
	     { IF_sfdin54532_BIT_4_THEN_2_ELSE_0__q144[1],
	       { sfdin__h654532[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h645655 = x__h645755 != 57'd0 ;
  assign guard__h655381 =
	     { IF_theResult___snd64550_BIT_4_THEN_2_ELSE_0__q147[1],
	       { _theResult___snd__h664550[3:0], 52'd0 } != 56'd0 } ;
  assign i__h362270 =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[149:148] ;
  assign i__h363648 =
	     coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[152:148] ;
  assign i__h365971 =
	     MUX_coreFix_memExe_ldMemLatTimer_startEn$wset_1__SEL_1 ?
	       coreFix_memExe_lsq$getIssueLd[76:72] :
	       coreFix_memExe_issueLd$wget[76:72] ;
  assign idx__h731419 =
	     !coreFix_aluExe_0_rsAlu$canEnq ||
	     coreFix_aluExe_1_rsAlu$canEnq &&
	     !coreFix_aluExe_0_rsAlu_approximateCount__2821__ETC___d12823 ;
  assign idx__h749150 = k__h749572 ;
  assign imm__h719480 =
	     fetchStage$pipelines_0_first[160] ?
	       fetchStage$pipelines_0_first[159:128] :
	       32'd0 ;
  assign k__h731393 = idx__h731419 ;
  assign k__h749572 =
	     fetchStage$pipelines_0_canDeq &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12993 ||
	     !coreFix_aluExe_0_rsAlu$canEnq ||
	     (!fetchStage$pipelines_0_canDeq ||
	      fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13013) &&
	     coreFix_aluExe_1_rsAlu$canEnq &&
	     !coreFix_aluExe_0_rsAlu_approximateCount__2821__ETC___d12823 ;
  assign mcause_csr__read__h678148 =
	     { r1__read__h680097, csrf_mcause_code_reg } ;
  assign mcounteren_csr__read__h678109 =
	     { r1__read__h680083, csrf_mcounteren_cy_reg } ;
  assign medeleg_csr__read__h677962 =
	     { r1__read__h679944, csrf_medeleg_9_0_reg } ;
  assign mideleg_csr__read__h678000 =
	     { r1__read__h679961, csrf_mideleg_1_0_reg } ;
  assign mie_csr__read__h678064 = { r1__read__h679985, 1'b0 } ;
  assign mip_csr__read__h678222 = { r1__read__h680103, 1'b0 } ;
  assign mmio_cRqQ_enqReq_dummy2_2_read__70_AND_IF_mmio_ETC___d482 =
	     mmio_cRqQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_cRqQ_enqReq_lat_1_whas__42_THEN_mmio_c_ETC___d351 ||
	     (!mmio_cRqQ_deqReq_dummy2_2$Q_OUT ||
	      !EN_mmioToPlatform_cRq_deq && !mmio_cRqQ_deqReq_rl) &&
	     mmio_cRqQ_full ;
  assign mmio_cRsQ_enqReq_dummy2_2_read__09_AND_IF_mmio_ETC___d826 =
	     mmio_cRsQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_cRsQ_enqReq_lat_1_whas__78_THEN_mmio_c_ETC___d814 ||
	     (!mmio_cRsQ_deqReq_dummy2_2$Q_OUT ||
	      !EN_mmioToPlatform_cRs_deq && !mmio_cRsQ_deqReq_rl) &&
	     mmio_cRsQ_full ;
  assign mmio_dataPendQ_enqReq_dummy2_2_read__12_AND_IF_ETC___d324 =
	     mmio_dataPendQ_enqReq_dummy2_2$Q_OUT &&
	     (mmio_dataPendQ_enqReq_lat_0$whas || mmio_dataPendQ_enqReq_rl) ||
	     (!mmio_dataPendQ_deqReq_dummy2_2$Q_OUT ||
	      !mmio_dataRespQ_deqReq_lat_0$whas &&
	      !mmio_dataPendQ_deqReq_rl) &&
	     mmio_dataPendQ_full ;
  assign mmio_dataReqQ_enqReq_dummy2_2_read__69_AND_IF__ETC___d181 =
	     mmio_dataReqQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_dataReqQ_enqReq_lat_1_whas__1_THEN_mmi_ETC___d50 ||
	     (!mmio_dataReqQ_deqReq_dummy2_2$Q_OUT ||
	      !CAN_FIRE_RL_mmio_sendDataReq && !mmio_dataReqQ_deqReq_rl) &&
	     mmio_dataReqQ_full ;
  assign mmio_dataRespQ_enqReq_dummy2_2_read__39_AND_IF_ETC___d256 =
	     mmio_dataRespQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_dataRespQ_enqReq_lat_1_whas__08_THEN_m_ETC___d244 ||
	     (!mmio_dataRespQ_deqReq_dummy2_2$Q_OUT ||
	      !mmio_dataRespQ_deqReq_lat_0$whas &&
	      !mmio_dataRespQ_deqReq_rl) &&
	     mmio_dataRespQ_full ;
  assign mmio_pRqQ_empty_62_AND_epochManager_checkEpoch_ETC___d12607 =
	     mmio_pRqQ_empty && epochManager$checkEpoch_0_check &&
	     (fetchStage$pipelines_0_first[68] ||
	      IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12603) &&
	     rob$isEmpty ;
  assign mmio_pRqQ_empty_62_AND_epochManager_checkEpoch_ETC___d12732 =
	     mmio_pRqQ_empty && epochManager$checkEpoch_0_check &&
	     !fetchStage$pipelines_0_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_246_ETC___d12713 &&
	     (fetchStage$pipelines_0_first[199:195] == 5'd0 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd21 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd17 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd18 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd13 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd16 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd15 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd19 ||
	      fetchStage$pipelines_0_first[199:195] == 5'd20) ;
  assign mmio_pRqQ_empty_62_AND_epochManager_checkEpoch_ETC___d13320 =
	     mmio_pRqQ_empty && epochManager$checkEpoch_0_check &&
	     !fetchStage$pipelines_0_first[68] &&
	     NOT_IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_246_ETC___d12802 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd20 ;
  assign mmio_pRqQ_enqReq_dummy2_2_read__39_AND_IF_mmio_ETC___d751 =
	     mmio_pRqQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_pRqQ_enqReq_lat_1_whas__11_THEN_mmio_p_ETC___d620 ||
	     (!mmio_pRqQ_deqReq_dummy2_2$Q_OUT ||
	      !CAN_FIRE_RL_mmio_handlePRq && !mmio_pRqQ_deqReq_rl) &&
	     mmio_pRqQ_full ;
  assign mmio_pRsQ_enqReq_dummy2_2_read__75_AND_IF_mmio_ETC___d587 =
	     mmio_pRsQ_enqReq_dummy2_2$Q_OUT &&
	     IF_mmio_pRsQ_enqReq_lat_1_whas__09_THEN_mmio_p_ETC___d518 ||
	     (!mmio_pRsQ_deqReq_dummy2_2$Q_OUT ||
	      !mmio_pRsQ_deqReq_lat_0$whas && !mmio_pRsQ_deqReq_rl) &&
	     mmio_pRsQ_full ;
  assign mstatus_csr__read__h677919 = { r1__read__h679819, csrf_ie_vec_0 } ;
  assign mtvec_csr__read__h678083 =
	     { r1__read__h680078, csrf_mtvec_mode_low_reg } ;
  assign n___1__h216741 =
	     { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[78] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[70:63] :
		 x__h214333[63:56],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[77] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[62:55] :
		 x__h214333[55:48],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[76] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[54:47] :
		 x__h214333[47:40],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[75] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[46:39] :
		 x__h214333[39:32],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[74] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[38:31] :
		 x__h214333[31:24],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[73] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[30:23] :
		 x__h214333[23:16],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[72] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[22:15] :
		 x__h214333[15:8],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[71] ?
		 coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[14:7] :
		 x__h214333[7:0] } ;
  assign n__read__h6429 =
	     csrf_mcycle_ehr_data_dummy2_1$Q_OUT ?
	       (csrf_mcycle_ehr_data_lat_0$whas ?
		  rob$deqPort_0_deq_data[95:32] :
		  csrf_mcycle_ehr_data_rl) :
	       64'd0 ;
  assign n__read__h678242 =
	     (csrf_mcycle_ehr_data_dummy2_0$Q_OUT &&
	      csrf_mcycle_ehr_data_dummy2_1$Q_OUT) ?
	       csrf_mcycle_ehr_data_rl :
	       64'd0 ;
  assign n__read__h678466 =
	     (csrf_minstret_ehr_data_dummy2_0$Q_OUT &&
	      csrf_minstret_ehr_data_dummy2_1$Q_OUT) ?
	       csrf_minstret_ehr_data_rl :
	       64'd0 ;
  assign n__read__h778738 =
	     csrf_minstret_ehr_data_dummy2_1$Q_OUT ?
	       IF_csrf_minstret_ehr_data_lat_0_whas_THEN_IF_c_ETC___d10 :
	       64'd0 ;
  assign next_deqP___1__h319822 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP ==
	      3'd7) ?
	       3'd0 :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP +
	       3'd1 ;
  assign next_deqP___1__h328827 =
	     coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP + 1'd1 ;
  assign next_deqP___1__h335636 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP + 1'd1 ;
  assign next_deqP___1__h344442 =
	     coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP + 1'd1 ;
  assign next_deqP___1__h354691 = coreFix_memExe_memRespLdQ_deqP + 1'd1 ;
  assign next_deqP___1__h358082 = coreFix_memExe_forwardQ_deqP + 1'd1 ;
  assign next_pc__h777816 =
	     (rob$deqPort_0_deq_data[97:96] == 2'd0) ?
	       rob$deqPort_0_deq_data[95:32] :
	       rob_deqPort_0_deq_data__3579_BITS_353_TO_290_3_ETC___d13947 ;
  assign out___1_sfd__h536111 = { f1_sfd__h536048, 29'd0 } ;
  assign out___1_sfd__h579281 = { f2_sfd__h579218, 29'd0 } ;
  assign out___1_sfd__h622783 = { f3_sfd__h622720, 29'd0 } ;
  assign out_exp__h390704 =
	     sfdin__h390179[34] ?
	       _theResult___exp__h390701 :
	       _theResult___fst_exp__h390185 ;
  assign out_exp__h400519 =
	     _theResult___snd__h400025[34] ?
	       _theResult___exp__h400516 :
	       _theResult___fst_exp__h400074 ;
  assign out_exp__h410958 =
	     sfdin__h410433[34] ?
	       _theResult___exp__h410955 :
	       _theResult___fst_exp__h410439 ;
  assign out_exp__h420827 =
	     _theResult___snd__h420303[34] ?
	       _theResult___exp__h420824 :
	       _theResult___fst_exp__h420357 ;
  assign out_exp__h442417 =
	     sfdin__h441892[34] ?
	       _theResult___exp__h442414 :
	       _theResult___fst_exp__h441898 ;
  assign out_exp__h452232 =
	     _theResult___snd__h451738[34] ?
	       _theResult___exp__h452229 :
	       _theResult___fst_exp__h451787 ;
  assign out_exp__h462671 =
	     sfdin__h462146[34] ?
	       _theResult___exp__h462668 :
	       _theResult___fst_exp__h462152 ;
  assign out_exp__h472540 =
	     _theResult___snd__h472016[34] ?
	       _theResult___exp__h472537 :
	       _theResult___fst_exp__h472070 ;
  assign out_exp__h494128 =
	     sfdin__h493603[34] ?
	       _theResult___exp__h494125 :
	       _theResult___fst_exp__h493609 ;
  assign out_exp__h503943 =
	     _theResult___snd__h503449[34] ?
	       _theResult___exp__h503940 :
	       _theResult___fst_exp__h503498 ;
  assign out_exp__h514382 =
	     sfdin__h513857[34] ?
	       _theResult___exp__h514379 :
	       _theResult___fst_exp__h513863 ;
  assign out_exp__h524251 =
	     _theResult___snd__h523727[34] ?
	       _theResult___exp__h524248 :
	       _theResult___fst_exp__h523781 ;
  assign out_exp__h557781 =
	     _theResult___snd__h557074[5] ?
	       _theResult___exp__h557778 :
	       _theResult___fst_exp__h557123 ;
  assign out_exp__h568687 =
	     sfdin__h567949[5] ?
	       _theResult___exp__h568684 :
	       _theResult___fst_exp__h567955 ;
  assign out_exp__h578704 =
	     _theResult___snd__h577967[5] ?
	       _theResult___exp__h578701 :
	       _theResult___fst_exp__h578021 ;
  assign out_exp__h600862 =
	     _theResult___snd__h600155[5] ?
	       _theResult___exp__h600859 :
	       _theResult___fst_exp__h600204 ;
  assign out_exp__h611768 =
	     sfdin__h611030[5] ?
	       _theResult___exp__h611765 :
	       _theResult___fst_exp__h611036 ;
  assign out_exp__h621785 =
	     _theResult___snd__h621048[5] ?
	       _theResult___exp__h621782 :
	       _theResult___fst_exp__h621102 ;
  assign out_exp__h644364 =
	     _theResult___snd__h643657[5] ?
	       _theResult___exp__h644361 :
	       _theResult___fst_exp__h643706 ;
  assign out_exp__h655270 =
	     sfdin__h654532[5] ?
	       _theResult___exp__h655267 :
	       _theResult___fst_exp__h654538 ;
  assign out_exp__h665287 =
	     _theResult___snd__h664550[5] ?
	       _theResult___exp__h665284 :
	       _theResult___fst_exp__h664604 ;
  assign out_f_exp__h421203 =
	     (_theResult___exp__h420926 == 8'd255 &&
	      _theResult___sfd__h420927 != 23'd0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h420917 ;
  assign out_f_exp__h472916 =
	     (_theResult___exp__h472639 == 8'd255 &&
	      _theResult___sfd__h472640 != 23'd0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h472630 ;
  assign out_f_exp__h524627 =
	     (_theResult___exp__h524350 == 8'd255 &&
	      _theResult___sfd__h524351 != 23'd0 ||
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
	      11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h524341 ;
  assign out_f_sfd__h421204 =
	     (_theResult___exp__h420926 == 8'd255 &&
	      _theResult___sfd__h420927 != 23'd0) ?
	       23'd4194304 :
	       _theResult___sfd__h420927 ;
  assign out_f_sfd__h472917 =
	     (_theResult___exp__h472639 == 8'd255 &&
	      _theResult___sfd__h472640 != 23'd0) ?
	       23'd4194304 :
	       _theResult___sfd__h472640 ;
  assign out_f_sfd__h524628 =
	     (_theResult___exp__h524350 == 8'd255 &&
	      _theResult___sfd__h524351 != 23'd0) ?
	       23'd4194304 :
	       _theResult___sfd__h524351 ;
  assign out_sfd__h390705 =
	     sfdin__h390179[34] ?
	       _theResult___sfd__h390702 :
	       sfdin__h390179[56:34] ;
  assign out_sfd__h400520 =
	     _theResult___snd__h400025[34] ?
	       _theResult___sfd__h400517 :
	       _theResult___snd__h400025[56:34] ;
  assign out_sfd__h410959 =
	     sfdin__h410433[34] ?
	       _theResult___sfd__h410956 :
	       sfdin__h410433[56:34] ;
  assign out_sfd__h420828 =
	     _theResult___snd__h420303[34] ?
	       _theResult___sfd__h420825 :
	       _theResult___snd__h420303[56:34] ;
  assign out_sfd__h442418 =
	     sfdin__h441892[34] ?
	       _theResult___sfd__h442415 :
	       sfdin__h441892[56:34] ;
  assign out_sfd__h452233 =
	     _theResult___snd__h451738[34] ?
	       _theResult___sfd__h452230 :
	       _theResult___snd__h451738[56:34] ;
  assign out_sfd__h462672 =
	     sfdin__h462146[34] ?
	       _theResult___sfd__h462669 :
	       sfdin__h462146[56:34] ;
  assign out_sfd__h472541 =
	     _theResult___snd__h472016[34] ?
	       _theResult___sfd__h472538 :
	       _theResult___snd__h472016[56:34] ;
  assign out_sfd__h494129 =
	     sfdin__h493603[34] ?
	       _theResult___sfd__h494126 :
	       sfdin__h493603[56:34] ;
  assign out_sfd__h503944 =
	     _theResult___snd__h503449[34] ?
	       _theResult___sfd__h503941 :
	       _theResult___snd__h503449[56:34] ;
  assign out_sfd__h514383 =
	     sfdin__h513857[34] ?
	       _theResult___sfd__h514380 :
	       sfdin__h513857[56:34] ;
  assign out_sfd__h524252 =
	     _theResult___snd__h523727[34] ?
	       _theResult___sfd__h524249 :
	       _theResult___snd__h523727[56:34] ;
  assign out_sfd__h557782 =
	     _theResult___snd__h557074[5] ?
	       _theResult___sfd__h557779 :
	       _theResult___snd__h557074[56:5] ;
  assign out_sfd__h568688 =
	     sfdin__h567949[5] ?
	       _theResult___sfd__h568685 :
	       sfdin__h567949[56:5] ;
  assign out_sfd__h578705 =
	     _theResult___snd__h577967[5] ?
	       _theResult___sfd__h578702 :
	       _theResult___snd__h577967[56:5] ;
  assign out_sfd__h600863 =
	     _theResult___snd__h600155[5] ?
	       _theResult___sfd__h600860 :
	       _theResult___snd__h600155[56:5] ;
  assign out_sfd__h611769 =
	     sfdin__h611030[5] ?
	       _theResult___sfd__h611766 :
	       sfdin__h611030[56:5] ;
  assign out_sfd__h621786 =
	     _theResult___snd__h621048[5] ?
	       _theResult___sfd__h621783 :
	       _theResult___snd__h621048[56:5] ;
  assign out_sfd__h644365 =
	     _theResult___snd__h643657[5] ?
	       _theResult___sfd__h644362 :
	       _theResult___snd__h643657[56:5] ;
  assign out_sfd__h655271 =
	     sfdin__h654532[5] ?
	       _theResult___sfd__h655268 :
	       sfdin__h654532[56:5] ;
  assign out_sfd__h665288 =
	     _theResult___snd__h664550[5] ?
	       _theResult___sfd__h665285 :
	       _theResult___snd__h664550[56:5] ;
  assign pend_ints__h715237 =
	     { csrf_external_int_en_vec_3_read__1781_AND_csrf_ETC___d12477,
	       csrf_software_int_en_vec_3 & csrf_software_int_pend_vec_3,
	       1'd0,
	       csrf_software_int_en_vec_1 & csrf_software_int_pend_vec_1,
	       1'd0 } ;
  assign prv__h783968 = csrf_prv_reg ;
  assign prv__h784006 = csrf_mprv_reg ? csrf_mpp_reg : csrf_prv_reg ;
  assign q___1__h527690 =
	     64'd0 -
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[203:140] ;
  assign r1__read_BITS_13_TO_12___h719333 = csrf_fs_reg ;
  assign r1__read_BITS_9_TO_0___h715674 =
	     { csrf_mideleg_11_reg,
	       1'b0,
	       csrf_mideleg_9_7_reg,
	       1'b0,
	       csrf_mideleg_5_3_reg,
	       1'b0 } ;
  assign r1__read_BIT_20___h719700 = csrf_tw_reg ;
  assign r1__read__h678647 = { r1__read__h678649, csrf_ie_vec_1 } ;
  assign r1__read__h678649 = { r1__read__h678651, 2'b0 } ;
  assign r1__read__h678651 = { r1__read__h678653, csrf_prev_ie_vec_0 } ;
  assign r1__read__h678653 = { r1__read__h678655, csrf_prev_ie_vec_1 } ;
  assign r1__read__h678655 = { r1__read__h678657, 2'b0 } ;
  assign r1__read__h678657 = { r1__read__h678659, csrf_spp_reg } ;
  assign r1__read__h678659 = { r1__read__h678661, 4'b0 } ;
  assign r1__read__h678661 = { r1__read__h678663, csrf_fs_reg } ;
  assign r1__read__h678663 = { r1__read__h678665, 2'd0 } ;
  assign r1__read__h678665 = { r1__read__h678667, 1'b0 } ;
  assign r1__read__h678667 = { r1__read__h678669, csrf_sum_reg } ;
  assign r1__read__h678669 = { r1__read__h678671, csrf_mxr_reg } ;
  assign r1__read__h678671 = { r1__read__h678673, 12'b0 } ;
  assign r1__read__h678673 = { r1__read__h678675, 2'b10 } ;
  assign r1__read__h678675 = { r__h678679, 29'b0 } ;
  assign r1__read__h679051 =
	     { r1__read__h679053, csrf_software_int_en_vec_1 } ;
  assign r1__read__h679053 = { r1__read__h679055, 2'b0 } ;
  assign r1__read__h679055 = { r1__read__h679057, 1'b0 } ;
  assign r1__read__h679057 = { r1__read__h679059, csrf_timer_int_en_vec_1 } ;
  assign r1__read__h679059 = { r1__read__h679061, 2'b0 } ;
  assign r1__read__h679061 = { r1__read__h679063, 1'b0 } ;
  assign r1__read__h679063 = { 54'b0, csrf_external_int_en_vec_1 } ;
  assign r1__read__h679561 = { csrf_stvec_base_hi_reg, 1'b0 } ;
  assign r1__read__h679566 = { r1__read__h679568, csrf_scounteren_tm_reg } ;
  assign r1__read__h679568 = { 61'd536870911, csrf_scounteren_ir_reg } ;
  assign r1__read__h679580 = { csrf_scause_interrupt_reg, 59'b0 } ;
  assign r1__read__h679586 =
	     { r1__read__h679588, csrf_software_int_pend_vec_1 } ;
  assign r1__read__h679588 = { r1__read__h679590, 2'b0 } ;
  assign r1__read__h679590 = { r1__read__h679592, 1'b0 } ;
  assign r1__read__h679592 =
	     { r1__read__h679594, csrf_timer_int_pend_vec_1 } ;
  assign r1__read__h679594 = { r1__read__h679596, 2'b0 } ;
  assign r1__read__h679596 = { r1__read__h679598, 1'b0 } ;
  assign r1__read__h679598 = { 54'b0, csrf_external_int_pend_vec_1 } ;
  assign r1__read__h679796 = { vm_mode_reg__read__h679802, 16'd0 } ;
  assign r1__read__h679819 = { r1__read__h679821, csrf_ie_vec_1 } ;
  assign r1__read__h679821 = { r1__read__h679823, 1'b0 } ;
  assign r1__read__h679823 = { r1__read__h679825, csrf_ie_vec_3 } ;
  assign r1__read__h679825 = { r1__read__h679827, csrf_prev_ie_vec_0 } ;
  assign r1__read__h679827 = { r1__read__h679829, csrf_prev_ie_vec_1 } ;
  assign r1__read__h679829 = { r1__read__h679831, 1'b0 } ;
  assign r1__read__h679831 = { r1__read__h679833, csrf_prev_ie_vec_3 } ;
  assign r1__read__h679833 = { r1__read__h679835, csrf_spp_reg } ;
  assign r1__read__h679835 = { r1__read__h679837, 2'b0 } ;
  assign r1__read__h679837 = { r1__read__h679839, csrf_mpp_reg } ;
  assign r1__read__h679839 = { r1__read__h679841, csrf_fs_reg } ;
  assign r1__read__h679841 = { r1__read__h679843, 2'd0 } ;
  assign r1__read__h679843 = { r1__read__h679845, csrf_mprv_reg } ;
  assign r1__read__h679845 = { r1__read__h679847, csrf_sum_reg } ;
  assign r1__read__h679847 = { r1__read__h679849, csrf_mxr_reg } ;
  assign r1__read__h679849 = { r1__read__h679851, csrf_tvm_reg } ;
  assign r1__read__h679851 = { r1__read__h679853, csrf_tw_reg } ;
  assign r1__read__h679853 = { r1__read__h679855, csrf_tsr_reg } ;
  assign r1__read__h679855 = { r1__read__h679857, 9'b0 } ;
  assign r1__read__h679857 = { r1__read__h679859, 2'b10 } ;
  assign r1__read__h679859 = { r1__read__h679861, 2'b10 } ;
  assign r1__read__h679861 = { r__h678679, 27'b0 } ;
  assign r1__read__h679944 = { r1__read__h679946, 1'b0 } ;
  assign r1__read__h679946 = { r1__read__h679948, csrf_medeleg_13_11_reg } ;
  assign r1__read__h679948 = { r1__read__h679950, 1'b0 } ;
  assign r1__read__h679950 = { 48'b0, csrf_medeleg_15_reg } ;
  assign r1__read__h679961 = { r1__read__h679963, 1'b0 } ;
  assign r1__read__h679963 = { r1__read__h679965, csrf_mideleg_5_3_reg } ;
  assign r1__read__h679965 = { r1__read__h679967, 1'b0 } ;
  assign r1__read__h679967 = { r1__read__h679969, csrf_mideleg_9_7_reg } ;
  assign r1__read__h679969 = { r1__read__h679971, 1'b0 } ;
  assign r1__read__h679971 = { 52'b0, csrf_mideleg_11_reg } ;
  assign r1__read__h679985 =
	     { r1__read__h679987, csrf_software_int_en_vec_1 } ;
  assign r1__read__h679987 = { r1__read__h679989, 1'b0 } ;
  assign r1__read__h679989 =
	     { r1__read__h679991, csrf_software_int_en_vec_3 } ;
  assign r1__read__h679991 = { r1__read__h679993, 1'b0 } ;
  assign r1__read__h679993 = { r1__read__h679995, csrf_timer_int_en_vec_1 } ;
  assign r1__read__h679995 = { r1__read__h679997, 1'b0 } ;
  assign r1__read__h679997 = { r1__read__h679999, csrf_timer_int_en_vec_3 } ;
  assign r1__read__h679999 = { r1__read__h680001, 1'b0 } ;
  assign r1__read__h680001 =
	     { r1__read__h680003, csrf_external_int_en_vec_1 } ;
  assign r1__read__h680003 = { r1__read__h680005, 1'b0 } ;
  assign r1__read__h680005 = { 52'b0, csrf_external_int_en_vec_3 } ;
  assign r1__read__h680078 = { csrf_mtvec_base_hi_reg, 1'b0 } ;
  assign r1__read__h680083 = { r1__read__h680085, csrf_mcounteren_tm_reg } ;
  assign r1__read__h680085 = { 61'd536870911, csrf_mcounteren_ir_reg } ;
  assign r1__read__h680097 = { csrf_mcause_interrupt_reg, 59'b0 } ;
  assign r1__read__h680103 =
	     { r1__read__h680105, csrf_software_int_pend_vec_1 } ;
  assign r1__read__h680105 = { r1__read__h680107, 1'b0 } ;
  assign r1__read__h680107 =
	     { r1__read__h680109, csrf_software_int_pend_vec_3 } ;
  assign r1__read__h680109 = { r1__read__h680111, 1'b0 } ;
  assign r1__read__h680111 =
	     { r1__read__h680113, csrf_timer_int_pend_vec_1 } ;
  assign r1__read__h680113 = { r1__read__h680115, 1'b0 } ;
  assign r1__read__h680115 =
	     { r1__read__h680117, csrf_timer_int_pend_vec_3 } ;
  assign r1__read__h680117 = { r1__read__h680119, 1'b0 } ;
  assign r1__read__h680119 =
	     { r1__read__h680121, csrf_external_int_pend_vec_1 } ;
  assign r1__read__h680121 = { r1__read__h680123, 1'b0 } ;
  assign r1__read__h680123 = { 52'b0, csrf_external_int_pend_vec_3 } ;
  assign r1__read__h680204 = { 4'd0, csrf_rg_tdata1_dmode } ;
  assign rVal1__h535562 = coreFix_fpuMulDivExe_0_regToExeQ$first[203:140] ;
  assign rVal2__h535563 = coreFix_fpuMulDivExe_0_regToExeQ$first[139:76] ;
  assign r___1__h527717 =
	     64'd0 -
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[139:76] ;
  assign r__h678679 = csrf_fs_reg == 2'b11 ;
  assign r__h680178 = csrf_software_int_pend_vec_3 ;
  assign regRenamingTable_RDY_rename_0_getRename__2670__ETC___d13184 =
	     regRenamingTable$RDY_rename_0_getRename &&
	     CASE_fetchStagepipelines_0_first_BITS_191_TO__ETC__q218 &&
	     (fetchStage$pipelines_0_first[199:195] == 5'd14 ||
	      coreFix_memExe_rsMem$RDY_enq) ;
  assign regRenamingTable_RDY_rename_1_getRename__3240__ETC___d13251 =
	     regRenamingTable$RDY_rename_1_getRename &&
	     (!fetchStage$pipelines_0_canDeq ||
	      NOT_specTagManager_canClaim__2785_2875_OR_NOT__ETC___d13244) &&
	     _0_OR_NOT_fetchStage_pipelines_1_first__2447_BI_ETC___d13249 ;
  assign regRenamingTable_rename_0_canRename__2787_AND__ETC___d12862 =
	     regRenamingTable$rename_0_canRename &&
	     fetchStage$pipelines_0_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd20 &&
	     NOT_fetchStage_pipelines_0_first__2438_BIT_68__ETC___d12860 ;
  assign regRenamingTable_rename_0_canRename__2787_AND__ETC___d12876 =
	     regRenamingTable_rename_0_canRename__2787_AND__ETC___d12862 &&
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872 &&
	     fetchStage$pipelines_0_first[194:192] == 3'd1 ||
	     !specTagManager$canClaim ;
  assign regRenamingTable_rename_0_canRename__2787_AND__ETC___d13072 =
	     regRenamingTable_rename_0_canRename__2787_AND__ETC___d12862 &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 ||
	     !coreFix_memExe_rsMem$canEnq ||
	     CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q215 ;
  assign regRenamingTable_rename_0_canRename__2787_AND__ETC___d13213 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12547[4] &&
	     rob$enqPort_0_canEnq &&
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13211 &&
	     fetchStage$pipelines_0_first[194:192] == 3'd1 ;
  assign regRenamingTable_rename_0_canRename__2787_AND__ETC___d13337 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12547[4] &&
	     rob$enqPort_0_canEnq &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd4) &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ;
  assign regRenamingTable_rename_0_canRename__2787_AND__ETC___d13351 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12547[4] &&
	     rob$enqPort_0_canEnq &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd4) &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_32_ETC___d13347 ;
  assign regRenamingTable_rename_0_canRename__2787_AND__ETC___d13356 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12547[4] &&
	     rob$enqPort_0_canEnq &&
	     (fetchStage$pipelines_0_first[194:192] == 3'd3 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd4) &&
	     coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq &&
	     fetchStage$pipelines_0_first[173] ;
  assign regRenamingTable_rename_0_canRename__2787_AND__ETC___d13361 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12547[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     coreFix_memExe_rsMem$canEnq &&
	     IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 &&
	     fetchStage$pipelines_0_first[199:195] != 5'd14 ;
  assign regRenamingTable_rename_0_canRename__2787_AND__ETC___d13387 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12547[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     coreFix_memExe_rsMem$canEnq &&
	     IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 &&
	     NOT_fetchStage_pipelines_0_first__2438_BITS_32_ETC___d13347 ;
  assign regRenamingTable_rename_0_canRename__2787_AND__ETC___d13391 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12547[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     coreFix_memExe_rsMem$canEnq &&
	     IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 &&
	     fetchStage$pipelines_0_first[173] ;
  assign regRenamingTable_rename_0_canRename__2787_AND__ETC___d13397 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12547[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     coreFix_memExe_rsMem$canEnq &&
	     IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 &&
	     (fetchStage$pipelines_0_first[199:195] != 5'd14) !=
	     fetchStage$pipelines_0_first[160] ;
  assign regRenamingTable_rename_0_canRename__2787_AND__ETC___d13401 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12547[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     coreFix_memExe_rsMem$canEnq &&
	     IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 &&
	     (fetchStage$pipelines_0_first[191:189] == 3'd0 ||
	      fetchStage$pipelines_0_first[191:189] == 3'd2) ;
  assign regRenamingTable_rename_0_canRename__2787_AND__ETC___d13409 =
	     regRenamingTable$rename_0_canRename &&
	     !checkForException___d12547[4] &&
	     rob$enqPort_0_canEnq &&
	     fetchStage$pipelines_0_first[194:192] == 3'd2 &&
	     coreFix_memExe_rsMem$canEnq &&
	     IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 &&
	     fetchStage$pipelines_0_first[191:189] != 3'd0 &&
	     fetchStage$pipelines_0_first[191:189] != 3'd2 ;
  assign regRenamingTable_rename_1_canRename__2911_AND__ETC___d13444 =
	     regRenamingTable$rename_1_canRename &&
	     fetchStage$pipelines_1_first[199:195] != 5'd0 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd21 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd17 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd18 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd13 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd16 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd15 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd19 &&
	     fetchStage$pipelines_1_first[199:195] != 5'd20 &&
	     NOT_fetchStage_pipelines_1_first__2447_BIT_68__ETC___d13442 ;
  assign regRenamingTable_rename_1_canRename__2911_AND__ETC___d13517 =
	     regRenamingTable_rename_1_canRename__2911_AND__ETC___d13444 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13498 &&
	     NOT_fetchStage_pipelines_1_first__2447_BITS_32_ETC___d13484 ;
  assign regRenamingTable_rename_1_canRename__2911_AND__ETC___d13528 =
	     regRenamingTable_rename_1_canRename__2911_AND__ETC___d13444 &&
	     fetchStage$pipelines_1_first[194:192] == 3'd2 &&
	     NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13498 &&
	     (fetchStage$pipelines_1_first[199:195] != 5'd14) !=
	     fetchStage$pipelines_1_first[160] ;
  assign renaming_spec_bits__h749005 =
	     fetchStage$pipelines_0_canDeq ?
	       y_avValue_snd_fst__h745580 :
	       specTagManager$currentSpecBits ;
  assign res_data__h371458 = { 32'hFFFFFFFF, x__h371473 } ;
  assign res_data__h371463 =
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[33] ^
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68],
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] ==
		11'd2047 &&
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) ?
		 63'h7FF8000000000000 :
		 coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:5] } ;
  assign res_data__h423176 = { 32'hFFFFFFFF, x__h423191 } ;
  assign res_data__h423181 =
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[33] ^
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68],
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] ==
		11'd2047 &&
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) ?
		 63'h7FF8000000000000 :
		 coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:5] } ;
  assign res_data__h474887 = { 32'hFFFFFFFF, x__h474902 } ;
  assign res_data__h474892 =
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[33] ^
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68],
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] ==
		11'd2047 &&
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) ?
		 63'h7FF8000000000000 :
		 coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:5] } ;
  assign res_fflags__h371459 =
	     coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[38:34] |
	     coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[4:0] |
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5559,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5570,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5586,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5599,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_fma_r_ETC___d5612 } ;
  assign res_fflags__h423177 =
	     coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[38:34] |
	     coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[4:0] |
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6951,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6962,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6978,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d6991,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_div_r_ETC___d7004 } ;
  assign res_fflags__h474888 =
	     coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[38:34] |
	     coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[4:0] |
	     { (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8343,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8354,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8370,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8383,
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] ==
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd2047 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       (coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
		11'd0 ||
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] !=
		52'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_double_sqrt__ETC___d8396 } ;
  assign resp_addr__h312417 =
	     { coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getSlot[52:1],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getRq[95:84] } ;
  assign result__h401559 =
	     { _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d4915[56:1],
	       _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d4915[0] |
	       guard__h401554 } ;
  assign result__h453272 =
	     { _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d6307[56:1],
	       _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d6307[0] |
	       guard__h453267 } ;
  assign result__h504983 =
	     { _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d7699[56:1],
	       _0b0_CONCAT_NOT_coreFix_fpuMulDivExe_0_fpuExec__ETC___d7699[0] |
	       guard__h504978 } ;
  assign result__h559077 =
	     { _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d8958[56:1],
	       _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d8958[0] |
	       guard__h559072 } ;
  assign result__h602158 =
	     { _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d10442[56:1],
	       _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d10442[0] |
	       guard__h602153 } ;
  assign result__h645660 =
	     { _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d9673[56:1],
	       _0b0_CONCAT_NOT_IF_coreFix_fpuMulDivExe_0_regTo_ETC___d9673[0] |
	       guard__h645655 } ;
  assign result__h711482 =
	     IF_coreFix_globalSpecUpdate_correctSpecTag_0_w_ETC___d12374 &
	     y__h711511 ;
  assign result__h711533 = ~x__h711532 ;
  assign rg_tdata1__read__h678541 =
	     { r1__read__h680204, csrf_rg_tdata1_data } ;
  assign rob_RDY_enqPort_0_enq__2460_AND_regRenamingTab_ETC___d12678 =
	     rob$RDY_enqPort_0_enq &&
	     regRenamingTable$RDY_rename_0_claimRename &&
	     regRenamingTable$RDY_rename_0_getRename &&
	     fetchStage$RDY_pipelines_0_first &&
	     fetchStage$RDY_pipelines_0_deq &&
	     (fetchStage$pipelines_0_first[194:192] != 3'd0 ||
	      coreFix_aluExe_0_rsAlu$RDY_enq) ;
  assign rob_deqPort_0_deq_data__3579_BITS_353_TO_290_3_ETC___d13947 =
	     rob$deqPort_0_deq_data[353:290] + 64'd4 ;
  assign rob_enqPort_1_canEnq__2976_AND_epochManager_ch_ETC___d12981 =
	     rob$enqPort_1_canEnq && epochManager$checkEpoch_1_check &&
	     (!fetchStage$pipelines_0_canDeq ||
	      (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	       specTagManager$canClaim) &&
	      regRenamingTable_rename_0_canRename__2787_AND__ETC___d12862 &&
	      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12848) ;
  assign rob_enqPort_1_canEnq__2976_AND_epochManager_ch_ETC___d13120 =
	     rob$enqPort_1_canEnq && epochManager$checkEpoch_1_check &&
	     (!fetchStage$pipelines_0_canDeq ||
	      (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	       specTagManager$canClaim) &&
	      regRenamingTable_rename_0_canRename__2787_AND__ETC___d12862 &&
	      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13116) ;
  assign rob_enqPort_1_canEnq__2976_AND_epochManager_ch_ETC___d13137 =
	     rob$enqPort_1_canEnq && epochManager$checkEpoch_1_check &&
	     (!fetchStage$pipelines_0_canDeq ||
	      (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	       specTagManager$canClaim) &&
	      regRenamingTable_rename_0_canRename__2787_AND__ETC___d12862 &&
	      IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13133) ;
  assign robdeqPort_0_deq_data_BITS_95_TO_32__q247 =
	     rob$deqPort_0_deq_data[95:32] ;
  assign rs1__h719479 =
	     (fetchStage$pipelines_0_first[88] &&
	      !fetchStage$pipelines_0_first[87]) ?
	       fetchStage$pipelines_0_first[86:82] :
	       5'd0 ;
  assign satp_csr__read__h677824 = { r1__read__h679796, csrf_ppn_reg } ;
  assign sbIdx__h172469 =
	     coreFix_memExe_reqStQ_data_0_dummy2_1$Q_OUT ?
	       (CAN_FIRE_RL_coreFix_memExe_doIssueSB ?
		  coreFix_memExe_reqStQ_data_0_lat_0$wget[65:64] :
		  coreFix_memExe_reqStQ_data_0_rl[65:64]) :
	       2'd0 ;
  assign scause_csr__read__h677747 =
	     { r1__read__h679580, csrf_scause_code_reg } ;
  assign scounteren_csr__read__h677708 =
	     { r1__read__h679566, csrf_scounteren_cy_reg } ;
  assign sfd__h372069 = { value__h381441, 3'd0 } ;
  assign sfd__h390277 =
	     { 1'b0,
	       _theResult___fst_exp__h390185 != 8'd0,
	       sfdin__h390179[56:34] } +
	     25'd1 ;
  assign sfd__h400092 =
	     { 1'b0,
	       _theResult___fst_exp__h400074 != 8'd0,
	       _theResult___snd__h400025[56:34] } +
	     25'd1 ;
  assign sfd__h410531 =
	     { 1'b0,
	       _theResult___fst_exp__h410439 != 8'd0,
	       sfdin__h410433[56:34] } +
	     25'd1 ;
  assign sfd__h420376 =
	     { 1'b0,
	       _theResult___fst_exp__h420357 != 8'd0,
	       _theResult___snd__h420303[56:34] } +
	     25'd1 ;
  assign sfd__h423787 = { value__h433154, 3'd0 } ;
  assign sfd__h441990 =
	     { 1'b0,
	       _theResult___fst_exp__h441898 != 8'd0,
	       sfdin__h441892[56:34] } +
	     25'd1 ;
  assign sfd__h451805 =
	     { 1'b0,
	       _theResult___fst_exp__h451787 != 8'd0,
	       _theResult___snd__h451738[56:34] } +
	     25'd1 ;
  assign sfd__h462244 =
	     { 1'b0,
	       _theResult___fst_exp__h462152 != 8'd0,
	       sfdin__h462146[56:34] } +
	     25'd1 ;
  assign sfd__h472089 =
	     { 1'b0,
	       _theResult___fst_exp__h472070 != 8'd0,
	       _theResult___snd__h472016[56:34] } +
	     25'd1 ;
  assign sfd__h475498 = { value__h484865, 3'd0 } ;
  assign sfd__h493701 =
	     { 1'b0,
	       _theResult___fst_exp__h493609 != 8'd0,
	       sfdin__h493603[56:34] } +
	     25'd1 ;
  assign sfd__h503516 =
	     { 1'b0,
	       _theResult___fst_exp__h503498 != 8'd0,
	       _theResult___snd__h503449[56:34] } +
	     25'd1 ;
  assign sfd__h513955 =
	     { 1'b0,
	       _theResult___fst_exp__h513863 != 8'd0,
	       sfdin__h513857[56:34] } +
	     25'd1 ;
  assign sfd__h523800 =
	     { 1'b0,
	       _theResult___fst_exp__h523781 != 8'd0,
	       _theResult___snd__h523727[56:34] } +
	     25'd1 ;
  assign sfd__h536409 = { value__h541447, 32'd0 } ;
  assign sfd__h557141 =
	     { 1'b0,
	       _theResult___fst_exp__h557123 != 11'd0,
	       _theResult___snd__h557074[56:5] } +
	     54'd1 ;
  assign sfd__h568047 =
	     { 1'b0,
	       _theResult___fst_exp__h567955 != 11'd0,
	       sfdin__h567949[56:5] } +
	     54'd1 ;
  assign sfd__h578040 =
	     { 1'b0,
	       _theResult___fst_exp__h578021 != 11'd0,
	       _theResult___snd__h577967[56:5] } +
	     54'd1 ;
  assign sfd__h579579 = { value__h584528, 32'd0 } ;
  assign sfd__h600222 =
	     { 1'b0,
	       _theResult___fst_exp__h600204 != 11'd0,
	       _theResult___snd__h600155[56:5] } +
	     54'd1 ;
  assign sfd__h611128 =
	     { 1'b0,
	       _theResult___fst_exp__h611036 != 11'd0,
	       sfdin__h611030[56:5] } +
	     54'd1 ;
  assign sfd__h621121 =
	     { 1'b0,
	       _theResult___fst_exp__h621102 != 11'd0,
	       _theResult___snd__h621048[56:5] } +
	     54'd1 ;
  assign sfd__h623081 = { value__h628030, 32'd0 } ;
  assign sfd__h643724 =
	     { 1'b0,
	       _theResult___fst_exp__h643706 != 11'd0,
	       _theResult___snd__h643657[56:5] } +
	     54'd1 ;
  assign sfd__h654630 =
	     { 1'b0,
	       _theResult___fst_exp__h654538 != 11'd0,
	       sfdin__h654532[56:5] } +
	     54'd1 ;
  assign sfd__h664623 =
	     { 1'b0,
	       _theResult___fst_exp__h664604 != 11'd0,
	       _theResult___snd__h664550[56:5] } +
	     54'd1 ;
  assign sfdin__h390179 =
	     _theResult____h380819[56] ?
	       _theResult___snd__h390196 :
	       _theResult___snd__h390207 ;
  assign sfdin__h410433 =
	     _theResult____h400946[56] ?
	       _theResult___snd__h410450 :
	       _theResult___snd__h410461 ;
  assign sfdin__h441892 =
	     _theResult____h432534[56] ?
	       _theResult___snd__h441909 :
	       _theResult___snd__h441920 ;
  assign sfdin__h462146 =
	     _theResult____h452659[56] ?
	       _theResult___snd__h462163 :
	       _theResult___snd__h462174 ;
  assign sfdin__h493603 =
	     _theResult____h484245[56] ?
	       _theResult___snd__h493620 :
	       _theResult___snd__h493631 ;
  assign sfdin__h513857 =
	     _theResult____h504370[56] ?
	       _theResult___snd__h513874 :
	       _theResult___snd__h513885 ;
  assign sfdin__h567949 =
	     _theResult____h558464[56] ?
	       _theResult___snd__h567966 :
	       _theResult___snd__h567977 ;
  assign sfdin__h611030 =
	     _theResult____h601545[56] ?
	       _theResult___snd__h611047 :
	       _theResult___snd__h611058 ;
  assign sfdin__h654532 =
	     _theResult____h645047[56] ?
	       _theResult___snd__h654549 :
	       _theResult___snd__h654560 ;
  assign shiftData__h199245 =
	     coreFix_memExe_regToExeQ$first[75:12] << x__h199374 ;
  assign sie_csr__read__h677663 = { r1__read__h679051, 1'b0 } ;
  assign sip_csr__read__h677806 = { r1__read__h679586, 1'b0 } ;
  assign spec_bits__h752554 = specTagManager$currentSpecBits | y__h752567 ;
  assign sstatus_csr__read__h677614 = { r1__read__h678647, csrf_ie_vec_0 } ;
  assign stvec_csr__read__h677682 =
	     { r1__read__h679561, csrf_stvec_mode_low_reg } ;
  assign upd__h3683 =
	     WILL_FIRE_RL_commitStage_doCommitSystemInst ?
	       MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_1 :
	       MUX_csrf_minstret_ehr_data_lat_1$wset_1__VAL_2 ;
  assign upd__h4986 = n__read__h6429 + 64'd1 ;
  assign v__h196709 =
	     sbCons$lazyLookup_3_get[3] ? rf$read_3_rd1 : y_avValue__h198252 ;
  assign v__h198325 =
	     sbCons$lazyLookup_3_get[2] ? rf$read_3_rd2 : y_avValue__h199003 ;
  assign v__h318858 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_cRqRetr_ETC___d3042) ?
	       v__h319104 :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ;
  assign v__h319104 =
	     (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP ==
	      3'd7) ?
	       3'd0 :
	       coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP +
	       3'd1 ;
  assign v__h322304 =
	     (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_fromPQ__ETC___d3148) ?
	       v__h322837 :
	       coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP ;
  assign v__h322837 = coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP + 1'd1 ;
  assign v__h333902 =
	     (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_rqToPQ__ETC___d3269) ?
	       v__h334148 :
	       coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP ;
  assign v__h334148 = coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP + 1'd1 ;
  assign v__h338230 =
	     (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_dMem_cache_m_banks_0_rsToPQ__ETC___d3360) ?
	       v__h338476 :
	       coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP ;
  assign v__h338476 = coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP + 1'd1 ;
  assign v__h353809 =
	     (coreFix_memExe_memRespLdQ_enqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_memRespLdQ_enqReq_lat_1_whas_ETC___d3544) ?
	       v__h354055 :
	       coreFix_memExe_memRespLdQ_enqP ;
  assign v__h354055 = coreFix_memExe_memRespLdQ_enqP + 1'd1 ;
  assign v__h357200 =
	     (coreFix_memExe_forwardQ_enqReq_dummy2_2$Q_OUT &&
	      IF_coreFix_memExe_forwardQ_enqReq_lat_1_whas___ETC___d3633) ?
	       v__h357446 :
	       coreFix_memExe_forwardQ_enqP ;
  assign v__h357446 = coreFix_memExe_forwardQ_enqP + 1'd1 ;
  assign v__h530607 =
	     sbCons$lazyLookup_2_get[3] ? rf$read_2_rd1 : y_avValue__h531772 ;
  assign v__h531845 =
	     sbCons$lazyLookup_2_get[2] ? rf$read_2_rd2 : y_avValue__h532525 ;
  assign v__h532592 =
	     sbCons$lazyLookup_2_get[1] ? rf$read_2_rd3 : y_avValue__h533273 ;
  assign v__h670767 =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas ?
	       v__h670777 :
	       coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit ;
  assign v__h670777 =
	     coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit + 2'd1 ;
  assign v__h671847 = v__h670767 - 2'd1 ;
  assign v__h676149 =
	     sbCons$lazyLookup_1_get[3] ? rf$read_1_rd1 : y_avValue__h677373 ;
  assign v__h680270 =
	     sbCons$lazyLookup_1_get[2] ? rf$read_1_rd2 : y_avValue__h680949 ;
  assign v__h699600 =
	     sbCons$lazyLookup_0_get[3] ? rf$read_0_rd1 : y_avValue__h700671 ;
  assign v__h701235 =
	     sbCons$lazyLookup_0_get[2] ? rf$read_0_rd2 : y_avValue__h701914 ;
  assign vaddr__h199240 =
	     coreFix_memExe_regToExeQ$first[139:76] +
	     { {32{coreFix_memExe_regToExeQfirst_BITS_189_TO_158__q4[31]}},
	       coreFix_memExe_regToExeQfirst_BITS_189_TO_158__q4 } ;
  assign value__h381441 =
	     { 1'b0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[67:57] !=
	       11'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[56:5] } ;
  assign value__h433154 =
	     { 1'b0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[67:57] !=
	       11'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[56:5] } ;
  assign value__h484865 =
	     { 1'b0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[67:57] !=
	       11'd0,
	       coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[56:5] } ;
  assign value__h541447 = { 1'b0, f1_exp__h536047 != 8'd0, f1_sfd__h536048 } ;
  assign value__h584528 = { 1'b0, f2_exp__h579217 != 8'd0, f2_sfd__h579218 } ;
  assign value__h628030 = { 1'b0, f3_exp__h622719 != 8'd0, f3_sfd__h622720 } ;
  assign vm_mode_reg__read__h679802 = { csrf_vm_mode_sv39_reg, 3'b0 } ;
  assign x__h168728 =
	     coreFix_memExe_reqLdQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_reqLdQ_data_0_lat_0$whas ?
		  coreFix_memExe_reqLdQ_data_0_lat_0$wget[68:64] :
		  coreFix_memExe_reqLdQ_data_0_rl[68:64]) :
	       5'd0 ;
  assign x__h168734 =
	     coreFix_memExe_reqLdQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_reqLdQ_data_0_lat_0$whas ?
		  coreFix_memExe_reqLdQ_data_0_lat_0$wget[63:0] :
		  coreFix_memExe_reqLdQ_data_0_rl[63:0]) :
	       64'd0 ;
  assign x__h172584 = { 3'd0, sbIdx__h172469 } ;
  assign x__h172590 =
	     coreFix_memExe_reqStQ_data_0_dummy2_1$Q_OUT ?
	       (CAN_FIRE_RL_coreFix_memExe_doIssueSB ?
		  coreFix_memExe_reqStQ_data_0_lat_0$wget[63:0] :
		  coreFix_memExe_reqStQ_data_0_rl[63:0]) :
	       64'd0 ;
  assign x__h175709 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		  coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[152:148] :
		  coreFix_memExe_reqLrScAmoQ_data_0_rl[152:148]) :
	       5'd0 ;
  assign x__h175713 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		  coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[147:84] :
		  coreFix_memExe_reqLrScAmoQ_data_0_rl[147:84]) :
	       64'd0 ;
  assign x__h177561 =
	     coreFix_memExe_reqLrScAmoQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_reqLrScAmoQ_data_0_lat_0$whas ?
		  coreFix_memExe_reqLrScAmoQ_data_0_lat_0$wget[70:7] :
		  coreFix_memExe_reqLrScAmoQ_data_0_rl[70:7]) :
	       64'd0 ;
  assign x__h199374 = { vaddr__h199240[2:0], 3'b0 } ;
  assign x__h209947 =
	     coreFix_memExe_dMem_cache_m_banks_0_processAmo[90] ?
	       curData__h209190[63:32] :
	       curData__h209190[31:0] ;
  assign x__h307565 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[152:148] :
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[152:148]) :
	       5'd0 ;
  assign x__h307577 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[147:84] :
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[147:84]) :
	       64'd0 ;
  assign x__h309431 =
	     coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_dummy2_1$Q_OUT ?
	       (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$whas ?
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_lat_0$wget[70:7] :
		  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl[70:7]) :
	       64'd0 ;
  assign x__h371473 =
	     { (_theResult___exp__h420926 != 8'd255 ||
		_theResult___sfd__h420927 == 23'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5497,
	       out_f_exp__h421203,
	       out_f_sfd__h421204 } ;
  assign x__h401656 =
	     sfd__h372069 << (x__h401689[11] ? 12'hAAA : x__h401689) ;
  assign x__h401689 =
	     12'd57 -
	     _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d4911 ;
  assign x__h423191 =
	     { (_theResult___exp__h472639 != 8'd255 ||
		_theResult___sfd__h472640 == 23'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6889,
	       out_f_exp__h472916,
	       out_f_sfd__h472917 } ;
  assign x__h453369 =
	     sfd__h423787 << (x__h453402[11] ? 12'hAAA : x__h453402) ;
  assign x__h453402 =
	     12'd57 -
	     _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d6303 ;
  assign x__h474902 =
	     { (_theResult___exp__h524350 != 8'd255 ||
		_theResult___sfd__h524351 == 23'd0) &&
	       IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8281,
	       out_f_exp__h524627,
	       out_f_sfd__h524628 } ;
  assign x__h505080 =
	     sfd__h475498 << (x__h505113[11] ? 12'hAAA : x__h505113) ;
  assign x__h505113 =
	     12'd57 -
	     _3970_MINUS_SEXT_coreFix_fpuMulDivExe_0_fpuExec_ETC___d7695 ;
  assign x__h559172 = sfd__h536409 << x__h559205 ;
  assign x__h559205 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d8954 ;
  assign x__h602253 = sfd__h579579 << x__h602286 ;
  assign x__h602286 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d10438 ;
  assign x__h645755 = sfd__h623081 << x__h645788 ;
  assign x__h645788 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_coreFix_fpuMulDivExe_0_regT_ETC___d9669 ;
  assign x__h670081 =
	     (coreFix_fpuMulDivExe_0_regToExeQ$first[226:225] == 2'd0) ?
	       _theResult___fst__h670097 :
	       a__h669503 ;
  assign x__h670112 = a__h669503[63] ^ b__h669504[63] ;
  assign x__h670697 =
	     (coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_divisorQ$D_OUT ==
	      64'd0) ?
	       { 64'hFFFFFFFFFFFFFFFF,
		 coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_dividendQ$D_OUT[139:76] } :
	       { coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divI_ETC___d11441,
		 coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divI_ETC___d11442 } ;
  assign x__h678632 = { csrf_frm_reg, csrf_fflags_reg } ;
  assign x__h683308 =
	     coreFix_aluExe_1_dispToRegQ$first[131] ?
	       rVal1__h677430 :
	       v__h676149 ;
  assign x__h704263 =
	     coreFix_aluExe_0_dispToRegQ$first[131] ?
	       rVal1__h700726 :
	       v__h699600 ;
  assign x__h711481 = 12'd1 << coreFix_aluExe_1_exeToFinQ$first[15:12] ;
  assign x__h711532 = 12'd1 << coreFix_aluExe_0_exeToFinQ$first[15:12] ;
  assign x__h764974 =
	     (!rob$deqPort_0_deq_data[166] &&
	      (rob$deqPort_0_deq_data[165:162] == 4'd1 ||
	       rob$deqPort_0_deq_data[165:162] == 4'd12)) ?
	       rob$deqPort_0_deq_data[161:98] :
	       rob$deqPort_0_deq_data[95:32] ;
  assign x__h769140 = { commitStage_commitTrap[35:32], 2'b0 } ;
  assign x__h778015 = { 1'b0, csrf_spp_reg } ;
  assign x__h782816 =
	     NOT_rob_deqPort_0_canDeq__3974_3975_OR_rob_deq_ETC___d14166 ?
	       y_avValue_snd_snd_snd_fst__h782458 :
	       IF_rob_deqPort_0_canDeq__3974_THEN_IF_NOT_rob__ETC___d14195 ;
  assign x__h79607 = mmio_pRqQ_data_0[31:0] ;
  assign x_decodeInfo_frm__h719142 = csrf_frm_reg ;
  assign x_quotient__h526929 =
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[75] ?
	       64'hFFFFFFFFFFFFFFFF :
	       ((coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[10] &&
		 coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[9]) ?
		  q___1__h527690 :
		  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[203:140]) ;
  assign x_reg_ifc__read__h677541 = { 63'd0, csrf_stats_module_doStats } ;
  assign x_remainder__h526930 =
	     coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[75] ?
	       coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[74:11] :
	       ((coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[10] &&
		 coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[8]) ?
		  r___1__h527717 :
		  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_divIfc_respQ$D_OUT[139:76]) ;
  assign y__h273792 =
	     { coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[569:518],
	       coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[95:90] } ;
  assign y__h686519 = coreFix_aluExe_1_regToExeQ$first[176:113] + 64'd4 ;
  assign y__h707181 = coreFix_aluExe_0_regToExeQ$first[176:113] + 64'd4 ;
  assign y__h711511 = ~x__h711481 ;
  assign y__h715664 =
	     { ~csrf_mideleg_11_reg,
	       1'd1,
	       ~csrf_mideleg_9_7_reg,
	       1'd1,
	       ~csrf_mideleg_5_3_reg,
	       1'd1,
	       ~csrf_mideleg_1_0_reg } ;
  assign y__h752567 = 12'd1 << specTagManager$nextSpecTag ;
  assign y__h782307 =
	     NOT_rob_deqPort_0_canDeq__3974_3975_OR_rob_deq_ETC___d14166 ?
	       y_avValue_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd__h782529 :
	       IF_rob_deqPort_0_canDeq__3974_THEN_IF_NOT_rob__ETC___d14083 ;
  assign y_avValue__h198252 =
	     NOT_coreFix_memExe_bypassWire_0_whas__476_484__ETC___d1505 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1579 ;
  assign y_avValue__h199003 =
	     NOT_coreFix_memExe_bypassWire_0_whas__476_484__ETC___d1537 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1590 ;
  assign y_avValue__h531772 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8529 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8640 ;
  assign y_avValue__h532525 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8561 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8651 ;
  assign y_avValue__h533273 =
	     NOT_coreFix_fpuMulDivExe_0_bypassWire_0_whas___ETC___d8590 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8662 ;
  assign y_avValue__h677373 =
	     NOT_coreFix_aluExe_1_bypassWire_0_whas__1530_1_ETC___d11559 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11900 ;
  assign y_avValue__h680949 =
	     NOT_coreFix_aluExe_1_bypassWire_0_whas__1530_1_ETC___d11592 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11913 ;
  assign y_avValue__h700671 =
	     NOT_coreFix_aluExe_0_bypassWire_0_whas__2058_2_ETC___d12087 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12246 ;
  assign y_avValue__h701914 =
	     NOT_coreFix_aluExe_0_bypassWire_0_whas__2058_2_ETC___d12120 ?
	       coreFix_aluExe_0_bypassWire_3$wget[63:0] :
	       IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12259 ;
  assign y_avValue_fst__h745305 =
	     (fetchStage$pipelines_0_first[194:192] == 3'd1) ?
	       spec_bits__h752554 :
	       specTagManager$currentSpecBits ;
  assign y_avValue_fst__h780904 =
	     (!rob$deqPort_0_deq_data[25] || rob$deqPort_0_deq_data[18] ||
	      rob$deqPort_0_deq_data[167] ||
	      rob$deqPort_0_deq_data[257:253] == 5'd0 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd21 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd17 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd18 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd13 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd16 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd15 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd19 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd20) ?
	       5'd0 :
	       rob$deqPort_0_deq_data[31:27] ;
  assign y_avValue_fst__h782129 =
	     IF_rob_deqPort_0_canDeq__3974_THEN_IF_NOT_rob__ETC___d14173 |
	     rob$deqPort_1_deq_data[31:27] ;
  assign y_avValue_fst__h782183 =
	     (!rob$deqPort_1_deq_data[25] || rob$deqPort_1_deq_data[18] ||
	      rob$deqPort_1_deq_data[167] ||
	      rob$deqPort_1_deq_data[257:253] == 5'd0 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd21 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd17 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd18 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd13 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd16 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd15 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd19 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd20) ?
	       IF_rob_deqPort_0_canDeq__3974_THEN_IF_NOT_rob__ETC___d14173 :
	       y_avValue_fst__h782129 ;
  assign y_avValue_new_pc__h768849 =
	     (csrf_stvec_mode_low_reg && commitStage_commitTrap[36]) ?
	       base__h769125 + { 58'd0, x__h769140 } :
	       base__h769125 ;
  assign y_avValue_new_pc__h769098 =
	     (csrf_mtvec_mode_low_reg && commitStage_commitTrap[36]) ?
	       base__h769145 + { 58'd0, x__h769140 } :
	       base__h769145 ;
  assign y_avValue_snd_fst__h745580 =
	     ((fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	       specTagManager$canClaim) &&
	      regRenamingTable$rename_0_canRename &&
	      NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12807) ?
	       y_avValue_snd_fst__h745615 :
	       specTagManager$currentSpecBits ;
  assign y_avValue_snd_fst__h745615 =
	     IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872 ?
	       y_avValue_fst__h745305 :
	       specTagManager$currentSpecBits ;
  assign y_avValue_snd_snd_snd_fst__h781428 =
	     (!rob$deqPort_0_deq_data[25] || rob$deqPort_0_deq_data[18] ||
	      rob$deqPort_0_deq_data[167] ||
	      rob$deqPort_0_deq_data[257:253] == 5'd0 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd21 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd17 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd18 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd13 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd16 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd15 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd19 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd20) ?
	       2'd0 :
	       2'd1 ;
  assign y_avValue_snd_snd_snd_fst__h782458 =
	     (!rob$deqPort_1_deq_data[25] || rob$deqPort_1_deq_data[18] ||
	      rob$deqPort_1_deq_data[167] ||
	      rob$deqPort_1_deq_data[257:253] == 5'd0 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd21 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd17 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd18 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd13 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd16 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd15 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd19 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd20) ?
	       IF_rob_deqPort_0_canDeq__3974_THEN_IF_NOT_rob__ETC___d14195 :
	       y_avValue_snd_snd_snd_fst__h782578 ;
  assign y_avValue_snd_snd_snd_fst__h782578 =
	     IF_rob_deqPort_0_canDeq__3974_THEN_IF_NOT_rob__ETC___d14195 +
	     2'd1 ;
  assign y_avValue_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd__h781499 =
	     (!rob$deqPort_0_deq_data[25] || rob$deqPort_0_deq_data[18] ||
	      rob$deqPort_0_deq_data[167] ||
	      rob$deqPort_0_deq_data[257:253] == 5'd0 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd21 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd17 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd18 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd13 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd16 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd15 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd19 ||
	      rob$deqPort_0_deq_data[257:253] == 5'd20) ?
	       64'd0 :
	       64'd1 ;
  assign y_avValue_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd__h782529 =
	     (!rob$deqPort_1_deq_data[25] || rob$deqPort_1_deq_data[18] ||
	      rob$deqPort_1_deq_data[167] ||
	      rob$deqPort_1_deq_data[257:253] == 5'd0 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd21 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd17 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd18 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd13 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd16 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd15 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd19 ||
	      rob$deqPort_1_deq_data[257:253] == 5'd20) ?
	       IF_rob_deqPort_0_canDeq__3974_THEN_IF_NOT_rob__ETC___d14083 :
	       y_avValue_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd__h782649 ;
  assign y_avValue_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd_snd__h782649 =
	     IF_rob_deqPort_0_canDeq__3974_THEN_IF_NOT_rob__ETC___d14083 +
	     64'd1 ;
  always@(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq or
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[89:87])
      3'd0:
	  x__h214333 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[63:0];
      3'd1:
	  x__h214333 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[127:64];
      3'd2:
	  x__h214333 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[191:128];
      3'd3:
	  x__h214333 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[255:192];
      3'd4:
	  x__h214333 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[319:256];
      3'd5:
	  x__h214333 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[383:320];
      3'd6:
	  x__h214333 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[447:384];
      3'd7:
	  x__h214333 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:448];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6 or
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP)
      3'd0:
	  x__h306156 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0;
      3'd1:
	  x__h306156 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1;
      3'd2:
	  x__h306156 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2;
      3'd3:
	  x__h306156 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3;
      3'd4:
	  x__h306156 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4;
      3'd5:
	  x__h306156 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5;
      3'd6:
	  x__h306156 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6;
      3'd7:
	  x__h306156 =
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  addr__h310363 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[581:518];
      1'd1:
	  addr__h310363 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[581:518];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_processAmo or
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_processAmo[93:91])
      3'd0:
	  curData__h209190 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[63:0];
      3'd1:
	  curData__h209190 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[127:64];
      3'd2:
	  curData__h209190 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[191:128];
      3'd3:
	  curData__h209190 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[255:192];
      3'd4:
	  curData__h209190 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[319:256];
      3'd5:
	  curData__h209190 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[383:320];
      3'd6:
	  curData__h209190 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[447:384];
      3'd7:
	  curData__h209190 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:448];
    endcase
  end
  always@(commitStage_commitTrap)
  begin
    case (commitStage_commitTrap[35:32])
      4'd0, 4'd3: trap_val__h768632 = commitStage_commitTrap[164:101];
      4'd1, 4'd4, 4'd5, 4'd6, 4'd7, 4'd12, 4'd13, 4'd15:
	  trap_val__h768632 = commitStage_commitTrap[100:37];
      4'd2: trap_val__h768632 = { 32'd0, commitStage_commitTrap[31:0] };
      default: trap_val__h768632 = 64'd0;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  x__h311936 = coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[2:0];
      1'd1:
	  x__h311936 = coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[2:0];
    endcase
  end
  always@(coreFix_aluExe_1_dispToRegQ$first or
	  fflags_csr__read__h677453 or
	  frm_csr__read__h677467 or
	  fcsr_csr__read__h677481 or
	  sstatus_csr__read__h677614 or
	  sie_csr__read__h677663 or
	  stvec_csr__read__h677682 or
	  scounteren_csr__read__h677708 or
	  csrf_sscratch_csr or
	  csrf_sepc_csr or
	  scause_csr__read__h677747 or
	  csrf_stval_csr or
	  sip_csr__read__h677806 or
	  satp_csr__read__h677824 or
	  mstatus_csr__read__h677919 or
	  medeleg_csr__read__h677962 or
	  mideleg_csr__read__h678000 or
	  mie_csr__read__h678064 or
	  mtvec_csr__read__h678083 or
	  mcounteren_csr__read__h678109 or
	  csrf_mscratch_csr or
	  csrf_mepc_csr or
	  mcause_csr__read__h678148 or
	  csrf_mtval_csr or
	  mip_csr__read__h678222 or
	  csrf_rg_tselect or
	  rg_tdata1__read__h678541 or
	  csrf_rg_tdata2 or
	  csrf_rg_tdata3 or
	  x_reg_ifc__read__h677541 or
	  n__read__h678242 or n__read__h678466 or csrf_time_reg)
  begin
    case (coreFix_aluExe_1_dispToRegQ$first[130:119])
      12'd1: rVal1__h677430 = fflags_csr__read__h677453;
      12'd2: rVal1__h677430 = frm_csr__read__h677467;
      12'd3: rVal1__h677430 = fcsr_csr__read__h677481;
      12'd256: rVal1__h677430 = sstatus_csr__read__h677614;
      12'd260: rVal1__h677430 = sie_csr__read__h677663;
      12'd261: rVal1__h677430 = stvec_csr__read__h677682;
      12'd262: rVal1__h677430 = scounteren_csr__read__h677708;
      12'd320: rVal1__h677430 = csrf_sscratch_csr;
      12'd321: rVal1__h677430 = csrf_sepc_csr;
      12'd322: rVal1__h677430 = scause_csr__read__h677747;
      12'd323: rVal1__h677430 = csrf_stval_csr;
      12'd324: rVal1__h677430 = sip_csr__read__h677806;
      12'd384: rVal1__h677430 = satp_csr__read__h677824;
      12'd768: rVal1__h677430 = mstatus_csr__read__h677919;
      12'd769: rVal1__h677430 = 64'h800000000014112D;
      12'd770: rVal1__h677430 = medeleg_csr__read__h677962;
      12'd771: rVal1__h677430 = mideleg_csr__read__h678000;
      12'd772: rVal1__h677430 = mie_csr__read__h678064;
      12'd773: rVal1__h677430 = mtvec_csr__read__h678083;
      12'd774: rVal1__h677430 = mcounteren_csr__read__h678109;
      12'd832: rVal1__h677430 = csrf_mscratch_csr;
      12'd833: rVal1__h677430 = csrf_mepc_csr;
      12'd834: rVal1__h677430 = mcause_csr__read__h678148;
      12'd835: rVal1__h677430 = csrf_mtval_csr;
      12'd836: rVal1__h677430 = mip_csr__read__h678222;
      12'd1952: rVal1__h677430 = csrf_rg_tselect;
      12'd1953: rVal1__h677430 = rg_tdata1__read__h678541;
      12'd1954: rVal1__h677430 = csrf_rg_tdata2;
      12'd1955: rVal1__h677430 = csrf_rg_tdata3;
      12'd2048, 12'd3857, 12'd3858, 12'd3859, 12'd3860:
	  rVal1__h677430 = 64'd0;
      12'd2049: rVal1__h677430 = x_reg_ifc__read__h677541;
      12'd2816, 12'd3072: rVal1__h677430 = n__read__h678242;
      12'd2818, 12'd3074: rVal1__h677430 = n__read__h678466;
      12'd3073: rVal1__h677430 = csrf_time_reg;
      default: rVal1__h677430 = 64'b0;
    endcase
  end
  always@(coreFix_aluExe_0_dispToRegQ$first or
	  fflags_csr__read__h677453 or
	  frm_csr__read__h677467 or
	  fcsr_csr__read__h677481 or
	  sstatus_csr__read__h677614 or
	  sie_csr__read__h677663 or
	  stvec_csr__read__h677682 or
	  scounteren_csr__read__h677708 or
	  csrf_sscratch_csr or
	  csrf_sepc_csr or
	  scause_csr__read__h677747 or
	  csrf_stval_csr or
	  sip_csr__read__h677806 or
	  satp_csr__read__h677824 or
	  mstatus_csr__read__h677919 or
	  medeleg_csr__read__h677962 or
	  mideleg_csr__read__h678000 or
	  mie_csr__read__h678064 or
	  mtvec_csr__read__h678083 or
	  mcounteren_csr__read__h678109 or
	  csrf_mscratch_csr or
	  csrf_mepc_csr or
	  mcause_csr__read__h678148 or
	  csrf_mtval_csr or
	  mip_csr__read__h678222 or
	  csrf_rg_tselect or
	  rg_tdata1__read__h678541 or
	  csrf_rg_tdata2 or
	  csrf_rg_tdata3 or
	  x_reg_ifc__read__h677541 or
	  n__read__h678242 or n__read__h678466 or csrf_time_reg)
  begin
    case (coreFix_aluExe_0_dispToRegQ$first[130:119])
      12'd1: rVal1__h700726 = fflags_csr__read__h677453;
      12'd2: rVal1__h700726 = frm_csr__read__h677467;
      12'd3: rVal1__h700726 = fcsr_csr__read__h677481;
      12'd256: rVal1__h700726 = sstatus_csr__read__h677614;
      12'd260: rVal1__h700726 = sie_csr__read__h677663;
      12'd261: rVal1__h700726 = stvec_csr__read__h677682;
      12'd262: rVal1__h700726 = scounteren_csr__read__h677708;
      12'd320: rVal1__h700726 = csrf_sscratch_csr;
      12'd321: rVal1__h700726 = csrf_sepc_csr;
      12'd322: rVal1__h700726 = scause_csr__read__h677747;
      12'd323: rVal1__h700726 = csrf_stval_csr;
      12'd324: rVal1__h700726 = sip_csr__read__h677806;
      12'd384: rVal1__h700726 = satp_csr__read__h677824;
      12'd768: rVal1__h700726 = mstatus_csr__read__h677919;
      12'd769: rVal1__h700726 = 64'h800000000014112D;
      12'd770: rVal1__h700726 = medeleg_csr__read__h677962;
      12'd771: rVal1__h700726 = mideleg_csr__read__h678000;
      12'd772: rVal1__h700726 = mie_csr__read__h678064;
      12'd773: rVal1__h700726 = mtvec_csr__read__h678083;
      12'd774: rVal1__h700726 = mcounteren_csr__read__h678109;
      12'd832: rVal1__h700726 = csrf_mscratch_csr;
      12'd833: rVal1__h700726 = csrf_mepc_csr;
      12'd834: rVal1__h700726 = mcause_csr__read__h678148;
      12'd835: rVal1__h700726 = csrf_mtval_csr;
      12'd836: rVal1__h700726 = mip_csr__read__h678222;
      12'd1952: rVal1__h700726 = csrf_rg_tselect;
      12'd1953: rVal1__h700726 = rg_tdata1__read__h678541;
      12'd1954: rVal1__h700726 = csrf_rg_tdata2;
      12'd1955: rVal1__h700726 = csrf_rg_tdata3;
      12'd2048, 12'd3857, 12'd3858, 12'd3859, 12'd3860:
	  rVal1__h700726 = 64'd0;
      12'd2049: rVal1__h700726 = x_reg_ifc__read__h677541;
      12'd2816, 12'd3072: rVal1__h700726 = n__read__h678242;
      12'd2818, 12'd3074: rVal1__h700726 = n__read__h678466;
      12'd3073: rVal1__h700726 = csrf_time_reg;
      default: rVal1__h700726 = 64'b0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0, 3'd1: _theResult___fst_exp__h484227 = 8'd255;
      3'd2:
	  _theResult___fst_exp__h484227 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		8'd254 :
		8'd255;
      3'd3:
	  _theResult___fst_exp__h484227 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		8'd255 :
		8'd254;
      3'd4: _theResult___fst_exp__h484227 = 8'd254;
      default: _theResult___fst_exp__h484227 = 8'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0, 3'd1: _theResult___fst_exp__h380801 = 8'd255;
      3'd2:
	  _theResult___fst_exp__h380801 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		8'd254 :
		8'd255;
      3'd3:
	  _theResult___fst_exp__h380801 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		8'd255 :
		8'd254;
      3'd4: _theResult___fst_exp__h380801 = 8'd254;
      default: _theResult___fst_exp__h380801 = 8'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0, 3'd1: _theResult___fst_sfd__h380802 = 23'd0;
      3'd2:
	  _theResult___fst_sfd__h380802 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		23'd8388607 :
		23'd0;
      3'd3:
	  _theResult___fst_sfd__h380802 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] ?
		23'd0 :
		23'd8388607;
      3'd4: _theResult___fst_sfd__h380802 = 23'd8388607;
      default: _theResult___fst_sfd__h380802 = 23'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0, 3'd1: _theResult___fst_exp__h432516 = 8'd255;
      3'd2:
	  _theResult___fst_exp__h432516 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		8'd254 :
		8'd255;
      3'd3:
	  _theResult___fst_exp__h432516 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		8'd255 :
		8'd254;
      3'd4: _theResult___fst_exp__h432516 = 8'd254;
      default: _theResult___fst_exp__h432516 = 8'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0, 3'd1: _theResult___fst_sfd__h432517 = 23'd0;
      3'd2:
	  _theResult___fst_sfd__h432517 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		23'd8388607 :
		23'd0;
      3'd3:
	  _theResult___fst_sfd__h432517 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] ?
		23'd0 :
		23'd8388607;
      3'd4: _theResult___fst_sfd__h432517 = 23'd8388607;
      default: _theResult___fst_sfd__h432517 = 23'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0, 3'd1: _theResult___fst_sfd__h484228 = 23'd0;
      3'd2:
	  _theResult___fst_sfd__h484228 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		23'd8388607 :
		23'd0;
      3'd3:
	  _theResult___fst_sfd__h484228 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] ?
		23'd0 :
		23'd8388607;
      3'd4: _theResult___fst_sfd__h484228 = 23'd8388607;
      default: _theResult___fst_sfd__h484228 = 23'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q6 = 11'd2046;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q6 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		11'd2047 :
		11'd2046;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q6 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		11'd2046 :
		11'd2047;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q6 = 11'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7 =
	      52'hFFFFFFFFFFFFF;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[171]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q7 = 52'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8 = 11'd2046;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		11'd2047 :
		11'd2046;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		11'd2046 :
		11'd2047;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q8 = 11'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9 =
	      52'hFFFFFFFFFFFFF;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[107]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q9 = 52'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10 = 11'd2046;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		11'd2047 :
		11'd2046;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		11'd2046 :
		11'd2047;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q10 = 11'd0;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11 =
	      52'hFFFFFFFFFFFFF;
      3'd2:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11 =
	      (coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
	       32'hFFFFFFFF &&
	       coreFix_fpuMulDivExe_0_regToExeQ$first[43]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q11 = 52'd0;
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or coreFix_memExe_respLrScAmoQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19])
      1'd0:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1287 =
	      coreFix_memExe_respLrScAmoQ_data_0[31:0];
      1'd1:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1287 =
	      coreFix_memExe_respLrScAmoQ_data_0[63:32];
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or coreFix_memExe_respLrScAmoQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19:18])
      2'd0:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1298 =
	      coreFix_memExe_respLrScAmoQ_data_0[15:0];
      2'd1:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1298 =
	      coreFix_memExe_respLrScAmoQ_data_0[31:16];
      2'd2:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1298 =
	      coreFix_memExe_respLrScAmoQ_data_0[47:32];
      2'd3:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1298 =
	      coreFix_memExe_respLrScAmoQ_data_0[63:48];
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or coreFix_memExe_respLrScAmoQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19:17])
      3'd0:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1312 =
	      coreFix_memExe_respLrScAmoQ_data_0[7:0];
      3'd1:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1312 =
	      coreFix_memExe_respLrScAmoQ_data_0[15:8];
      3'd2:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1312 =
	      coreFix_memExe_respLrScAmoQ_data_0[23:16];
      3'd3:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1312 =
	      coreFix_memExe_respLrScAmoQ_data_0[31:24];
      3'd4:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1312 =
	      coreFix_memExe_respLrScAmoQ_data_0[39:32];
      3'd5:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1312 =
	      coreFix_memExe_respLrScAmoQ_data_0[47:40];
      3'd6:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1312 =
	      coreFix_memExe_respLrScAmoQ_data_0[55:48];
      3'd7:
	  SEL_ARR_coreFix_memExe_respLrScAmoQ_data_0_037_ETC___d1312 =
	      coreFix_memExe_respLrScAmoQ_data_0[63:56];
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or mmio_dataRespQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19])
      1'd0:
	  SEL_ARR_mmio_dataRespQ_data_0_068_BITS_31_TO_0_ETC___d1339 =
	      mmio_dataRespQ_data_0[31:0];
      1'd1:
	  SEL_ARR_mmio_dataRespQ_data_0_068_BITS_31_TO_0_ETC___d1339 =
	      mmio_dataRespQ_data_0[63:32];
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or mmio_dataRespQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19:18])
      2'd0:
	  SEL_ARR_mmio_dataRespQ_data_0_068_BITS_15_TO_0_ETC___d1348 =
	      mmio_dataRespQ_data_0[15:0];
      2'd1:
	  SEL_ARR_mmio_dataRespQ_data_0_068_BITS_15_TO_0_ETC___d1348 =
	      mmio_dataRespQ_data_0[31:16];
      2'd2:
	  SEL_ARR_mmio_dataRespQ_data_0_068_BITS_15_TO_0_ETC___d1348 =
	      mmio_dataRespQ_data_0[47:32];
      2'd3:
	  SEL_ARR_mmio_dataRespQ_data_0_068_BITS_15_TO_0_ETC___d1348 =
	      mmio_dataRespQ_data_0[63:48];
    endcase
  end
  always@(coreFix_memExe_lsq$firstLd or mmio_dataRespQ_data_0)
  begin
    case (coreFix_memExe_lsq$firstLd[19:17])
      3'd0:
	  SEL_ARR_mmio_dataRespQ_data_0_068_BITS_7_TO_0__ETC___d1361 =
	      mmio_dataRespQ_data_0[7:0];
      3'd1:
	  SEL_ARR_mmio_dataRespQ_data_0_068_BITS_7_TO_0__ETC___d1361 =
	      mmio_dataRespQ_data_0[15:8];
      3'd2:
	  SEL_ARR_mmio_dataRespQ_data_0_068_BITS_7_TO_0__ETC___d1361 =
	      mmio_dataRespQ_data_0[23:16];
      3'd3:
	  SEL_ARR_mmio_dataRespQ_data_0_068_BITS_7_TO_0__ETC___d1361 =
	      mmio_dataRespQ_data_0[31:24];
      3'd4:
	  SEL_ARR_mmio_dataRespQ_data_0_068_BITS_7_TO_0__ETC___d1361 =
	      mmio_dataRespQ_data_0[39:32];
      3'd5:
	  SEL_ARR_mmio_dataRespQ_data_0_068_BITS_7_TO_0__ETC___d1361 =
	      mmio_dataRespQ_data_0[47:40];
      3'd6:
	  SEL_ARR_mmio_dataRespQ_data_0_068_BITS_7_TO_0__ETC___d1361 =
	      mmio_dataRespQ_data_0[55:48];
      3'd7:
	  SEL_ARR_mmio_dataRespQ_data_0_068_BITS_7_TO_0__ETC___d1361 =
	      mmio_dataRespQ_data_0[63:56];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2767 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[65:2];
      1'd1:
	  SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_fr_ETC___d2767 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[65:2];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q12 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[514:451];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q12 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[514:451];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q13 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[450:387];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q13 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[450:387];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q14 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[386:323];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q14 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[386:323];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q15 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[322:259];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q15 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[322:259];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q16 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[258:195];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q16 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[258:195];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_pipeline$first or
	  coreFix_memExe_dMem_cache_m_banks_0_latTimer_started)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512])
      3'd0:
	  SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_la_ETC___d2906 =
	      coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[0];
      3'd1:
	  SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_la_ETC___d2906 =
	      coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[1];
      3'd2:
	  SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_la_ETC___d2906 =
	      coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[2];
      3'd3:
	  SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_la_ETC___d2906 =
	      coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[3];
      3'd4:
	  SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_la_ETC___d2906 =
	      coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[4];
      3'd5:
	  SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_la_ETC___d2906 =
	      coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[5];
      3'd6:
	  SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_la_ETC___d2906 =
	      coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[6];
      3'd7:
	  SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_la_ETC___d2906 =
	      coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[7];
    endcase
  end
  always@(i__h362270 or coreFix_memExe_stMemLatTimer_started)
  begin
    case (i__h362270)
      2'd0:
	  SEL_ARR_coreFix_memExe_stMemLatTimer_started_7_ETC___d3776 =
	      coreFix_memExe_stMemLatTimer_started[0];
      2'd1:
	  SEL_ARR_coreFix_memExe_stMemLatTimer_started_7_ETC___d3776 =
	      coreFix_memExe_stMemLatTimer_started[1];
      2'd2:
	  SEL_ARR_coreFix_memExe_stMemLatTimer_started_7_ETC___d3776 =
	      coreFix_memExe_stMemLatTimer_started[2];
      2'd3:
	  SEL_ARR_coreFix_memExe_stMemLatTimer_started_7_ETC___d3776 =
	      coreFix_memExe_stMemLatTimer_started[3];
    endcase
  end
  always@(i__h363648 or coreFix_memExe_ldMemLatTimer_started)
  begin
    case (i__h363648)
      5'd0:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[0];
      5'd1:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[1];
      5'd2:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[2];
      5'd3:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[3];
      5'd4:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[4];
      5'd5:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[5];
      5'd6:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[6];
      5'd7:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[7];
      5'd8:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[8];
      5'd9:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[9];
      5'd10:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[10];
      5'd11:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[11];
      5'd12:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[12];
      5'd13:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[13];
      5'd14:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[14];
      5'd15:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[15];
      5'd16:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[16];
      5'd17:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[17];
      5'd18:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[18];
      5'd19:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[19];
      5'd20:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[20];
      5'd21:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[21];
      5'd22:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[22];
      5'd23:
	  SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
	      coreFix_memExe_ldMemLatTimer_started[23];
      default: SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894 =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  always@(guard__h390793 or
	  _theResult___fst_exp__h400074 or
	  out_exp__h400519 or _theResult___exp__h400516)
  begin
    case (guard__h390793)
      2'b0, 2'b01:
	  CASE_guard90793_0b0_theResult___fst_exp00074_0_ETC__q21 =
	      _theResult___fst_exp__h400074;
      2'b10:
	  CASE_guard90793_0b0_theResult___fst_exp00074_0_ETC__q21 =
	      out_exp__h400519;
      2'b11:
	  CASE_guard90793_0b0_theResult___fst_exp00074_0_ETC__q21 =
	      _theResult___exp__h400516;
    endcase
  end
  always@(guard__h390793 or
	  _theResult___fst_exp__h400074 or _theResult___exp__h400516)
  begin
    case (guard__h390793)
      2'b0:
	  CASE_guard90793_0b0_theResult___fst_exp00074_0_ETC__q22 =
	      _theResult___fst_exp__h400074;
      2'b01, 2'b10, 2'b11:
	  CASE_guard90793_0b0_theResult___fst_exp00074_0_ETC__q22 =
	      _theResult___exp__h400516;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard90793_0b0_theResult___fst_exp00074_0_ETC__q21 or
	  CASE_guard90793_0b0_theResult___fst_exp00074_0_ETC__q22 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4889 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4891 or
	  _theResult___fst_exp__h400074)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h400594 =
	      CASE_guard90793_0b0_theResult___fst_exp00074_0_ETC__q21;
      3'd1:
	  _theResult___fst_exp__h400594 =
	      CASE_guard90793_0b0_theResult___fst_exp00074_0_ETC__q22;
      3'd2:
	  _theResult___fst_exp__h400594 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4889;
      3'd3:
	  _theResult___fst_exp__h400594 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d4891;
      3'd4: _theResult___fst_exp__h400594 = _theResult___fst_exp__h400074;
      default: _theResult___fst_exp__h400594 = 8'd0;
    endcase
  end
  always@(guard__h380829 or
	  _theResult___fst_exp__h390185 or
	  out_exp__h390704 or _theResult___exp__h390701)
  begin
    case (guard__h380829)
      2'b0, 2'b01:
	  CASE_guard80829_0b0_theResult___fst_exp90185_0_ETC__q23 =
	      _theResult___fst_exp__h390185;
      2'b10:
	  CASE_guard80829_0b0_theResult___fst_exp90185_0_ETC__q23 =
	      out_exp__h390704;
      2'b11:
	  CASE_guard80829_0b0_theResult___fst_exp90185_0_ETC__q23 =
	      _theResult___exp__h390701;
    endcase
  end
  always@(guard__h380829 or
	  _theResult___fst_exp__h390185 or _theResult___exp__h390701)
  begin
    case (guard__h380829)
      2'b0:
	  CASE_guard80829_0b0_theResult___fst_exp90185_0_ETC__q24 =
	      _theResult___fst_exp__h390185;
      2'b01, 2'b10, 2'b11:
	  CASE_guard80829_0b0_theResult___fst_exp90185_0_ETC__q24 =
	      _theResult___exp__h390701;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard80829_0b0_theResult___fst_exp90185_0_ETC__q23 or
	  CASE_guard80829_0b0_theResult___fst_exp90185_0_ETC__q24 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4667 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4670 or
	  _theResult___fst_exp__h390185)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h390779 =
	      CASE_guard80829_0b0_theResult___fst_exp90185_0_ETC__q23;
      3'd1:
	  _theResult___fst_exp__h390779 =
	      CASE_guard80829_0b0_theResult___fst_exp90185_0_ETC__q24;
      3'd2:
	  _theResult___fst_exp__h390779 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4667;
      3'd3:
	  _theResult___fst_exp__h390779 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d4670;
      3'd4: _theResult___fst_exp__h390779 = _theResult___fst_exp__h390185;
      default: _theResult___fst_exp__h390779 = 8'd0;
    endcase
  end
  always@(guard__h400956 or
	  _theResult___fst_exp__h410439 or
	  out_exp__h410958 or _theResult___exp__h410955)
  begin
    case (guard__h400956)
      2'b0, 2'b01:
	  CASE_guard00956_0b0_theResult___fst_exp10439_0_ETC__q29 =
	      _theResult___fst_exp__h410439;
      2'b10:
	  CASE_guard00956_0b0_theResult___fst_exp10439_0_ETC__q29 =
	      out_exp__h410958;
      2'b11:
	  CASE_guard00956_0b0_theResult___fst_exp10439_0_ETC__q29 =
	      _theResult___exp__h410955;
    endcase
  end
  always@(guard__h400956 or
	  _theResult___fst_exp__h410439 or _theResult___exp__h410955)
  begin
    case (guard__h400956)
      2'b0:
	  CASE_guard00956_0b0_theResult___fst_exp10439_0_ETC__q30 =
	      _theResult___fst_exp__h410439;
      2'b01, 2'b10, 2'b11:
	  CASE_guard00956_0b0_theResult___fst_exp10439_0_ETC__q30 =
	      _theResult___exp__h410955;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard00956_0b0_theResult___fst_exp10439_0_ETC__q29 or
	  CASE_guard00956_0b0_theResult___fst_exp10439_0_ETC__q30 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5214 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5216 or
	  _theResult___fst_exp__h410439)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h411033 =
	      CASE_guard00956_0b0_theResult___fst_exp10439_0_ETC__q29;
      3'd1:
	  _theResult___fst_exp__h411033 =
	      CASE_guard00956_0b0_theResult___fst_exp10439_0_ETC__q30;
      3'd2:
	  _theResult___fst_exp__h411033 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5214;
      3'd3:
	  _theResult___fst_exp__h411033 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5216;
      3'd4: _theResult___fst_exp__h411033 = _theResult___fst_exp__h410439;
      default: _theResult___fst_exp__h411033 = 8'd0;
    endcase
  end
  always@(guard__h411047 or
	  _theResult___fst_exp__h420357 or
	  out_exp__h420827 or _theResult___exp__h420824)
  begin
    case (guard__h411047)
      2'b0, 2'b01:
	  CASE_guard11047_0b0_theResult___fst_exp20357_0_ETC__q34 =
	      _theResult___fst_exp__h420357;
      2'b10:
	  CASE_guard11047_0b0_theResult___fst_exp20357_0_ETC__q34 =
	      out_exp__h420827;
      2'b11:
	  CASE_guard11047_0b0_theResult___fst_exp20357_0_ETC__q34 =
	      _theResult___exp__h420824;
    endcase
  end
  always@(guard__h411047 or
	  _theResult___fst_exp__h420357 or _theResult___exp__h420824)
  begin
    case (guard__h411047)
      2'b0:
	  CASE_guard11047_0b0_theResult___fst_exp20357_0_ETC__q35 =
	      _theResult___fst_exp__h420357;
      2'b01, 2'b10, 2'b11:
	  CASE_guard11047_0b0_theResult___fst_exp20357_0_ETC__q35 =
	      _theResult___exp__h420824;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard11047_0b0_theResult___fst_exp20357_0_ETC__q34 or
	  CASE_guard11047_0b0_theResult___fst_exp20357_0_ETC__q35 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5283 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5285 or
	  _theResult___fst_exp__h420357)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h420902 =
	      CASE_guard11047_0b0_theResult___fst_exp20357_0_ETC__q34;
      3'd1:
	  _theResult___fst_exp__h420902 =
	      CASE_guard11047_0b0_theResult___fst_exp20357_0_ETC__q35;
      3'd2:
	  _theResult___fst_exp__h420902 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5283;
      3'd3:
	  _theResult___fst_exp__h420902 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5285;
      3'd4: _theResult___fst_exp__h420902 = _theResult___fst_exp__h420357;
      default: _theResult___fst_exp__h420902 = 8'd0;
    endcase
  end
  always@(guard__h390793 or
	  _theResult___snd__h400025 or
	  out_sfd__h400520 or _theResult___sfd__h400517)
  begin
    case (guard__h390793)
      2'b0, 2'b01:
	  CASE_guard90793_0b0_theResult___snd00025_BITS__ETC__q36 =
	      _theResult___snd__h400025[56:34];
      2'b10:
	  CASE_guard90793_0b0_theResult___snd00025_BITS__ETC__q36 =
	      out_sfd__h400520;
      2'b11:
	  CASE_guard90793_0b0_theResult___snd00025_BITS__ETC__q36 =
	      _theResult___sfd__h400517;
    endcase
  end
  always@(guard__h390793 or
	  _theResult___snd__h400025 or _theResult___sfd__h400517)
  begin
    case (guard__h390793)
      2'b0:
	  CASE_guard90793_0b0_theResult___snd00025_BITS__ETC__q37 =
	      _theResult___snd__h400025[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard90793_0b0_theResult___snd00025_BITS__ETC__q37 =
	      _theResult___sfd__h400517;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard90793_0b0_theResult___snd00025_BITS__ETC__q36 or
	  CASE_guard90793_0b0_theResult___snd00025_BITS__ETC__q37 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5333 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5335 or
	  _theResult___snd__h400025)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h400595 =
	      CASE_guard90793_0b0_theResult___snd00025_BITS__ETC__q36;
      3'd1:
	  _theResult___fst_sfd__h400595 =
	      CASE_guard90793_0b0_theResult___snd00025_BITS__ETC__q37;
      3'd2:
	  _theResult___fst_sfd__h400595 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5333;
      3'd3:
	  _theResult___fst_sfd__h400595 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5335;
      3'd4: _theResult___fst_sfd__h400595 = _theResult___snd__h400025[56:34];
      default: _theResult___fst_sfd__h400595 = 23'd0;
    endcase
  end
  always@(guard__h380829 or
	  sfdin__h390179 or out_sfd__h390705 or _theResult___sfd__h390702)
  begin
    case (guard__h380829)
      2'b0, 2'b01:
	  CASE_guard80829_0b0_sfdin90179_BITS_56_TO_34_0_ETC__q38 =
	      sfdin__h390179[56:34];
      2'b10:
	  CASE_guard80829_0b0_sfdin90179_BITS_56_TO_34_0_ETC__q38 =
	      out_sfd__h390705;
      2'b11:
	  CASE_guard80829_0b0_sfdin90179_BITS_56_TO_34_0_ETC__q38 =
	      _theResult___sfd__h390702;
    endcase
  end
  always@(guard__h380829 or sfdin__h390179 or _theResult___sfd__h390702)
  begin
    case (guard__h380829)
      2'b0:
	  CASE_guard80829_0b0_sfdin90179_BITS_56_TO_34_0_ETC__q39 =
	      sfdin__h390179[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard80829_0b0_sfdin90179_BITS_56_TO_34_0_ETC__q39 =
	      _theResult___sfd__h390702;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard80829_0b0_sfdin90179_BITS_56_TO_34_0_ETC__q38 or
	  CASE_guard80829_0b0_sfdin90179_BITS_56_TO_34_0_ETC__q39 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5314 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5316 or
	  sfdin__h390179)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h390780 =
	      CASE_guard80829_0b0_sfdin90179_BITS_56_TO_34_0_ETC__q38;
      3'd1:
	  _theResult___fst_sfd__h390780 =
	      CASE_guard80829_0b0_sfdin90179_BITS_56_TO_34_0_ETC__q39;
      3'd2:
	  _theResult___fst_sfd__h390780 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5314;
      3'd3:
	  _theResult___fst_sfd__h390780 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d5316;
      3'd4: _theResult___fst_sfd__h390780 = sfdin__h390179[56:34];
      default: _theResult___fst_sfd__h390780 = 23'd0;
    endcase
  end
  always@(guard__h400956 or
	  sfdin__h410433 or out_sfd__h410959 or _theResult___sfd__h410956)
  begin
    case (guard__h400956)
      2'b0, 2'b01:
	  CASE_guard00956_0b0_sfdin10433_BITS_56_TO_34_0_ETC__q40 =
	      sfdin__h410433[56:34];
      2'b10:
	  CASE_guard00956_0b0_sfdin10433_BITS_56_TO_34_0_ETC__q40 =
	      out_sfd__h410959;
      2'b11:
	  CASE_guard00956_0b0_sfdin10433_BITS_56_TO_34_0_ETC__q40 =
	      _theResult___sfd__h410956;
    endcase
  end
  always@(guard__h400956 or sfdin__h410433 or _theResult___sfd__h410956)
  begin
    case (guard__h400956)
      2'b0:
	  CASE_guard00956_0b0_sfdin10433_BITS_56_TO_34_0_ETC__q41 =
	      sfdin__h410433[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard00956_0b0_sfdin10433_BITS_56_TO_34_0_ETC__q41 =
	      _theResult___sfd__h410956;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard00956_0b0_sfdin10433_BITS_56_TO_34_0_ETC__q40 or
	  CASE_guard00956_0b0_sfdin10433_BITS_56_TO_34_0_ETC__q41 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5360 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5362 or
	  sfdin__h410433)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h411034 =
	      CASE_guard00956_0b0_sfdin10433_BITS_56_TO_34_0_ETC__q40;
      3'd1:
	  _theResult___fst_sfd__h411034 =
	      CASE_guard00956_0b0_sfdin10433_BITS_56_TO_34_0_ETC__q41;
      3'd2:
	  _theResult___fst_sfd__h411034 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5360;
      3'd3:
	  _theResult___fst_sfd__h411034 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d5362;
      3'd4: _theResult___fst_sfd__h411034 = sfdin__h410433[56:34];
      default: _theResult___fst_sfd__h411034 = 23'd0;
    endcase
  end
  always@(guard__h411047 or
	  _theResult___snd__h420303 or
	  out_sfd__h420828 or _theResult___sfd__h420825)
  begin
    case (guard__h411047)
      2'b0, 2'b01:
	  CASE_guard11047_0b0_theResult___snd20303_BITS__ETC__q42 =
	      _theResult___snd__h420303[56:34];
      2'b10:
	  CASE_guard11047_0b0_theResult___snd20303_BITS__ETC__q42 =
	      out_sfd__h420828;
      2'b11:
	  CASE_guard11047_0b0_theResult___snd20303_BITS__ETC__q42 =
	      _theResult___sfd__h420825;
    endcase
  end
  always@(guard__h411047 or
	  _theResult___snd__h420303 or _theResult___sfd__h420825)
  begin
    case (guard__h411047)
      2'b0:
	  CASE_guard11047_0b0_theResult___snd20303_BITS__ETC__q43 =
	      _theResult___snd__h420303[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard11047_0b0_theResult___snd20303_BITS__ETC__q43 =
	      _theResult___sfd__h420825;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  CASE_guard11047_0b0_theResult___snd20303_BITS__ETC__q42 or
	  CASE_guard11047_0b0_theResult___snd20303_BITS__ETC__q43 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5379 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5381 or
	  _theResult___snd__h420303)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h420903 =
	      CASE_guard11047_0b0_theResult___snd20303_BITS__ETC__q42;
      3'd1:
	  _theResult___fst_sfd__h420903 =
	      CASE_guard11047_0b0_theResult___snd20303_BITS__ETC__q43;
      3'd2:
	  _theResult___fst_sfd__h420903 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5379;
      3'd3:
	  _theResult___fst_sfd__h420903 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d5381;
      3'd4: _theResult___fst_sfd__h420903 = _theResult___snd__h420303[56:34];
      default: _theResult___fst_sfd__h420903 = 23'd0;
    endcase
  end
  always@(guard__h380829 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h380829)
      2'b0, 2'b01, 2'b10:
	  CASE_guard80829_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q44 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard80829_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q44 =
	      guard__h380829 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard80829_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q44 or
	  guard__h380829)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5467 =
	      CASE_guard80829_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q44;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5467 =
	      (guard__h380829 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		(guard__h380829 == 2'b01 || guard__h380829 == 2'b10 ||
		 guard__h380829 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5467 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5467 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h380829 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h380829)
      2'b0, 2'b01, 2'b10:
	  CASE_guard80829_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q45 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard80829_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q45 =
	      guard__h380829 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard80829_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q45 or
	  guard__h380829)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5411 =
	      CASE_guard80829_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q45;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5411 =
	      (guard__h380829 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		guard__h380829 != 2'b01 && guard__h380829 != 2'b10 &&
		guard__h380829 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5411 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5411 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h390793 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h390793)
      2'b0, 2'b01, 2'b10:
	  CASE_guard90793_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q46 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard90793_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q46 =
	      guard__h390793 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard90793_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q46 or
	  guard__h390793)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5474 =
	      CASE_guard90793_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q46;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5474 =
	      (guard__h390793 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		(guard__h390793 == 2'b01 || guard__h390793 == 2'b10 ||
		 guard__h390793 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5474 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5474 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h390793 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h390793)
      2'b0, 2'b01, 2'b10:
	  CASE_guard90793_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q47 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard90793_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q47 =
	      guard__h390793 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard90793_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q47 or
	  guard__h390793)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5424 =
	      CASE_guard90793_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q47;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5424 =
	      (guard__h390793 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		guard__h390793 != 2'b01 && guard__h390793 != 2'b10 &&
		guard__h390793 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5424 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5424 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h400956 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h400956)
      2'b0, 2'b01, 2'b10:
	  CASE_guard00956_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q48 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard00956_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q48 =
	      guard__h400956 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard00956_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q48 or
	  guard__h400956)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5484 =
	      CASE_guard00956_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q48;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5484 =
	      (guard__h400956 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		(guard__h400956 == 2'b01 || guard__h400956 == 2'b10 ||
		 guard__h400956 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5484 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5484 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h400956 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h400956)
      2'b0, 2'b01, 2'b10:
	  CASE_guard00956_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q49 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard00956_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q49 =
	      guard__h400956 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard00956_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q49 or
	  guard__h400956)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5441 =
	      CASE_guard00956_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q49;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5441 =
	      (guard__h400956 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		guard__h400956 != 2'b01 && guard__h400956 != 2'b10 &&
		guard__h400956 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5441 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5441 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h411047 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h411047)
      2'b0, 2'b01, 2'b10:
	  CASE_guard11047_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q50 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard11047_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q50 =
	      guard__h411047 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard11047_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q50 or
	  guard__h411047)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5491 =
	      CASE_guard11047_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q50;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5491 =
	      (guard__h411047 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		(guard__h411047 == 2'b01 || guard__h411047 == 2'b10 ||
		 guard__h411047 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5491 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5491 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h411047 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (guard__h411047)
      2'b0, 2'b01, 2'b10:
	  CASE_guard11047_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q51 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      2'd3:
	  CASE_guard11047_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q51 =
	      guard__h411047 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get or
	  CASE_guard11047_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q51 or
	  guard__h411047)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5454 =
	      CASE_guard11047_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q51;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5454 =
	      (guard__h411047 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68] :
		guard__h411047 != 2'b01 && guard__h411047 != 2'b10 &&
		guard__h411047 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5454 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5454 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5477 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5477 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5428 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_fmaQ_first_d_ETC___d5428 =
		   coreFix_fpuMulDivExe_0_fpuExec_fmaQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_fma$response_get[68];
    endcase
  end
  always@(guard__h442506 or
	  _theResult___fst_exp__h451787 or
	  out_exp__h452232 or _theResult___exp__h452229)
  begin
    case (guard__h442506)
      2'b0, 2'b01:
	  CASE_guard42506_0b0_theResult___fst_exp51787_0_ETC__q56 =
	      _theResult___fst_exp__h451787;
      2'b10:
	  CASE_guard42506_0b0_theResult___fst_exp51787_0_ETC__q56 =
	      out_exp__h452232;
      2'b11:
	  CASE_guard42506_0b0_theResult___fst_exp51787_0_ETC__q56 =
	      _theResult___exp__h452229;
    endcase
  end
  always@(guard__h442506 or
	  _theResult___fst_exp__h451787 or _theResult___exp__h452229)
  begin
    case (guard__h442506)
      2'b0:
	  CASE_guard42506_0b0_theResult___fst_exp51787_0_ETC__q57 =
	      _theResult___fst_exp__h451787;
      2'b01, 2'b10, 2'b11:
	  CASE_guard42506_0b0_theResult___fst_exp51787_0_ETC__q57 =
	      _theResult___exp__h452229;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard42506_0b0_theResult___fst_exp51787_0_ETC__q56 or
	  CASE_guard42506_0b0_theResult___fst_exp51787_0_ETC__q57 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6281 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6283 or
	  _theResult___fst_exp__h451787)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h452307 =
	      CASE_guard42506_0b0_theResult___fst_exp51787_0_ETC__q56;
      3'd1:
	  _theResult___fst_exp__h452307 =
	      CASE_guard42506_0b0_theResult___fst_exp51787_0_ETC__q57;
      3'd2:
	  _theResult___fst_exp__h452307 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6281;
      3'd3:
	  _theResult___fst_exp__h452307 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6283;
      3'd4: _theResult___fst_exp__h452307 = _theResult___fst_exp__h451787;
      default: _theResult___fst_exp__h452307 = 8'd0;
    endcase
  end
  always@(guard__h432544 or
	  _theResult___fst_exp__h441898 or
	  out_exp__h442417 or _theResult___exp__h442414)
  begin
    case (guard__h432544)
      2'b0, 2'b01:
	  CASE_guard32544_0b0_theResult___fst_exp41898_0_ETC__q58 =
	      _theResult___fst_exp__h441898;
      2'b10:
	  CASE_guard32544_0b0_theResult___fst_exp41898_0_ETC__q58 =
	      out_exp__h442417;
      2'b11:
	  CASE_guard32544_0b0_theResult___fst_exp41898_0_ETC__q58 =
	      _theResult___exp__h442414;
    endcase
  end
  always@(guard__h432544 or
	  _theResult___fst_exp__h441898 or _theResult___exp__h442414)
  begin
    case (guard__h432544)
      2'b0:
	  CASE_guard32544_0b0_theResult___fst_exp41898_0_ETC__q59 =
	      _theResult___fst_exp__h441898;
      2'b01, 2'b10, 2'b11:
	  CASE_guard32544_0b0_theResult___fst_exp41898_0_ETC__q59 =
	      _theResult___exp__h442414;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard32544_0b0_theResult___fst_exp41898_0_ETC__q58 or
	  CASE_guard32544_0b0_theResult___fst_exp41898_0_ETC__q59 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6059 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6062 or
	  _theResult___fst_exp__h441898)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h442492 =
	      CASE_guard32544_0b0_theResult___fst_exp41898_0_ETC__q58;
      3'd1:
	  _theResult___fst_exp__h442492 =
	      CASE_guard32544_0b0_theResult___fst_exp41898_0_ETC__q59;
      3'd2:
	  _theResult___fst_exp__h442492 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6059;
      3'd3:
	  _theResult___fst_exp__h442492 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6062;
      3'd4: _theResult___fst_exp__h442492 = _theResult___fst_exp__h441898;
      default: _theResult___fst_exp__h442492 = 8'd0;
    endcase
  end
  always@(guard__h452669 or
	  _theResult___fst_exp__h462152 or
	  out_exp__h462671 or _theResult___exp__h462668)
  begin
    case (guard__h452669)
      2'b0, 2'b01:
	  CASE_guard52669_0b0_theResult___fst_exp62152_0_ETC__q64 =
	      _theResult___fst_exp__h462152;
      2'b10:
	  CASE_guard52669_0b0_theResult___fst_exp62152_0_ETC__q64 =
	      out_exp__h462671;
      2'b11:
	  CASE_guard52669_0b0_theResult___fst_exp62152_0_ETC__q64 =
	      _theResult___exp__h462668;
    endcase
  end
  always@(guard__h452669 or
	  _theResult___fst_exp__h462152 or _theResult___exp__h462668)
  begin
    case (guard__h452669)
      2'b0:
	  CASE_guard52669_0b0_theResult___fst_exp62152_0_ETC__q65 =
	      _theResult___fst_exp__h462152;
      2'b01, 2'b10, 2'b11:
	  CASE_guard52669_0b0_theResult___fst_exp62152_0_ETC__q65 =
	      _theResult___exp__h462668;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard52669_0b0_theResult___fst_exp62152_0_ETC__q64 or
	  CASE_guard52669_0b0_theResult___fst_exp62152_0_ETC__q65 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6606 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6608 or
	  _theResult___fst_exp__h462152)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h462746 =
	      CASE_guard52669_0b0_theResult___fst_exp62152_0_ETC__q64;
      3'd1:
	  _theResult___fst_exp__h462746 =
	      CASE_guard52669_0b0_theResult___fst_exp62152_0_ETC__q65;
      3'd2:
	  _theResult___fst_exp__h462746 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6606;
      3'd3:
	  _theResult___fst_exp__h462746 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6608;
      3'd4: _theResult___fst_exp__h462746 = _theResult___fst_exp__h462152;
      default: _theResult___fst_exp__h462746 = 8'd0;
    endcase
  end
  always@(guard__h462760 or
	  _theResult___fst_exp__h472070 or
	  out_exp__h472540 or _theResult___exp__h472537)
  begin
    case (guard__h462760)
      2'b0, 2'b01:
	  CASE_guard62760_0b0_theResult___fst_exp72070_0_ETC__q69 =
	      _theResult___fst_exp__h472070;
      2'b10:
	  CASE_guard62760_0b0_theResult___fst_exp72070_0_ETC__q69 =
	      out_exp__h472540;
      2'b11:
	  CASE_guard62760_0b0_theResult___fst_exp72070_0_ETC__q69 =
	      _theResult___exp__h472537;
    endcase
  end
  always@(guard__h462760 or
	  _theResult___fst_exp__h472070 or _theResult___exp__h472537)
  begin
    case (guard__h462760)
      2'b0:
	  CASE_guard62760_0b0_theResult___fst_exp72070_0_ETC__q70 =
	      _theResult___fst_exp__h472070;
      2'b01, 2'b10, 2'b11:
	  CASE_guard62760_0b0_theResult___fst_exp72070_0_ETC__q70 =
	      _theResult___exp__h472537;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard62760_0b0_theResult___fst_exp72070_0_ETC__q69 or
	  CASE_guard62760_0b0_theResult___fst_exp72070_0_ETC__q70 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6675 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6677 or
	  _theResult___fst_exp__h472070)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h472615 =
	      CASE_guard62760_0b0_theResult___fst_exp72070_0_ETC__q69;
      3'd1:
	  _theResult___fst_exp__h472615 =
	      CASE_guard62760_0b0_theResult___fst_exp72070_0_ETC__q70;
      3'd2:
	  _theResult___fst_exp__h472615 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6675;
      3'd3:
	  _theResult___fst_exp__h472615 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6677;
      3'd4: _theResult___fst_exp__h472615 = _theResult___fst_exp__h472070;
      default: _theResult___fst_exp__h472615 = 8'd0;
    endcase
  end
  always@(guard__h442506 or
	  _theResult___snd__h451738 or
	  out_sfd__h452233 or _theResult___sfd__h452230)
  begin
    case (guard__h442506)
      2'b0, 2'b01:
	  CASE_guard42506_0b0_theResult___snd51738_BITS__ETC__q71 =
	      _theResult___snd__h451738[56:34];
      2'b10:
	  CASE_guard42506_0b0_theResult___snd51738_BITS__ETC__q71 =
	      out_sfd__h452233;
      2'b11:
	  CASE_guard42506_0b0_theResult___snd51738_BITS__ETC__q71 =
	      _theResult___sfd__h452230;
    endcase
  end
  always@(guard__h442506 or
	  _theResult___snd__h451738 or _theResult___sfd__h452230)
  begin
    case (guard__h442506)
      2'b0:
	  CASE_guard42506_0b0_theResult___snd51738_BITS__ETC__q72 =
	      _theResult___snd__h451738[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard42506_0b0_theResult___snd51738_BITS__ETC__q72 =
	      _theResult___sfd__h452230;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard42506_0b0_theResult___snd51738_BITS__ETC__q71 or
	  CASE_guard42506_0b0_theResult___snd51738_BITS__ETC__q72 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6725 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6727 or
	  _theResult___snd__h451738)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h452308 =
	      CASE_guard42506_0b0_theResult___snd51738_BITS__ETC__q71;
      3'd1:
	  _theResult___fst_sfd__h452308 =
	      CASE_guard42506_0b0_theResult___snd51738_BITS__ETC__q72;
      3'd2:
	  _theResult___fst_sfd__h452308 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6725;
      3'd3:
	  _theResult___fst_sfd__h452308 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6727;
      3'd4: _theResult___fst_sfd__h452308 = _theResult___snd__h451738[56:34];
      default: _theResult___fst_sfd__h452308 = 23'd0;
    endcase
  end
  always@(guard__h432544 or
	  sfdin__h441892 or out_sfd__h442418 or _theResult___sfd__h442415)
  begin
    case (guard__h432544)
      2'b0, 2'b01:
	  CASE_guard32544_0b0_sfdin41892_BITS_56_TO_34_0_ETC__q73 =
	      sfdin__h441892[56:34];
      2'b10:
	  CASE_guard32544_0b0_sfdin41892_BITS_56_TO_34_0_ETC__q73 =
	      out_sfd__h442418;
      2'b11:
	  CASE_guard32544_0b0_sfdin41892_BITS_56_TO_34_0_ETC__q73 =
	      _theResult___sfd__h442415;
    endcase
  end
  always@(guard__h432544 or sfdin__h441892 or _theResult___sfd__h442415)
  begin
    case (guard__h432544)
      2'b0:
	  CASE_guard32544_0b0_sfdin41892_BITS_56_TO_34_0_ETC__q74 =
	      sfdin__h441892[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard32544_0b0_sfdin41892_BITS_56_TO_34_0_ETC__q74 =
	      _theResult___sfd__h442415;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard32544_0b0_sfdin41892_BITS_56_TO_34_0_ETC__q73 or
	  CASE_guard32544_0b0_sfdin41892_BITS_56_TO_34_0_ETC__q74 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6706 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6708 or
	  sfdin__h441892)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h442493 =
	      CASE_guard32544_0b0_sfdin41892_BITS_56_TO_34_0_ETC__q73;
      3'd1:
	  _theResult___fst_sfd__h442493 =
	      CASE_guard32544_0b0_sfdin41892_BITS_56_TO_34_0_ETC__q74;
      3'd2:
	  _theResult___fst_sfd__h442493 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6706;
      3'd3:
	  _theResult___fst_sfd__h442493 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d6708;
      3'd4: _theResult___fst_sfd__h442493 = sfdin__h441892[56:34];
      default: _theResult___fst_sfd__h442493 = 23'd0;
    endcase
  end
  always@(guard__h452669 or
	  sfdin__h462146 or out_sfd__h462672 or _theResult___sfd__h462669)
  begin
    case (guard__h452669)
      2'b0, 2'b01:
	  CASE_guard52669_0b0_sfdin62146_BITS_56_TO_34_0_ETC__q75 =
	      sfdin__h462146[56:34];
      2'b10:
	  CASE_guard52669_0b0_sfdin62146_BITS_56_TO_34_0_ETC__q75 =
	      out_sfd__h462672;
      2'b11:
	  CASE_guard52669_0b0_sfdin62146_BITS_56_TO_34_0_ETC__q75 =
	      _theResult___sfd__h462669;
    endcase
  end
  always@(guard__h452669 or sfdin__h462146 or _theResult___sfd__h462669)
  begin
    case (guard__h452669)
      2'b0:
	  CASE_guard52669_0b0_sfdin62146_BITS_56_TO_34_0_ETC__q76 =
	      sfdin__h462146[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard52669_0b0_sfdin62146_BITS_56_TO_34_0_ETC__q76 =
	      _theResult___sfd__h462669;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard52669_0b0_sfdin62146_BITS_56_TO_34_0_ETC__q75 or
	  CASE_guard52669_0b0_sfdin62146_BITS_56_TO_34_0_ETC__q76 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6752 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6754 or
	  sfdin__h462146)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h462747 =
	      CASE_guard52669_0b0_sfdin62146_BITS_56_TO_34_0_ETC__q75;
      3'd1:
	  _theResult___fst_sfd__h462747 =
	      CASE_guard52669_0b0_sfdin62146_BITS_56_TO_34_0_ETC__q76;
      3'd2:
	  _theResult___fst_sfd__h462747 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6752;
      3'd3:
	  _theResult___fst_sfd__h462747 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d6754;
      3'd4: _theResult___fst_sfd__h462747 = sfdin__h462146[56:34];
      default: _theResult___fst_sfd__h462747 = 23'd0;
    endcase
  end
  always@(guard__h462760 or
	  _theResult___snd__h472016 or
	  out_sfd__h472541 or _theResult___sfd__h472538)
  begin
    case (guard__h462760)
      2'b0, 2'b01:
	  CASE_guard62760_0b0_theResult___snd72016_BITS__ETC__q77 =
	      _theResult___snd__h472016[56:34];
      2'b10:
	  CASE_guard62760_0b0_theResult___snd72016_BITS__ETC__q77 =
	      out_sfd__h472541;
      2'b11:
	  CASE_guard62760_0b0_theResult___snd72016_BITS__ETC__q77 =
	      _theResult___sfd__h472538;
    endcase
  end
  always@(guard__h462760 or
	  _theResult___snd__h472016 or _theResult___sfd__h472538)
  begin
    case (guard__h462760)
      2'b0:
	  CASE_guard62760_0b0_theResult___snd72016_BITS__ETC__q78 =
	      _theResult___snd__h472016[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard62760_0b0_theResult___snd72016_BITS__ETC__q78 =
	      _theResult___sfd__h472538;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  CASE_guard62760_0b0_theResult___snd72016_BITS__ETC__q77 or
	  CASE_guard62760_0b0_theResult___snd72016_BITS__ETC__q78 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6771 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6773 or
	  _theResult___snd__h472016)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h472616 =
	      CASE_guard62760_0b0_theResult___snd72016_BITS__ETC__q77;
      3'd1:
	  _theResult___fst_sfd__h472616 =
	      CASE_guard62760_0b0_theResult___snd72016_BITS__ETC__q78;
      3'd2:
	  _theResult___fst_sfd__h472616 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6771;
      3'd3:
	  _theResult___fst_sfd__h472616 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d6773;
      3'd4: _theResult___fst_sfd__h472616 = _theResult___snd__h472016[56:34];
      default: _theResult___fst_sfd__h472616 = 23'd0;
    endcase
  end
  always@(guard__h432544 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h432544)
      2'b0, 2'b01, 2'b10:
	  CASE_guard32544_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q79 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard32544_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q79 =
	      guard__h432544 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard32544_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q79 or
	  guard__h432544)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6859 =
	      CASE_guard32544_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q79;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6859 =
	      (guard__h432544 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		(guard__h432544 == 2'b01 || guard__h432544 == 2'b10 ||
		 guard__h432544 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6859 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6859 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h432544 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h432544)
      2'b0, 2'b01, 2'b10:
	  CASE_guard32544_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q80 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard32544_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q80 =
	      guard__h432544 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard32544_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q80 or
	  guard__h432544)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6803 =
	      CASE_guard32544_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q80;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6803 =
	      (guard__h432544 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		guard__h432544 != 2'b01 && guard__h432544 != 2'b10 &&
		guard__h432544 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6803 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6803 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h442506 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h442506)
      2'b0, 2'b01, 2'b10:
	  CASE_guard42506_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q81 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard42506_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q81 =
	      guard__h442506 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard42506_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q81 or
	  guard__h442506)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6866 =
	      CASE_guard42506_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q81;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6866 =
	      (guard__h442506 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		(guard__h442506 == 2'b01 || guard__h442506 == 2'b10 ||
		 guard__h442506 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6866 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6866 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h442506 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h442506)
      2'b0, 2'b01, 2'b10:
	  CASE_guard42506_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q82 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard42506_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q82 =
	      guard__h442506 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard42506_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q82 or
	  guard__h442506)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6816 =
	      CASE_guard42506_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q82;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6816 =
	      (guard__h442506 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		guard__h442506 != 2'b01 && guard__h442506 != 2'b10 &&
		guard__h442506 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6816 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6816 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h452669 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h452669)
      2'b0, 2'b01, 2'b10:
	  CASE_guard52669_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q83 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard52669_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q83 =
	      guard__h452669 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard52669_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q83 or
	  guard__h452669)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6876 =
	      CASE_guard52669_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q83;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6876 =
	      (guard__h452669 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		(guard__h452669 == 2'b01 || guard__h452669 == 2'b10 ||
		 guard__h452669 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6876 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6876 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h452669 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h452669)
      2'b0, 2'b01, 2'b10:
	  CASE_guard52669_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q84 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard52669_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q84 =
	      guard__h452669 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard52669_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q84 or
	  guard__h452669)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6833 =
	      CASE_guard52669_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q84;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6833 =
	      (guard__h452669 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		guard__h452669 != 2'b01 && guard__h452669 != 2'b10 &&
		guard__h452669 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6833 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6833 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h462760 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h462760)
      2'b0, 2'b01, 2'b10:
	  CASE_guard62760_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q85 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard62760_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q85 =
	      guard__h462760 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard62760_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q85 or
	  guard__h462760)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6883 =
	      CASE_guard62760_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q85;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6883 =
	      (guard__h462760 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		(guard__h462760 == 2'b01 || guard__h462760 == 2'b10 ||
		 guard__h462760 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6883 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6883 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h462760 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (guard__h462760)
      2'b0, 2'b01, 2'b10:
	  CASE_guard62760_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q86 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      2'd3:
	  CASE_guard62760_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q86 =
	      guard__h462760 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get or
	  CASE_guard62760_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q86 or
	  guard__h462760)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6846 =
	      CASE_guard62760_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q86;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6846 =
	      (guard__h462760 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68] :
		guard__h462760 != 2'b01 && guard__h462760 != 2'b10 &&
		guard__h462760 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6846 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6846 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6869 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6869 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6820 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_divQ_first_d_ETC___d6820 =
		   coreFix_fpuMulDivExe_0_fpuExec_divQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_div$response_get[68];
    endcase
  end
  always@(guard__h494217 or
	  _theResult___fst_exp__h503498 or
	  out_exp__h503943 or _theResult___exp__h503940)
  begin
    case (guard__h494217)
      2'b0, 2'b01:
	  CASE_guard94217_0b0_theResult___fst_exp03498_0_ETC__q91 =
	      _theResult___fst_exp__h503498;
      2'b10:
	  CASE_guard94217_0b0_theResult___fst_exp03498_0_ETC__q91 =
	      out_exp__h503943;
      2'b11:
	  CASE_guard94217_0b0_theResult___fst_exp03498_0_ETC__q91 =
	      _theResult___exp__h503940;
    endcase
  end
  always@(guard__h494217 or
	  _theResult___fst_exp__h503498 or _theResult___exp__h503940)
  begin
    case (guard__h494217)
      2'b0:
	  CASE_guard94217_0b0_theResult___fst_exp03498_0_ETC__q92 =
	      _theResult___fst_exp__h503498;
      2'b01, 2'b10, 2'b11:
	  CASE_guard94217_0b0_theResult___fst_exp03498_0_ETC__q92 =
	      _theResult___exp__h503940;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard94217_0b0_theResult___fst_exp03498_0_ETC__q91 or
	  CASE_guard94217_0b0_theResult___fst_exp03498_0_ETC__q92 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7673 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7675 or
	  _theResult___fst_exp__h503498)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h504018 =
	      CASE_guard94217_0b0_theResult___fst_exp03498_0_ETC__q91;
      3'd1:
	  _theResult___fst_exp__h504018 =
	      CASE_guard94217_0b0_theResult___fst_exp03498_0_ETC__q92;
      3'd2:
	  _theResult___fst_exp__h504018 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7673;
      3'd3:
	  _theResult___fst_exp__h504018 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d7675;
      3'd4: _theResult___fst_exp__h504018 = _theResult___fst_exp__h503498;
      default: _theResult___fst_exp__h504018 = 8'd0;
    endcase
  end
  always@(guard__h484255 or
	  _theResult___fst_exp__h493609 or
	  out_exp__h494128 or _theResult___exp__h494125)
  begin
    case (guard__h484255)
      2'b0, 2'b01:
	  CASE_guard84255_0b0_theResult___fst_exp93609_0_ETC__q93 =
	      _theResult___fst_exp__h493609;
      2'b10:
	  CASE_guard84255_0b0_theResult___fst_exp93609_0_ETC__q93 =
	      out_exp__h494128;
      2'b11:
	  CASE_guard84255_0b0_theResult___fst_exp93609_0_ETC__q93 =
	      _theResult___exp__h494125;
    endcase
  end
  always@(guard__h484255 or
	  _theResult___fst_exp__h493609 or _theResult___exp__h494125)
  begin
    case (guard__h484255)
      2'b0:
	  CASE_guard84255_0b0_theResult___fst_exp93609_0_ETC__q94 =
	      _theResult___fst_exp__h493609;
      2'b01, 2'b10, 2'b11:
	  CASE_guard84255_0b0_theResult___fst_exp93609_0_ETC__q94 =
	      _theResult___exp__h494125;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard84255_0b0_theResult___fst_exp93609_0_ETC__q93 or
	  CASE_guard84255_0b0_theResult___fst_exp93609_0_ETC__q94 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7451 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7454 or
	  _theResult___fst_exp__h493609)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h494203 =
	      CASE_guard84255_0b0_theResult___fst_exp93609_0_ETC__q93;
      3'd1:
	  _theResult___fst_exp__h494203 =
	      CASE_guard84255_0b0_theResult___fst_exp93609_0_ETC__q94;
      3'd2:
	  _theResult___fst_exp__h494203 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7451;
      3'd3:
	  _theResult___fst_exp__h494203 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d7454;
      3'd4: _theResult___fst_exp__h494203 = _theResult___fst_exp__h493609;
      default: _theResult___fst_exp__h494203 = 8'd0;
    endcase
  end
  always@(guard__h504380 or
	  _theResult___fst_exp__h513863 or
	  out_exp__h514382 or _theResult___exp__h514379)
  begin
    case (guard__h504380)
      2'b0, 2'b01:
	  CASE_guard04380_0b0_theResult___fst_exp13863_0_ETC__q99 =
	      _theResult___fst_exp__h513863;
      2'b10:
	  CASE_guard04380_0b0_theResult___fst_exp13863_0_ETC__q99 =
	      out_exp__h514382;
      2'b11:
	  CASE_guard04380_0b0_theResult___fst_exp13863_0_ETC__q99 =
	      _theResult___exp__h514379;
    endcase
  end
  always@(guard__h504380 or
	  _theResult___fst_exp__h513863 or _theResult___exp__h514379)
  begin
    case (guard__h504380)
      2'b0:
	  CASE_guard04380_0b0_theResult___fst_exp13863_0_ETC__q100 =
	      _theResult___fst_exp__h513863;
      2'b01, 2'b10, 2'b11:
	  CASE_guard04380_0b0_theResult___fst_exp13863_0_ETC__q100 =
	      _theResult___exp__h514379;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard04380_0b0_theResult___fst_exp13863_0_ETC__q99 or
	  CASE_guard04380_0b0_theResult___fst_exp13863_0_ETC__q100 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7998 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d8000 or
	  _theResult___fst_exp__h513863)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h514457 =
	      CASE_guard04380_0b0_theResult___fst_exp13863_0_ETC__q99;
      3'd1:
	  _theResult___fst_exp__h514457 =
	      CASE_guard04380_0b0_theResult___fst_exp13863_0_ETC__q100;
      3'd2:
	  _theResult___fst_exp__h514457 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d7998;
      3'd3:
	  _theResult___fst_exp__h514457 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d8000;
      3'd4: _theResult___fst_exp__h514457 = _theResult___fst_exp__h513863;
      default: _theResult___fst_exp__h514457 = 8'd0;
    endcase
  end
  always@(guard__h514471 or
	  _theResult___fst_exp__h523781 or
	  out_exp__h524251 or _theResult___exp__h524248)
  begin
    case (guard__h514471)
      2'b0, 2'b01:
	  CASE_guard14471_0b0_theResult___fst_exp23781_0_ETC__q104 =
	      _theResult___fst_exp__h523781;
      2'b10:
	  CASE_guard14471_0b0_theResult___fst_exp23781_0_ETC__q104 =
	      out_exp__h524251;
      2'b11:
	  CASE_guard14471_0b0_theResult___fst_exp23781_0_ETC__q104 =
	      _theResult___exp__h524248;
    endcase
  end
  always@(guard__h514471 or
	  _theResult___fst_exp__h523781 or _theResult___exp__h524248)
  begin
    case (guard__h514471)
      2'b0:
	  CASE_guard14471_0b0_theResult___fst_exp23781_0_ETC__q105 =
	      _theResult___fst_exp__h523781;
      2'b01, 2'b10, 2'b11:
	  CASE_guard14471_0b0_theResult___fst_exp23781_0_ETC__q105 =
	      _theResult___exp__h524248;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard14471_0b0_theResult___fst_exp23781_0_ETC__q104 or
	  CASE_guard14471_0b0_theResult___fst_exp23781_0_ETC__q105 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8067 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8069 or
	  _theResult___fst_exp__h523781)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  _theResult___fst_exp__h524326 =
	      CASE_guard14471_0b0_theResult___fst_exp23781_0_ETC__q104;
      3'd1:
	  _theResult___fst_exp__h524326 =
	      CASE_guard14471_0b0_theResult___fst_exp23781_0_ETC__q105;
      3'd2:
	  _theResult___fst_exp__h524326 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8067;
      3'd3:
	  _theResult___fst_exp__h524326 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8069;
      3'd4: _theResult___fst_exp__h524326 = _theResult___fst_exp__h523781;
      default: _theResult___fst_exp__h524326 = 8'd0;
    endcase
  end
  always@(guard__h494217 or
	  _theResult___snd__h503449 or
	  out_sfd__h503944 or _theResult___sfd__h503941)
  begin
    case (guard__h494217)
      2'b0, 2'b01:
	  CASE_guard94217_0b0_theResult___snd03449_BITS__ETC__q106 =
	      _theResult___snd__h503449[56:34];
      2'b10:
	  CASE_guard94217_0b0_theResult___snd03449_BITS__ETC__q106 =
	      out_sfd__h503944;
      2'b11:
	  CASE_guard94217_0b0_theResult___snd03449_BITS__ETC__q106 =
	      _theResult___sfd__h503941;
    endcase
  end
  always@(guard__h494217 or
	  _theResult___snd__h503449 or _theResult___sfd__h503941)
  begin
    case (guard__h494217)
      2'b0:
	  CASE_guard94217_0b0_theResult___snd03449_BITS__ETC__q107 =
	      _theResult___snd__h503449[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard94217_0b0_theResult___snd03449_BITS__ETC__q107 =
	      _theResult___sfd__h503941;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard94217_0b0_theResult___snd03449_BITS__ETC__q106 or
	  CASE_guard94217_0b0_theResult___snd03449_BITS__ETC__q107 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8117 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8119 or
	  _theResult___snd__h503449)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h504019 =
	      CASE_guard94217_0b0_theResult___snd03449_BITS__ETC__q106;
      3'd1:
	  _theResult___fst_sfd__h504019 =
	      CASE_guard94217_0b0_theResult___snd03449_BITS__ETC__q107;
      3'd2:
	  _theResult___fst_sfd__h504019 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8117;
      3'd3:
	  _theResult___fst_sfd__h504019 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8119;
      3'd4: _theResult___fst_sfd__h504019 = _theResult___snd__h503449[56:34];
      default: _theResult___fst_sfd__h504019 = 23'd0;
    endcase
  end
  always@(guard__h484255 or
	  sfdin__h493603 or out_sfd__h494129 or _theResult___sfd__h494126)
  begin
    case (guard__h484255)
      2'b0, 2'b01:
	  CASE_guard84255_0b0_sfdin93603_BITS_56_TO_34_0_ETC__q108 =
	      sfdin__h493603[56:34];
      2'b10:
	  CASE_guard84255_0b0_sfdin93603_BITS_56_TO_34_0_ETC__q108 =
	      out_sfd__h494129;
      2'b11:
	  CASE_guard84255_0b0_sfdin93603_BITS_56_TO_34_0_ETC__q108 =
	      _theResult___sfd__h494126;
    endcase
  end
  always@(guard__h484255 or sfdin__h493603 or _theResult___sfd__h494126)
  begin
    case (guard__h484255)
      2'b0:
	  CASE_guard84255_0b0_sfdin93603_BITS_56_TO_34_0_ETC__q109 =
	      sfdin__h493603[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard84255_0b0_sfdin93603_BITS_56_TO_34_0_ETC__q109 =
	      _theResult___sfd__h494126;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard84255_0b0_sfdin93603_BITS_56_TO_34_0_ETC__q108 or
	  CASE_guard84255_0b0_sfdin93603_BITS_56_TO_34_0_ETC__q109 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d8098 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d8100 or
	  sfdin__h493603)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h494204 =
	      CASE_guard84255_0b0_sfdin93603_BITS_56_TO_34_0_ETC__q108;
      3'd1:
	  _theResult___fst_sfd__h494204 =
	      CASE_guard84255_0b0_sfdin93603_BITS_56_TO_34_0_ETC__q109;
      3'd2:
	  _theResult___fst_sfd__h494204 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d8098;
      3'd3:
	  _theResult___fst_sfd__h494204 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_coreFix_fpuMulDivEx_ETC___d8100;
      3'd4: _theResult___fst_sfd__h494204 = sfdin__h493603[56:34];
      default: _theResult___fst_sfd__h494204 = 23'd0;
    endcase
  end
  always@(guard__h504380 or
	  sfdin__h513857 or out_sfd__h514383 or _theResult___sfd__h514380)
  begin
    case (guard__h504380)
      2'b0, 2'b01:
	  CASE_guard04380_0b0_sfdin13857_BITS_56_TO_34_0_ETC__q110 =
	      sfdin__h513857[56:34];
      2'b10:
	  CASE_guard04380_0b0_sfdin13857_BITS_56_TO_34_0_ETC__q110 =
	      out_sfd__h514383;
      2'b11:
	  CASE_guard04380_0b0_sfdin13857_BITS_56_TO_34_0_ETC__q110 =
	      _theResult___sfd__h514380;
    endcase
  end
  always@(guard__h504380 or sfdin__h513857 or _theResult___sfd__h514380)
  begin
    case (guard__h504380)
      2'b0:
	  CASE_guard04380_0b0_sfdin13857_BITS_56_TO_34_0_ETC__q111 =
	      sfdin__h513857[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard04380_0b0_sfdin13857_BITS_56_TO_34_0_ETC__q111 =
	      _theResult___sfd__h514380;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard04380_0b0_sfdin13857_BITS_56_TO_34_0_ETC__q110 or
	  CASE_guard04380_0b0_sfdin13857_BITS_56_TO_34_0_ETC__q111 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d8144 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d8146 or
	  sfdin__h513857)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h514458 =
	      CASE_guard04380_0b0_sfdin13857_BITS_56_TO_34_0_ETC__q110;
      3'd1:
	  _theResult___fst_sfd__h514458 =
	      CASE_guard04380_0b0_sfdin13857_BITS_56_TO_34_0_ETC__q111;
      3'd2:
	  _theResult___fst_sfd__h514458 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d8144;
      3'd3:
	  _theResult___fst_sfd__h514458 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_coreFix_fpuMulDivE_ETC___d8146;
      3'd4: _theResult___fst_sfd__h514458 = sfdin__h513857[56:34];
      default: _theResult___fst_sfd__h514458 = 23'd0;
    endcase
  end
  always@(guard__h514471 or
	  _theResult___snd__h523727 or
	  out_sfd__h524252 or _theResult___sfd__h524249)
  begin
    case (guard__h514471)
      2'b0, 2'b01:
	  CASE_guard14471_0b0_theResult___snd23727_BITS__ETC__q112 =
	      _theResult___snd__h523727[56:34];
      2'b10:
	  CASE_guard14471_0b0_theResult___snd23727_BITS__ETC__q112 =
	      out_sfd__h524252;
      2'b11:
	  CASE_guard14471_0b0_theResult___snd23727_BITS__ETC__q112 =
	      _theResult___sfd__h524249;
    endcase
  end
  always@(guard__h514471 or
	  _theResult___snd__h523727 or _theResult___sfd__h524249)
  begin
    case (guard__h514471)
      2'b0:
	  CASE_guard14471_0b0_theResult___snd23727_BITS__ETC__q113 =
	      _theResult___snd__h523727[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard14471_0b0_theResult___snd23727_BITS__ETC__q113 =
	      _theResult___sfd__h524249;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  CASE_guard14471_0b0_theResult___snd23727_BITS__ETC__q112 or
	  CASE_guard14471_0b0_theResult___snd23727_BITS__ETC__q113 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8163 or
	  IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8165 or
	  _theResult___snd__h523727)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  _theResult___fst_sfd__h524327 =
	      CASE_guard14471_0b0_theResult___snd23727_BITS__ETC__q112;
      3'd1:
	  _theResult___fst_sfd__h524327 =
	      CASE_guard14471_0b0_theResult___snd23727_BITS__ETC__q113;
      3'd2:
	  _theResult___fst_sfd__h524327 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8163;
      3'd3:
	  _theResult___fst_sfd__h524327 =
	      IF_IF_IF_coreFix_fpuMulDivExe_0_fpuExec_double_ETC___d8165;
      3'd4: _theResult___fst_sfd__h524327 = _theResult___snd__h523727[56:34];
      default: _theResult___fst_sfd__h524327 = 23'd0;
    endcase
  end
  always@(guard__h484255 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h484255)
      2'b0, 2'b01, 2'b10:
	  CASE_guard84255_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q114 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard84255_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q114 =
	      guard__h484255 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard84255_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q114 or
	  guard__h484255)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8251 =
	      CASE_guard84255_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q114;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8251 =
	      (guard__h484255 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		(guard__h484255 == 2'b01 || guard__h484255 == 2'b10 ||
		 guard__h484255 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8251 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8251 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h484255 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h484255)
      2'b0, 2'b01, 2'b10:
	  CASE_guard84255_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q115 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard84255_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q115 =
	      guard__h484255 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard84255_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q115 or
	  guard__h484255)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8195 =
	      CASE_guard84255_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q115;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8195 =
	      (guard__h484255 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		guard__h484255 != 2'b01 && guard__h484255 != 2'b10 &&
		guard__h484255 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8195 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8195 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h494217 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h494217)
      2'b0, 2'b01, 2'b10:
	  CASE_guard94217_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q116 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard94217_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q116 =
	      guard__h494217 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard94217_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q116 or
	  guard__h494217)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8258 =
	      CASE_guard94217_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q116;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8258 =
	      (guard__h494217 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		(guard__h494217 == 2'b01 || guard__h494217 == 2'b10 ||
		 guard__h494217 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8258 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8258 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h494217 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h494217)
      2'b0, 2'b01, 2'b10:
	  CASE_guard94217_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q117 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard94217_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q117 =
	      guard__h494217 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard94217_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q117 or
	  guard__h494217)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8208 =
	      CASE_guard94217_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q117;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8208 =
	      (guard__h494217 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		guard__h494217 != 2'b01 && guard__h494217 != 2'b10 &&
		guard__h494217 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8208 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8208 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h504380 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h504380)
      2'b0, 2'b01, 2'b10:
	  CASE_guard04380_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q118 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard04380_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q118 =
	      guard__h504380 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard04380_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q118 or
	  guard__h504380)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8268 =
	      CASE_guard04380_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q118;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8268 =
	      (guard__h504380 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		(guard__h504380 == 2'b01 || guard__h504380 == 2'b10 ||
		 guard__h504380 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8268 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8268 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h514471 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h514471)
      2'b0, 2'b01, 2'b10:
	  CASE_guard14471_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q119 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard14471_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q119 =
	      guard__h514471 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard14471_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q119 or
	  guard__h514471)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8275 =
	      CASE_guard14471_0b0_coreFix_fpuMulDivExe_0_fpu_ETC__q119;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8275 =
	      (guard__h514471 == 2'b0) ?
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		(guard__h514471 == 2'b01 || guard__h514471 == 2'b10 ||
		 guard__h514471 == 2'b11) &&
		coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8275 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8275 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h504380 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h504380)
      2'b0, 2'b01, 2'b10:
	  CASE_guard04380_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q120 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard04380_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q120 =
	      guard__h504380 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard04380_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q120 or
	  guard__h504380)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8225 =
	      CASE_guard04380_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q120;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8225 =
	      (guard__h504380 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		guard__h504380 != 2'b01 && guard__h504380 != 2'b10 &&
		guard__h504380 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8225 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8225 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(guard__h514471 or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (guard__h514471)
      2'b0, 2'b01, 2'b10:
	  CASE_guard14471_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q121 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      2'd3:
	  CASE_guard14471_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q121 =
	      guard__h514471 != 2'b11 ||
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get or
	  CASE_guard14471_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q121 or
	  guard__h514471)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8238 =
	      CASE_guard14471_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q121;
      3'd1:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8238 =
	      (guard__h514471 == 2'b0) ?
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68] :
		guard__h514471 != 2'b01 && guard__h514471 != 2'b10 &&
		guard__h514471 != 2'b11 ||
		!coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8238 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8238 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8261 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8261 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] ==
		   3'd4 &&
		   coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get)
  begin
    case (coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8212 =
	      !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
      default: IF_coreFix_fpuMulDivExe_0_fpuExec_sqrtQ_first__ETC___d8212 =
		   coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$first_data[42:40] !=
		   3'd4 ||
		   !coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$response_get[68];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_request_put or
	  coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_request_put or
	  coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_request_put)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1, 5'd2, 5'd25, 5'd26, 5'd27:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8699 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_request_put;
      5'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8699 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_div$RDY_request_put;
      5'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8699 =
	      coreFix_fpuMulDivExe_0_fpuExec_double_sqrt$RDY_request_put;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8699 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[233:229] != 5'd28 ||
		   coreFix_fpuMulDivExe_0_fpuExec_double_fma$RDY_request_put;
    endcase
  end
  always@(guard__h547929 or
	  _theResult___fst_exp__h557123 or _theResult___exp__h557778)
  begin
    case (guard__h547929)
      2'b0:
	  CASE_guard47929_0b0_theResult___fst_exp57123_0_ETC__q131 =
	      _theResult___fst_exp__h557123;
      2'b01, 2'b10, 2'b11:
	  CASE_guard47929_0b0_theResult___fst_exp57123_0_ETC__q131 =
	      _theResult___exp__h557778;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h557123 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9320 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9318 or
	  CASE_guard47929_0b0_theResult___fst_exp57123_0_ETC__q131)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9324 =
	      _theResult___fst_exp__h557123;
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9324 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9320;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9324 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9318;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9324 =
	      CASE_guard47929_0b0_theResult___fst_exp57123_0_ETC__q131;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9324 =
		   11'd0;
    endcase
  end
  always@(guard__h547929 or
	  _theResult___fst_exp__h557123 or
	  out_exp__h557781 or _theResult___exp__h557778)
  begin
    case (guard__h547929)
      2'b0, 2'b01:
	  CASE_guard47929_0b0_theResult___fst_exp57123_0_ETC__q132 =
	      _theResult___fst_exp__h557123;
      2'b10:
	  CASE_guard47929_0b0_theResult___fst_exp57123_0_ETC__q132 =
	      out_exp__h557781;
      2'b11:
	  CASE_guard47929_0b0_theResult___fst_exp57123_0_ETC__q132 =
	      _theResult___exp__h557778;
    endcase
  end
  always@(guard__h547929 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h547929)
      2'b0, 2'b01, 2'b10:
	  CASE_guard47929_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q133 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      2'd3:
	  CASE_guard47929_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q133 =
	      guard__h547929 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h547929)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q134 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q134 =
	      (guard__h547929 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[171] :
		(guard__h547929 == 2'b01 || guard__h547929 == 2'b10 ||
		 guard__h547929 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q134 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[171];
    endcase
  end
  always@(guard__h558474 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h558474)
      2'b0, 2'b01, 2'b10:
	  CASE_guard58474_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q135 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      2'd3:
	  CASE_guard58474_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q135 =
	      guard__h558474 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h558474)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q136 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q136 =
	      (guard__h558474 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[171] :
		(guard__h558474 == 2'b01 || guard__h558474 == 2'b10 ||
		 guard__h558474 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q136 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[171];
    endcase
  end
  always@(guard__h568798 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h568798)
      2'b0, 2'b01, 2'b10:
	  CASE_guard68798_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q137 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      2'd3:
	  CASE_guard68798_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q137 =
	      guard__h568798 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h568798)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q138 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q138 =
	      (guard__h568798 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[171] :
		(guard__h568798 == 2'b01 || guard__h568798 == 2'b10 ||
		 guard__h568798 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[171];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q138 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[203:172] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[171];
    endcase
  end
  always@(guard__h634512 or
	  _theResult___fst_exp__h643706 or _theResult___exp__h644361)
  begin
    case (guard__h634512)
      2'b0:
	  CASE_guard34512_0b0_theResult___fst_exp43706_0_ETC__q148 =
	      _theResult___fst_exp__h643706;
      2'b01, 2'b10, 2'b11:
	  CASE_guard34512_0b0_theResult___fst_exp43706_0_ETC__q148 =
	      _theResult___exp__h644361;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h643706 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10035 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10033 or
	  CASE_guard34512_0b0_theResult___fst_exp43706_0_ETC__q148)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10039 =
	      _theResult___fst_exp__h643706;
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10039 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10035;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10039 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10033;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10039 =
	      CASE_guard34512_0b0_theResult___fst_exp43706_0_ETC__q148;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10039 =
		   11'd0;
    endcase
  end
  always@(guard__h634512 or
	  _theResult___fst_exp__h643706 or
	  out_exp__h644364 or _theResult___exp__h644361)
  begin
    case (guard__h634512)
      2'b0, 2'b01:
	  CASE_guard34512_0b0_theResult___fst_exp43706_0_ETC__q149 =
	      _theResult___fst_exp__h643706;
      2'b10:
	  CASE_guard34512_0b0_theResult___fst_exp43706_0_ETC__q149 =
	      out_exp__h644364;
      2'b11:
	  CASE_guard34512_0b0_theResult___fst_exp43706_0_ETC__q149 =
	      _theResult___exp__h644361;
    endcase
  end
  always@(guard__h634512 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h634512)
      2'b0, 2'b01, 2'b10:
	  CASE_guard34512_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q150 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      2'd3:
	  CASE_guard34512_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q150 =
	      guard__h634512 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h634512)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q151 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q151 =
	      (guard__h634512 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
		(guard__h634512 == 2'b01 || guard__h634512 == 2'b10 ||
		 guard__h634512 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q151 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(guard__h645057 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h645057)
      2'b0, 2'b01, 2'b10:
	  CASE_guard45057_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q152 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      2'd3:
	  CASE_guard45057_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q152 =
	      guard__h645057 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h645057)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q153 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q153 =
	      (guard__h645057 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
		(guard__h645057 == 2'b01 || guard__h645057 == 2'b10 ||
		 guard__h645057 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q153 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(guard__h655381 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h655381)
      2'b0, 2'b01, 2'b10:
	  CASE_guard55381_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q154 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      2'd3:
	  CASE_guard55381_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q154 =
	      guard__h655381 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h655381)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q155 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] == 32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q155 =
	      (guard__h655381 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
		(guard__h655381 == 2'b01 || guard__h655381 == 2'b10 ||
		 guard__h655381 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q155 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(guard__h645057 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h645057)
      2'b0, 2'b01, 2'b10:
	  CASE_guard45057_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q156 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      2'd3:
	  CASE_guard45057_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q156 =
	      guard__h645057 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h645057)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q157 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q157 =
	      (guard__h645057 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
		guard__h645057 != 2'b01 && guard__h645057 != 2'b10 &&
		guard__h645057 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q157 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(guard__h655381 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h655381)
      2'b0, 2'b01, 2'b10:
	  CASE_guard55381_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q158 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      2'd3:
	  CASE_guard55381_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q158 =
	      guard__h655381 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h655381)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q159 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q159 =
	      (guard__h655381 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
		guard__h655381 != 2'b01 && guard__h655381 != 2'b10 &&
		guard__h655381 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q159 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(guard__h634512 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h634512)
      2'b0, 2'b01, 2'b10:
	  CASE_guard34512_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q160 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      2'd3:
	  CASE_guard34512_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q160 =
	      guard__h634512 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h634512)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q161 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] != 32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q161 =
	      (guard__h634512 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[43] :
		guard__h634512 != 2'b01 && guard__h634512 != 2'b10 &&
		guard__h634512 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[43];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q161 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[75:44] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[43];
    endcase
  end
  always@(guard__h591010 or
	  _theResult___fst_exp__h600204 or _theResult___exp__h600859)
  begin
    case (guard__h591010)
      2'b0:
	  CASE_guard91010_0b0_theResult___fst_exp00204_0_ETC__q171 =
	      _theResult___fst_exp__h600204;
      2'b01, 2'b10, 2'b11:
	  CASE_guard91010_0b0_theResult___fst_exp00204_0_ETC__q171 =
	      _theResult___exp__h600859;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h600204 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10804 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10802 or
	  CASE_guard91010_0b0_theResult___fst_exp00204_0_ETC__q171)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10808 =
	      _theResult___fst_exp__h600204;
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10808 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10804;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10808 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10802;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10808 =
	      CASE_guard91010_0b0_theResult___fst_exp00204_0_ETC__q171;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10808 =
		   11'd0;
    endcase
  end
  always@(guard__h591010 or
	  _theResult___fst_exp__h600204 or
	  out_exp__h600862 or _theResult___exp__h600859)
  begin
    case (guard__h591010)
      2'b0, 2'b01:
	  CASE_guard91010_0b0_theResult___fst_exp00204_0_ETC__q172 =
	      _theResult___fst_exp__h600204;
      2'b10:
	  CASE_guard91010_0b0_theResult___fst_exp00204_0_ETC__q172 =
	      out_exp__h600862;
      2'b11:
	  CASE_guard91010_0b0_theResult___fst_exp00204_0_ETC__q172 =
	      _theResult___exp__h600859;
    endcase
  end
  always@(guard__h601555 or
	  _theResult___fst_exp__h611036 or _theResult___exp__h611765)
  begin
    case (guard__h601555)
      2'b0:
	  CASE_guard01555_0b0_theResult___fst_exp11036_0_ETC__q173 =
	      _theResult___fst_exp__h611036;
      2'b01, 2'b10, 2'b11:
	  CASE_guard01555_0b0_theResult___fst_exp11036_0_ETC__q173 =
	      _theResult___exp__h611765;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h611036 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10842 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10840 or
	  CASE_guard01555_0b0_theResult___fst_exp11036_0_ETC__q173)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10846 =
	      _theResult___fst_exp__h611036;
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10846 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10842;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10846 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10840;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10846 =
	      CASE_guard01555_0b0_theResult___fst_exp11036_0_ETC__q173;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10846 =
		   11'd0;
    endcase
  end
  always@(guard__h601555 or
	  _theResult___fst_exp__h611036 or
	  out_exp__h611768 or _theResult___exp__h611765)
  begin
    case (guard__h601555)
      2'b0, 2'b01:
	  CASE_guard01555_0b0_theResult___fst_exp11036_0_ETC__q174 =
	      _theResult___fst_exp__h611036;
      2'b10:
	  CASE_guard01555_0b0_theResult___fst_exp11036_0_ETC__q174 =
	      out_exp__h611768;
      2'b11:
	  CASE_guard01555_0b0_theResult___fst_exp11036_0_ETC__q174 =
	      _theResult___exp__h611765;
    endcase
  end
  always@(guard__h611879 or
	  _theResult___fst_exp__h621102 or _theResult___exp__h621782)
  begin
    case (guard__h611879)
      2'b0:
	  CASE_guard11879_0b0_theResult___fst_exp21102_0_ETC__q175 =
	      _theResult___fst_exp__h621102;
      2'b01, 2'b10, 2'b11:
	  CASE_guard11879_0b0_theResult___fst_exp21102_0_ETC__q175 =
	      _theResult___exp__h621782;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h621102 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10873 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10871 or
	  CASE_guard11879_0b0_theResult___fst_exp21102_0_ETC__q175)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10877 =
	      _theResult___fst_exp__h621102;
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10877 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10873;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10877 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10871;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10877 =
	      CASE_guard11879_0b0_theResult___fst_exp21102_0_ETC__q175;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10877 =
		   11'd0;
    endcase
  end
  always@(guard__h611879 or
	  _theResult___fst_exp__h621102 or
	  out_exp__h621785 or _theResult___exp__h621782)
  begin
    case (guard__h611879)
      2'b0, 2'b01:
	  CASE_guard11879_0b0_theResult___fst_exp21102_0_ETC__q176 =
	      _theResult___fst_exp__h621102;
      2'b10:
	  CASE_guard11879_0b0_theResult___fst_exp21102_0_ETC__q176 =
	      out_exp__h621785;
      2'b11:
	  CASE_guard11879_0b0_theResult___fst_exp21102_0_ETC__q176 =
	      _theResult___exp__h621782;
    endcase
  end
  always@(guard__h645057 or
	  _theResult___fst_exp__h654538 or _theResult___exp__h655267)
  begin
    case (guard__h645057)
      2'b0:
	  CASE_guard45057_0b0_theResult___fst_exp54538_0_ETC__q177 =
	      _theResult___fst_exp__h654538;
      2'b01, 2'b10, 2'b11:
	  CASE_guard45057_0b0_theResult___fst_exp54538_0_ETC__q177 =
	      _theResult___exp__h655267;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h654538 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10073 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10071 or
	  CASE_guard45057_0b0_theResult___fst_exp54538_0_ETC__q177)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10077 =
	      _theResult___fst_exp__h654538;
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10077 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10073;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10077 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10071;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10077 =
	      CASE_guard45057_0b0_theResult___fst_exp54538_0_ETC__q177;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10077 =
		   11'd0;
    endcase
  end
  always@(guard__h645057 or
	  _theResult___fst_exp__h654538 or
	  out_exp__h655270 or _theResult___exp__h655267)
  begin
    case (guard__h645057)
      2'b0, 2'b01:
	  CASE_guard45057_0b0_theResult___fst_exp54538_0_ETC__q178 =
	      _theResult___fst_exp__h654538;
      2'b10:
	  CASE_guard45057_0b0_theResult___fst_exp54538_0_ETC__q178 =
	      out_exp__h655270;
      2'b11:
	  CASE_guard45057_0b0_theResult___fst_exp54538_0_ETC__q178 =
	      _theResult___exp__h655267;
    endcase
  end
  always@(guard__h655381 or
	  _theResult___fst_exp__h664604 or _theResult___exp__h665284)
  begin
    case (guard__h655381)
      2'b0:
	  CASE_guard55381_0b0_theResult___fst_exp64604_0_ETC__q179 =
	      _theResult___fst_exp__h664604;
      2'b01, 2'b10, 2'b11:
	  CASE_guard55381_0b0_theResult___fst_exp64604_0_ETC__q179 =
	      _theResult___exp__h665284;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h664604 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10104 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10102 or
	  CASE_guard55381_0b0_theResult___fst_exp64604_0_ETC__q179)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10108 =
	      _theResult___fst_exp__h664604;
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10108 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10104;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10108 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10102;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10108 =
	      CASE_guard55381_0b0_theResult___fst_exp64604_0_ETC__q179;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10108 =
		   11'd0;
    endcase
  end
  always@(guard__h655381 or
	  _theResult___fst_exp__h664604 or
	  out_exp__h665287 or _theResult___exp__h665284)
  begin
    case (guard__h655381)
      2'b0, 2'b01:
	  CASE_guard55381_0b0_theResult___fst_exp64604_0_ETC__q180 =
	      _theResult___fst_exp__h664604;
      2'b10:
	  CASE_guard55381_0b0_theResult___fst_exp64604_0_ETC__q180 =
	      out_exp__h665287;
      2'b11:
	  CASE_guard55381_0b0_theResult___fst_exp64604_0_ETC__q180 =
	      _theResult___exp__h665284;
    endcase
  end
  always@(guard__h591010 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h591010)
      2'b0, 2'b01, 2'b10:
	  CASE_guard91010_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q181 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      2'd3:
	  CASE_guard91010_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q181 =
	      guard__h591010 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h591010)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q182 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q182 =
	      (guard__h591010 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
		(guard__h591010 == 2'b01 || guard__h591010 == 2'b10 ||
		 guard__h591010 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q182 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(guard__h611879 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h611879)
      2'b0, 2'b01, 2'b10:
	  CASE_guard11879_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q183 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      2'd3:
	  CASE_guard11879_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q183 =
	      guard__h611879 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h611879)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q184 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q184 =
	      (guard__h611879 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
		(guard__h611879 == 2'b01 || guard__h611879 == 2'b10 ||
		 guard__h611879 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q184 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(guard__h601555 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h601555)
      2'b0, 2'b01, 2'b10:
	  CASE_guard01555_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q185 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      2'd3:
	  CASE_guard01555_0b0_coreFix_fpuMulDivExe_0_reg_ETC__q185 =
	      guard__h601555 == 2'b11 &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h601555)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q186 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
	      32'hFFFFFFFF &&
	      coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q186 =
	      (guard__h601555 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
		(guard__h601555 == 2'b01 || guard__h601555 == 2'b10 ||
		 guard__h601555 == 2'b11) &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		32'hFFFFFFFF &&
		coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q186 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] == 3'd1 &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] ==
		   32'hFFFFFFFF &&
		   coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(guard__h601555 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h601555)
      2'b0, 2'b01, 2'b10:
	  CASE_guard01555_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q187 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      2'd3:
	  CASE_guard01555_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q187 =
	      guard__h601555 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h601555)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q188 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q188 =
	      (guard__h601555 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
		guard__h601555 != 2'b01 && guard__h601555 != 2'b10 &&
		guard__h601555 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q188 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(guard__h611879 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h611879)
      2'b0, 2'b01, 2'b10:
	  CASE_guard11879_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q189 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      2'd3:
	  CASE_guard11879_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q189 =
	      guard__h611879 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h611879)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q190 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q190 =
	      (guard__h611879 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
		guard__h611879 != 2'b01 && guard__h611879 != 2'b10 &&
		guard__h611879 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q190 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(guard__h591010 or coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (guard__h591010)
      2'b0, 2'b01, 2'b10:
	  CASE_guard91010_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q191 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      2'd3:
	  CASE_guard91010_0b0_NOT_coreFix_fpuMulDivExe_0_ETC__q191 =
	      guard__h591010 != 2'b11 ||
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or guard__h591010)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd2, 3'd3:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q192 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
	      32'hFFFFFFFF ||
	      !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      3'd4:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q192 =
	      (guard__h591010 == 2'b0) ?
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[107] :
		guard__h591010 != 2'b01 && guard__h591010 != 2'b10 &&
		guard__h591010 != 2'b11 ||
		coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		32'hFFFFFFFF ||
		!coreFix_fpuMulDivExe_0_regToExeQ$first[107];
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q192 =
		   coreFix_fpuMulDivExe_0_regToExeQ$first[228:226] != 3'd1 ||
		   coreFix_fpuMulDivExe_0_regToExeQ$first[139:108] !=
		   32'hFFFFFFFF ||
		   !coreFix_fpuMulDivExe_0_regToExeQ$first[107];
    endcase
  end
  always@(guard__h591010 or
	  _theResult___snd__h600155 or _theResult___sfd__h600860)
  begin
    case (guard__h591010)
      2'b0:
	  CASE_guard91010_0b0_theResult___snd00155_BITS__ETC__q193 =
	      _theResult___snd__h600155[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard91010_0b0_theResult___snd00155_BITS__ETC__q193 =
	      _theResult___sfd__h600860;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h600155 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10899 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10897 or
	  CASE_guard91010_0b0_theResult___snd00155_BITS__ETC__q193)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10903 =
	      _theResult___snd__h600155[56:5];
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10903 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10899;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10903 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10897;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10903 =
	      CASE_guard91010_0b0_theResult___snd00155_BITS__ETC__q193;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10903 =
		   52'd0;
    endcase
  end
  always@(guard__h591010 or
	  _theResult___snd__h600155 or
	  out_sfd__h600863 or _theResult___sfd__h600860)
  begin
    case (guard__h591010)
      2'b0, 2'b01:
	  CASE_guard91010_0b0_theResult___snd00155_BITS__ETC__q194 =
	      _theResult___snd__h600155[56:5];
      2'b10:
	  CASE_guard91010_0b0_theResult___snd00155_BITS__ETC__q194 =
	      out_sfd__h600863;
      2'b11:
	  CASE_guard91010_0b0_theResult___snd00155_BITS__ETC__q194 =
	      _theResult___sfd__h600860;
    endcase
  end
  always@(guard__h601555 or sfdin__h611030 or _theResult___sfd__h611766)
  begin
    case (guard__h601555)
      2'b0:
	  CASE_guard01555_0b0_sfdin11030_BITS_56_TO_5_0b_ETC__q195 =
	      sfdin__h611030[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard01555_0b0_sfdin11030_BITS_56_TO_5_0b_ETC__q195 =
	      _theResult___sfd__h611766;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  sfdin__h611030 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10925 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10923 or
	  CASE_guard01555_0b0_sfdin11030_BITS_56_TO_5_0b_ETC__q195)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10929 =
	      sfdin__h611030[56:5];
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10929 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10925;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10929 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10923;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10929 =
	      CASE_guard01555_0b0_sfdin11030_BITS_56_TO_5_0b_ETC__q195;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10929 =
		   52'd0;
    endcase
  end
  always@(guard__h601555 or
	  sfdin__h611030 or out_sfd__h611769 or _theResult___sfd__h611766)
  begin
    case (guard__h601555)
      2'b0, 2'b01:
	  CASE_guard01555_0b0_sfdin11030_BITS_56_TO_5_0b_ETC__q196 =
	      sfdin__h611030[56:5];
      2'b10:
	  CASE_guard01555_0b0_sfdin11030_BITS_56_TO_5_0b_ETC__q196 =
	      out_sfd__h611769;
      2'b11:
	  CASE_guard01555_0b0_sfdin11030_BITS_56_TO_5_0b_ETC__q196 =
	      _theResult___sfd__h611766;
    endcase
  end
  always@(guard__h611879 or
	  _theResult___snd__h621048 or _theResult___sfd__h621783)
  begin
    case (guard__h611879)
      2'b0:
	  CASE_guard11879_0b0_theResult___snd21048_BITS__ETC__q197 =
	      _theResult___snd__h621048[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard11879_0b0_theResult___snd21048_BITS__ETC__q197 =
	      _theResult___sfd__h621783;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h621048 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10944 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10942 or
	  CASE_guard11879_0b0_theResult___snd21048_BITS__ETC__q197)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10948 =
	      _theResult___snd__h621048[56:5];
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10948 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10944;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10948 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10942;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10948 =
	      CASE_guard11879_0b0_theResult___snd21048_BITS__ETC__q197;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10948 =
		   52'd0;
    endcase
  end
  always@(guard__h611879 or
	  _theResult___snd__h621048 or
	  out_sfd__h621786 or _theResult___sfd__h621783)
  begin
    case (guard__h611879)
      2'b0, 2'b01:
	  CASE_guard11879_0b0_theResult___snd21048_BITS__ETC__q198 =
	      _theResult___snd__h621048[56:5];
      2'b10:
	  CASE_guard11879_0b0_theResult___snd21048_BITS__ETC__q198 =
	      out_sfd__h621786;
      2'b11:
	  CASE_guard11879_0b0_theResult___snd21048_BITS__ETC__q198 =
	      _theResult___sfd__h621783;
    endcase
  end
  always@(guard__h558474 or
	  _theResult___fst_exp__h567955 or _theResult___exp__h568684)
  begin
    case (guard__h558474)
      2'b0:
	  CASE_guard58474_0b0_theResult___fst_exp67955_0_ETC__q199 =
	      _theResult___fst_exp__h567955;
      2'b01, 2'b10, 2'b11:
	  CASE_guard58474_0b0_theResult___fst_exp67955_0_ETC__q199 =
	      _theResult___exp__h568684;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h567955 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9363 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9361 or
	  CASE_guard58474_0b0_theResult___fst_exp67955_0_ETC__q199)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9367 =
	      _theResult___fst_exp__h567955;
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9367 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9363;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9367 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9361;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9367 =
	      CASE_guard58474_0b0_theResult___fst_exp67955_0_ETC__q199;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9367 =
		   11'd0;
    endcase
  end
  always@(guard__h558474 or
	  _theResult___fst_exp__h567955 or
	  out_exp__h568687 or _theResult___exp__h568684)
  begin
    case (guard__h558474)
      2'b0, 2'b01:
	  CASE_guard58474_0b0_theResult___fst_exp67955_0_ETC__q200 =
	      _theResult___fst_exp__h567955;
      2'b10:
	  CASE_guard58474_0b0_theResult___fst_exp67955_0_ETC__q200 =
	      out_exp__h568687;
      2'b11:
	  CASE_guard58474_0b0_theResult___fst_exp67955_0_ETC__q200 =
	      _theResult___exp__h568684;
    endcase
  end
  always@(guard__h568798 or
	  _theResult___fst_exp__h578021 or _theResult___exp__h578701)
  begin
    case (guard__h568798)
      2'b0:
	  CASE_guard68798_0b0_theResult___fst_exp78021_0_ETC__q201 =
	      _theResult___fst_exp__h578021;
      2'b01, 2'b10, 2'b11:
	  CASE_guard68798_0b0_theResult___fst_exp78021_0_ETC__q201 =
	      _theResult___exp__h578701;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___fst_exp__h578021 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9394 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9392 or
	  CASE_guard68798_0b0_theResult___fst_exp78021_0_ETC__q201)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9398 =
	      _theResult___fst_exp__h578021;
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9398 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9394;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9398 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9392;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9398 =
	      CASE_guard68798_0b0_theResult___fst_exp78021_0_ETC__q201;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9398 =
		   11'd0;
    endcase
  end
  always@(guard__h568798 or
	  _theResult___fst_exp__h578021 or
	  out_exp__h578704 or _theResult___exp__h578701)
  begin
    case (guard__h568798)
      2'b0, 2'b01:
	  CASE_guard68798_0b0_theResult___fst_exp78021_0_ETC__q202 =
	      _theResult___fst_exp__h578021;
      2'b10:
	  CASE_guard68798_0b0_theResult___fst_exp78021_0_ETC__q202 =
	      out_exp__h578704;
      2'b11:
	  CASE_guard68798_0b0_theResult___fst_exp78021_0_ETC__q202 =
	      _theResult___exp__h578701;
    endcase
  end
  always@(guard__h547929 or
	  _theResult___snd__h557074 or _theResult___sfd__h557779)
  begin
    case (guard__h547929)
      2'b0:
	  CASE_guard47929_0b0_theResult___snd57074_BITS__ETC__q203 =
	      _theResult___snd__h557074[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard47929_0b0_theResult___snd57074_BITS__ETC__q203 =
	      _theResult___sfd__h557779;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h557074 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9420 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9418 or
	  CASE_guard47929_0b0_theResult___snd57074_BITS__ETC__q203)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9424 =
	      _theResult___snd__h557074[56:5];
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9424 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9420;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9424 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9418;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9424 =
	      CASE_guard47929_0b0_theResult___snd57074_BITS__ETC__q203;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9424 =
		   52'd0;
    endcase
  end
  always@(guard__h547929 or
	  _theResult___snd__h557074 or
	  out_sfd__h557782 or _theResult___sfd__h557779)
  begin
    case (guard__h547929)
      2'b0, 2'b01:
	  CASE_guard47929_0b0_theResult___snd57074_BITS__ETC__q204 =
	      _theResult___snd__h557074[56:5];
      2'b10:
	  CASE_guard47929_0b0_theResult___snd57074_BITS__ETC__q204 =
	      out_sfd__h557782;
      2'b11:
	  CASE_guard47929_0b0_theResult___snd57074_BITS__ETC__q204 =
	      _theResult___sfd__h557779;
    endcase
  end
  always@(guard__h568798 or
	  _theResult___snd__h577967 or _theResult___sfd__h578702)
  begin
    case (guard__h568798)
      2'b0:
	  CASE_guard68798_0b0_theResult___snd77967_BITS__ETC__q205 =
	      _theResult___snd__h577967[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard68798_0b0_theResult___snd77967_BITS__ETC__q205 =
	      _theResult___sfd__h578702;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h577967 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9466 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9464 or
	  CASE_guard68798_0b0_theResult___snd77967_BITS__ETC__q205)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9470 =
	      _theResult___snd__h577967[56:5];
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9470 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9466;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9470 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d9464;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9470 =
	      CASE_guard68798_0b0_theResult___snd77967_BITS__ETC__q205;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9470 =
		   52'd0;
    endcase
  end
  always@(guard__h568798 or
	  _theResult___snd__h577967 or
	  out_sfd__h578705 or _theResult___sfd__h578702)
  begin
    case (guard__h568798)
      2'b0, 2'b01:
	  CASE_guard68798_0b0_theResult___snd77967_BITS__ETC__q206 =
	      _theResult___snd__h577967[56:5];
      2'b10:
	  CASE_guard68798_0b0_theResult___snd77967_BITS__ETC__q206 =
	      out_sfd__h578705;
      2'b11:
	  CASE_guard68798_0b0_theResult___snd77967_BITS__ETC__q206 =
	      _theResult___sfd__h578702;
    endcase
  end
  always@(guard__h558474 or sfdin__h567949 or _theResult___sfd__h568685)
  begin
    case (guard__h558474)
      2'b0:
	  CASE_guard58474_0b0_sfdin67949_BITS_56_TO_5_0b_ETC__q207 =
	      sfdin__h567949[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard58474_0b0_sfdin67949_BITS_56_TO_5_0b_ETC__q207 =
	      _theResult___sfd__h568685;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  sfdin__h567949 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9447 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9445 or
	  CASE_guard58474_0b0_sfdin67949_BITS_56_TO_5_0b_ETC__q207)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9451 =
	      sfdin__h567949[56:5];
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9451 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9447;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9451 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d9445;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9451 =
	      CASE_guard58474_0b0_sfdin67949_BITS_56_TO_5_0b_ETC__q207;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d9451 =
		   52'd0;
    endcase
  end
  always@(guard__h558474 or
	  sfdin__h567949 or out_sfd__h568688 or _theResult___sfd__h568685)
  begin
    case (guard__h558474)
      2'b0, 2'b01:
	  CASE_guard58474_0b0_sfdin67949_BITS_56_TO_5_0b_ETC__q208 =
	      sfdin__h567949[56:5];
      2'b10:
	  CASE_guard58474_0b0_sfdin67949_BITS_56_TO_5_0b_ETC__q208 =
	      out_sfd__h568688;
      2'b11:
	  CASE_guard58474_0b0_sfdin67949_BITS_56_TO_5_0b_ETC__q208 =
	      _theResult___sfd__h568685;
    endcase
  end
  always@(guard__h634512 or
	  _theResult___snd__h643657 or _theResult___sfd__h644362)
  begin
    case (guard__h634512)
      2'b0:
	  CASE_guard34512_0b0_theResult___snd43657_BITS__ETC__q209 =
	      _theResult___snd__h643657[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard34512_0b0_theResult___snd43657_BITS__ETC__q209 =
	      _theResult___sfd__h644362;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h643657 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10130 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10128 or
	  CASE_guard34512_0b0_theResult___snd43657_BITS__ETC__q209)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10134 =
	      _theResult___snd__h643657[56:5];
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10134 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10130;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10134 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10128;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10134 =
	      CASE_guard34512_0b0_theResult___snd43657_BITS__ETC__q209;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10134 =
		   52'd0;
    endcase
  end
  always@(guard__h634512 or
	  _theResult___snd__h643657 or
	  out_sfd__h644365 or _theResult___sfd__h644362)
  begin
    case (guard__h634512)
      2'b0, 2'b01:
	  CASE_guard34512_0b0_theResult___snd43657_BITS__ETC__q210 =
	      _theResult___snd__h643657[56:5];
      2'b10:
	  CASE_guard34512_0b0_theResult___snd43657_BITS__ETC__q210 =
	      out_sfd__h644365;
      2'b11:
	  CASE_guard34512_0b0_theResult___snd43657_BITS__ETC__q210 =
	      _theResult___sfd__h644362;
    endcase
  end
  always@(guard__h645057 or sfdin__h654532 or _theResult___sfd__h655268)
  begin
    case (guard__h645057)
      2'b0:
	  CASE_guard45057_0b0_sfdin54532_BITS_56_TO_5_0b_ETC__q211 =
	      sfdin__h654532[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard45057_0b0_sfdin54532_BITS_56_TO_5_0b_ETC__q211 =
	      _theResult___sfd__h655268;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  sfdin__h654532 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10156 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10154 or
	  CASE_guard45057_0b0_sfdin54532_BITS_56_TO_5_0b_ETC__q211)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10160 =
	      sfdin__h654532[56:5];
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10160 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10156;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10160 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_coreFix_fpuMulD_ETC___d10154;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10160 =
	      CASE_guard45057_0b0_sfdin54532_BITS_56_TO_5_0b_ETC__q211;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10160 =
		   52'd0;
    endcase
  end
  always@(guard__h645057 or
	  sfdin__h654532 or out_sfd__h655271 or _theResult___sfd__h655268)
  begin
    case (guard__h645057)
      2'b0, 2'b01:
	  CASE_guard45057_0b0_sfdin54532_BITS_56_TO_5_0b_ETC__q212 =
	      sfdin__h654532[56:5];
      2'b10:
	  CASE_guard45057_0b0_sfdin54532_BITS_56_TO_5_0b_ETC__q212 =
	      out_sfd__h655271;
      2'b11:
	  CASE_guard45057_0b0_sfdin54532_BITS_56_TO_5_0b_ETC__q212 =
	      _theResult___sfd__h655268;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11192 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11180 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11169)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1, 5'd2, 5'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11194 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11180;
      5'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11194 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11169;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11194 =
		   IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11192;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11156 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11111 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11069)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1, 5'd2, 5'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11158 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11111;
      5'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11158 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11069;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11158 =
		   IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11156;
    endcase
  end
  always@(guard__h655381 or
	  _theResult___snd__h664550 or _theResult___sfd__h665285)
  begin
    case (guard__h655381)
      2'b0:
	  CASE_guard55381_0b0_theResult___snd64550_BITS__ETC__q213 =
	      _theResult___snd__h664550[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard55381_0b0_theResult___snd64550_BITS__ETC__q213 =
	      _theResult___sfd__h665285;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  _theResult___snd__h664550 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10175 or
	  IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10173 or
	  CASE_guard55381_0b0_theResult___snd64550_BITS__ETC__q213)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10179 =
	      _theResult___snd__h664550[56:5];
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10179 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10175;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10179 =
	      IF_IF_IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_f_ETC___d10173;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10179 =
	      CASE_guard55381_0b0_theResult___snd64550_BITS__ETC__q213;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10179 =
		   52'd0;
    endcase
  end
  always@(guard__h655381 or
	  _theResult___snd__h664550 or
	  out_sfd__h665288 or _theResult___sfd__h665285)
  begin
    case (guard__h655381)
      2'b0, 2'b01:
	  CASE_guard55381_0b0_theResult___snd64550_BITS__ETC__q214 =
	      _theResult___snd__h664550[56:5];
      2'b10:
	  CASE_guard55381_0b0_theResult___snd64550_BITS__ETC__q214 =
	      out_sfd__h665288;
      2'b11:
	  CASE_guard55381_0b0_theResult___snd64550_BITS__ETC__q214 =
	      _theResult___sfd__h665285;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11240 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11224 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11209)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1, 5'd2, 5'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11242 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11224;
      5'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11242 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11209;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11242 =
		   IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11240;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11282 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11268 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11255)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1, 5'd2, 5'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11284 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11268;
      5'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11284 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11255;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11284 =
		   IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11282;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11324 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11310 or
	  NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11297)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1, 5'd2, 5'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11326 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11310;
      5'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11326 =
	      NOT_IF_coreFix_fpuMulDivExe_0_regToExeQ_first__ETC___d11297;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11326 =
		   IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d11324;
    endcase
  end
  always@(idx__h731419 or
	  coreFix_aluExe_0_rsAlu$canEnq or coreFix_aluExe_1_rsAlu$canEnq)
  begin
    case (idx__h731419)
      1'd0:
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827 =
	      coreFix_aluExe_0_rsAlu$canEnq;
      1'd1:
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827 =
	      coreFix_aluExe_1_rsAlu$canEnq;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 =
	      coreFix_memExe_lsq$enqLdTag[6];
      default: IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 =
		   coreFix_memExe_lsq$enqStTag[6];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12848 =
	      SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12848 =
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12848 =
		   fetchStage$pipelines_0_first[194:192] != 3'd2 ||
		   coreFix_memExe_rsMem$canEnq &&
		   IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844;
    endcase
  end
  always@(idx__h731419 or
	  coreFix_aluExe_0_rsAlu$canEnq or coreFix_aluExe_1_rsAlu$canEnq)
  begin
    case (idx__h731419)
      1'd0:
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__281_ETC___d12865 =
	      !coreFix_aluExe_0_rsAlu$canEnq;
      1'd1:
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__281_ETC___d12865 =
	      !coreFix_aluExe_1_rsAlu$canEnq;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  regRenamingTable$rename_0_canRename or
	  NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12807 or
	  NOT_SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__ETC___d12867 or
	  coreFix_memExe_rsMem$canEnq or
	  IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872 =
	      NOT_SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__ETC___d12867;
      3'd2:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872 =
	      coreFix_memExe_rsMem$canEnq &&
	      IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 &&
	      regRenamingTable$rename_0_canRename &&
	      NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12807;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872 =
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq &&
	      regRenamingTable$rename_0_canRename &&
	      NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12807;
      default: IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12872 =
		   regRenamingTable$rename_0_canRename &&
		   NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12807;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900 =
	      !coreFix_memExe_lsq$enqLdTag[6];
      default: IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900 =
		   !coreFix_memExe_lsq$enqStTag[6];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900 or
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__281_ETC___d12865 or
	  specTagManager$canClaim or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12905 =
	      SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__281_ETC___d12865 ||
	      fetchStage$pipelines_0_first[194:192] == 3'd1 &&
	      !specTagManager$canClaim;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12905 =
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d12905 =
		   fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		   (!coreFix_memExe_rsMem$canEnq ||
		    IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900);
    endcase
  end
  always@(idx__h749150 or
	  fetchStage$pipelines_0_canDeq or
	  NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12993 or
	  coreFix_aluExe_0_rsAlu$canEnq or
	  NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12999 or
	  coreFix_aluExe_1_rsAlu$canEnq)
  begin
    case (idx__h749150)
      1'd0:
	  SEL_ARR_fetchStage_pipelines_0_canDeq__2436_AN_ETC___d13018 =
	      fetchStage$pipelines_0_canDeq &&
	      NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12993 ||
	      !coreFix_aluExe_0_rsAlu$canEnq;
      1'd1:
	  SEL_ARR_fetchStage_pipelines_0_canDeq__2436_AN_ETC___d13018 =
	      fetchStage$pipelines_0_canDeq &&
	      NOT_fetchStage_pipelines_0_first__2438_BITS_19_ETC___d12999 ||
	      !coreFix_aluExe_1_rsAlu$canEnq;
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q215 =
	      !coreFix_memExe_lsq$enqLdTag[6];
      default: CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q215 =
		   !coreFix_memExe_lsq$enqStTag[6];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502 or
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__281_ETC___d12865 or
	  fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13089 or
	  NOT_coreFix_memExe_rsMem_canEnq__2834_2897_OR__ETC___d13092 or
	  NOT_coreFix_fpuMulDivExe_0_rsFpuMulDiv_canEnq__ETC___d13091)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13095 =
	      SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__281_ETC___d12865 ||
	      fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13089;
      3'd2:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13095 =
	      NOT_coreFix_memExe_rsMem_canEnq__2834_2897_OR__ETC___d13092;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13095 =
	      NOT_coreFix_fpuMulDivExe_0_rsFpuMulDiv_canEnq__ETC___d13091;
      default: IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13095 =
		   fetchStage$pipelines_0_first[68] ||
		   IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[0] ||
		   IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[1] ||
		   IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[2] ||
		   IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[3] ||
		   IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[4] ||
		   IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[5] ||
		   IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[6] ||
		   IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[7] ||
		   IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[8] ||
		   IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[9] ||
		   IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[10] ||
		   IF_IF_NOT_csrf_prv_reg_read__2466_EQ_3_2467_24_ETC___d12502[11];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13116 =
	      SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827;
      default: IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13116 =
		   fetchStage$pipelines_0_first[194:192] != 3'd2 ||
		   coreFix_memExe_rsMem$canEnq &&
		   IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13133 =
	      SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13133 =
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13133 =
		   fetchStage$pipelines_0_first[194:192] != 3'd2 ||
		   IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844;
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q216 =
	      coreFix_memExe_lsq$enqLdTag[6];
      default: CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q216 =
		   coreFix_memExe_lsq$enqStTag[6];
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  regRenamingTable$rename_1_canRename or
	  NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d12983 or
	  SEL_ARR_fetchStage_pipelines_0_canDeq__2436_AN_ETC___d13018 or
	  NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13101 or
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13130 or
	  NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13139 or
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13113 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq or
	  NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13122)
  begin
    case (fetchStage$pipelines_1_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13144 =
	      !SEL_ARR_fetchStage_pipelines_0_canDeq__2436_AN_ETC___d13018 &&
	      NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13101;
      3'd2:
	  IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13144 =
	      NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13130 &&
	      regRenamingTable$rename_1_canRename &&
	      NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13139;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13144 =
	      NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13113 &&
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq &&
	      regRenamingTable$rename_1_canRename &&
	      NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13122;
      default: IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13144 =
		   regRenamingTable$rename_1_canRename &&
		   NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d12983;
    endcase
  end
  always@(k__h731393 or
	  coreFix_aluExe_0_rsAlu$RDY_enq or coreFix_aluExe_1_rsAlu$RDY_enq)
  begin
    case (k__h731393)
      1'd0:
	  CASE_k31393_0_coreFix_aluExe_0_rsAluRDY_enq_1_ETC__q217 =
	      coreFix_aluExe_0_rsAlu$RDY_enq;
      1'd1:
	  CASE_k31393_0_coreFix_aluExe_0_rsAluRDY_enq_1_ETC__q217 =
	      coreFix_aluExe_1_rsAlu$RDY_enq;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$RDY_enqSt or coreFix_memExe_lsq$RDY_enqLd)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  CASE_fetchStagepipelines_0_first_BITS_191_TO__ETC__q218 =
	      coreFix_memExe_lsq$RDY_enqLd;
      default: CASE_fetchStagepipelines_0_first_BITS_191_TO__ETC__q218 =
		   coreFix_memExe_lsq$RDY_enqSt;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900 or
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__281_ETC___d12865 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13190 =
	      SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__281_ETC___d12865;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13190 =
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13190 =
		   fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		   (!coreFix_memExe_rsMem$canEnq ||
		    IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900);
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900 or
	  regRenamingTable_RDY_rename_0_getRename__2670__ETC___d13184 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827 or
	  regRenamingTable$RDY_rename_0_getRename or
	  _0_OR_NOT_fetchStage_pipelines_0_first__2438_BI_ETC___d13171 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_enq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13188 =
	      !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827 ||
	      regRenamingTable$RDY_rename_0_getRename &&
	      _0_OR_NOT_fetchStage_pipelines_0_first__2438_BI_ETC___d13171;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13188 =
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ||
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$RDY_enq &&
	      regRenamingTable$RDY_rename_0_getRename;
      default: IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13188 =
		   fetchStage$pipelines_0_first[194:192] != 3'd2 ||
		   !coreFix_memExe_rsMem$canEnq ||
		   IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900 ||
		   regRenamingTable_RDY_rename_0_getRename__2670__ETC___d13184;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13204 =
	      !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13204 =
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13204 =
		   fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		   (!coreFix_memExe_rsMem$canEnq ||
		    IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900);
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844 or
	  SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__281_ETC___d12865 or
	  specTagManager$canClaim or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13211 =
	      !SEL_ARR_NOT_coreFix_aluExe_0_rsAlu_canEnq__281_ETC___d12865 &&
	      (fetchStage$pipelines_0_first[194:192] != 3'd1 ||
	       specTagManager$canClaim);
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13211 =
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13211 =
		   fetchStage$pipelines_0_first[194:192] != 3'd2 ||
		   coreFix_memExe_rsMem$canEnq &&
		   IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12844;
    endcase
  end
  always@(idx__h749150 or
	  fetchStage$pipelines_0_canDeq or
	  fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13227 or
	  coreFix_aluExe_0_rsAlu$canEnq or
	  fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13234 or
	  coreFix_aluExe_1_rsAlu$canEnq)
  begin
    case (idx__h749150)
      1'd0:
	  SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__243_ETC___d13238 =
	      (!fetchStage$pipelines_0_canDeq ||
	       fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13227) &&
	      coreFix_aluExe_0_rsAlu$canEnq;
      1'd1:
	  SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__243_ETC___d13238 =
	      (!fetchStage$pipelines_0_canDeq ||
	       fetchStage_pipelines_0_first__2438_BITS_194_TO_ETC___d13234) &&
	      coreFix_aluExe_1_rsAlu$canEnq;
    endcase
  end
  always@(k__h749572 or
	  coreFix_aluExe_0_rsAlu$RDY_enq or coreFix_aluExe_1_rsAlu$RDY_enq)
  begin
    case (k__h749572)
      1'd0:
	  CASE_k49572_0_coreFix_aluExe_0_rsAluRDY_enq_1_ETC__q219 =
	      coreFix_aluExe_0_rsAlu$RDY_enq;
      1'd1:
	  CASE_k49572_0_coreFix_aluExe_0_rsAluRDY_enq_1_ETC__q219 =
	      coreFix_aluExe_1_rsAlu$RDY_enq;
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$RDY_enqSt or coreFix_memExe_lsq$RDY_enqLd)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q220 =
	      coreFix_memExe_lsq$RDY_enqLd;
      default: CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q220 =
		   coreFix_memExe_lsq$RDY_enqSt;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_rsMem$canEnq or
	  IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13273 =
	      !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827;
      default: IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13273 =
		   fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		   (!coreFix_memExe_rsMem$canEnq ||
		    IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900);
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900 or
	  SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq)
  begin
    case (fetchStage$pipelines_0_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13284 =
	      !SEL_ARR_coreFix_aluExe_0_rsAlu_canEnq__2817_co_ETC___d12827;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13284 =
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq;
      default: IF_fetchStage_pipelines_0_first__2438_BITS_194_ETC___d13284 =
		   fetchStage$pipelines_0_first[194:192] == 3'd2 &&
		   IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d12900;
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13292 or
	  SEL_ARR_fetchStage_pipelines_0_canDeq__2436_AN_ETC___d13018 or
	  fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13281)
  begin
    case (fetchStage$pipelines_1_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13295 =
	      SEL_ARR_fetchStage_pipelines_0_canDeq__2436_AN_ETC___d13018;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13295 =
	      fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13281;
      default: IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13295 =
		   fetchStage$pipelines_1_first[194:192] == 3'd2 &&
		   fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13292;
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13260 or
	  regRenamingTable$RDY_rename_1_getRename or
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13265 or
	  SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__243_ETC___d13238 or
	  regRenamingTable_RDY_rename_1_getRename__3240__ETC___d13251 or
	  fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13253 or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq or
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv_RDY_enq__31_ETC___d13256)
  begin
    case (fetchStage$pipelines_1_first[194:192])
      3'd0, 3'd1:
	  IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13270 =
	      !SEL_ARR_NOT_fetchStage_pipelines_0_canDeq__243_ETC___d13238 ||
	      regRenamingTable_RDY_rename_1_getRename__3240__ETC___d13251;
      3'd3, 3'd4:
	  IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13270 =
	      fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13253 ||
	      !coreFix_fpuMulDivExe_0_rsFpuMulDiv$canEnq ||
	      coreFix_fpuMulDivExe_0_rsFpuMulDiv_RDY_enq__31_ETC___d13256;
      default: IF_fetchStage_pipelines_1_first__2447_BITS_194_ETC___d13270 =
		   fetchStage$pipelines_1_first[194:192] != 3'd2 ||
		   fetchStage_pipelines_0_canDeq__2436_AND_regRen_ETC___d13260 ||
		   regRenamingTable$RDY_rename_1_getRename &&
		   NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13265;
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13366 =
	      coreFix_memExe_lsq$enqLdTag[5];
      default: IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13366 =
		   coreFix_memExe_lsq$enqStTag[5];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13369 =
	      !coreFix_memExe_lsq$enqLdTag[5];
      default: IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13369 =
		   !coreFix_memExe_lsq$enqStTag[5];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13374 =
	      coreFix_memExe_lsq$enqLdTag[4:0];
      default: IF_IF_fetchStage_pipelines_0_first__2438_BITS__ETC___d13374 =
		   coreFix_memExe_lsq$enqStTag[4:0];
    endcase
  end
  always@(fetchStage$pipelines_0_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_0_first[191:189])
      3'd0, 3'd2:
	  CASE_fetchStagepipelines_0_first_BITS_191_TO__ETC__q221 =
	      coreFix_memExe_lsq$enqLdTag[3:0];
      default: CASE_fetchStagepipelines_0_first_BITS_191_TO__ETC__q221 =
		   coreFix_memExe_lsq$enqStTag[3:0];
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13506 =
	      coreFix_memExe_lsq$enqLdTag[5];
      default: IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13506 =
		   coreFix_memExe_lsq$enqStTag[5];
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13507 =
	      !coreFix_memExe_lsq$enqLdTag[5];
      default: IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13507 =
		   !coreFix_memExe_lsq$enqStTag[5];
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13508 =
	      coreFix_memExe_lsq$enqLdTag[4:0];
      default: IF_IF_fetchStage_pipelines_1_first__2447_BITS__ETC___d13508 =
		   coreFix_memExe_lsq$enqStTag[4:0];
    endcase
  end
  always@(fetchStage$pipelines_1_first or
	  coreFix_memExe_lsq$enqStTag or coreFix_memExe_lsq$enqLdTag)
  begin
    case (fetchStage$pipelines_1_first[191:189])
      3'd0, 3'd2:
	  CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q222 =
	      coreFix_memExe_lsq$enqLdTag[3:0];
      default: CASE_fetchStagepipelines_1_first_BITS_191_TO__ETC__q222 =
		   coreFix_memExe_lsq$enqStTag[3:0];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q223 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[511:448];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q223 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[511:448];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q224 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[447:384];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q224 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[447:384];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q225 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[383:320];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q225 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[383:320];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q226 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[319:256];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q226 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[319:256];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q227 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[255:192];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q227 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[255:192];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[228:226])
      3'd0:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11021 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[228:226];
      3'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11021 = 3'd4;
      3'd2:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11021 = 3'd3;
      3'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11021 = 3'd2;
      3'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11021 = 3'd1;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11021 =
		   3'd0;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq or
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first or
	  coreFix_memExe_stb$deq or
	  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1983 or
	  IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2041)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79])
      3'd0, 3'd2, 3'd4:
	  IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2333 =
	      coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0];
      3'd1:
	  IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2333 =
	      { coreFix_memExe_stb$deq[575] ?
		  coreFix_memExe_stb$deq[511:504] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:504],
		coreFix_memExe_stb$deq[574] ?
		  coreFix_memExe_stb$deq[503:496] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[503:496],
		coreFix_memExe_stb$deq[573] ?
		  coreFix_memExe_stb$deq[495:488] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[495:488],
		coreFix_memExe_stb$deq[572] ?
		  coreFix_memExe_stb$deq[487:480] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[487:480],
		coreFix_memExe_stb$deq[571] ?
		  coreFix_memExe_stb$deq[479:472] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[479:472],
		coreFix_memExe_stb$deq[570] ?
		  coreFix_memExe_stb$deq[471:464] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[471:464],
		coreFix_memExe_stb$deq[569] ?
		  coreFix_memExe_stb$deq[463:456] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[463:456],
		coreFix_memExe_stb$deq[568] ?
		  coreFix_memExe_stb$deq[455:448] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[455:448],
		coreFix_memExe_stb$deq[567] ?
		  coreFix_memExe_stb$deq[447:440] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[447:440],
		coreFix_memExe_stb$deq[566] ?
		  coreFix_memExe_stb$deq[439:432] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[439:432],
		coreFix_memExe_stb$deq[565] ?
		  coreFix_memExe_stb$deq[431:424] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[431:424],
		coreFix_memExe_stb$deq[564] ?
		  coreFix_memExe_stb$deq[423:416] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[423:416],
		coreFix_memExe_stb$deq[563] ?
		  coreFix_memExe_stb$deq[415:408] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[415:408],
		coreFix_memExe_stb$deq[562] ?
		  coreFix_memExe_stb$deq[407:400] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[407:400],
		coreFix_memExe_stb$deq[561] ?
		  coreFix_memExe_stb$deq[399:392] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[399:392],
		coreFix_memExe_stb$deq[560] ?
		  coreFix_memExe_stb$deq[391:384] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[391:384],
		coreFix_memExe_stb$deq[559] ?
		  coreFix_memExe_stb$deq[383:376] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[383:376],
		coreFix_memExe_stb$deq[558] ?
		  coreFix_memExe_stb$deq[375:368] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[375:368],
		coreFix_memExe_stb$deq[557] ?
		  coreFix_memExe_stb$deq[367:360] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[367:360],
		coreFix_memExe_stb$deq[556] ?
		  coreFix_memExe_stb$deq[359:352] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[359:352],
		coreFix_memExe_stb$deq[555] ?
		  coreFix_memExe_stb$deq[351:344] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[351:344],
		coreFix_memExe_stb$deq[554] ?
		  coreFix_memExe_stb$deq[343:336] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[343:336],
		coreFix_memExe_stb$deq[553] ?
		  coreFix_memExe_stb$deq[335:328] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[335:328],
		coreFix_memExe_stb$deq[552] ?
		  coreFix_memExe_stb$deq[327:320] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[327:320],
		coreFix_memExe_stb$deq[551] ?
		  coreFix_memExe_stb$deq[319:312] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[319:312],
		coreFix_memExe_stb$deq[550] ?
		  coreFix_memExe_stb$deq[311:304] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[311:304],
		coreFix_memExe_stb$deq[549] ?
		  coreFix_memExe_stb$deq[303:296] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[303:296],
		coreFix_memExe_stb$deq[548] ?
		  coreFix_memExe_stb$deq[295:288] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[295:288],
		coreFix_memExe_stb$deq[547] ?
		  coreFix_memExe_stb$deq[287:280] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[287:280],
		coreFix_memExe_stb$deq[546] ?
		  coreFix_memExe_stb$deq[279:272] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[279:272],
		coreFix_memExe_stb$deq[545] ?
		  coreFix_memExe_stb$deq[271:264] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[271:264],
		coreFix_memExe_stb$deq[544] ?
		  coreFix_memExe_stb$deq[263:256] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[263:256],
		coreFix_memExe_stb$deq[543] ?
		  coreFix_memExe_stb$deq[255:248] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[255:248],
		coreFix_memExe_stb$deq[542] ?
		  coreFix_memExe_stb$deq[247:240] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[247:240],
		coreFix_memExe_stb$deq[541] ?
		  coreFix_memExe_stb$deq[239:232] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[239:232],
		coreFix_memExe_stb$deq[540] ?
		  coreFix_memExe_stb$deq[231:224] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[231:224],
		coreFix_memExe_stb$deq[539] ?
		  coreFix_memExe_stb$deq[223:216] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[223:216],
		coreFix_memExe_stb$deq[538] ?
		  coreFix_memExe_stb$deq[215:208] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[215:208],
		coreFix_memExe_stb$deq[537] ?
		  coreFix_memExe_stb$deq[207:200] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[207:200],
		coreFix_memExe_stb$deq[536] ?
		  coreFix_memExe_stb$deq[199:192] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[199:192],
		coreFix_memExe_stb$deq[535] ?
		  coreFix_memExe_stb$deq[191:184] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[191:184],
		coreFix_memExe_stb$deq[534] ?
		  coreFix_memExe_stb$deq[183:176] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[183:176],
		coreFix_memExe_stb$deq[533] ?
		  coreFix_memExe_stb$deq[175:168] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[175:168],
		coreFix_memExe_stb$deq[532] ?
		  coreFix_memExe_stb$deq[167:160] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[167:160],
		coreFix_memExe_stb$deq[531] ?
		  coreFix_memExe_stb$deq[159:152] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[159:152],
		coreFix_memExe_stb$deq[530] ?
		  coreFix_memExe_stb$deq[151:144] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[151:144],
		coreFix_memExe_stb$deq[529] ?
		  coreFix_memExe_stb$deq[143:136] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[143:136],
		coreFix_memExe_stb$deq[528] ?
		  coreFix_memExe_stb$deq[135:128] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[135:128],
		coreFix_memExe_stb$deq[527] ?
		  coreFix_memExe_stb$deq[127:120] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[127:120],
		coreFix_memExe_stb$deq[526] ?
		  coreFix_memExe_stb$deq[119:112] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[119:112],
		coreFix_memExe_stb$deq[525] ?
		  coreFix_memExe_stb$deq[111:104] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[111:104],
		coreFix_memExe_stb$deq[524] ?
		  coreFix_memExe_stb$deq[103:96] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[103:96],
		coreFix_memExe_stb$deq[523] ?
		  coreFix_memExe_stb$deq[95:88] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[95:88],
		coreFix_memExe_stb$deq[522] ?
		  coreFix_memExe_stb$deq[87:80] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[87:80],
		coreFix_memExe_stb$deq[521] ?
		  coreFix_memExe_stb$deq[79:72] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[79:72],
		coreFix_memExe_stb$deq[520] ?
		  coreFix_memExe_stb$deq[71:64] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[71:64],
		coreFix_memExe_stb$deq[519] ?
		  coreFix_memExe_stb$deq[63:56] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[63:56],
		coreFix_memExe_stb$deq[518] ?
		  coreFix_memExe_stb$deq[55:48] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[55:48],
		coreFix_memExe_stb$deq[517] ?
		  coreFix_memExe_stb$deq[47:40] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[47:40],
		coreFix_memExe_stb$deq[516] ?
		  coreFix_memExe_stb$deq[39:32] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[39:32],
		coreFix_memExe_stb$deq[515] ?
		  coreFix_memExe_stb$deq[31:24] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[31:24],
		coreFix_memExe_stb$deq[514] ?
		  coreFix_memExe_stb$deq[23:16] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[23:16],
		coreFix_memExe_stb$deq[513] ?
		  coreFix_memExe_stb$deq[15:8] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[15:8],
		coreFix_memExe_stb$deq[512] ?
		  coreFix_memExe_stb$deq[7:0] :
		  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[7:0] };
      3'd3:
	  IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2333 =
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEh_ETC___d1983 ?
		IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2041 :
		coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0];
      default: IF_coreFix_memExe_dMem_cache_m_banks_0_cRqMshr_ETC___d2333 =
		   coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[511:0];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10189 or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9479 or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10245)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10248 =
	      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9479;
      5'd25:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10248 =
	      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10189;
      5'd26, 5'd27:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10248 =
	      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10245;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10248 =
		   IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10189;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q228 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[194:131];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q228 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[194:131];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q229 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[130:67];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q229 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[130:67];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q230 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[191:128];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q230 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[191:128];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q231 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[127:64];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q231 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[127:64];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q232 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[515];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q232 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[515];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q233 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[66:3];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q233 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[66:3];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q234 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[517:516];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q234 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[517:516];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_enq or
	  coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_enq or
	  coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_enq or
	  coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_enq)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1, 5'd2, 5'd25, 5'd26, 5'd27, 5'd28:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8712 =
	      coreFix_fpuMulDivExe_0_fpuExec_fmaQ$RDY_enq;
      5'd3:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8712 =
	      coreFix_fpuMulDivExe_0_fpuExec_divQ$RDY_enq;
      5'd4:
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8712 =
	      coreFix_fpuMulDivExe_0_fpuExec_sqrtQ$RDY_enq;
      default: IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d8712 =
		   coreFix_fpuMulDivExe_0_fpuExec_simpleQ$RDY_enq;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ_RDY_enq_ETC___d8731 or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit or
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_enq)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[229:228])
      2'd0, 2'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q235 =
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit != 2'd0 &&
	      coreFix_fpuMulDivExe_0_mulDivExec_mulQ$RDY_enq;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q235 =
		   coreFix_fpuMulDivExe_0_mulDivExec_divQ_RDY_enq_ETC___d8731;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q236 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[512];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q236 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[512];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q237 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[63:0];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q237 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[63:0];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q238 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[578:515];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q238 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[578:515];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q239 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0[514:513];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rsToP_ETC__q239 =
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1[514:513];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q240 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0[5:4];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q240 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1[5:4];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q241 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0[3];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q241 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1[3];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q242 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0[2:0];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q242 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1[2:0];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q243 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0[71:8];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q243 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1[71:8];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q244 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0[7:6];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_rqToP_ETC__q244 =
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1[7:6];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q245 =
	      !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[582];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q245 =
	      !coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[582];
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q246 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[582];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q246 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[582];
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9479 or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10958 or
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11011 or
	  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10956)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q248 =
	      IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10958;
      5'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q248 =
	      coreFix_fpuMulDivExe_0_regToExeQ$first[225] ?
		{ !coreFix_fpuMulDivExe_0_regToExeQ$first[139],
		  coreFix_fpuMulDivExe_0_regToExeQ$first[138:76] } :
		{ IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d11011,
		  IF_IF_coreFix_fpuMulDivExe_0_regToExeQ_first___ETC___d10956 };
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q248 =
		   IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d9479;
    endcase
  end
  always@(coreFix_fpuMulDivExe_0_regToExeQ$first or
	  IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10958)
  begin
    case (coreFix_fpuMulDivExe_0_regToExeQ$first[233:229])
      5'd0, 5'd1:
	  CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q249 =
	      64'h3FF0000000000000;
      default: CASE_coreFix_fpuMulDivExe_0_regToExeQfirst_BI_ETC__q249 =
		   IF_coreFix_fpuMulDivExe_0_regToExeQ_first__673_ETC___d10958;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 or
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP)
      1'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q250 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0[1:0];
      1'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_fromP_ETC__q250 =
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1[1:0];
    endcase
  end
  always@(coreFix_memExe_dTlb$procResp)
  begin
    case (coreFix_memExe_dTlb$procResp[105:103])
      3'd0: CASE_coreFix_memExe_dTlbprocResp_BITS_105_TO__ETC__q251 = 4'd4;
      3'd2: CASE_coreFix_memExe_dTlbprocResp_BITS_105_TO__ETC__q251 = 4'd5;
      3'd3: CASE_coreFix_memExe_dTlbprocResp_BITS_105_TO__ETC__q251 = 4'd7;
      default: CASE_coreFix_memExe_dTlbprocResp_BITS_105_TO__ETC__q251 = 4'd6;
    endcase
  end
  always@(coreFix_memExe_dTlb$procResp)
  begin
    case (coreFix_memExe_dTlb$procResp[105:103])
      3'd0, 3'd2:
	  CASE_coreFix_memExe_dTlbprocResp_BITS_105_TO__ETC__q252 = 4'd4;
      default: CASE_coreFix_memExe_dTlbprocResp_BITS_105_TO__ETC__q252 = 4'd6;
    endcase
  end
  always@(coreFix_memExe_dMem_cache_m_banks_0_pipeline$first or
	  coreFix_memExe_dMem_cache_m_banks_0_latTimer_started)
  begin
    case (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[514:512])
      3'd0:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_pipel_ETC__q253 =
	      !coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[0];
      3'd1:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_pipel_ETC__q253 =
	      !coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[1];
      3'd2:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_pipel_ETC__q253 =
	      !coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[2];
      3'd3:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_pipel_ETC__q253 =
	      !coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[3];
      3'd4:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_pipel_ETC__q253 =
	      !coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[4];
      3'd5:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_pipel_ETC__q253 =
	      !coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[5];
      3'd6:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_pipel_ETC__q253 =
	      !coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[6];
      3'd7:
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_pipel_ETC__q253 =
	      !coreFix_memExe_dMem_cache_m_banks_0_latTimer_started[7];
    endcase
  end
  always@(i__h363648 or coreFix_memExe_ldMemLatTimer_started)
  begin
    case (i__h363648)
      5'd0:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[0];
      5'd1:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[1];
      5'd2:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[2];
      5'd3:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[3];
      5'd4:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[4];
      5'd5:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[5];
      5'd6:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[6];
      5'd7:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[7];
      5'd8:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[8];
      5'd9:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[9];
      5'd10:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[10];
      5'd11:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[11];
      5'd12:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[12];
      5'd13:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[13];
      5'd14:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[14];
      5'd15:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[15];
      5'd16:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[16];
      5'd17:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[17];
      5'd18:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[18];
      5'd19:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[19];
      5'd20:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[20];
      5'd21:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[21];
      5'd22:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[22];
      5'd23:
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
	      !coreFix_memExe_ldMemLatTimer_started[23];
      default: CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254 =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  always@(i__h362270 or coreFix_memExe_stMemLatTimer_started)
  begin
    case (i__h362270)
      2'd0:
	  CASE_i62270_0_NOT_coreFix_memExe_stMemLatTimer_ETC__q255 =
	      !coreFix_memExe_stMemLatTimer_started[0];
      2'd1:
	  CASE_i62270_0_NOT_coreFix_memExe_stMemLatTimer_ETC__q255 =
	      !coreFix_memExe_stMemLatTimer_started[1];
      2'd2:
	  CASE_i62270_0_NOT_coreFix_memExe_stMemLatTimer_ETC__q255 =
	      !coreFix_memExe_stMemLatTimer_started[2];
      2'd3:
	  CASE_i62270_0_NOT_coreFix_memExe_stMemLatTimer_ETC__q255 =
	      !coreFix_memExe_stMemLatTimer_started[3];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        commitStage_commitTrap <= `BSV_ASSIGNMENT_DELAY
	    166'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	commitStage_rg_serial_num <= `BSV_ASSIGNMENT_DELAY 64'd0;
	coreFix_doStatsReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt <= `BSV_ASSIGNMENT_DELAY
	    4'd0;
	coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit <= `BSV_ASSIGNMENT_DELAY
	    2'd3;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	    129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	    129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	    129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	    129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	    129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	    129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	    3'd2;
	coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	    3'd2;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7 <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    4'd2;
	coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    583'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA80000000000000000;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	    583'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA80000000000000000;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    584'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_latTimer_started <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer <= `BSV_ASSIGNMENT_DELAY
	    80'd0;
	coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl <= `BSV_ASSIGNMENT_DELAY
	    59'h2AAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_processAmo <= `BSV_ASSIGNMENT_DELAY
	    161'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	    153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    72'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	    72'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    73'h0AAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    579'h00000000000000000AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	    579'h00000000000000000AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    580'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_perfReqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	coreFix_memExe_dMem_perfReqQ_data_0 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	coreFix_memExe_dMem_perfReqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_dMem_perfReqQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_dMem_perfReqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY 5'd10;
	coreFix_memExe_dMem_perfReqQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_forwardQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_forwardQ_data_0 <= `BSV_ASSIGNMENT_DELAY 69'd0;
	coreFix_memExe_forwardQ_data_1 <= `BSV_ASSIGNMENT_DELAY 69'd0;
	coreFix_memExe_forwardQ_deqP <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_forwardQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_forwardQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_forwardQ_enqP <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_forwardQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    70'h0AAAAAAAAAAAAAAAAA;
	coreFix_memExe_forwardQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_ldMemLatTimer_started <= `BSV_ASSIGNMENT_DELAY 24'd0;
	coreFix_memExe_ldMemLatTimer_timer <= `BSV_ASSIGNMENT_DELAY 240'd0;
	coreFix_memExe_memRespLdQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_memRespLdQ_data_0 <= `BSV_ASSIGNMENT_DELAY 69'd0;
	coreFix_memExe_memRespLdQ_data_1 <= `BSV_ASSIGNMENT_DELAY 69'd0;
	coreFix_memExe_memRespLdQ_deqP <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_memRespLdQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_memRespLdQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_memRespLdQ_enqP <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_memRespLdQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    70'h0AAAAAAAAAAAAAAAAA;
	coreFix_memExe_memRespLdQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_reqLdQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	    69'h0AAAAAAAAAAAAAAAAA;
	coreFix_memExe_reqLdQ_empty_rl <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_reqLdQ_full_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_reqLrScAmoQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	    153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	coreFix_memExe_reqLrScAmoQ_empty_rl <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_reqLrScAmoQ_full_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_reqStQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	    66'h2AAAAAAAAAAAAAAAA;
	coreFix_memExe_reqStQ_empty_rl <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_reqStQ_full_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_respLrScAmoQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_respLrScAmoQ_data_0 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	coreFix_memExe_respLrScAmoQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_respLrScAmoQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	coreFix_memExe_respLrScAmoQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    65'h0AAAAAAAAAAAAAAAA;
	coreFix_memExe_respLrScAmoQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	coreFix_memExe_stMemLatTimer_started <= `BSV_ASSIGNMENT_DELAY 4'd0;
	coreFix_memExe_stMemLatTimer_timer <= `BSV_ASSIGNMENT_DELAY 40'd0;
	coreFix_memExe_waitLrScAmoMMIOResp <= `BSV_ASSIGNMENT_DELAY 3'd0;
	csrInstOrInterruptInflight_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_external_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_fflags_reg <= `BSV_ASSIGNMENT_DELAY 5'd0;
	csrf_frm_reg <= `BSV_ASSIGNMENT_DELAY 3'd0;
	csrf_fs_reg <= `BSV_ASSIGNMENT_DELAY 2'b01;
	csrf_ie_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_ie_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_ie_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mcause_code_reg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	csrf_mcause_interrupt_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mcounteren_cy_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mcounteren_ir_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mcounteren_tm_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mcycle_ehr_data_rl <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_medeleg_13_11_reg <= `BSV_ASSIGNMENT_DELAY 3'd0;
	csrf_medeleg_15_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_medeleg_9_0_reg <= `BSV_ASSIGNMENT_DELAY 10'd0;
	csrf_mepc_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_mideleg_11_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mideleg_1_0_reg <= `BSV_ASSIGNMENT_DELAY 2'd0;
	csrf_mideleg_5_3_reg <= `BSV_ASSIGNMENT_DELAY 3'd0;
	csrf_mideleg_9_7_reg <= `BSV_ASSIGNMENT_DELAY 3'd0;
	csrf_minstret_ehr_data_rl <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_mpp_reg <= `BSV_ASSIGNMENT_DELAY 2'd0;
	csrf_mprv_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mscratch_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_mtval_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_mtvec_base_hi_reg <= `BSV_ASSIGNMENT_DELAY 62'd0;
	csrf_mtvec_mode_low_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_mxr_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_ppn_reg <= `BSV_ASSIGNMENT_DELAY 44'd0;
	csrf_prev_ie_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_prev_ie_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_prev_ie_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_prv_reg <= `BSV_ASSIGNMENT_DELAY 2'd3;
	csrf_rg_tdata1_data <= `BSV_ASSIGNMENT_DELAY 59'd0;
	csrf_rg_tdata1_dmode <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_rg_tselect <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_scause_code_reg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	csrf_scause_interrupt_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_scounteren_cy_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_scounteren_ir_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_scounteren_tm_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_sepc_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_software_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_software_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_software_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_software_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_software_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_software_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_spp_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_sscratch_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_stats_module_doStats <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_stval_csr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_stvec_base_hi_reg <= `BSV_ASSIGNMENT_DELAY 62'd0;
	csrf_stvec_mode_low_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_sum_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_time_reg <= `BSV_ASSIGNMENT_DELAY 64'd0;
	csrf_timer_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_timer_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_timer_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_timer_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_timer_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_timer_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_tsr_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_tvm_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_tw_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	csrf_vm_mode_sv39_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	flush_reservation <= `BSV_ASSIGNMENT_DELAY 1'd0;
	flush_tlbs <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRqQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    142'h000000000000000008000000000000000000;
	mmio_cRqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRqQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_cRqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mmio_cRqQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRsQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRsQ_data_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRsQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_cRsQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_cRsQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY 2'd0;
	mmio_cRsQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataPendQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataPendQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataPendQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_dataPendQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataPendQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataReqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataReqQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	    142'h000000000000000008000000000000000000;
	mmio_dataReqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataReqQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_dataReqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mmio_dataReqQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataRespQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataRespQ_data_0 <= `BSV_ASSIGNMENT_DELAY 65'd0;
	mmio_dataRespQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_dataRespQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_dataRespQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	    66'h0AAAAAAAAAAAAAAAA;
	mmio_dataRespQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_fromHostAddr <= `BSV_ASSIGNMENT_DELAY 61'd0;
	mmio_pRqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_pRqQ_data_0 <= `BSV_ASSIGNMENT_DELAY 39'h0800000000;
	mmio_pRqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_pRqQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_pRqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY 40'h2AAAAAAAAA;
	mmio_pRqQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_pRsQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_pRsQ_data_0 <= `BSV_ASSIGNMENT_DELAY 69'h055552AAA95554AAAA;
	mmio_pRsQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_pRsQ_empty <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mmio_pRsQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY 70'h0AAAAAAAAAAAAAAAAA;
	mmio_pRsQ_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mmio_toHostAddr <= `BSV_ASSIGNMENT_DELAY 61'd0;
	outOfReset <= `BSV_ASSIGNMENT_DELAY 1'd0;
	started <= `BSV_ASSIGNMENT_DELAY 1'd0;
	update_vm_info <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (commitStage_commitTrap$EN)
	  commitStage_commitTrap <= `BSV_ASSIGNMENT_DELAY
	      commitStage_commitTrap$D_IN;
	if (commitStage_rg_serial_num$EN)
	  commitStage_rg_serial_num <= `BSV_ASSIGNMENT_DELAY
	      commitStage_rg_serial_num$D_IN;
	if (coreFix_doStatsReg$EN)
	  coreFix_doStatsReg <= `BSV_ASSIGNMENT_DELAY coreFix_doStatsReg$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0$D_IN;
	if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$EN)
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_latTimer_started$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_latTimer_started <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_latTimer_started$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_processAmo$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_processAmo$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl$D_IN;
	if (coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$EN)
	  coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_clearReq_rl$EN)
	  coreFix_memExe_dMem_perfReqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_clearReq_rl$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_data_0$EN)
	  coreFix_memExe_dMem_perfReqQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_data_0$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_deqReq_rl$EN)
	  coreFix_memExe_dMem_perfReqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_deqReq_rl$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_empty$EN)
	  coreFix_memExe_dMem_perfReqQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_empty$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_enqReq_rl$EN)
	  coreFix_memExe_dMem_perfReqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_enqReq_rl$D_IN;
	if (coreFix_memExe_dMem_perfReqQ_full$EN)
	  coreFix_memExe_dMem_perfReqQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_dMem_perfReqQ_full$D_IN;
	if (coreFix_memExe_forwardQ_clearReq_rl$EN)
	  coreFix_memExe_forwardQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_clearReq_rl$D_IN;
	if (coreFix_memExe_forwardQ_data_0$EN)
	  coreFix_memExe_forwardQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_data_0$D_IN;
	if (coreFix_memExe_forwardQ_data_1$EN)
	  coreFix_memExe_forwardQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_data_1$D_IN;
	if (coreFix_memExe_forwardQ_deqP$EN)
	  coreFix_memExe_forwardQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_deqP$D_IN;
	if (coreFix_memExe_forwardQ_deqReq_rl$EN)
	  coreFix_memExe_forwardQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_deqReq_rl$D_IN;
	if (coreFix_memExe_forwardQ_empty$EN)
	  coreFix_memExe_forwardQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_empty$D_IN;
	if (coreFix_memExe_forwardQ_enqP$EN)
	  coreFix_memExe_forwardQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_enqP$D_IN;
	if (coreFix_memExe_forwardQ_enqReq_rl$EN)
	  coreFix_memExe_forwardQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_enqReq_rl$D_IN;
	if (coreFix_memExe_forwardQ_full$EN)
	  coreFix_memExe_forwardQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_forwardQ_full$D_IN;
	if (coreFix_memExe_ldMemLatTimer_started$EN)
	  coreFix_memExe_ldMemLatTimer_started <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_ldMemLatTimer_started$D_IN;
	if (coreFix_memExe_ldMemLatTimer_timer$EN)
	  coreFix_memExe_ldMemLatTimer_timer <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_ldMemLatTimer_timer$D_IN;
	if (coreFix_memExe_memRespLdQ_clearReq_rl$EN)
	  coreFix_memExe_memRespLdQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_clearReq_rl$D_IN;
	if (coreFix_memExe_memRespLdQ_data_0$EN)
	  coreFix_memExe_memRespLdQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_data_0$D_IN;
	if (coreFix_memExe_memRespLdQ_data_1$EN)
	  coreFix_memExe_memRespLdQ_data_1 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_data_1$D_IN;
	if (coreFix_memExe_memRespLdQ_deqP$EN)
	  coreFix_memExe_memRespLdQ_deqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_deqP$D_IN;
	if (coreFix_memExe_memRespLdQ_deqReq_rl$EN)
	  coreFix_memExe_memRespLdQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_deqReq_rl$D_IN;
	if (coreFix_memExe_memRespLdQ_empty$EN)
	  coreFix_memExe_memRespLdQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_empty$D_IN;
	if (coreFix_memExe_memRespLdQ_enqP$EN)
	  coreFix_memExe_memRespLdQ_enqP <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_enqP$D_IN;
	if (coreFix_memExe_memRespLdQ_enqReq_rl$EN)
	  coreFix_memExe_memRespLdQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_enqReq_rl$D_IN;
	if (coreFix_memExe_memRespLdQ_full$EN)
	  coreFix_memExe_memRespLdQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_memRespLdQ_full$D_IN;
	if (coreFix_memExe_reqLdQ_data_0_rl$EN)
	  coreFix_memExe_reqLdQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLdQ_data_0_rl$D_IN;
	if (coreFix_memExe_reqLdQ_empty_rl$EN)
	  coreFix_memExe_reqLdQ_empty_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLdQ_empty_rl$D_IN;
	if (coreFix_memExe_reqLdQ_full_rl$EN)
	  coreFix_memExe_reqLdQ_full_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLdQ_full_rl$D_IN;
	if (coreFix_memExe_reqLrScAmoQ_data_0_rl$EN)
	  coreFix_memExe_reqLrScAmoQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLrScAmoQ_data_0_rl$D_IN;
	if (coreFix_memExe_reqLrScAmoQ_empty_rl$EN)
	  coreFix_memExe_reqLrScAmoQ_empty_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLrScAmoQ_empty_rl$D_IN;
	if (coreFix_memExe_reqLrScAmoQ_full_rl$EN)
	  coreFix_memExe_reqLrScAmoQ_full_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqLrScAmoQ_full_rl$D_IN;
	if (coreFix_memExe_reqStQ_data_0_rl$EN)
	  coreFix_memExe_reqStQ_data_0_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqStQ_data_0_rl$D_IN;
	if (coreFix_memExe_reqStQ_empty_rl$EN)
	  coreFix_memExe_reqStQ_empty_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqStQ_empty_rl$D_IN;
	if (coreFix_memExe_reqStQ_full_rl$EN)
	  coreFix_memExe_reqStQ_full_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_reqStQ_full_rl$D_IN;
	if (coreFix_memExe_respLrScAmoQ_clearReq_rl$EN)
	  coreFix_memExe_respLrScAmoQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_clearReq_rl$D_IN;
	if (coreFix_memExe_respLrScAmoQ_data_0$EN)
	  coreFix_memExe_respLrScAmoQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_data_0$D_IN;
	if (coreFix_memExe_respLrScAmoQ_deqReq_rl$EN)
	  coreFix_memExe_respLrScAmoQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_deqReq_rl$D_IN;
	if (coreFix_memExe_respLrScAmoQ_empty$EN)
	  coreFix_memExe_respLrScAmoQ_empty <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_empty$D_IN;
	if (coreFix_memExe_respLrScAmoQ_enqReq_rl$EN)
	  coreFix_memExe_respLrScAmoQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_enqReq_rl$D_IN;
	if (coreFix_memExe_respLrScAmoQ_full$EN)
	  coreFix_memExe_respLrScAmoQ_full <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_respLrScAmoQ_full$D_IN;
	if (coreFix_memExe_stMemLatTimer_started$EN)
	  coreFix_memExe_stMemLatTimer_started <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_stMemLatTimer_started$D_IN;
	if (coreFix_memExe_stMemLatTimer_timer$EN)
	  coreFix_memExe_stMemLatTimer_timer <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_stMemLatTimer_timer$D_IN;
	if (coreFix_memExe_waitLrScAmoMMIOResp$EN)
	  coreFix_memExe_waitLrScAmoMMIOResp <= `BSV_ASSIGNMENT_DELAY
	      coreFix_memExe_waitLrScAmoMMIOResp$D_IN;
	if (csrInstOrInterruptInflight_rl$EN)
	  csrInstOrInterruptInflight_rl <= `BSV_ASSIGNMENT_DELAY
	      csrInstOrInterruptInflight_rl$D_IN;
	if (csrf_external_int_en_vec_0$EN)
	  csrf_external_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_en_vec_0$D_IN;
	if (csrf_external_int_en_vec_1$EN)
	  csrf_external_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_en_vec_1$D_IN;
	if (csrf_external_int_en_vec_3$EN)
	  csrf_external_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_en_vec_3$D_IN;
	if (csrf_external_int_pend_vec_0$EN)
	  csrf_external_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_pend_vec_0$D_IN;
	if (csrf_external_int_pend_vec_1$EN)
	  csrf_external_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_pend_vec_1$D_IN;
	if (csrf_external_int_pend_vec_3$EN)
	  csrf_external_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_external_int_pend_vec_3$D_IN;
	if (csrf_fflags_reg$EN)
	  csrf_fflags_reg <= `BSV_ASSIGNMENT_DELAY csrf_fflags_reg$D_IN;
	if (csrf_frm_reg$EN)
	  csrf_frm_reg <= `BSV_ASSIGNMENT_DELAY csrf_frm_reg$D_IN;
	if (csrf_fs_reg$EN)
	  csrf_fs_reg <= `BSV_ASSIGNMENT_DELAY csrf_fs_reg$D_IN;
	if (csrf_ie_vec_0$EN)
	  csrf_ie_vec_0 <= `BSV_ASSIGNMENT_DELAY csrf_ie_vec_0$D_IN;
	if (csrf_ie_vec_1$EN)
	  csrf_ie_vec_1 <= `BSV_ASSIGNMENT_DELAY csrf_ie_vec_1$D_IN;
	if (csrf_ie_vec_3$EN)
	  csrf_ie_vec_3 <= `BSV_ASSIGNMENT_DELAY csrf_ie_vec_3$D_IN;
	if (csrf_mcause_code_reg$EN)
	  csrf_mcause_code_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcause_code_reg$D_IN;
	if (csrf_mcause_interrupt_reg$EN)
	  csrf_mcause_interrupt_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcause_interrupt_reg$D_IN;
	if (csrf_mcounteren_cy_reg$EN)
	  csrf_mcounteren_cy_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcounteren_cy_reg$D_IN;
	if (csrf_mcounteren_ir_reg$EN)
	  csrf_mcounteren_ir_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcounteren_ir_reg$D_IN;
	if (csrf_mcounteren_tm_reg$EN)
	  csrf_mcounteren_tm_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcounteren_tm_reg$D_IN;
	if (csrf_mcycle_ehr_data_rl$EN)
	  csrf_mcycle_ehr_data_rl <= `BSV_ASSIGNMENT_DELAY
	      csrf_mcycle_ehr_data_rl$D_IN;
	if (csrf_medeleg_13_11_reg$EN)
	  csrf_medeleg_13_11_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_medeleg_13_11_reg$D_IN;
	if (csrf_medeleg_15_reg$EN)
	  csrf_medeleg_15_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_medeleg_15_reg$D_IN;
	if (csrf_medeleg_9_0_reg$EN)
	  csrf_medeleg_9_0_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_medeleg_9_0_reg$D_IN;
	if (csrf_mepc_csr$EN)
	  csrf_mepc_csr <= `BSV_ASSIGNMENT_DELAY csrf_mepc_csr$D_IN;
	if (csrf_mideleg_11_reg$EN)
	  csrf_mideleg_11_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mideleg_11_reg$D_IN;
	if (csrf_mideleg_1_0_reg$EN)
	  csrf_mideleg_1_0_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mideleg_1_0_reg$D_IN;
	if (csrf_mideleg_5_3_reg$EN)
	  csrf_mideleg_5_3_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mideleg_5_3_reg$D_IN;
	if (csrf_mideleg_9_7_reg$EN)
	  csrf_mideleg_9_7_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mideleg_9_7_reg$D_IN;
	if (csrf_minstret_ehr_data_rl$EN)
	  csrf_minstret_ehr_data_rl <= `BSV_ASSIGNMENT_DELAY
	      csrf_minstret_ehr_data_rl$D_IN;
	if (csrf_mpp_reg$EN)
	  csrf_mpp_reg <= `BSV_ASSIGNMENT_DELAY csrf_mpp_reg$D_IN;
	if (csrf_mprv_reg$EN)
	  csrf_mprv_reg <= `BSV_ASSIGNMENT_DELAY csrf_mprv_reg$D_IN;
	if (csrf_mscratch_csr$EN)
	  csrf_mscratch_csr <= `BSV_ASSIGNMENT_DELAY csrf_mscratch_csr$D_IN;
	if (csrf_mtval_csr$EN)
	  csrf_mtval_csr <= `BSV_ASSIGNMENT_DELAY csrf_mtval_csr$D_IN;
	if (csrf_mtvec_base_hi_reg$EN)
	  csrf_mtvec_base_hi_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mtvec_base_hi_reg$D_IN;
	if (csrf_mtvec_mode_low_reg$EN)
	  csrf_mtvec_mode_low_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_mtvec_mode_low_reg$D_IN;
	if (csrf_mxr_reg$EN)
	  csrf_mxr_reg <= `BSV_ASSIGNMENT_DELAY csrf_mxr_reg$D_IN;
	if (csrf_ppn_reg$EN)
	  csrf_ppn_reg <= `BSV_ASSIGNMENT_DELAY csrf_ppn_reg$D_IN;
	if (csrf_prev_ie_vec_0$EN)
	  csrf_prev_ie_vec_0 <= `BSV_ASSIGNMENT_DELAY csrf_prev_ie_vec_0$D_IN;
	if (csrf_prev_ie_vec_1$EN)
	  csrf_prev_ie_vec_1 <= `BSV_ASSIGNMENT_DELAY csrf_prev_ie_vec_1$D_IN;
	if (csrf_prev_ie_vec_3$EN)
	  csrf_prev_ie_vec_3 <= `BSV_ASSIGNMENT_DELAY csrf_prev_ie_vec_3$D_IN;
	if (csrf_prv_reg$EN)
	  csrf_prv_reg <= `BSV_ASSIGNMENT_DELAY csrf_prv_reg$D_IN;
	if (csrf_rg_tdata1_data$EN)
	  csrf_rg_tdata1_data <= `BSV_ASSIGNMENT_DELAY
	      csrf_rg_tdata1_data$D_IN;
	if (csrf_rg_tdata1_dmode$EN)
	  csrf_rg_tdata1_dmode <= `BSV_ASSIGNMENT_DELAY
	      csrf_rg_tdata1_dmode$D_IN;
	if (csrf_rg_tselect$EN)
	  csrf_rg_tselect <= `BSV_ASSIGNMENT_DELAY csrf_rg_tselect$D_IN;
	if (csrf_scause_code_reg$EN)
	  csrf_scause_code_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_scause_code_reg$D_IN;
	if (csrf_scause_interrupt_reg$EN)
	  csrf_scause_interrupt_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_scause_interrupt_reg$D_IN;
	if (csrf_scounteren_cy_reg$EN)
	  csrf_scounteren_cy_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_scounteren_cy_reg$D_IN;
	if (csrf_scounteren_ir_reg$EN)
	  csrf_scounteren_ir_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_scounteren_ir_reg$D_IN;
	if (csrf_scounteren_tm_reg$EN)
	  csrf_scounteren_tm_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_scounteren_tm_reg$D_IN;
	if (csrf_sepc_csr$EN)
	  csrf_sepc_csr <= `BSV_ASSIGNMENT_DELAY csrf_sepc_csr$D_IN;
	if (csrf_software_int_en_vec_0$EN)
	  csrf_software_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_en_vec_0$D_IN;
	if (csrf_software_int_en_vec_1$EN)
	  csrf_software_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_en_vec_1$D_IN;
	if (csrf_software_int_en_vec_3$EN)
	  csrf_software_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_en_vec_3$D_IN;
	if (csrf_software_int_pend_vec_0$EN)
	  csrf_software_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_pend_vec_0$D_IN;
	if (csrf_software_int_pend_vec_1$EN)
	  csrf_software_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_pend_vec_1$D_IN;
	if (csrf_software_int_pend_vec_3$EN)
	  csrf_software_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_software_int_pend_vec_3$D_IN;
	if (csrf_spp_reg$EN)
	  csrf_spp_reg <= `BSV_ASSIGNMENT_DELAY csrf_spp_reg$D_IN;
	if (csrf_sscratch_csr$EN)
	  csrf_sscratch_csr <= `BSV_ASSIGNMENT_DELAY csrf_sscratch_csr$D_IN;
	if (csrf_stats_module_doStats$EN)
	  csrf_stats_module_doStats <= `BSV_ASSIGNMENT_DELAY
	      csrf_stats_module_doStats$D_IN;
	if (csrf_stval_csr$EN)
	  csrf_stval_csr <= `BSV_ASSIGNMENT_DELAY csrf_stval_csr$D_IN;
	if (csrf_stvec_base_hi_reg$EN)
	  csrf_stvec_base_hi_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_stvec_base_hi_reg$D_IN;
	if (csrf_stvec_mode_low_reg$EN)
	  csrf_stvec_mode_low_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_stvec_mode_low_reg$D_IN;
	if (csrf_sum_reg$EN)
	  csrf_sum_reg <= `BSV_ASSIGNMENT_DELAY csrf_sum_reg$D_IN;
	if (csrf_time_reg$EN)
	  csrf_time_reg <= `BSV_ASSIGNMENT_DELAY csrf_time_reg$D_IN;
	if (csrf_timer_int_en_vec_0$EN)
	  csrf_timer_int_en_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_en_vec_0$D_IN;
	if (csrf_timer_int_en_vec_1$EN)
	  csrf_timer_int_en_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_en_vec_1$D_IN;
	if (csrf_timer_int_en_vec_3$EN)
	  csrf_timer_int_en_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_en_vec_3$D_IN;
	if (csrf_timer_int_pend_vec_0$EN)
	  csrf_timer_int_pend_vec_0 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_pend_vec_0$D_IN;
	if (csrf_timer_int_pend_vec_1$EN)
	  csrf_timer_int_pend_vec_1 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_pend_vec_1$D_IN;
	if (csrf_timer_int_pend_vec_3$EN)
	  csrf_timer_int_pend_vec_3 <= `BSV_ASSIGNMENT_DELAY
	      csrf_timer_int_pend_vec_3$D_IN;
	if (csrf_tsr_reg$EN)
	  csrf_tsr_reg <= `BSV_ASSIGNMENT_DELAY csrf_tsr_reg$D_IN;
	if (csrf_tvm_reg$EN)
	  csrf_tvm_reg <= `BSV_ASSIGNMENT_DELAY csrf_tvm_reg$D_IN;
	if (csrf_tw_reg$EN)
	  csrf_tw_reg <= `BSV_ASSIGNMENT_DELAY csrf_tw_reg$D_IN;
	if (csrf_vm_mode_sv39_reg$EN)
	  csrf_vm_mode_sv39_reg <= `BSV_ASSIGNMENT_DELAY
	      csrf_vm_mode_sv39_reg$D_IN;
	if (flush_reservation$EN)
	  flush_reservation <= `BSV_ASSIGNMENT_DELAY flush_reservation$D_IN;
	if (flush_tlbs$EN)
	  flush_tlbs <= `BSV_ASSIGNMENT_DELAY flush_tlbs$D_IN;
	if (mmio_cRqQ_clearReq_rl$EN)
	  mmio_cRqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRqQ_clearReq_rl$D_IN;
	if (mmio_cRqQ_data_0$EN)
	  mmio_cRqQ_data_0 <= `BSV_ASSIGNMENT_DELAY mmio_cRqQ_data_0$D_IN;
	if (mmio_cRqQ_deqReq_rl$EN)
	  mmio_cRqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRqQ_deqReq_rl$D_IN;
	if (mmio_cRqQ_empty$EN)
	  mmio_cRqQ_empty <= `BSV_ASSIGNMENT_DELAY mmio_cRqQ_empty$D_IN;
	if (mmio_cRqQ_enqReq_rl$EN)
	  mmio_cRqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRqQ_enqReq_rl$D_IN;
	if (mmio_cRqQ_full$EN)
	  mmio_cRqQ_full <= `BSV_ASSIGNMENT_DELAY mmio_cRqQ_full$D_IN;
	if (mmio_cRsQ_clearReq_rl$EN)
	  mmio_cRsQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRsQ_clearReq_rl$D_IN;
	if (mmio_cRsQ_data_0$EN)
	  mmio_cRsQ_data_0 <= `BSV_ASSIGNMENT_DELAY mmio_cRsQ_data_0$D_IN;
	if (mmio_cRsQ_deqReq_rl$EN)
	  mmio_cRsQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRsQ_deqReq_rl$D_IN;
	if (mmio_cRsQ_empty$EN)
	  mmio_cRsQ_empty <= `BSV_ASSIGNMENT_DELAY mmio_cRsQ_empty$D_IN;
	if (mmio_cRsQ_enqReq_rl$EN)
	  mmio_cRsQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_cRsQ_enqReq_rl$D_IN;
	if (mmio_cRsQ_full$EN)
	  mmio_cRsQ_full <= `BSV_ASSIGNMENT_DELAY mmio_cRsQ_full$D_IN;
	if (mmio_dataPendQ_clearReq_rl$EN)
	  mmio_dataPendQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataPendQ_clearReq_rl$D_IN;
	if (mmio_dataPendQ_deqReq_rl$EN)
	  mmio_dataPendQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataPendQ_deqReq_rl$D_IN;
	if (mmio_dataPendQ_empty$EN)
	  mmio_dataPendQ_empty <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataPendQ_empty$D_IN;
	if (mmio_dataPendQ_enqReq_rl$EN)
	  mmio_dataPendQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataPendQ_enqReq_rl$D_IN;
	if (mmio_dataPendQ_full$EN)
	  mmio_dataPendQ_full <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataPendQ_full$D_IN;
	if (mmio_dataReqQ_clearReq_rl$EN)
	  mmio_dataReqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataReqQ_clearReq_rl$D_IN;
	if (mmio_dataReqQ_data_0$EN)
	  mmio_dataReqQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataReqQ_data_0$D_IN;
	if (mmio_dataReqQ_deqReq_rl$EN)
	  mmio_dataReqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataReqQ_deqReq_rl$D_IN;
	if (mmio_dataReqQ_empty$EN)
	  mmio_dataReqQ_empty <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataReqQ_empty$D_IN;
	if (mmio_dataReqQ_enqReq_rl$EN)
	  mmio_dataReqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataReqQ_enqReq_rl$D_IN;
	if (mmio_dataReqQ_full$EN)
	  mmio_dataReqQ_full <= `BSV_ASSIGNMENT_DELAY mmio_dataReqQ_full$D_IN;
	if (mmio_dataRespQ_clearReq_rl$EN)
	  mmio_dataRespQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_clearReq_rl$D_IN;
	if (mmio_dataRespQ_data_0$EN)
	  mmio_dataRespQ_data_0 <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_data_0$D_IN;
	if (mmio_dataRespQ_deqReq_rl$EN)
	  mmio_dataRespQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_deqReq_rl$D_IN;
	if (mmio_dataRespQ_empty$EN)
	  mmio_dataRespQ_empty <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_empty$D_IN;
	if (mmio_dataRespQ_enqReq_rl$EN)
	  mmio_dataRespQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_enqReq_rl$D_IN;
	if (mmio_dataRespQ_full$EN)
	  mmio_dataRespQ_full <= `BSV_ASSIGNMENT_DELAY
	      mmio_dataRespQ_full$D_IN;
	if (mmio_fromHostAddr$EN)
	  mmio_fromHostAddr <= `BSV_ASSIGNMENT_DELAY mmio_fromHostAddr$D_IN;
	if (mmio_pRqQ_clearReq_rl$EN)
	  mmio_pRqQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRqQ_clearReq_rl$D_IN;
	if (mmio_pRqQ_data_0$EN)
	  mmio_pRqQ_data_0 <= `BSV_ASSIGNMENT_DELAY mmio_pRqQ_data_0$D_IN;
	if (mmio_pRqQ_deqReq_rl$EN)
	  mmio_pRqQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRqQ_deqReq_rl$D_IN;
	if (mmio_pRqQ_empty$EN)
	  mmio_pRqQ_empty <= `BSV_ASSIGNMENT_DELAY mmio_pRqQ_empty$D_IN;
	if (mmio_pRqQ_enqReq_rl$EN)
	  mmio_pRqQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRqQ_enqReq_rl$D_IN;
	if (mmio_pRqQ_full$EN)
	  mmio_pRqQ_full <= `BSV_ASSIGNMENT_DELAY mmio_pRqQ_full$D_IN;
	if (mmio_pRsQ_clearReq_rl$EN)
	  mmio_pRsQ_clearReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRsQ_clearReq_rl$D_IN;
	if (mmio_pRsQ_data_0$EN)
	  mmio_pRsQ_data_0 <= `BSV_ASSIGNMENT_DELAY mmio_pRsQ_data_0$D_IN;
	if (mmio_pRsQ_deqReq_rl$EN)
	  mmio_pRsQ_deqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRsQ_deqReq_rl$D_IN;
	if (mmio_pRsQ_empty$EN)
	  mmio_pRsQ_empty <= `BSV_ASSIGNMENT_DELAY mmio_pRsQ_empty$D_IN;
	if (mmio_pRsQ_enqReq_rl$EN)
	  mmio_pRsQ_enqReq_rl <= `BSV_ASSIGNMENT_DELAY
	      mmio_pRsQ_enqReq_rl$D_IN;
	if (mmio_pRsQ_full$EN)
	  mmio_pRsQ_full <= `BSV_ASSIGNMENT_DELAY mmio_pRsQ_full$D_IN;
	if (mmio_toHostAddr$EN)
	  mmio_toHostAddr <= `BSV_ASSIGNMENT_DELAY mmio_toHostAddr$D_IN;
	if (outOfReset$EN)
	  outOfReset <= `BSV_ASSIGNMENT_DELAY outOfReset$D_IN;
	if (started$EN) started <= `BSV_ASSIGNMENT_DELAY started$D_IN;
	if (update_vm_info$EN)
	  update_vm_info <= `BSV_ASSIGNMENT_DELAY update_vm_info$D_IN;
      end
    if (csrf_rg_tdata2$EN)
      csrf_rg_tdata2 <= `BSV_ASSIGNMENT_DELAY csrf_rg_tdata2$D_IN;
    if (csrf_rg_tdata3$EN)
      csrf_rg_tdata3 <= `BSV_ASSIGNMENT_DELAY csrf_rg_tdata3$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    commitStage_commitTrap = 166'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    commitStage_rg_serial_num = 64'hAAAAAAAAAAAAAAAA;
    coreFix_doStatsReg = 1'h0;
    coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_cnt = 4'hA;
    coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_init = 1'h0;
    coreFix_fpuMulDivExe_0_mulDivExec_divUnit_init_rg_ready = 1'h0;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit = 2'h2;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_0 =
	129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSignedUnsigned_pipe_1 =
	129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_0 =
	129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulSigned_pipe_1 =
	129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_0 =
	129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_mulUnsigned_pipe_1 =
	129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_0 = 3'h2;
    coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_pipe_1 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_clearReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_0 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_1 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_2 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_3 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_4 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_5 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_6 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_data_7 = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqP = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_deqReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_empty = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqP = 3'h2;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_enqReq_rl = 4'hA;
    coreFix_memExe_dMem_cache_m_banks_0_cRqRetryIndexQ_full = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_clearReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_0 =
	583'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_data_1 =
	583'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_deqReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_empty = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_enqReq_rl =
	584'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_fromPQ_full = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_latTimer_started = 8'hAA;
    coreFix_memExe_dMem_cache_m_banks_0_latTimer_timer =
	80'hAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_linkAddrEhr_rl = 59'h2AAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_processAmo =
	161'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_data_0_rl =
	153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_empty_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqFromCQ_full_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_clearReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_0 =
	72'hAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_data_1 =
	72'hAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_deqReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_empty = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_enqReq_rl =
	73'h0AAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rqToPQ_full = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_clearReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_0 =
	579'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_data_1 =
	579'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_deqReq_rl = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_empty = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqP = 1'h0;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_enqReq_rl =
	580'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_dMem_cache_m_banks_0_rsToPQ_full = 1'h0;
    coreFix_memExe_dMem_perfReqQ_clearReq_rl = 1'h0;
    coreFix_memExe_dMem_perfReqQ_data_0 = 4'hA;
    coreFix_memExe_dMem_perfReqQ_deqReq_rl = 1'h0;
    coreFix_memExe_dMem_perfReqQ_empty = 1'h0;
    coreFix_memExe_dMem_perfReqQ_enqReq_rl = 5'h0A;
    coreFix_memExe_dMem_perfReqQ_full = 1'h0;
    coreFix_memExe_forwardQ_clearReq_rl = 1'h0;
    coreFix_memExe_forwardQ_data_0 = 69'h0AAAAAAAAAAAAAAAAA;
    coreFix_memExe_forwardQ_data_1 = 69'h0AAAAAAAAAAAAAAAAA;
    coreFix_memExe_forwardQ_deqP = 1'h0;
    coreFix_memExe_forwardQ_deqReq_rl = 1'h0;
    coreFix_memExe_forwardQ_empty = 1'h0;
    coreFix_memExe_forwardQ_enqP = 1'h0;
    coreFix_memExe_forwardQ_enqReq_rl = 70'h2AAAAAAAAAAAAAAAAA;
    coreFix_memExe_forwardQ_full = 1'h0;
    coreFix_memExe_ldMemLatTimer_started = 24'hAAAAAA;
    coreFix_memExe_ldMemLatTimer_timer =
	240'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_memRespLdQ_clearReq_rl = 1'h0;
    coreFix_memExe_memRespLdQ_data_0 = 69'h0AAAAAAAAAAAAAAAAA;
    coreFix_memExe_memRespLdQ_data_1 = 69'h0AAAAAAAAAAAAAAAAA;
    coreFix_memExe_memRespLdQ_deqP = 1'h0;
    coreFix_memExe_memRespLdQ_deqReq_rl = 1'h0;
    coreFix_memExe_memRespLdQ_empty = 1'h0;
    coreFix_memExe_memRespLdQ_enqP = 1'h0;
    coreFix_memExe_memRespLdQ_enqReq_rl = 70'h2AAAAAAAAAAAAAAAAA;
    coreFix_memExe_memRespLdQ_full = 1'h0;
    coreFix_memExe_reqLdQ_data_0_rl = 69'h0AAAAAAAAAAAAAAAAA;
    coreFix_memExe_reqLdQ_empty_rl = 1'h0;
    coreFix_memExe_reqLdQ_full_rl = 1'h0;
    coreFix_memExe_reqLrScAmoQ_data_0_rl =
	153'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    coreFix_memExe_reqLrScAmoQ_empty_rl = 1'h0;
    coreFix_memExe_reqLrScAmoQ_full_rl = 1'h0;
    coreFix_memExe_reqStQ_data_0_rl = 66'h2AAAAAAAAAAAAAAAA;
    coreFix_memExe_reqStQ_empty_rl = 1'h0;
    coreFix_memExe_reqStQ_full_rl = 1'h0;
    coreFix_memExe_respLrScAmoQ_clearReq_rl = 1'h0;
    coreFix_memExe_respLrScAmoQ_data_0 = 64'hAAAAAAAAAAAAAAAA;
    coreFix_memExe_respLrScAmoQ_deqReq_rl = 1'h0;
    coreFix_memExe_respLrScAmoQ_empty = 1'h0;
    coreFix_memExe_respLrScAmoQ_enqReq_rl = 65'h0AAAAAAAAAAAAAAAA;
    coreFix_memExe_respLrScAmoQ_full = 1'h0;
    coreFix_memExe_stMemLatTimer_started = 4'hA;
    coreFix_memExe_stMemLatTimer_timer = 40'hAAAAAAAAAA;
    coreFix_memExe_waitLrScAmoMMIOResp = 3'h2;
    csrInstOrInterruptInflight_rl = 1'h0;
    csrf_external_int_en_vec_0 = 1'h0;
    csrf_external_int_en_vec_1 = 1'h0;
    csrf_external_int_en_vec_3 = 1'h0;
    csrf_external_int_pend_vec_0 = 1'h0;
    csrf_external_int_pend_vec_1 = 1'h0;
    csrf_external_int_pend_vec_3 = 1'h0;
    csrf_fflags_reg = 5'h0A;
    csrf_frm_reg = 3'h2;
    csrf_fs_reg = 2'h2;
    csrf_ie_vec_0 = 1'h0;
    csrf_ie_vec_1 = 1'h0;
    csrf_ie_vec_3 = 1'h0;
    csrf_mcause_code_reg = 4'hA;
    csrf_mcause_interrupt_reg = 1'h0;
    csrf_mcounteren_cy_reg = 1'h0;
    csrf_mcounteren_ir_reg = 1'h0;
    csrf_mcounteren_tm_reg = 1'h0;
    csrf_mcycle_ehr_data_rl = 64'hAAAAAAAAAAAAAAAA;
    csrf_medeleg_13_11_reg = 3'h2;
    csrf_medeleg_15_reg = 1'h0;
    csrf_medeleg_9_0_reg = 10'h2AA;
    csrf_mepc_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_mideleg_11_reg = 1'h0;
    csrf_mideleg_1_0_reg = 2'h2;
    csrf_mideleg_5_3_reg = 3'h2;
    csrf_mideleg_9_7_reg = 3'h2;
    csrf_minstret_ehr_data_rl = 64'hAAAAAAAAAAAAAAAA;
    csrf_mpp_reg = 2'h2;
    csrf_mprv_reg = 1'h0;
    csrf_mscratch_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_mtval_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_mtvec_base_hi_reg = 62'h2AAAAAAAAAAAAAAA;
    csrf_mtvec_mode_low_reg = 1'h0;
    csrf_mxr_reg = 1'h0;
    csrf_ppn_reg = 44'hAAAAAAAAAAA;
    csrf_prev_ie_vec_0 = 1'h0;
    csrf_prev_ie_vec_1 = 1'h0;
    csrf_prev_ie_vec_3 = 1'h0;
    csrf_prv_reg = 2'h2;
    csrf_rg_tdata1_data = 59'h2AAAAAAAAAAAAAA;
    csrf_rg_tdata1_dmode = 1'h0;
    csrf_rg_tdata2 = 64'hAAAAAAAAAAAAAAAA;
    csrf_rg_tdata3 = 64'hAAAAAAAAAAAAAAAA;
    csrf_rg_tselect = 64'hAAAAAAAAAAAAAAAA;
    csrf_scause_code_reg = 4'hA;
    csrf_scause_interrupt_reg = 1'h0;
    csrf_scounteren_cy_reg = 1'h0;
    csrf_scounteren_ir_reg = 1'h0;
    csrf_scounteren_tm_reg = 1'h0;
    csrf_sepc_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_software_int_en_vec_0 = 1'h0;
    csrf_software_int_en_vec_1 = 1'h0;
    csrf_software_int_en_vec_3 = 1'h0;
    csrf_software_int_pend_vec_0 = 1'h0;
    csrf_software_int_pend_vec_1 = 1'h0;
    csrf_software_int_pend_vec_3 = 1'h0;
    csrf_spp_reg = 1'h0;
    csrf_sscratch_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_stats_module_doStats = 1'h0;
    csrf_stval_csr = 64'hAAAAAAAAAAAAAAAA;
    csrf_stvec_base_hi_reg = 62'h2AAAAAAAAAAAAAAA;
    csrf_stvec_mode_low_reg = 1'h0;
    csrf_sum_reg = 1'h0;
    csrf_time_reg = 64'hAAAAAAAAAAAAAAAA;
    csrf_timer_int_en_vec_0 = 1'h0;
    csrf_timer_int_en_vec_1 = 1'h0;
    csrf_timer_int_en_vec_3 = 1'h0;
    csrf_timer_int_pend_vec_0 = 1'h0;
    csrf_timer_int_pend_vec_1 = 1'h0;
    csrf_timer_int_pend_vec_3 = 1'h0;
    csrf_tsr_reg = 1'h0;
    csrf_tvm_reg = 1'h0;
    csrf_tw_reg = 1'h0;
    csrf_vm_mode_sv39_reg = 1'h0;
    flush_reservation = 1'h0;
    flush_tlbs = 1'h0;
    mmio_cRqQ_clearReq_rl = 1'h0;
    mmio_cRqQ_data_0 = 142'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mmio_cRqQ_deqReq_rl = 1'h0;
    mmio_cRqQ_empty = 1'h0;
    mmio_cRqQ_enqReq_rl = 143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mmio_cRqQ_full = 1'h0;
    mmio_cRsQ_clearReq_rl = 1'h0;
    mmio_cRsQ_data_0 = 1'h0;
    mmio_cRsQ_deqReq_rl = 1'h0;
    mmio_cRsQ_empty = 1'h0;
    mmio_cRsQ_enqReq_rl = 2'h2;
    mmio_cRsQ_full = 1'h0;
    mmio_dataPendQ_clearReq_rl = 1'h0;
    mmio_dataPendQ_deqReq_rl = 1'h0;
    mmio_dataPendQ_empty = 1'h0;
    mmio_dataPendQ_enqReq_rl = 1'h0;
    mmio_dataPendQ_full = 1'h0;
    mmio_dataReqQ_clearReq_rl = 1'h0;
    mmio_dataReqQ_data_0 = 142'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mmio_dataReqQ_deqReq_rl = 1'h0;
    mmio_dataReqQ_empty = 1'h0;
    mmio_dataReqQ_enqReq_rl = 143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mmio_dataReqQ_full = 1'h0;
    mmio_dataRespQ_clearReq_rl = 1'h0;
    mmio_dataRespQ_data_0 = 65'h0AAAAAAAAAAAAAAAA;
    mmio_dataRespQ_deqReq_rl = 1'h0;
    mmio_dataRespQ_empty = 1'h0;
    mmio_dataRespQ_enqReq_rl = 66'h2AAAAAAAAAAAAAAAA;
    mmio_dataRespQ_full = 1'h0;
    mmio_fromHostAddr = 61'h0AAAAAAAAAAAAAAA;
    mmio_pRqQ_clearReq_rl = 1'h0;
    mmio_pRqQ_data_0 = 39'h2AAAAAAAAA;
    mmio_pRqQ_deqReq_rl = 1'h0;
    mmio_pRqQ_empty = 1'h0;
    mmio_pRqQ_enqReq_rl = 40'hAAAAAAAAAA;
    mmio_pRqQ_full = 1'h0;
    mmio_pRsQ_clearReq_rl = 1'h0;
    mmio_pRsQ_data_0 = 69'h0AAAAAAAAAAAAAAAAA;
    mmio_pRsQ_deqReq_rl = 1'h0;
    mmio_pRsQ_empty = 1'h0;
    mmio_pRsQ_enqReq_rl = 70'h2AAAAAAAAAAAAAAAAA;
    mmio_pRsQ_full = 1'h0;
    mmio_toHostAddr = 61'h0AAAAAAAAAAAAAAA;
    outOfReset = 1'h0;
    started = 1'h0;
    update_vm_info = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_outOfReset)
	$fwrite(32'h80000002, "mkProc came out of reset\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mmio_handlePRq && mmio_pRqQ_data_0[38] &&
	  mmio_pRqQ_data_0[37:36] != 2'd2)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mmio_handlePRq && mmio_pRqQ_data_0[38] &&
	  mmio_pRqQ_data_0[37:36] != 2'd2)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/MMIOCore.bsv\", line 133, column 37\nplatform can only write MTIP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mmio_handlePRq && mmio_pRqQ_data_0[38] &&
	  mmio_pRqQ_data_0[37:36] != 2'd2)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue &&
	  coreFix_memExe_lsq$firstLd[2])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue &&
	  coreFix_memExe_lsq$firstLd[2])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 795, column 45\ncannot be killed");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_issue &&
	  coreFix_memExe_lsq$firstLd[2])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstLd[2])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstLd[2])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 874, column 45\ncannot be killed");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstLd[2])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstLd[101])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstLd[101])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 875, column 42\nLdQ MMIO is only Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstLd[101])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState !=
	  3'd2)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState !=
	  3'd2)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 392, column 13\nsend replacement resp to parent, state should be WaitNewTag");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_sendRsToP_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$sendRsToP_cRq_getState !=
	  3'd2)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo &&
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo[87:86] != 2'd3)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo &&
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo[87:86] != 2'd3)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 610, column 36\nAMO must req for M");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_doProcessAmo &&
	  coreFix_memExe_dMem_cache_m_banks_0_processAmo[87:86] != 2'd3)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2597)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2597)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 889, column 22\npRqMiss deasserted, must be down to S");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2597)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2614)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2614)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 906, column 18\npRq overtakes CRq");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2614)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush)
	$write("instret:%0d  PC:0x%0h  instr:0x%08h",
	       commitStage_rg_serial_num,
	       rob$deqPort_0_deq_data[353:290],
	       rob$deqPort_0_deq_data[289:258],
	       "  iType:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd0)
	$write("Unsupported");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd1)
	$write("Nop");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd2)
	$write("Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd3)
	$write("Alu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd4)
	$write("Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd5)
	$write("St");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd6)
	$write("Lr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd7)
	$write("Sc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd8)
	$write("J");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd9)
	$write("Jr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd10)
	$write("Br");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd11)
	$write("Auipc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd12)
	$write("Fpu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd13)
	$write("Csr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd14)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd15)
	$write("FenceI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd16)
	$write("SFence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd17)
	$write("Ecall");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd18)
	$write("Ebreak");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd19)
	$write("Sret");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] == 5'd20)
	$write("Mret");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[257:253] != 5'd0 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd1 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd2 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd3 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd4 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd5 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd6 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd7 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd8 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd9 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd10 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd11 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd12 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd13 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd14 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd15 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd16 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd17 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd18 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd19 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd20)
	$write("Interrupt");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush)
	$write("    [doCommitTrap]", "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  !rob$deqPort_0_deq_data[25])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  !rob$deqPort_0_deq_data[25])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 589, column 48\nmust be executed");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  !rob$deqPort_0_deq_data[25])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 590, column 36\ncannot have spec bits");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitTrap_flush &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  rob$deqPort_0_deq_data[12])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  rob$deqPort_0_deq_data[12])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 699, column 39\ncannot increment epoch before");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  rob$deqPort_0_deq_data[12])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  !rob$deqPort_0_deq_data[25])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  !rob$deqPort_0_deq_data[25])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 700, column 48\nmust be executed");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  !rob$deqPort_0_deq_data[25])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 701, column 36\ncannot have spec bits");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitKilledLd &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst)
	$write("instret:%0d  PC:0x%0h  instr:0x%08h",
	       commitStage_rg_serial_num,
	       rob$deqPort_0_deq_data[353:290],
	       rob$deqPort_0_deq_data[289:258],
	       "   iType:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd0)
	$write("Unsupported");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd1)
	$write("Nop");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd2)
	$write("Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd3)
	$write("Alu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd4)
	$write("Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd5)
	$write("St");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd6)
	$write("Lr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd7)
	$write("Sc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd8)
	$write("J");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd9)
	$write("Jr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd10)
	$write("Br");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd11)
	$write("Auipc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd12)
	$write("Fpu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd13)
	$write("Csr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd14)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd15)
	$write("FenceI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd16)
	$write("SFence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd17)
	$write("Ecall");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd18)
	$write("Ebreak");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd19)
	$write("Sret");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd20)
	$write("Mret");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] != 5'd0 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd1 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd2 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd3 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd4 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd5 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd6 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd7 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd8 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd9 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd10 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd11 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd12 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd13 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd14 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd15 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd16 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd17 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd18 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd19 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd20)
	$write("Interrupt");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst)
	$write("    [doCommitSystemInst]", "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	  rob$deqPort_0_deq_data[97:96] != 2'd2)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	  rob$deqPort_0_deq_data[97:96] != 2'd2)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 744, column 33\nmust have csr data");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	  rob$deqPort_0_deq_data[97:96] != 2'd2)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[257:253] == 5'd13 &&
	  rob$deqPort_0_deq_data[180:169] == 12'd2048)
	$display("[Terminate CSR] being written (val = %x), ",
		 "send terminate signal to host",
		 rob$deqPort_0_deq_data[95:32]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  NOT_IF_rob_deqPort_0_deq_data__3579_BITS_97_TO_ETC___d13950)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  NOT_IF_rob_deqPort_0_deq_data__3579_BITS_97_TO_ETC___d13950)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 767, column 39\nppc must be pc + 4");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  NOT_IF_rob_deqPort_0_deq_data__3579_BITS_97_TO_ETC___d13950)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  !rob$deqPort_0_deq_data[12])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  !rob$deqPort_0_deq_data[12])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 835, column 38\nmust have already incremented epoch");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  !rob$deqPort_0_deq_data[12])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  NOT_rob_deqPort_0_deq_data__3579_BITS_257_TO_2_ETC___d13960)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  NOT_rob_deqPort_0_deq_data__3579_BITS_257_TO_2_ETC___d13960)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 836, column 54\nonly CSR has valid csr idx");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  NOT_rob_deqPort_0_deq_data__3579_BITS_257_TO_2_ETC___d13960)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 840, column 36\ncannot have spec bits");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  rob$deqPort_0_deq_data[11:0] != 12'd0)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  !rob$deqPort_0_deq_data[168])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  !rob$deqPort_0_deq_data[168])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 841, column 37\nmust have claimed phy reg");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitSystemInst &&
	  !rob$deqPort_0_deq_data[168])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst && rob$deqPort_0_canDeq)
	$write("instret:%0d  PC:0x%0h  instr:0x%08h",
	       commitStage_rg_serial_num,
	       rob$deqPort_0_deq_data[353:290],
	       rob$deqPort_0_deq_data[289:258],
	       "   iType:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[257:253] == 5'd1)
	$write("Nop");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[257:253] == 5'd2)
	$write("Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[257:253] == 5'd3)
	$write("Alu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[257:253] == 5'd4)
	$write("Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[257:253] == 5'd5)
	$write("St");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[257:253] == 5'd6)
	$write("Lr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[257:253] == 5'd7)
	$write("Sc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[257:253] == 5'd8)
	$write("J");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[257:253] == 5'd9)
	$write("Jr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[257:253] == 5'd10)
	$write("Br");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[257:253] == 5'd11)
	$write("Auipc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[257:253] == 5'd12)
	$write("Fpu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[257:253] == 5'd14)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  rob$deqPort_0_deq_data[257:253] != 5'd1 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd2 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd3 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd4 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd5 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd6 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd7 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd8 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd9 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd10 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd11 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd12 &&
	  rob$deqPort_0_deq_data[257:253] != 5'd14)
	$write("Interrupt");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst && rob$deqPort_0_canDeq)
	$write("    [doCommitNormalInst [%0d]]", $signed(32'd0), "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  !rob$deqPort_0_deq_data[168])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  !rob$deqPort_0_deq_data[168])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 967, column 49\nshould have renamed");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_0_canDeq &&
	  !rob$deqPort_0_deq_data[168])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] != 5'd0 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd21 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd17 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd18 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd13 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd16 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd15 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd19 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd20)
	$write("instret:%0d  PC:0x%0h  instr:0x%08h",
	       commitStage_rg_serial_num +
	       IF_rob_deqPort_0_canDeq__3974_THEN_IF_NOT_rob__ETC___d14083,
	       rob$deqPort_1_deq_data[353:290],
	       rob$deqPort_1_deq_data[289:258],
	       "   iType:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] == 5'd1)
	$write("Nop");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] == 5'd2)
	$write("Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] == 5'd3)
	$write("Alu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] == 5'd4)
	$write("Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] == 5'd5)
	$write("St");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] == 5'd6)
	$write("Lr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] == 5'd7)
	$write("Sc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] == 5'd8)
	$write("J");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] == 5'd9)
	$write("Jr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] == 5'd10)
	$write("Br");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] == 5'd11)
	$write("Auipc");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] == 5'd12)
	$write("Fpu");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] == 5'd14)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] != 5'd0 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd21 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd17 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd18 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd13 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd16 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd15 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd19 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd20 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd1 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd2 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd3 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd4 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd5 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd6 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd7 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd8 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd9 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd10 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd11 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd12 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd14)
	$write("Interrupt");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] != 5'd0 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd21 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd17 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd18 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd13 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd16 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd15 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd19 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd20)
	$write("    [doCommitNormalInst [%0d]]", $signed(32'd1), "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] != 5'd0 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd21 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd17 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd18 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd13 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd16 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd15 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd19 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd20 &&
	  !rob$deqPort_1_deq_data[168])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] != 5'd0 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd21 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd17 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd18 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd13 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd16 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd15 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd19 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd20 &&
	  !rob$deqPort_1_deq_data[168])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/CommitStage.bsv\", line 967, column 49\nshould have renamed");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commitStage_doCommitNormalInst &&
	  rob$deqPort_1_canDeq &&
	  rob$deqPort_1_deq_data[25] &&
	  !rob$deqPort_1_deq_data[18] &&
	  !rob$deqPort_1_deq_data[167] &&
	  rob$deqPort_1_deq_data[257:253] != 5'd0 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd21 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd17 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd18 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd13 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd16 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd15 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd19 &&
	  rob$deqPort_1_deq_data[257:253] != 5'd20 &&
	  !rob$deqPort_1_deq_data[168])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	  !coreFix_aluExe_1_exeToFinQ$first[16])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	  !coreFix_aluExe_1_exeToFinQ$first[16])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 332, column 43\nmispredicted branch must have spec tag");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	  !coreFix_aluExe_1_exeToFinQ$first[16])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	  coreFix_aluExe_1_exeToFinQ$first[326:322] != 5'd9 &&
	  coreFix_aluExe_1_exeToFinQ$first[326:322] != 5'd10)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	  coreFix_aluExe_1_exeToFinQ$first[326:322] != 5'd9 &&
	  coreFix_aluExe_1_exeToFinQ$first[326:322] != 5'd10)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 335, column 54\nonly jr and br can mispredict");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doFinishAlu_T &&
	  coreFix_aluExe_1_exeToFinQ$first[326:322] != 5'd9 &&
	  coreFix_aluExe_1_exeToFinQ$first[326:322] != 5'd10)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	  !coreFix_aluExe_0_exeToFinQ$first[16])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	  !coreFix_aluExe_0_exeToFinQ$first[16])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 332, column 43\nmispredicted branch must have spec tag");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	  !coreFix_aluExe_0_exeToFinQ$first[16])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	  coreFix_aluExe_0_exeToFinQ$first[326:322] != 5'd9 &&
	  coreFix_aluExe_0_exeToFinQ$first[326:322] != 5'd10)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	  coreFix_aluExe_0_exeToFinQ$first[326:322] != 5'd9 &&
	  coreFix_aluExe_0_exeToFinQ$first[326:322] != 5'd10)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 335, column 54\nonly jr and br can mispredict");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doFinishAlu_T &&
	  coreFix_aluExe_0_exeToFinQ$first[326:322] != 5'd9 &&
	  coreFix_aluExe_0_exeToFinQ$first[326:322] != 5'd10)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  coreFix_aluExe_1_regToExeQ$first[421:417] != 5'd13)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  coreFix_aluExe_1_regToExeQ$first[421:417] != 5'd13)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 281, column 44\nOnly Csr inst needs to update csrData in ROB");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  coreFix_aluExe_1_regToExeQ$first[421:417] != 5'd13)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  basicExec___d11946[0])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  basicExec___d11946[0])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 282, column 59\nCsr inst cannot mispredict");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  basicExec___d11946[0])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  (basicExec___d11946[65:2] !=
	   coreFix_aluExe_1_regToExeQ$first[112:49] ||
	   coreFix_aluExe_1_regToExeQ$first[112:49] != y__h686519))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  (basicExec___d11946[65:2] !=
	   coreFix_aluExe_1_regToExeQ$first[112:49] ||
	   coreFix_aluExe_1_regToExeQ$first[112:49] != y__h686519))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 283, column 84\nCsr inst ppc = pc+4");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doExeAlu &&
	  coreFix_aluExe_1_regToExeQ$first[395] &&
	  (basicExec___d11946[65:2] !=
	   coreFix_aluExe_1_regToExeQ$first[112:49] ||
	   coreFix_aluExe_1_regToExeQ$first[112:49] != y__h686519))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  coreFix_aluExe_0_regToExeQ$first[421:417] != 5'd13)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  coreFix_aluExe_0_regToExeQ$first[421:417] != 5'd13)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 281, column 44\nOnly Csr inst needs to update csrData in ROB");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  coreFix_aluExe_0_regToExeQ$first[421:417] != 5'd13)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  basicExec___d12292[0])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  basicExec___d12292[0])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 282, column 59\nCsr inst cannot mispredict");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  basicExec___d12292[0])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  (basicExec___d12292[65:2] !=
	   coreFix_aluExe_0_regToExeQ$first[112:49] ||
	   coreFix_aluExe_0_regToExeQ$first[112:49] != y__h707181))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  (basicExec___d12292[65:2] !=
	   coreFix_aluExe_0_regToExeQ$first[112:49] ||
	   coreFix_aluExe_0_regToExeQ$first[112:49] != y__h707181))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/AluExePipeline.bsv\", line 283, column 84\nCsr inst ppc = pc+4");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doExeAlu &&
	  coreFix_aluExe_0_regToExeQ$first[395] &&
	  (basicExec___d12292[65:2] !=
	   coreFix_aluExe_0_regToExeQ$first[112:49] ||
	   coreFix_aluExe_0_regToExeQ$first[112:49] != y__h707181))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu &&
	  !coreFix_aluExe_1_dispToRegQ$first[131] &&
	  coreFix_aluExe_1_dispToRegQ$first[85] &&
	  !sbCons$lazyLookup_1_get[3] &&
	  IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11613)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu &&
	  !coreFix_aluExe_1_dispToRegQ$first[131] &&
	  coreFix_aluExe_1_dispToRegQ$first[85] &&
	  !sbCons$lazyLookup_1_get[3] &&
	  IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11613)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu &&
	  !coreFix_aluExe_1_dispToRegQ$first[131] &&
	  coreFix_aluExe_1_dispToRegQ$first[85] &&
	  !sbCons$lazyLookup_1_get[3] &&
	  IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11613)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu &&
	  coreFix_aluExe_1_dispToRegQ$first[77] &&
	  !sbCons$lazyLookup_1_get[2] &&
	  IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11621)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu &&
	  coreFix_aluExe_1_dispToRegQ$first[77] &&
	  !sbCons$lazyLookup_1_get[2] &&
	  IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11621)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_1_doRegReadAlu &&
	  coreFix_aluExe_1_dispToRegQ$first[77] &&
	  !sbCons$lazyLookup_1_get[2] &&
	  IF_NOT_coreFix_aluExe_1_bypassWire_0_whas__153_ETC___d11621)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu &&
	  !coreFix_aluExe_0_dispToRegQ$first[131] &&
	  coreFix_aluExe_0_dispToRegQ$first[85] &&
	  !sbCons$lazyLookup_0_get[3] &&
	  IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12141)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu &&
	  !coreFix_aluExe_0_dispToRegQ$first[131] &&
	  coreFix_aluExe_0_dispToRegQ$first[85] &&
	  !sbCons$lazyLookup_0_get[3] &&
	  IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12141)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu &&
	  !coreFix_aluExe_0_dispToRegQ$first[131] &&
	  coreFix_aluExe_0_dispToRegQ$first[85] &&
	  !sbCons$lazyLookup_0_get[3] &&
	  IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12141)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu &&
	  coreFix_aluExe_0_dispToRegQ$first[77] &&
	  !sbCons$lazyLookup_0_get[2] &&
	  IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12149)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu &&
	  coreFix_aluExe_0_dispToRegQ$first[77] &&
	  !sbCons$lazyLookup_0_get[2] &&
	  IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12149)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_aluExe_0_doRegReadAlu &&
	  coreFix_aluExe_0_dispToRegQ$first[77] &&
	  !sbCons$lazyLookup_0_get[2] &&
	  IF_NOT_coreFix_aluExe_0_bypassWire_0_whas__205_ETC___d12149)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[35:34] != 2'd0 &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[35:34] != 2'd1)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[35:34] != 2'd0 &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[35:34] != 2'd1)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/MulDiv.bsv\", line 174, column 40\nmust be mul func");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntMul &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[35:34] != 2'd0 &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulQ$first_data[35:34] != 2'd1)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[35:34] != 2'd2 &&
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[35:34] != 2'd3)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[35:34] != 2'd2 &&
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[35:34] != 2'd3)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/MulDiv.bsv\", line 196, column 40\nmust be div func");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doFinishIntDiv &&
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[35:34] != 2'd2 &&
	  coreFix_fpuMulDivExe_0_mulDivExec_divQ$first_data[35:34] != 2'd3)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault &&
	  coreFix_memExe_lsq$firstLd[2])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault &&
	  coreFix_memExe_lsq$firstLd[2])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 738, column 45\ncannot be killed");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_fault &&
	  coreFix_memExe_lsq$firstLd[2])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	  coreFix_memExe_lsq$firstLd[90])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	  coreFix_memExe_lsq$firstLd[90])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 749, column 33\nnormal Ld cannot have .rl");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Ld_Mem &&
	  coreFix_memExe_lsq$firstLd[90])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	  (!coreFix_memExe_lsq$firstLd[101] ||
	   coreFix_memExe_lsq$firstLd[16]))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	  (!coreFix_memExe_lsq$firstLd[101] ||
	   coreFix_memExe_lsq$firstLd[16]))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 845, column 62\nmust be non-MMIO Lr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	  (!coreFix_memExe_lsq$firstLd[101] ||
	   coreFix_memExe_lsq$firstLd[16]))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 846, column 73\nno fualt or kill");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_Lr_deq &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	  (coreFix_memExe_lsq$firstLd[101] ||
	   !coreFix_memExe_lsq$firstLd[16]))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	  (coreFix_memExe_lsq$firstLd[101] ||
	   !coreFix_memExe_lsq$firstLd[16]))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 923, column 61\nmust be MMIO Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	  (coreFix_memExe_lsq$firstLd[101] ||
	   !coreFix_memExe_lsq$firstLd[16]))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 924, column 73\nno fualt or kill");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_deq &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	  (coreFix_memExe_lsq$firstLd[101] ||
	   !coreFix_memExe_lsq$firstLd[16]))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	  (coreFix_memExe_lsq$firstLd[101] ||
	   !coreFix_memExe_lsq$firstLd[16]))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 948, column 61\nmust be MMIO Ld");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	  (coreFix_memExe_lsq$firstLd[101] ||
	   !coreFix_memExe_lsq$firstLd[16]))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 949, column 73\nno fualt or kill");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqLdQ_MMIO_fault &&
	  (coreFix_memExe_lsq$firstLd[7] || coreFix_memExe_lsq$firstLd[2]))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	  coreFix_memExe_dTlb_procResp__644_BITS_105_TO__ETC___d1712 &&
	  coreFix_memExe_dTlb$procResp[90])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	  coreFix_memExe_dTlb_procResp__644_BITS_105_TO__ETC___d1712 &&
	  coreFix_memExe_dTlb$procResp[90])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 577, column 33\nmust be in LdQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doFinishMem &&
	  coreFix_memExe_dTlb_procResp__644_BITS_105_TO__ETC___d1712 &&
	  coreFix_memExe_dTlb$procResp[90])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 1191, column 69\nmust be St/Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_issue &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd2 &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd1)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd2 &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd1)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 656, column 29\nload is stalled");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doIssueLdFromIssueQ &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd2 &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd1)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd2 &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd1)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd2 &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd1)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 656, column 29\nload is stalled");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doIssueLdFromUpdate &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd2 &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd0 &&
	  coreFix_memExe_lsq$issueLd[74:73] != 2'd1)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	  (coreFix_memExe_lsq$firstSt[158:157] != 2'd1 &&
	   coreFix_memExe_lsq$firstSt[158:157] != 2'd2 ||
	   coreFix_memExe_lsq$firstSt[77]))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	  (coreFix_memExe_lsq$firstSt[158:157] != 2'd1 &&
	   coreFix_memExe_lsq$firstSt[158:157] != 2'd2 ||
	   coreFix_memExe_lsq$firstSt[77]))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 1143, column 36\nmust be non-MMIO Sc/Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	  (coreFix_memExe_lsq$firstSt[158:157] != 2'd1 &&
	   coreFix_memExe_lsq$firstSt[158:157] != 2'd2 ||
	   coreFix_memExe_lsq$firstSt[77]))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	  coreFix_memExe_lsq$firstSt[4])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	  coreFix_memExe_lsq$firstSt[4])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 1144, column 44\nno fault");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_ScAmo_deq &&
	  coreFix_memExe_lsq$firstSt[4])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 1246, column 69\nmust be St/Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	  coreFix_memExe_lsq$firstSt[4])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	  coreFix_memExe_lsq$firstSt[4])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 1247, column 44\nno fault");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_deq &&
	  coreFix_memExe_lsq$firstSt[4])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 1271, column 69\nmust be St/Amo");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd0 &&
	  coreFix_memExe_lsq$firstSt[158:157] != 2'd2)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	  coreFix_memExe_lsq$firstSt[4])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	  coreFix_memExe_lsq$firstSt[4])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 1272, column 44\nno fault");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_MMIO_fault &&
	  coreFix_memExe_lsq$firstSt[4])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	  3'd5)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	  3'd5)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 771, column 51\nmust be swapped in");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	  3'd5)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	   2'd0 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	   2'd0 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 773, column 21\ncRq swapped in by previous cRq, tag must match & cs > I");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	   2'd0 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2502)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2502)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 501, column 13\ncRqHit but tag or cs incorrect");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d2502)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2509)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2509)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 540, column 33\nunknown mem op");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2509)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2515)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2515)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 676, column 17\nwaitP must be false and cs must not be enough");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2515)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	  3'd1)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	  3'd1)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 757, column 49\nmust first time go through tag match");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getState !=
	  3'd1)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	   2'd0 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	   2'd0 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 758, column 49\ncRq should hit in tag match");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[517:516] ==
	   2'd0 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  !coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  !coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 760, column 44\ncRq hit on another cRq, cRqEOC must be true");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  !IF_coreFix_memExe_dMem_cache_m_banks_0_pipelin_ETC___d1861 &&
	  !coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_searchEndOfChain[3])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2526)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2526)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 819, column 40\nhit, so cs must > I");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2526)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2529)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2529)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 540, column 33\nunknown mem op");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2529)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2541)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2541)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 676, column 17\nwaitP must be false and cs must not be enough");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_cRq &&
	  NOT_coreFix_memExe_dMem_cache_m_banks_0_pipeli_ETC___d2541)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941))
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941))
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 859, column 18\npRs must be a hit");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  (coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1867 ||
	   !coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d1941))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2554)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2554)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 501, column 13\ncRqHit but tag or cs incorrect");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline_f_ETC___d2554)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd0 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd2 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd4 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd3 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd1)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd0 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd2 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd4 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd3 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd1)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 540, column 33\nunknown mem op");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515] &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd0 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd2 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd4 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd3 &&
	  coreFix_memExe_dMem_cache_m_banks_0_cRqMshr$pipelineResp_getRq[81:79] !=
	  3'd1)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/coherence/src/L1Bank.bsv\", line 866, column 30\npRs owner must match some cRq");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_dMem_cache_m_banks_0_pipelineResp_pRs &&
	  !coreFix_memExe_dMem_cache_m_banks_0_pipeline$first[515])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem &&
	  coreFix_memExe_lsq$firstSt[151])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem &&
	  coreFix_memExe_lsq$firstSt[151])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 1000, column 33\nno .rl");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDeqStQ_St_Mem &&
	  coreFix_memExe_lsq$firstSt[151])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	  coreFix_memExe_lsq$respLd[73] &&
	  coreFix_memExe_lsq$respLd[72])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	  coreFix_memExe_lsq$respLd[73] &&
	  coreFix_memExe_lsq$respLd[72])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 711, column 42\nwrong path resp cannot write reg");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRespLdMem &&
	  coreFix_memExe_lsq$respLd[73] &&
	  coreFix_memExe_lsq$respLd[72])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	  coreFix_memExe_lsq$respLd[73] &&
	  coreFix_memExe_lsq$respLd[72])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	  coreFix_memExe_lsq$respLd[73] &&
	  coreFix_memExe_lsq$respLd[72])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 711, column 42\nwrong path resp cannot write reg");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRespLdForward &&
	  coreFix_memExe_lsq$respLd[73] &&
	  coreFix_memExe_lsq$respLd[72])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRegReadMem &&
	  coreFix_memExe_dispToRegQ$first[62] &&
	  !sbCons$lazyLookup_3_get[3] &&
	  IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1557)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRegReadMem &&
	  coreFix_memExe_dispToRegQ$first[62] &&
	  !sbCons$lazyLookup_3_get[3] &&
	  IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1557)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRegReadMem &&
	  coreFix_memExe_dispToRegQ$first[62] &&
	  !sbCons$lazyLookup_3_get[3] &&
	  IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1557)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRegReadMem &&
	  coreFix_memExe_dispToRegQ$first[54] &&
	  !sbCons$lazyLookup_3_get[2] &&
	  IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1564)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRegReadMem &&
	  coreFix_memExe_dispToRegQ$first[54] &&
	  !sbCons$lazyLookup_3_get[2] &&
	  IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1564)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doRegReadMem &&
	  coreFix_memExe_dispToRegQ$first[54] &&
	  !sbCons$lazyLookup_3_get[2] &&
	  IF_NOT_coreFix_memExe_bypassWire_0_whas__476_4_ETC___d1564)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDispatchMem &&
	  coreFix_memExe_rsMem$dispatchData[106:104] == 3'd1 &&
	  coreFix_memExe_rsMem$dispatchData[41])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDispatchMem &&
	  coreFix_memExe_rsMem$dispatchData[106:104] == 3'd1 &&
	  coreFix_memExe_rsMem$dispatchData[41])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/MemExePipeline.bsv\", line 406, column 18\nSt cannot have dst reg");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_memExe_doDispatchMem &&
	  coreFix_memExe_rsMem$dispatchData[106:104] == 3'd1 &&
	  coreFix_memExe_rsMem$dispatchData[41])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_memExe_dMem_cache_m_banks_0_latTimer_doneEn$whas &&
	  CASE_coreFix_memExe_dMem_cache_m_banks_0_pipel_ETC__q253)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_memExe_dMem_cache_m_banks_0_latTimer_doneEn$whas &&
	  !SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_la_ETC___d2906)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/LatencyTimer.bsv\", line 55, column 34\ntimer must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_memExe_dMem_cache_m_banks_0_latTimer_doneEn$whas &&
	  !SEL_ARR_coreFix_memExe_dMem_cache_m_banks_0_la_ETC___d2906)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_memExe_ldMemLatTimer_doneEn$whas &&
	  CASE_i63648_0_NOT_coreFix_memExe_ldMemLatTimer_ETC__q254)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_memExe_ldMemLatTimer_doneEn$whas &&
	  !SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/LatencyTimer.bsv\", line 55, column 34\ntimer must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_memExe_ldMemLatTimer_doneEn$whas &&
	  !SEL_ARR_coreFix_memExe_ldMemLatTimer_started_8_ETC___d3894)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_memExe_stMemLatTimer_doneEn$whas &&
	  CASE_i62270_0_NOT_coreFix_memExe_stMemLatTimer_ETC__q255)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_memExe_stMemLatTimer_doneEn$whas &&
	  !SEL_ARR_coreFix_memExe_stMemLatTimer_started_7_ETC___d3776)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/LatencyTimer.bsv\", line 55, column 34\ntimer must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_memExe_stMemLatTimer_doneEn$whas &&
	  !SEL_ARR_coreFix_memExe_stMemLatTimer_started_7_ETC___d3776)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] != 3'd4 &&
	  coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] != 3'd3)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] != 3'd4 &&
	  coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] != 3'd3)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/FpuMulDivExePipeline.bsv\", line 219, column 33\nunknown execFunc for doExeFpuMulDiv");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doExeFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] != 3'd4 &&
	  coreFix_fpuMulDivExe_0_regToExeQ$first[245:243] != 3'd3)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[56] &&
	  !sbCons$lazyLookup_2_get[3] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8611)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[56] &&
	  !sbCons$lazyLookup_2_get[3] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8611)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[56] &&
	  !sbCons$lazyLookup_2_get[3] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8611)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[48] &&
	  !sbCons$lazyLookup_2_get[2] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8618)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[48] &&
	  !sbCons$lazyLookup_2_get[2] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8618)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[48] &&
	  !sbCons$lazyLookup_2_get[2] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8618)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[40] &&
	  !sbCons$lazyLookup_2_get[1] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8625)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[40] &&
	  !sbCons$lazyLookup_2_get[1] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8625)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/lib/Bypass.bsv\", line 57, column 34\nbypass found must be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doRegReadFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_dispToRegQ$first[40] &&
	  !sbCons$lazyLookup_2_get[1] &&
	  IF_NOT_coreFix_fpuMulDivExe_0_bypassWire_0_wha_ETC___d8625)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[8])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[8])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/FpuMulDivExePipeline.bsv\", line 146, column 40\nFpuMulDiv should not carry any spec tag");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_coreFix_fpuMulDivExe_0_doDispatchFpuMulDiv &&
	  coreFix_fpuMulDivExe_0_rsFpuMulDiv$dispatchData[8])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit == 2'd3)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit == 2'd3)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/fpgautils/lib/XilinxIntMul.bsv\", line 147, column 38\ncredit overflow");
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_deqEn$whas &&
	  coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_credit == 2'd3)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas &&
	  v__h670767 == 2'd0)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas &&
	  v__h670767 == 2'd0)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/fpgautils/lib/XilinxIntMul.bsv\", line 172, column 38\ncredit underflow");
    if (RST_N != `BSV_RESET_VALUE)
      if (coreFix_fpuMulDivExe_0_mulDivExec_mulUnit_newReq$whas &&
	  v__h670767 == 2'd0)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  specTagManager$currentSpecBits != 12'd0)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  specTagManager$currentSpecBits != 12'd0)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 473, column 34\ncannot have spec bits");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  specTagManager$currentSpecBits != 12'd0)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] == 3'd0 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd13)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] == 3'd0 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd13)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 498, column 42\nonly CSR inst send to exe");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] == 3'd0 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd13)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd15 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd16 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd19 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd20)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd15 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd16 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd19 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd20)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 505, column 22\nnon-CSR inst not send to exe");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd15 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd16 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd19 &&
	  fetchStage$pipelines_0_first[199:195] != 5'd20)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	  fetchStage$pipelines_0_first[194:192] != 3'd5)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	  fetchStage$pipelines_0_first[194:192] != 3'd5)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 507, column 22\nnon-exe inst exec func is other");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[194:192] != 3'd0 &&
	  fetchStage$pipelines_0_first[194:192] != 3'd5)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[75] &&
	  fetchStage$pipelines_0_first[74])
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[75] &&
	  fetchStage$pipelines_0_first[74])
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 526, column 29\nsystem inst never touches FP regs");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming_SystemInst &&
	  fetchStage$pipelines_0_first[75] &&
	  fetchStage$pipelines_0_first[74])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__2787_AND__ETC___d13351)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__2787_AND__ETC___d13351)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 974, column 61\nFpuMulDiv next PC is not PC+4/PC+2");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__2787_AND__ETC___d13351)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__2787_AND__ETC___d13356)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__2787_AND__ETC___d13356)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 975, column 59\nFpuMulDiv never explicitly read/write CSR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__2787_AND__ETC___d13356)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__2787_AND__ETC___d13387)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__2787_AND__ETC___d13387)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 1006, column 65\nMem next PC is not PC+4/PC+2");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__2787_AND__ETC___d13387)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__2787_AND__ETC___d13391)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__2787_AND__ETC___d13391)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 1007, column 63\nMem never explicitly read/write CSR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__2787_AND__ETC___d13391)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__2787_AND__ETC___d13397)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__2787_AND__ETC___d13397)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 1009, column 42\nMem (non-Fence) needs imm for virtual addr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  fetchStage$pipelines_0_canDeq &&
	  regRenamingTable_rename_0_canRename__2787_AND__ETC___d13397)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13489)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13489)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 974, column 61\nFpuMulDiv next PC is not PC+4/PC+2");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13489)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	  regRenamingTable_rename_1_canRename__2911_AND__ETC___d13444 &&
	  NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13493)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	  regRenamingTable_rename_1_canRename__2911_AND__ETC___d13444 &&
	  NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13493)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 975, column 59\nFpuMulDiv never explicitly read/write CSR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	  regRenamingTable_rename_1_canRename__2911_AND__ETC___d13444 &&
	  NOT_fetchStage_pipelines_1_first__2447_BITS_19_ETC___d13493)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	  regRenamingTable_rename_1_canRename__2911_AND__ETC___d13517)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	  regRenamingTable_rename_1_canRename__2911_AND__ETC___d13517)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 1006, column 65\nMem next PC is not PC+4/PC+2");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	  regRenamingTable_rename_1_canRename__2911_AND__ETC___d13517)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13522)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13522)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 1007, column 63\nMem never explicitly read/write CSR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13522)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	  regRenamingTable_rename_1_canRename__2911_AND__ETC___d13528)
	$fdisplay(32'h80000002, "\n%m: ASSERT FAIL!!");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	  regRenamingTable_rename_1_canRename__2911_AND__ETC___d13528)
	$display("Dynamic assertion failed: \"../../src_Core/RISCY_OOO/procs/RV64G_OOO/RenameStage.bsv\", line 1009, column 42\nMem (non-Fence) needs imm for virtual addr");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_renameStage_doRenaming &&
	  NOT_fetchStage_pipelines_0_canDeq__2436_2437_O_ETC___d13435 &&
	  regRenamingTable_rename_1_canRename__2911_AND__ETC___d13528)
	$finish(32'd0);
  end
  // synopsys translate_on
endmodule  // mkCore

